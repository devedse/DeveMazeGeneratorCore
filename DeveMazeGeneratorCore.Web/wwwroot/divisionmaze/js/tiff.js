/**
   @license
   ----
   tiff.js: https://github.com/seikichi/tiff.js

   Copyright (C) 2013 seikichi[at]kmc.gr.jp

   This software is provided 'as-is', without any express or implied
   warranty. In no event will the authors be held liable for any damages
   arising from the use of this software.

   Permission is granted to anyone to use this software for any purpose,
   including commercial applications, and to alter it and redistribute it
   freely, subject to the following restrictions:

   1. The origin of this software must not be misrepresented; you must not
   claim that you wrote the original software. If you use this software
   in a product, an acknowledgment in the product documentation would be
   appreciated but is not required.

   2. Altered source versions must be plainly marked as such, and must not be
   misrepresented as being the original software.

   3. This notice may not be removed or altered from any source
   distribution.
   ----
   zlib: http://www.zlib.net/

   Copyright (C) 1995-2013 Jean-loup Gailly and Mark Adler

   This software is provided 'as-is', without any express or implied
   warranty.  In no event will the authors be held liable for any damages
   arising from the use of this software.

   Permission is granted to anyone to use this software for any purpose,
   including commercial applications, and to alter it and redistribute it
   freely, subject to the following restrictions:

   1. The origin of this software must not be misrepresented; you must not
   claim that you wrote the original software. If you use this software
   in a product, an acknowledgment in the product documentation would be
   appreciated but is not required.
   2. Altered source versions must be plainly marked as such, and must not be
   misrepresented as being the original software.
   3. This notice may not be removed or altered from any source distribution.

   Jean-loup Gailly        Mark Adler
   jloup@gzip.org          madler@alumni.caltech.edu


   The data format used by the zlib library is described by RFCs (Request for
   Comments) 1950 to 1952 in the files http://tools.ietf.org/html/rfc1950
   (zlib format), rfc1951 (deflate format) and rfc1952 (gzip format).
   ----
   LibTIFF: http://www.remotesensing.org/libtiff/

   Copyright (c) 1988-1997 Sam Leffler
   Copyright (c) 1991-1997 Silicon Graphics, Inc.

   Permission to use, copy, modify, distribute, and sell this software and 
   its documentation for any purpose is hereby granted without fee, provided
   that (i) the above copyright notices and this permission notice appear in
   all copies of the software and related documentation, and (ii) the names of
   Sam Leffler and Silicon Graphics may not be used in any advertising or
   publicity relating to the software without the specific, prior written
   permission of Sam Leffler and Silicon Graphics.

   THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  

   IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
   ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
   OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
   WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
   LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
   OF THIS SOFTWARE.
*/
var loadModule = function (options) {
  var Module = {};
  if ('TOTAL_MEMORY' in options) {
    Module['TOTAL_MEMORY'] = options['TOTAL_MEMORY'];
  }
// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}
// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function(x) {
    process['stderr'].write(x + '\n');
  };
  var nodeFS = require('fs');
  var nodePath = require('path');
  Module['read'] = function(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };
  Module['readBinary'] = function(filename) { return Module['read'](filename, true) };
  Module['load'] = function(f) {
    globalEval(read(f));
  };
  Module['arguments'] = process['argv'].slice(2);
  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm
  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function() { throw 'no read() available (jsc?)' };
  }
  Module['readBinary'] = function(f) {
    return read(f, 'binary');
  };
  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  this['Module'] = Module;
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };
  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  if (typeof console !== 'undefined') {
    Module['print'] = function(x) {
      console.log(x);
    };
    Module['printErr'] = function(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }
  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}
function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***
// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];
// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];
// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// === Auto-generated preamble library stuff ===
//========================================
// Runtime code shared with compiler
//========================================
var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (type == 'i64' || type == 'double' || vararg) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;
      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }
      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}
//========================================
// Runtime essentials
//========================================
var __THREW__ = 0; // Used in checking for thrown exceptions.
var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;
var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}
var globalScope = this;
// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;
// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}
// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;
// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;
// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;
var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;
// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }
  var singleType = typeof types === 'string' ? types : null;
  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }
  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }
  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }
  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];
    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }
    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later
    setValue(ret+i, curr, type);
    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }
  return ret;
}
Module['allocate'] = allocate;
function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;
  var ret = '';
  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;
// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr', 
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0
}
Module['stringToUTF16'] = stringToUTF16;
// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr', 
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0
}
Module['stringToUTF32'] = stringToUTF32;
function demangle(func) {
  try {
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    var i = 3;
    // params, etc.
    var basicTypes = {
      'v': 'void',
      'b': 'bool',
      'c': 'char',
      's': 'short',
      'i': 'int',
      'l': 'long',
      'f': 'float',
      'd': 'double',
      'w': 'wchar_t',
      'a': 'signed char',
      'h': 'unsigned char',
      't': 'unsigned short',
      'j': 'unsigned int',
      'm': 'unsigned long',
      'x': 'long long',
      'y': 'unsigned long long',
      'z': '...'
    };
    function dump(x) {
      //return;
      if (x) Module.print(x);
      Module.print(func);
      var pre = '';
      for (var a = 0; a < i; a++) pre += ' ';
      Module.print (pre + '^');
    }
    var subs = [];
    function parseNested() {
      i++;
      if (func[i] === 'K') i++;
      var parts = [];
      while (func[i] !== 'E') {
        if (func[i] === 'S') { // substitution
          i++;
          var next = func.indexOf('_', i);
          var num = func.substring(i, next) || 0;
          parts.push(subs[num] || '?');
          i = next+1;
          continue;
        }
        var size = parseInt(func.substr(i));
        var pre = size.toString().length;
        if (!size || !pre) { i--; break; } // counter i++ below us
        var curr = func.substr(i + pre, size);
        parts.push(curr);
        subs.push(curr);
        i += pre + size;
      }
      i++; // skip E
      return parts;
    }
    function parse(rawList, limit, allowVoid) { // main parser
      limit = limit || Infinity;
      var ret = '', list = [];
      function flushList() {
        return '(' + list.join(', ') + ')';
      }
      var name;
      if (func[i] !== 'N') {
        // not namespaced
        if (func[i] === 'K') i++;
        var size = parseInt(func.substr(i));
        if (size) {
          var pre = size.toString().length;
          name = func.substr(i + pre, size);
          i += pre + size;
        }
      } else {
        // namespaced N-E
        name = parseNested().join('::');
        limit--;
        if (limit === 0) return rawList ? [name] : name;
      }
      if (func[i] === 'I') {
        i++;
        var iList = parse(true);
        var iRet = parse(true, 1, true);
        ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
      } else {
        ret = name;
      }
      paramLoop: while (i < func.length && limit-- > 0) {
        //dump('paramLoop');
        var c = func[i++];
        if (c in basicTypes) {
          list.push(basicTypes[c]);
        } else {
          switch (c) {
            case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
            case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
            case 'L': { // literal
              i++; // skip basic type
              var end = func.indexOf('E', i);
              var size = end - i;
              list.push(func.substr(i, size));
              i += size + 2; // size + 'EE'
              break;
            }
            case 'A': { // array
              var size = parseInt(func.substr(i));
              i += size.toString().length;
              if (func[i] !== '_') throw '?';
              i++; // skip _
              list.push(parse(true, 1, true)[0] + ' [' + size + ']');
              break;
            }
            case 'E': break paramLoop;
            default: ret += '?' + c; break paramLoop;
          }
        }
      }
      if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
      return rawList ? list : ret + flushList();
    }
    return parse();
  } catch(e) {
    return func;
  }
}
function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}
function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}
// Memory management
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk
function enlargeMemory() {
  abort('Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', or (2) set Module.TOTAL_MEMORY before the program runs.');
}
var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;
// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');
var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');
Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}
var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited
var runtimeInitialized = false;
function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}
function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;
function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;
function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;
function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;
function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;
// Tools
// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;
function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;
// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;
function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i)
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;
function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}
if (!Math['imul']) Math['imul'] = function(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_toFloat32 = Math.toFloat32;
var Math_min = Math.min;
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;
Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data
var memoryInitializer = null;
// === Body ===
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 148808;
/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } });
var _stderr;
var _stderr=_stderr=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
/* memory initializer */ allocate([21,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,1,0,72,67,2,0,0,0,0,0,0,0,0,0,8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,92,0,0,160,140,0,0,56,67,2,0,152,116,0,0,24,110,0,0,200,105,0,0,72,101,0,0,216,95,0,0,216,91,0,0,56,67,2,0,7,0,3,0,0,0,6,0,3,0,0,0,3,0,3,0,0,0,1,0,1,0,0,0,3,0,2,0,0,0,6,0,2,0,0,0,7,0,2,0,0,0,0,0,0,0,0,0,95,155,125,62,4,0,0,0,52,161,121,62,6,0,4,0,3,124,119,62,7,0,10,0,62,149,115,62,9,0,17,0,88,145,113,62,10,0,26,0,132,185,109,62,12,0,36,0,27,213,105,62,14,0,48,0,112,176,103,62,15,0,62,0,57,181,99,62,17,0,77,0,41,179,97,62,18,0,94,0,240,220,91,62,21,0,112,0,179,209,89,62,22,0,133,0,63,199,87,62,23,0,155,0,59,229,81,62,26,0,178,0,144,219,79,62,27,0,204,0,226,6,76,62,29,0,231,0,181,55,72,62,31,0,4,1,152,52,70,62,32,0,35,1,97,111,66,62,34,0,67,1,104,175,62,62,36,0,101,1,104,175,62,62,36,0,137,1,102,249,58,62,38,0,173,1,144,76,55,62,40,0,211,1,92,173,51,62,42,0,251,1,8,33,48,62,44,0,37,2,8,33,48,62,44,0,81,2,160,168,44,62,46,0,125,2,160,168,44,62,46,0,171,2,52,128,39,62,49,0,217,2,12,115,34,62,52,0,10,3,12,115,34,62,52,0,62,3,12,115,34,62,52,0,114,3,174,129,29,62,55,0,166,3,174,129,29,62,55,0,221,3,226,172,24,62,58,0,20,4,226,172,24,62,58,0,78,4,2,44,18,62,62,0,136,4,2,44,18,62,62,0,198,4,2,44,18,62,62,0,4,5,167,150,13,62,65,0,66,5,167,150,13,62,65,0,131,5,167,150,13,62,65,0,196,5,134,86,7,62,69,0,5,6,134,86,7,62,69,0,74,6,159,59,1,62,73,0,143,6,159,59,1,62,73,0,216,6,159,59,1,62,73,0,33,7,80,138,246,61,77,0,106,7,80,138,246,61,77,0,183,7,80,138,246,61,77,0,4,8,80,138,246,61,77,0,81,8,159,88,231,61,82,0,158,8,159,88,231,61,82,0,240,8,159,88,231,61,82,0,66,9,191,14,220,61,86,0,148,9,191,14,220,61,86,0,234,9,191,14,220,61,86,0,64,10,191,14,220,61,86,0,150,10,161,128,205,61,91,0,236,10,161,128,205,61,91,0,71,11,161,128,205,61,91,0,162,11,108,209,194,61,95,0,253,11,108,209,194,61,95,0,92,12,108,209,194,61,95,0,187,12,108,209,194,61,95,0,26,13,12,202,180,61,100,0,121,13,12,202,180,61,100,0,221,13,12,202,180,61,100,0,65,14,12,202,180,61,100,0,165,14,136,245,166,61,105,0,9,15,136,245,166,61,105,0,114,15,136,245,166,61,105,0,219,15,136,245,166,61,105,0,68,16,185,80,153,61,110,0,173,16,185,80,153,61,110,0,27,17,185,80,153,61,110,0,137,17,185,80,153,61,110,0,247,17,161,219,139,61,115,0,101,18,161,219,139,61,115,0,216,18,161,219,139,61,115,0,75,19,161,219,139,61,115,0,190,19,144,50,130,61,119,0,49,20,144,50,130,61,119,0,168,20,144,50,130,61,119,0,31,21,144,50,130,61,119,0,150,21,120,94,106,61,124,0,13,22,120,94,106,61,124,0,137,22,120,94,106,61,124,0,5,23,120,94,106,61,124,0,129,23,166,213,80,61,129,0,253,23,166,213,80,61,129,0,126,24,166,213,80,61,129,0,255,24,166,213,80,61,129,0,128,25,166,213,80,61,129,0,1,26,18,190,55,61,134,0,130,26,18,190,55,61,134,0,8,27,18,190,55,61,134,0,142,27,18,190,55,61,134,0,20,28,199,45,38,61,138,0,154,28,199,45,38,61,138,0,36,29,199,45,38,61,138,0,174,29,199,45,38,61,138,0,56,30,52,216,20,61,142,0,194,30,52,216,20,61,142,0,80,31,52,216,20,61,142,0,222,31,52,216,20,61,142,0,108,32,47,164,3,61,146,0,250,32,47,164,3,61,146,0,140,33,47,164,3,61,146,0,30,34,47,164,3,61,146,0,176,34,27,241,228,60,150,0,66,35,27,241,228,60,150,0,216,35,27,241,228,60,150,0,110,36,75,120,194,60,154,0,4,37,75,120,194,60,154,0,158,37,75,120,194,60,154,0,56,38,75,120,194,60,154,0,210,38,218,198,159,60,158,0,108,39,218,198,159,60,158,0,10,40,218,198,159,60,158,0,168,40,65,17,139,60,161,0,70,41,65,17,139,60,161,0,231,41,65,17,139,60,161,0,136,42,65,17,139,60,161,0,41,43,207,19,79,60,165,0,202,43,207,19,79,60,165,0,111,44,207,19,79,60,165,0,20,45,75,177,35,60,168,0,185,45,75,177,35,60,168,0,97,46,75,177,35,60,168,0,9,47,216,183,19,60,170,0,177,47,216,183,19,60,170,0,91,48,216,183,19,60,170,0,5,49,250,183,203,59,173,0,175,49,250,183,203,59,173,0,92,50,188,4,167,59,175,0,9,51,188,4,167,59,175,0,184,51,188,4,167,59,175,0,103,52,18,23,128,59,177,0,22,53,18,23,128,59,177,0,199,53,175,90,25,59,177,0,120,54,197,144,28,59,170,0,41,55,34,252,139,58,164,0,211,55,122,169,216,58,157,0,119,56,14,245,59,58,150,0,20,57,218,140,211,58,143,0,170,57,201,142,141,57,136,0,57,58,97,193,253,57,129,0,193,58,138,146,144,58,123,0,66,59,155,202,162,58,115,0,189,59,170,182,155,58,109,0,48,60,136,131,132,58,103,0,157,60,47,220,57,58,97,0,4,61,137,207,157,57,89,0,101,61,193,85,30,59,82,0,190,61,187,14,85,59,76,0,16,62,216,186,84,59,69,0,92,62,58,177,135,59,62,0,161,62,69,101,195,59,55,0,223,62,116,209,16,60,47,0,22,63,64,222,43,60,40,0,69,63,0,55,139,60,31,0,109,63,133,208,193,60,21,0,140,63,0,0,0,0,1,0,0,0,0,0,0,0,255,255,255,255,254,0,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,5,0,1,0,56,101,0,0,0,0,0,0,255,0,0,0,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,160,100,0,0,0,0,0,0,0,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,1,0,0,0,112,100,0,0,0,0,0,0,1,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,1,0,1,0,32,100,0,0,0,0,0,0,2,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,6,0,0,0,224,99,0,0,0,0,0,0,3,1,0,0,255,255,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,7,0,0,0,224,98,0,0,0,0,0,0,6,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,8,0,0,0,248,97,0,0,0,0,0,0,7,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,9,0,1,0,160,97,0,0,0,0,0,0,8,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,16,97,0,0,0,0,0,0,9,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,96,96,0,0,0,0,0,0,10,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,10,0,0,0,200,95,0,0,0,0,0,0,13,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,104,95,0,0,0,0,0,0,14,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,152,94,0,0,0,0,0,0,15,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,88,94,0,0,0,0,0,0,16,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,0,94,0,0,0,0,0,0,17,1,0,0,255,255,255,255,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,120,93,0,0,0,0,0,0,18,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,15,0,0,0,104,93,0,0,0,0,0,0,21,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,16,0,0,0,8,93,0,0,0,0,0,0,22,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,17,0,0,0,144,92,0,0,0,0,0,0,23,1,0,0,255,255,255,255,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,64,92,0,0,0,0,0,0,24,1,0,0,254,255,255,255,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,18,0,1,0,200,91,0,0,0,0,0,0,25,1,0,0,254,255,255,255,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,19,0,1,0,144,91,0,0,0,0,0,0,26,1,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,3,0,1,0,96,91,0,0,0,0,0,0,27,1,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,3,0,1,0,80,91,0,0,0,0,0,0,28,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,20,0,0,0,48,91,0,0,0,0,0,0,29,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,112,90,0,0,0,0,0,0,30,1,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,4,0,1,0,96,90,0,0,0,0,0,0,31,1,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,4,0,1,0,240,89,0,0,0,0,0,0,32,1,0,0,255,255,255,255,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,89,0,0,0,0,0,0,33,1,0,0,255,255,255,255,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,89,0,0,0,0,0,0,34,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,224,88,0,0,0,0,0,0,35,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,160,164,0,0,0,0,0,0,40,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,22,0,1,0,144,164,0,0,0,0,0,0,41,1,0,0,2,0,2,0,3,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,23,0,1,0,128,164,0,0,0,0,0,0,44,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,96,164,0,0,0,0,0,0,45,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,44,0,1,0,224,163,0,0,0,0,0,0,49,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,208,163,0,0,0,0,0,0,50,1,0,0,20,0,20,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,120,163,0,0,0,0,0,0,59,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,88,163,0,0,0,0,0,0,60,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,136,162,0,0,0,0,0,0,62,1,0,0,2,0,2,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,1,0,80,162,0,0,0,0,0,0,63,1,0,0,6,0,6,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,1,0,8,162,0,0,0,0,0,0,64,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,26,0,1,0,248,161,0,0,0,0,0,0,65,1,0,0,2,0,2,0,3,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,37,0,1,0,232,161,0,0,0,0,0,0,66,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,2,0,0,0,200,161,0,0,0,0,0,0,67,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,2,0,0,0,88,161,0,0,0,0,0,0,68,1,0,0,255,255,1,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,72,161,0,0,0,0,0,0,69,1,0,0,255,255,1,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,232,160,0,0,0,0,0,0,74,1,0,0,255,255,255,255,18,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,49,0,1,1,200,160,0,0,240,27,0,0,76,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,0,0,112,160,0,0,0,0,0,0,77,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,46,0,1,1,48,160,0,0,0,0,0,0,78,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,32,160,0,0,0,0,0,0,80,1,0,0,2,0,2,0,3,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,65,0,0,0,16,160,0,0,0,0,0,0,81,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,0,160,0,0,0,0,0,0,82,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,31,0,0,1,152,159,0,0,0,0,0,0,83,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,32,0,0,0,88,159,0,0,0,0,0,0,84,1,0,0,254,255,255,255,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,33,0,1,0,64,159,0,0,0,0,0,0,85,1,0,0,254,255,255,255,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,34,0,1,0,0,159,0,0,0,0,0,0,87,1,0,0,255,255,253,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,1,184,158,0,0,0,0,0,0,88,1,0,0,1,0,1,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,48,158,0,0,0,0,0,0,88,1,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,48,158,0,0,0,0,0,0,89,1,0,0,1,0,1,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,224,157,0,0,0,0,0,0,17,2,0,0,3,0,3,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,0,0,200,157,0,0,0,0,0,0,18,2,0,0,2,0,2,0,3,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,39,0,0,0,96,157,0,0,0,0,0,0,19,2,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,40,0,0,0,72,157,0,0,0,0,0,0,20,2,0,0,6,0,6,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,41,0,1,0,32,157,0,0,0,0,0,0,188,2,0,0,253,255,253,255,1,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,65,0,0,1,232,156,0,0,0,0,0,0,227,128,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,31,0,0,0,200,156,0,0,0,0,0,0,228,128,0,0,254,255,255,255,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,32,0,0,0,120,156,0,0,0,0,0,0,229,128,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,35,0,0,0,40,156,0,0,0,0,0,0,230,128,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,36,0,0,0,216,155,0,0,0,0,0,0,20,130,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,1,0,136,155,0,0,0,0,0,0,21,130,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,1,0,112,155,0,0,0,0,0,0,22,130,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,96,155,0,0,0,0,0,0,23,130,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,48,155,0,0,0,0,0,0,24,130,0,0,1,0,1,0,11,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,65,0,1,0,224,154,0,0,0,0,0,0,25,130,0,0,16,0,16,0,11,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,1,0,144,154,0,0,0,0,0,0,26,130,0,0,16,0,16,0,11,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,1,0,80,154,0,0,0,0,0,0,152,130,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,0,154,0,0,0,0,0,0,187,131,0,0,253,255,253,255,4,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,65,0,0,1,208,153,0,0,0,0,0,0,73,134,0,0,253,255,253,255,1,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,65,0,0,1,232,152,0,0,0,0,0,0,105,135,0,0,1,0,1,0,18,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,65,0,0,0,128,152,0,0,248,54,0,0,115,135,0,0,253,255,253,255,7,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,65,0,0,1,96,152,0,0,0,0,0,0,37,136,0,0,1,0,1,0,18,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,65,0,0,0,80,152,0,0,0,0,0,0,92,136,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,65,0,1,0,248,151,0,0,0,0,0,0,93,136,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,65,0,1,0,152,151,0,0,0,0,0,0,94,136,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,65,0,1,0,80,151,0,0,0,0,0,0,95,136,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,65,0,1,0,56,151,0,0,0,0,0,0,63,146,0,0,1,0,1,0,12,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,192,150,0,0,0,0,0,0,5,160,0,0,1,0,1,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,112,150,0,0,0,0,0,0,18,198,0,0,4,0,4,0,1,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,0,0,136,149,0,0,0,0,0,0,19,198,0,0,4,0,4,0,1,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,0,0,88,149,0,0,0,0,0,0,20,198,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,40,149,0,0,0,0,0,0,21,198,0,0,255,255,255,255,1,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,16,149,0,0,0,0,0,0,22,198,0,0,255,255,255,255,1,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,0,1,0,149,0,0,0,0,0,0,23,198,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,0,0,144,148,0,0,0,0,0,0,24,198,0,0,255,255,255,255,3,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,65,0,0,1,72,148,0,0,0,0,0,0,25,198,0,0,2,0,2,0,3,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,65,0,0,0,24,148,0,0,0,0,0,0,26,198,0,0,255,255,255,255,5,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,200,147,0,0,0,0,0,0,27,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,128,147,0,0,0,0,0,0,28,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,208,146,0,0,0,0,0,0,29,198,0,0,255,255,255,255,4,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,65,0,0,1,160,146,0,0,0,0,0,0,30,198,0,0,2,0,2,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,0,0,88,146,0,0,0,0,0,0,92,198,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,64,146,0,0,0,0,0,0,31,198,0,0,2,0,2,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,0,0,24,146,0,0,0,0,0,0,32,198,0,0,2,0,2,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,0,0,184,145,0,0,0,0,0,0,33,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,64,145,0,0,0,0,0,0,34,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,224,144,0,0,0,0,0,0,35,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,152,144,0,0,0,0,0,0,36,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,40,144,0,0,0,0,0,0,37,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,104,143,0,0,0,0,0,0,38,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,56,143,0,0,0,0,0,0,39,198,0,0,255,255,255,255,5,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,248,142,0,0,0,0,0,0,40,198,0,0,255,255,255,255,5,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,176,142,0,0,0,0,0,0,41,198,0,0,2,0,2,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,0,0,160,142,0,0,0,0,0,0,42,198,0,0,1,0,1,0,10,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,56,142,0,0,0,0,0,0,43,198,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,200,141,0,0,0,0,0,0,44,198,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,144,141,0,0,0,0,0,0,45,198,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,0,0,88,141,0,0,0,0,0,0,46,198,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,40,141,0,0,0,0,0,0,47,198,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,176,140,0,0,0,0,0,0,48,198,0,0,4,0,4,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,0,0,120,140,0,0,0,0,0,0,49,198,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,64,140,0,0,0,0,0,0,50,198,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,16,140,0,0,0,0,0,0,51,198,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,0,140,0,0,0,0,0,0,52,198,0,0,255,255,255,255,1,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,0,1,224,139,0,0,0,0,0,0,53,198,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,0,0,96,139,0,0,0,0,0,0,90,198,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,0,0,56,139,0,0,0,0,0,0,91,198,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,0,0,8,139,0,0,0,0,0,0,93,198,0,0,16,0,16,0,1,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,0,0,184,138,0,0,0,0,0,0,139,198,0,0,255,255,255,255,1,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,88,138,0,0,0,0,0,0,140,198,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,0,1,64,138,0,0,0,0,0,0,141,198,0,0,4,0,4,0,4,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,65,0,0,0,248,137,0,0,0,0,0,0,142,198,0,0,255,255,255,255,4,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,65,0,0,1,232,137,0,0,0,0,0,0,143,198,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,0,1,208,137,0,0,0,0,0,0,144,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,168,137,0,0,0,0,0,0,145,198,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,0,1,88,137,0,0,0,0,0,0,146,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,64,137,0,0,0,0,0,0,27,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,248,136,0,0,0,0,0,0,90,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,0,0,224,136,0,0,0,0,0,0,144,1,0,0,1,0,1,0,13,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,0,0,120,136,0,0,0,0,0,0,145,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,0,0,104,136,0,0,0,0,0,0,146,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,65,0,0,0,56,136,0,0,0,0,0,0,147,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,0,0,40,136,0,0,0,0,0,0,148,1,0,0,4,0,4,0,1,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,0,0,24,136,0,0,0,0,0,0,149,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,65,0,0,0,168,135,0,0,0,0,0,0,177,1,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,96,135,0,0,0,0,0,0,178,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,65,0,0,1,80,135,0,0,0,0,0,0,179,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,0,0,16,135,0,0,0,0,0,0,47,2,0,0,255,255,255,255,4,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,65,0,0,1,200,134,0,0,0,0,0,0,172,135,0,0,2,0,2,0,4,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,65,0,0,0,112,134,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,0,0,0,176,6,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,253,255,255,255,254,255,255,255,255,255,255,255,12,0,8,0,140,0,8,0,76,0,8,0,204,0,8,0,44,0,8,0,172,0,8,0,108,0,8,0,236,0,8,0,28,0,8,0,156,0,8,0,92,0,8,0,220,0,8,0,60,0,8,0,188,0,8,0,124,0,8,0,252,0,8,0,2,0,8,0,130,0,8,0,66,0,8,0,194,0,8,0,34,0,8,0,162,0,8,0,98,0,8,0,226,0,8,0,18,0,8,0,146,0,8,0,82,0,8,0,210,0,8,0,50,0,8,0,178,0,8,0,114,0,8,0,242,0,8,0,10,0,8,0,138,0,8,0,74,0,8,0,202,0,8,0,42,0,8,0,170,0,8,0,106,0,8,0,234,0,8,0,26,0,8,0,154,0,8,0,90,0,8,0,218,0,8,0,58,0,8,0,186,0,8,0,122,0,8,0,250,0,8,0,6,0,8,0,134,0,8,0,70,0,8,0,198,0,8,0,38,0,8,0,166,0,8,0,102,0,8,0,230,0,8,0,22,0,8,0,150,0,8,0,86,0,8,0,214,0,8,0,54,0,8,0,182,0,8,0,118,0,8,0,246,0,8,0,14,0,8,0,142,0,8,0,78,0,8,0,206,0,8,0,46,0,8,0,174,0,8,0,110,0,8,0,238,0,8,0,30,0,8,0,158,0,8,0,94,0,8,0,222,0,8,0,62,0,8,0,190,0,8,0,126,0,8,0,254,0,8,0,1,0,8,0,129,0,8,0,65,0,8,0,193,0,8,0,33,0,8,0,161,0,8,0,97,0,8,0,225,0,8,0,17,0,8,0,145,0,8,0,81,0,8,0,209,0,8,0,49,0,8,0,177,0,8,0,113,0,8,0,241,0,8,0,9,0,8,0,137,0,8,0,73,0,8,0,201,0,8,0,41,0,8,0,169,0,8,0,105,0,8,0,233,0,8,0,25,0,8,0,153,0,8,0,89,0,8,0,217,0,8,0,57,0,8,0,185,0,8,0,121,0,8,0,249,0,8,0,5,0,8,0,133,0,8,0,69,0,8,0,197,0,8,0,37,0,8,0,165,0,8,0,101,0,8,0,229,0,8,0,21,0,8,0,149,0,8,0,85,0,8,0,213,0,8,0,53,0,8,0,181,0,8,0,117,0,8,0,245,0,8,0,13,0,8,0,141,0,8,0,77,0,8,0,205,0,8,0,45,0,8,0,173,0,8,0,109,0,8,0,237,0,8,0,29,0,8,0,157,0,8,0,93,0,8,0,221,0,8,0,61,0,8,0,189,0,8,0,125,0,8,0,253,0,8,0,19,0,9,0,19,1,9,0,147,0,9,0,147,1,9,0,83,0,9,0,83,1,9,0,211,0,9,0,211,1,9,0,51,0,9,0,51,1,9,0,179,0,9,0,179,1,9,0,115,0,9,0,115,1,9,0,243,0,9,0,243,1,9,0,11,0,9,0,11,1,9,0,139,0,9,0,139,1,9,0,75,0,9,0,75,1,9,0,203,0,9,0,203,1,9,0,43,0,9,0,43,1,9,0,171,0,9,0,171,1,9,0,107,0,9,0,107,1,9,0,235,0,9,0,235,1,9,0,27,0,9,0,27,1,9,0,155,0,9,0,155,1,9,0,91,0,9,0,91,1,9,0,219,0,9,0,219,1,9,0,59,0,9,0,59,1,9,0,187,0,9,0,187,1,9,0,123,0,9,0,123,1,9,0,251,0,9,0,251,1,9,0,7,0,9,0,7,1,9,0,135,0,9,0,135,1,9,0,71,0,9,0,71,1,9,0,199,0,9,0,199,1,9,0,39,0,9,0,39,1,9,0,167,0,9,0,167,1,9,0,103,0,9,0,103,1,9,0,231,0,9,0,231,1,9,0,23,0,9,0,23,1,9,0,151,0,9,0,151,1,9,0,87,0,9,0,87,1,9,0,215,0,9,0,215,1,9,0,55,0,9,0,55,1,9,0,183,0,9,0,183,1,9,0,119,0,9,0,119,1,9,0,247,0,9,0,247,1,9,0,15,0,9,0,15,1,9,0,143,0,9,0,143,1,9,0,79,0,9,0,79,1,9,0,207,0,9,0,207,1,9,0,47,0,9,0,47,1,9,0,175,0,9,0,175,1,9,0,111,0,9,0,111,1,9,0,239,0,9,0,239,1,9,0,31,0,9,0,31,1,9,0,159,0,9,0,159,1,9,0,95,0,9,0,95,1,9,0,223,0,9,0,223,1,9,0,63,0,9,0,63,1,9,0,191,0,9,0,191,1,9,0,127,0,9,0,127,1,9,0,255,0,9,0,255,1,9,0,0,0,7,0,64,0,7,0,32,0,7,0,96,0,7,0,16,0,7,0,80,0,7,0,48,0,7,0,112,0,7,0,8,0,7,0,72,0,7,0,40,0,7,0,104,0,7,0,24,0,7,0,88,0,7,0,56,0,7,0,120,0,7,0,4,0,7,0,68,0,7,0,36,0,7,0,100,0,7,0,20,0,7,0,84,0,7,0,52,0,7,0,116,0,7,0,3,0,8,0,131,0,8,0,67,0,8,0,195,0,8,0,35,0,8,0,163,0,8,0,99,0,8,0,227,0,8,0,32,28,0,0,216,45,0,0,1,1,0,0,30,1,0,0,15,0,0,0,0,0,0,0,0,0,5,0,16,0,5,0,8,0,5,0,24,0,5,0,4,0,5,0,20,0,5,0,12,0,5,0,28,0,5,0,2,0,5,0,18,0,5,0,10,0,5,0,26,0,5,0,6,0,5,0,22,0,5,0,14,0,5,0,30,0,5,0,1,0,5,0,17,0,5,0,9,0,5,0,25,0,5,0,5,0,5,0,21,0,5,0,13,0,5,0,29,0,5,0,3,0,5,0,19,0,5,0,11,0,5,0,27,0,5,0,7,0,5,0,23,0,5,0,184,32,0,0,80,46,0,0,0,0,0,0,30,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,200,46,0,0,0,0,0,0,19,0,0,0,7,0,0,0,0,0,0,0,61,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,66,0,0,0,208,124,0,0,0,0,0,0,0,0,0,0,13,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,64,67,2,0,0,0,0,0,22,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,64,67,2,0,0,0,0,0,80,104,111,116,111,109,101,116,114,105,99,73,110,116,101,114,112,114,101,116,97,116,105,111,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,6,6,7,8,105,110,105,116,89,67,98,67,114,67,111,110,118,101,114,115,105,111,110,0,0,0,0,0,105,110,105,116,67,73,69,76,97,98,67,111,110,118,101,114,115,105,111,110,0,0,0,0,16,0,16,0,16,0,16,0,16,0,16,0,16,0,16,0,17,0,17,0,17,0,17,0,18,0,18,0,18,0,18,0,19,0,19,0,19,0,19,0,20,0,20,0,20,0,20,0,21,0,21,0,21,0,21,0,16,0,72,0,78,0,0,0,3,0,4,0,5,0,6,0,7,0,8,0,9,0,10,0,11,0,13,0,15,0,17,0,19,0,23,0,27,0,31,0,35,0,43,0,51,0,59,0,67,0,83,0,99,0,115,0,131,0,163,0,195,0,227,0,2,1,0,0,0,0,0,0,16,0,16,0,16,0,16,0,17,0,17,0,18,0,18,0,19,0,19,0,20,0,20,0,21,0,21,0,22,0,22,0,23,0,23,0,24,0,24,0,25,0,25,0,26,0,26,0,27,0,27,0,28,0,28,0,29,0,29,0,64,0,64,0,1,0,2,0,3,0,4,0,5,0,7,0,9,0,13,0,17,0,25,0,33,0,49,0,65,0,97,0,129,0,193,0,1,1,129,1,1,2,1,3,1,4,1,6,1,8,1,12,1,16,1,24,1,32,1,48,1,64,1,96,0,0,0,0,16,0,17,0,18,0,0,0,8,0,7,0,9,0,6,0,10,0,5,0,11,0,4,0,12,0,3,0,13,0,2,0,14,0,1,0,15,0,0,0,96,7,0,0,0,8,80,0,0,8,16,0,20,8,115,0,18,7,31,0,0,8,112,0,0,8,48,0,0,9,192,0,16,7,10,0,0,8,96,0,0,8,32,0,0,9,160,0,0,8,0,0,0,8,128,0,0,8,64,0,0,9,224,0,16,7,6,0,0,8,88,0,0,8,24,0,0,9,144,0,19,7,59,0,0,8,120,0,0,8,56,0,0,9,208,0,17,7,17,0,0,8,104,0,0,8,40,0,0,9,176,0,0,8,8,0,0,8,136,0,0,8,72,0,0,9,240,0,16,7,4,0,0,8,84,0,0,8,20,0,21,8,227,0,19,7,43,0,0,8,116,0,0,8,52,0,0,9,200,0,17,7,13,0,0,8,100,0,0,8,36,0,0,9,168,0,0,8,4,0,0,8,132,0,0,8,68,0,0,9,232,0,16,7,8,0,0,8,92,0,0,8,28,0,0,9,152,0,20,7,83,0,0,8,124,0,0,8,60,0,0,9,216,0,18,7,23,0,0,8,108,0,0,8,44,0,0,9,184,0,0,8,12,0,0,8,140,0,0,8,76,0,0,9,248,0,16,7,3,0,0,8,82,0,0,8,18,0,21,8,163,0,19,7,35,0,0,8,114,0,0,8,50,0,0,9,196,0,17,7,11,0,0,8,98,0,0,8,34,0,0,9,164,0,0,8,2,0,0,8,130,0,0,8,66,0,0,9,228,0,16,7,7,0,0,8,90,0,0,8,26,0,0,9,148,0,20,7,67,0,0,8,122,0,0,8,58,0,0,9,212,0,18,7,19,0,0,8,106,0,0,8,42,0,0,9,180,0,0,8,10,0,0,8,138,0,0,8,74,0,0,9,244,0,16,7,5,0,0,8,86,0,0,8,22,0,64,8,0,0,19,7,51,0,0,8,118,0,0,8,54,0,0,9,204,0,17,7,15,0,0,8,102,0,0,8,38,0,0,9,172,0,0,8,6,0,0,8,134,0,0,8,70,0,0,9,236,0,16,7,9,0,0,8,94,0,0,8,30,0,0,9,156,0,20,7,99,0,0,8,126,0,0,8,62,0,0,9,220,0,18,7,27,0,0,8,110,0,0,8,46,0,0,9,188,0,0,8,14,0,0,8,142,0,0,8,78,0,0,9,252,0,96,7,0,0,0,8,81,0,0,8,17,0,21,8,131,0,18,7,31,0,0,8,113,0,0,8,49,0,0,9,194,0,16,7,10,0,0,8,97,0,0,8,33,0,0,9,162,0,0,8,1,0,0,8,129,0,0,8,65,0,0,9,226,0,16,7,6,0,0,8,89,0,0,8,25,0,0,9,146,0,19,7,59,0,0,8,121,0,0,8,57,0,0,9,210,0,17,7,17,0,0,8,105,0,0,8,41,0,0,9,178,0,0,8,9,0,0,8,137,0,0,8,73,0,0,9,242,0,16,7,4,0,0,8,85,0,0,8,21,0,16,8,2,1,19,7,43,0,0,8,117,0,0,8,53,0,0,9,202,0,17,7,13,0,0,8,101,0,0,8,37,0,0,9,170,0,0,8,5,0,0,8,133,0,0,8,69,0,0,9,234,0,16,7,8,0,0,8,93,0,0,8,29,0,0,9,154,0,20,7,83,0,0,8,125,0,0,8,61,0,0,9,218,0,18,7,23,0,0,8,109,0,0,8,45,0,0,9,186,0,0,8,13,0,0,8,141,0,0,8,77,0,0,9,250,0,16,7,3,0,0,8,83,0,0,8,19,0,21,8,195,0,19,7,35,0,0,8,115,0,0,8,51,0,0,9,198,0,17,7,11,0,0,8,99,0,0,8,35,0,0,9,166,0,0,8,3,0,0,8,131,0,0,8,67,0,0,9,230,0,16,7,7,0,0,8,91,0,0,8,27,0,0,9,150,0,20,7,67,0,0,8,123,0,0,8,59,0,0,9,214,0,18,7,19,0,0,8,107,0,0,8,43,0,0,9,182,0,0,8,11,0,0,8,139,0,0,8,75,0,0,9,246,0,16,7,5,0,0,8,87,0,0,8,23,0,64,8,0,0,19,7,51,0,0,8,119,0,0,8,55,0,0,9,206,0,17,7,15,0,0,8,103,0,0,8,39,0,0,9,174,0,0,8,7,0,0,8,135,0].concat([0,8,71,0,0,9,238,0,16,7,9,0,0,8,95,0,0,8,31,0,0,9,158,0,20,7,99,0,0,8,127,0,0,8,63,0,0,9,222,0,18,7,27,0,0,8,111,0,0,8,47,0,0,9,190,0,0,8,15,0,0,8,143,0,0,8,79,0,0,9,254,0,96,7,0,0,0,8,80,0,0,8,16,0,20,8,115,0,18,7,31,0,0,8,112,0,0,8,48,0,0,9,193,0,16,7,10,0,0,8,96,0,0,8,32,0,0,9,161,0,0,8,0,0,0,8,128,0,0,8,64,0,0,9,225,0,16,7,6,0,0,8,88,0,0,8,24,0,0,9,145,0,19,7,59,0,0,8,120,0,0,8,56,0,0,9,209,0,17,7,17,0,0,8,104,0,0,8,40,0,0,9,177,0,0,8,8,0,0,8,136,0,0,8,72,0,0,9,241,0,16,7,4,0,0,8,84,0,0,8,20,0,21,8,227,0,19,7,43,0,0,8,116,0,0,8,52,0,0,9,201,0,17,7,13,0,0,8,100,0,0,8,36,0,0,9,169,0,0,8,4,0,0,8,132,0,0,8,68,0,0,9,233,0,16,7,8,0,0,8,92,0,0,8,28,0,0,9,153,0,20,7,83,0,0,8,124,0,0,8,60,0,0,9,217,0,18,7,23,0,0,8,108,0,0,8,44,0,0,9,185,0,0,8,12,0,0,8,140,0,0,8,76,0,0,9,249,0,16,7,3,0,0,8,82,0,0,8,18,0,21,8,163,0,19,7,35,0,0,8,114,0,0,8,50,0,0,9,197,0,17,7,11,0,0,8,98,0,0,8,34,0,0,9,165,0,0,8,2,0,0,8,130,0,0,8,66,0,0,9,229,0,16,7,7,0,0,8,90,0,0,8,26,0,0,9,149,0,20,7,67,0,0,8,122,0,0,8,58,0,0,9,213,0,18,7,19,0,0,8,106,0,0,8,42,0,0,9,181,0,0,8,10,0,0,8,138,0,0,8,74,0,0,9,245,0,16,7,5,0,0,8,86,0,0,8,22,0,64,8,0,0,19,7,51,0,0,8,118,0,0,8,54,0,0,9,205,0,17,7,15,0,0,8,102,0,0,8,38,0,0,9,173,0,0,8,6,0,0,8,134,0,0,8,70,0,0,9,237,0,16,7,9,0,0,8,94,0,0,8,30,0,0,9,157,0,20,7,99,0,0,8,126,0,0,8,62,0,0,9,221,0,18,7,27,0,0,8,110,0,0,8,46,0,0,9,189,0,0,8,14,0,0,8,142,0,0,8,78,0,0,9,253,0,96,7,0,0,0,8,81,0,0,8,17,0,21,8,131,0,18,7,31,0,0,8,113,0,0,8,49,0,0,9,195,0,16,7,10,0,0,8,97,0,0,8,33,0,0,9,163,0,0,8,1,0,0,8,129,0,0,8,65,0,0,9,227,0,16,7,6,0,0,8,89,0,0,8,25,0,0,9,147,0,19,7,59,0,0,8,121,0,0,8,57,0,0,9,211,0,17,7,17,0,0,8,105,0,0,8,41,0,0,9,179,0,0,8,9,0,0,8,137,0,0,8,73,0,0,9,243,0,16,7,4,0,0,8,85,0,0,8,21,0,16,8,2,1,19,7,43,0,0,8,117,0,0,8,53,0,0,9,203,0,17,7,13,0,0,8,101,0,0,8,37,0,0,9,171,0,0,8,5,0,0,8,133,0,0,8,69,0,0,9,235,0,16,7,8,0,0,8,93,0,0,8,29,0,0,9,155,0,20,7,83,0,0,8,125,0,0,8,61,0,0,9,219,0,18,7,23,0,0,8,109,0,0,8,45,0,0,9,187,0,0,8,13,0,0,8,141,0,0,8,77,0,0,9,251,0,16,7,3,0,0,8,83,0,0,8,19,0,21,8,195,0,19,7,35,0,0,8,115,0,0,8,51,0,0,9,199,0,17,7,11,0,0,8,99,0,0,8,35,0,0,9,167,0,0,8,3,0,0,8,131,0,0,8,67,0,0,9,231,0,16,7,7,0,0,8,91,0,0,8,27,0,0,9,151,0,20,7,67,0,0,8,123,0,0,8,59,0,0,9,215,0,18,7,19,0,0,8,107,0,0,8,43,0,0,9,183,0,0,8,11,0,0,8,139,0,0,8,75,0,0,9,247,0,16,7,5,0,0,8,87,0,0,8,23,0,64,8,0,0,19,7,51,0,0,8,119,0,0,8,55,0,0,9,207,0,17,7,15,0,0,8,103,0,0,8,39,0,0,9,175,0,0,8,7,0,0,8,135,0,0,8,71,0,0,9,239,0,16,7,9,0,0,8,95,0,0,8,31,0,0,9,159,0,20,7,99,0,0,8,127,0,0,8,63,0,0,9,223,0,18,7,27,0,0,8,111,0,0,8,47,0,0,9,191,0,0,8,15,0,0,8,143,0,0,8,79,0,0,9,255,0,16,5,1,0,23,5,1,1,19,5,17,0,27,5,1,16,17,5,5,0,25,5,1,4,21,5,65,0,29,5,1,64,16,5,3,0,24,5,1,2,20,5,33,0,28,5,1,32,18,5,9,0,26,5,1,8,22,5,129,0,64,5,0,0,16,5,2,0,23,5,129,1,19,5,25,0,27,5,1,24,17,5,7,0,25,5,1,6,21,5,97,0,29,5,1,96,16,5,4,0,24,5,1,3,20,5,49,0,28,5,1,48,18,5,13,0,26,5,1,12,22,5,193,0,64,5,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,176,111,0,0,0,0,0,0,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,16,111,0,0,0,0,0,0,70,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,66,0,1,0,40,110,0,0,0,0,0,0,71,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,67,0,1,0,192,109,0,0,0,0,0,0,72,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,68,0,1,0,96,109,0,0,0,0,0,0,0,0,0,0,37,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,73,0,0,0,64,141,0,0,0,0,0,0,0,0,0,0,36,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,73,0,0,0,200,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,7,0,0,0,0,0,0,0,154,130,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,216,156,0,0,0,0,0,0,157,130,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,136,154,0,0,0,0,0,0,34,136,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,64,151,0,0,0,0,0,0,36,136,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,48,148,0,0,0,0,0,0,39,136,0,0,255,255,255,255,3,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,65,0,1,1,0,145,0,0,0,0,0,0,40,136,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,168,141,0,0,0,0,0,0,0,144,0,0,4,0,4,0,7,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,1,0,80,139,0,0,0,0,0,0,3,144,0,0,20,0,20,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,40,137,0,0,0,0,0,0,4,144,0,0,20,0,20,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,56,135,0,0,0,0,0,0,1,145,0,0,4,0,4,0,7,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,1,0,64,133,0,0,0,0,0,0,2,145,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,176,131,0,0,0,0,0,0,1,146,0,0,1,0,1,0,10,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,104,130,0,0,0,0,0,0,2,146,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,224,128,0,0,0,0,0,0,3,146,0,0,1,0,1,0,10,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,176,127,0,0,0,0,0,0,4,146,0,0,1,0,1,0,10,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,72,126,0,0,0,0,0,0,5,146,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,0,125,0,0,0,0,0,0,6,146,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,80,124,0,0,0,0,0,0,7,146,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,160,123,0,0,0,0,0,0,8,146,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,80,123,0,0,0,0,0,0,9,146,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,208,122,0,0,0,0,0,0,10,146,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,48,122,0,0,0,0,0,0,20,146,0,0,255,255,255,255,3,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,65,0,1,1,248,120,0,0,0,0,0,0,124,146,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,40,120,0,0,0,0,0,0,134,146,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,64,119,0,0,0,0,0,0,144,146,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,64,118,0,0,0,0,0,0,145,146,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,104,117,0,0,0,0,0,0,146,146,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,128,116,0,0,0,0,0,0,0,160,0,0,4,0,4,0,7,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,1,0,0,116,0,0,0,0,0,0,1,160,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,80,115,0,0,0,0,0,0,2,160,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,1,0,8,115,0,0,0,0,0,0,3,160,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,1,0,48,114,0,0,0,0,0,0,4,160,0,0,13,0,13,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,72,113,0,0,0,0,0,0,11,162,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,152,112,0,0,0,0,0,0,12,162,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,16,112,0,0,0,0,0,0,14,162,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,96,111,0,0,0,0,0,0,15,162,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,232,110,0,0,0,0,0,0,16,162,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,248,109,0,0,0,0,0,0,20,162,0,0,2,0,2,0,3,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,65,0,1,0,144,109,0,0,0,0,0,0,21,162,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,80,109,0,0,0,0,0,0,23,162,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,0,109,0,0,0,0,0,0,0,163,0,0,1,0,1,0,7,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,65,0,1,0,216,108,0,0,0,0,0,0,1,163,0,0,1,0,1,0,7,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,65,0,1,0,48,108,0,0,0,0,0,0,2,163,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,200,107,0,0,0,0,0,0,1,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,80,107,0,0,0,0,0,0,2,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,136,106,0,0,0,0,0,0,3,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,40,106,0,0,0,0,0,0,4,164,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,176,105,0,0,0,0,0,0,5,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,72,105,0,0,0,0,0,0,6,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,224,104,0,0,0,0,0,0,7,164,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,176,104,0,0,0,0,0,0,8,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,48,104,0,0,0,0,0,0,9,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,200,103,0,0,0,0,0,0,10,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,112,103,0,0,0,0,0,0,11,164,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,224,102,0,0,0,0,0,0,12,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,104,102,0,0,0,0,0,0,32,164,0,0,33,0,33,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,216,101,0,0,0,0,0,0,1,0,0,0,0,0,0,0,56,0,0,0,24,47,0,0,139,108,79,64,134,201,196,191,128,72,255,190,126,29,120,191,197,32,240,63,195,100,42,61,211,188,99,61,96,229,80,190,199,75,135,63,0,0,200,66,0,0,200,66,0,0,200,66,255,0,0,0,255,0,0,0,255,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,154,153,25,64,154,153,25,64,154,153,25,64,0,0,0,0,0,0,0,0,150,48,7,119,44,97,14,238,186,81,9,153,25,196,109,7,143,244,106,112,53,165,99,233,163,149,100,158,50,136,219,14,164,184,220,121,30,233,213,224,136,217,210,151,43,76,182,9,189,124,177,126,7,45,184,231,145,29,191,144,100,16,183,29,242,32,176,106,72,113,185,243,222,65,190,132,125,212,218,26,235,228,221,109,81,181,212,244,199,133,211,131,86,152,108,19,192,168,107,100,122,249,98,253,236,201,101,138,79,92,1,20,217,108,6,99,99,61,15,250,245,13,8,141,200,32,110,59,94,16,105,76,228,65,96,213,114,113,103,162,209,228,3,60,71,212,4,75,253,133,13,210,107,181,10,165,250,168,181,53,108,152,178,66,214,201,187,219,64,249,188,172,227,108,216,50,117,92,223,69,207,13,214,220,89,61,209,171,172,48,217,38,58,0,222,81,128,81,215,200,22,97,208,191,181,244,180,33,35,196,179,86,153,149,186,207,15,165,189,184,158,184,2,40,8,136,5,95,178,217,12,198,36,233,11,177,135,124,111,47,17,76,104,88,171,29,97,193,61,45,102,182,144,65,220,118,6,113,219,1,188,32,210,152,42,16,213,239,137,133,177,113,31,181,182,6,165,228,191,159,51,212,184,232,162,201,7,120,52,249,0,15,142,168,9,150,24,152,14,225,187,13,106,127,45,61,109,8,151,108,100,145,1,92,99,230,244,81,107,107,98,97,108,28,216,48,101,133,78,0,98,242,237,149,6,108,123,165,1,27,193,244,8,130,87,196,15,245,198,217,176,101,80,233,183,18,234,184,190,139,124,136,185,252,223,29,221,98,73,45,218,21,243,124,211,140,101,76,212,251,88,97,178,77,206,81,181,58,116,0,188,163,226,48,187,212,65,165,223,74,215,149,216,61,109,196,209,164,251,244,214,211,106,233,105,67,252,217,110,52,70,136,103,173,208,184,96,218,115,45,4,68,229,29,3,51,95,76,10,170,201,124,13,221,60,113,5,80,170,65,2,39,16,16,11,190,134,32,12,201,37,181,104,87,179,133,111,32,9,212,102,185,159,228,97,206,14,249,222,94,152,201,217,41,34,152,208,176,180,168,215,199,23,61,179,89,129,13,180,46,59,92,189,183,173,108,186,192,32,131,184,237,182,179,191,154,12,226,182,3,154,210,177,116,57,71,213,234,175,119,210,157,21,38,219,4,131,22,220,115,18,11,99,227,132,59,100,148,62,106,109,13,168,90,106,122,11,207,14,228,157,255,9,147,39,174,0,10,177,158,7,125,68,147,15,240,210,163,8,135,104,242,1,30,254,194,6,105,93,87,98,247,203,103,101,128,113,54,108,25,231,6,107,110,118,27,212,254,224,43,211,137,90,122,218,16,204,74,221,103,111,223,185,249,249,239,190,142,67,190,183,23,213,142,176,96,232,163,214,214,126,147,209,161,196,194,216,56,82,242,223,79,241,103,187,209,103,87,188,166,221,6,181,63,75,54,178,72,218,43,13,216,76,27,10,175,246,74,3,54,96,122,4,65,195,239,96,223,85,223,103,168,239,142,110,49,121,190,105,70,140,179,97,203,26,131,102,188,160,210,111,37,54,226,104,82,149,119,12,204,3,71,11,187,185,22,2,34,47,38,5,85,190,59,186,197,40,11,189,178,146,90,180,43,4,106,179,92,167,255,215,194,49,207,208,181,139,158,217,44,29,174,222,91,176,194,100,155,38,242,99,236,156,163,106,117,10,147,109,2,169,6,9,156,63,54,14,235,133,103,7,114,19,87,0,5,130,74,191,149,20,122,184,226,174,43,177,123,56,27,182,12,155,142,210,146,13,190,213,229,183,239,220,124,33,223,219,11,212,210,211,134,66,226,212,241,248,179,221,104,110,131,218,31,205,22,190,129,91,38,185,246,225,119,176,111,119,71,183,24,230,90,8,136,112,106,15,255,202,59,6,102,92,11,1,17,255,158,101,143,105,174,98,248,211,255,107,97,69,207,108,22,120,226,10,160,238,210,13,215,84,131,4,78,194,179,3,57,97,38,103,167,247,22,96,208,77,71,105,73,219,119,110,62,74,106,209,174,220,90,214,217,102,11,223,64,240,59,216,55,83,174,188,169,197,158,187,222,127,207,178,71,233,255,181,48,28,242,189,189,138,194,186,202,48,147,179,83,166,163,180,36,5,54,208,186,147,6,215,205,41,87,222,84,191,103,217,35,46,122,102,179,184,74,97,196,2,27,104,93,148,43,111,42,55,190,11,180,161,142,12,195,27,223,5,90,141,239,2,45,0,0,0,0,65,49,27,25,130,98,54,50,195,83,45,43,4,197,108,100,69,244,119,125,134,167,90,86,199,150,65,79,8,138,217,200,73,187,194,209,138,232,239,250,203,217,244,227,12,79,181,172,77,126,174,181,142,45,131,158,207,28,152,135,81,18,194,74,16,35,217,83,211,112,244,120,146,65,239,97,85,215,174,46,20,230,181,55,215,181,152,28,150,132,131,5,89,152,27,130,24,169,0,155,219,250,45,176,154,203,54,169,93,93,119,230,28,108,108,255,223,63,65,212,158,14,90,205,162,36,132,149,227,21,159,140,32,70,178,167,97,119,169,190,166,225,232,241,231,208,243,232,36,131,222,195,101,178,197,218,170,174,93,93,235,159,70,68,40,204,107,111,105,253,112,118,174,107,49,57,239,90,42,32,44,9,7,11,109,56,28,18,243,54,70,223,178,7,93,198,113,84,112,237,48,101,107,244,247,243,42,187,182,194,49,162,117,145,28,137,52,160,7,144,251,188,159,23,186,141,132,14,121,222,169,37,56,239,178,60,255,121,243,115,190,72,232,106,125,27,197,65,60,42,222,88,5,79,121,240,68,126,98,233,135,45,79,194,198,28,84,219,1,138,21,148,64,187,14,141,131,232,35,166,194,217,56,191,13,197,160,56,76,244,187,33,143,167,150,10,206,150,141,19,9,0,204,92,72,49,215,69,139,98,250,110,202,83,225,119,84,93,187,186,21,108,160,163,214,63,141,136,151,14,150,145,80,152,215,222,17,169,204,199,210,250,225,236,147,203,250,245,92,215,98,114,29,230,121,107,222,181,84,64,159,132,79,89,88,18,14,22,25,35,21,15,218,112,56,36,155,65,35,61,167,107,253,101,230,90,230,124,37,9,203,87,100,56,208,78,163,174,145,1,226,159,138,24,33,204,167,51,96,253,188,42,175,225,36,173,238,208,63,180,45,131,18,159,108,178,9,134,171,36,72,201,234,21,83,208,41,70,126,251,104,119,101,226,246,121,63,47,183,72,36,54,116,27,9,29,53,42,18,4,242,188,83,75,179,141,72,82,112,222,101,121,49,239,126,96,254,243,230,231,191,194,253,254,124,145,208,213,61,160,203,204,250,54,138,131,187,7,145,154,120,84,188,177,57,101,167,168,75,152,131,59,10,169,152,34,201,250,181,9,136,203,174,16,79,93,239,95,14,108,244,70,205,63,217,109,140,14,194,116,67,18,90,243,2,35,65,234,193,112,108,193,128,65,119,216,71,215,54,151,6,230,45,142,197,181,0,165,132,132,27,188,26,138,65,113,91,187,90,104,152,232,119,67,217,217,108,90,30,79,45,21,95,126,54,12,156,45,27,39,221,28,0,62,18,0,152,185,83,49,131,160,144,98,174,139,209,83,181,146,22,197,244,221,87,244,239,196,148,167,194,239,213,150,217,246,233,188,7,174,168,141,28,183,107,222,49,156,42,239,42,133,237,121,107,202,172,72,112,211,111,27,93,248,46,42,70,225,225,54,222,102,160,7,197,127,99,84,232,84,34,101,243,77,229,243,178,2,164,194,169,27,103,145,132,48,38,160,159,41,184,174,197,228,249,159,222,253,58,204,243,214,123,253,232,207,188,107,169,128,253,90,178,153,62,9,159,178,127,56,132,171,176,36,28,44,241,21,7,53,50,70,42,30,115,119,49,7,180,225,112,72,245,208,107,81,54,131,70,122,119,178,93,99,78,215,250,203,15,230,225,210,204,181,204,249,141,132,215,224,74,18,150,175,11,35,141,182,200,112,160,157,137,65,187,132,70,93,35,3,7,108,56,26,196,63,21,49,133,14,14,40,66,152,79,103,3,169,84,126,192,250,121,85,129,203,98,76,31,197,56,129,94,244,35,152,157,167,14,179,220,150,21,170,27,0,84,229,90,49,79,252,153,98,98,215,216,83,121,206,23,79,225,73,86,126,250,80,149,45,215,123,212,28,204,98,19,138,141,45,82,187,150,52,145,232,187,31,208,217,160,6,236,243,126,94,173,194,101,71,110,145,72,108,47,160,83,117,232,54,18,58,169,7,9,35,106,84,36,8,43,101,63,17,228,121,167,150,165,72,188,143,102,27,145,164,39,42,138,189,224,188,203,242,161,141,208,235,98,222,253,192,35,239,230,217,189,225,188,20,252,208,167,13,63,131,138,38,126,178,145,63,185,36,208,112,248,21,203,105,59,70,230,66,122,119,253,91,181,107,101,220,244,90,126,197,55,9,83,238,118,56,72,247,177,174,9,184,240,159,18,161,51,204,63,138,114,253,36,147,0,0,0,0,55,106,194,1,110,212,132,3,89,190,70,2,220,168,9,7,235,194,203,6,178,124,141,4,133,22,79,5,184,81,19,14,143,59,209,15,214,133,151,13,225,239,85,12,100,249,26,9,83,147,216,8,10,45,158,10,61,71,92,11,112,163,38,28,71,201,228,29,30,119,162,31,41,29,96,30,172,11,47,27,155,97,237,26,194,223,171,24,245,181,105,25,200,242,53,18,255,152,247,19,166,38,177,17,145,76,115,16,20,90,60,21,35,48,254,20,122,142,184,22,77,228,122,23,224,70,77,56,215,44,143,57,142,146,201,59,185,248,11,58,60,238,68,63,11,132,134,62,82,58,192,60,101,80,2,61,88,23,94,54,111,125,156,55,54,195,218,53,1,169,24,52,132,191,87,49,179,213,149,48,234,107,211,50,221,1,17,51,144,229,107,36,167,143,169,37,254,49,239,39,201,91,45,38,76,77,98,35,123,39,160,34,34,153,230,32,21,243,36,33,40,180,120,42,31,222,186,43,70,96,252,41,113,10,62,40,244,28,113,45,195,118,179,44,154,200,245,46,173,162,55,47,192,141,154,112,247,231,88,113,174,89,30,115,153,51,220,114,28,37,147,119,43,79,81,118,114,241,23,116,69,155,213,117,120,220,137,126,79,182,75,127,22,8,13,125,33,98,207,124,164,116,128,121,147,30,66,120,202,160,4,122,253,202,198,123,176,46,188,108,135,68,126,109,222,250,56,111,233,144,250,110,108,134,181,107,91,236,119,106,2,82,49,104,53,56,243,105,8,127,175,98,63,21,109,99,102,171,43,97,81,193,233,96,212,215,166,101,227,189,100,100,186,3,34,102,141,105,224,103,32,203,215,72,23,161,21,73,78,31,83,75,121,117,145,74,252,99,222,79,203,9,28,78,146,183,90,76,165,221,152,77,152,154,196,70,175,240,6,71,246,78,64,69,193,36,130,68,68,50,205,65,115,88,15,64,42,230,73,66,29,140,139,67,80,104,241,84,103,2,51,85,62,188,117,87,9,214,183,86,140,192,248,83,187,170,58,82,226,20,124,80,213,126,190,81,232,57,226,90,223,83,32,91,134,237,102,89,177,135,164,88,52,145,235,93,3,251,41,92,90,69,111,94,109,47,173,95,128,27,53,225,183,113,247,224,238,207,177,226,217,165,115,227,92,179,60,230,107,217,254,231,50,103,184,229,5,13,122,228,56,74,38,239,15,32,228,238,86,158,162,236,97,244,96,237,228,226,47,232,211,136,237,233,138,54,171,235,189,92,105,234,240,184,19,253,199,210,209,252,158,108,151,254,169,6,85,255,44,16,26,250,27,122,216,251,66,196,158,249,117,174,92,248,72,233,0,243,127,131,194,242,38,61,132,240,17,87,70,241,148,65,9,244,163,43,203,245,250,149,141,247,205,255,79,246,96,93,120,217,87,55,186,216,14,137,252,218,57,227,62,219,188,245,113,222,139,159,179,223,210,33,245,221,229,75,55,220,216,12,107,215,239,102,169,214,182,216,239,212,129,178,45,213,4,164,98,208,51,206,160,209,106,112,230,211,93,26,36,210,16,254,94,197,39,148,156,196,126,42,218,198,73,64,24,199,204,86,87,194,251,60,149,195,162,130,211,193,149,232,17,192,168,175,77,203,159,197,143,202,198,123,201,200,241,17,11,201,116,7,68,204,67,109,134,205,26,211,192,207,45,185,2,206,64,150,175,145,119,252,109,144,46,66,43,146,25,40,233,147,156,62,166,150,171,84,100,151,242,234,34,149,197,128,224,148,248,199,188,159,207,173,126,158,150,19,56,156,161,121,250,157,36,111,181,152,19,5,119,153,74,187,49,155,125,209,243,154,48,53,137,141,7,95,75,140,94,225,13,142,105,139,207,143,236,157,128,138,219,247,66,139,130,73,4,137,181,35,198,136,136,100,154,131,191,14,88,130,230,176,30,128,209,218,220,129,84,204,147,132,99,166,81,133,58,24,23,135,13,114,213,134,160,208,226,169,151,186,32,168,206,4,102,170,249,110,164,171,124,120,235,174,75,18,41,175,18,172,111,173,37,198,173,172,24,129,241,167,47,235,51,166,118,85,117,164,65,63,183,165,196,41,248,160,243,67,58,161,170,253,124,163,157,151,190,162,208,115,196,181,231,25,6,180,190,167,64,182,137,205,130,183,12,219,205,178,59,177,15,179,98,15,73,177,85,101,139,176,104,34,215,187,95,72,21,186,6,246,83,184,49,156,145,185,180,138,222,188,131,224,28,189,218,94,90,191,237,52,152,190,0,0,0,0,101,103,188,184,139,200,9,170,238,175,181,18,87,151,98,143,50,240,222,55,220,95,107,37,185,56,215,157,239,40,180,197,138,79,8,125,100,224,189,111,1,135,1,215,184,191,214,74,221,216,106,242,51,119,223,224,86,16,99,88,159,87,25,80,250,48,165,232,20,159,16,250,113,248,172,66,200,192,123,223,173,167,199,103,67,8,114,117,38,111,206,205,112,127,173,149,21,24,17,45,251,183,164,63,158,208,24,135,39,232,207,26,66,143,115,162,172,32,198,176,201,71,122,8,62,175,50,160,91,200,142,24,181,103,59,10,208,0,135,178,105,56,80,47,12,95,236,151,226,240,89,133,135,151,229,61,209,135,134,101,180,224,58,221,90,79,143,207,63,40,51,119,134,16,228,234,227,119,88,82,13,216,237,64,104,191,81,248,161,248,43,240,196,159,151,72,42,48,34,90,79,87,158,226,246,111,73,127,147,8,245,199,125,167,64,213,24,192,252,109,78,208,159,53,43,183,35,141,197,24,150,159,160,127,42,39,25,71,253,186,124,32,65,2,146,143,244,16,247,232,72,168,61,88,20,155,88,63,168,35,182,144,29,49,211,247,161,137,106,207,118,20,15,168,202,172,225,7,127,190,132,96,195,6,210,112,160,94,183,23,28,230,89,184,169,244,60,223,21,76,133,231,194,209,224,128,126,105,14,47,203,123,107,72,119,195,162,15,13,203,199,104,177,115,41,199,4,97,76,160,184,217,245,152,111,68,144,255,211,252,126,80,102,238,27,55,218,86,77,39,185,14,40,64,5,182,198,239,176,164,163,136,12,28,26,176,219,129,127,215,103,57,145,120,210,43,244,31,110,147,3,247,38,59,102,144,154,131,136,63,47,145,237,88,147,41,84,96,68,180,49,7,248,12,223,168,77,30,186,207,241,166,236,223,146,254,137,184,46,70,103,23,155,84,2,112,39,236,187,72,240,113,222,47,76,201,48,128,249,219,85,231,69,99,156,160,63,107,249,199,131,211,23,104,54,193,114,15,138,121,203,55,93,228,174,80,225,92,64,255,84,78,37,152,232,246,115,136,139,174,22,239,55,22,248,64,130,4,157,39,62,188,36,31,233,33,65,120,85,153,175,215,224,139,202,176,92,51,59,182,89,237,94,209,229,85,176,126,80,71,213,25,236,255,108,33,59,98,9,70,135,218,231,233,50,200,130,142,142,112,212,158,237,40,177,249,81,144,95,86,228,130,58,49,88,58,131,9,143,167,230,110,51,31,8,193,134,13,109,166,58,181,164,225,64,189,193,134,252,5,47,41,73,23,74,78,245,175,243,118,34,50,150,17,158,138,120,190,43,152,29,217,151,32,75,201,244,120,46,174,72,192,192,1,253,210,165,102,65,106,28,94,150,247,121,57,42,79,151,150,159,93,242,241,35,229,5,25,107,77,96,126,215,245,142,209,98,231,235,182,222,95,82,142,9,194,55,233,181,122,217,70,0,104,188,33,188,208,234,49,223,136,143,86,99,48,97,249,214,34,4,158,106,154,189,166,189,7,216,193,1,191,54,110,180,173,83,9,8,21,154,78,114,29,255,41,206,165,17,134,123,183,116,225,199,15,205,217,16,146,168,190,172,42,70,17,25,56,35,118,165,128,117,102,198,216,16,1,122,96,254,174,207,114,155,201,115,202,34,241,164,87,71,150,24,239,169,57,173,253,204,94,17,69,6,238,77,118,99,137,241,206,141,38,68,220,232,65,248,100,81,121,47,249,52,30,147,65,218,177,38,83,191,214,154,235,233,198,249,179,140,161,69,11,98,14,240,25,7,105,76,161,190,81,155,60,219,54,39,132,53,153,146,150,80,254,46,46,153,185,84,38,252,222,232,158,18,113,93,140,119,22,225,52,206,46,54,169,171,73,138,17,69,230,63,3,32,129,131,187,118,145,224,227,19,246,92,91,253,89,233,73,152,62,85,241,33,6,130,108,68,97,62,212,170,206,139,198,207,169,55,126,56,65,127,214,93,38,195,110,179,137,118,124,214,238,202,196,111,214,29,89,10,177,161,225,228,30,20,243,129,121,168,75,215,105,203,19,178,14,119,171,92,161,194,185,57,198,126,1,128,254,169,156,229,153,21,36,11,54,160,54,110,81,28,142,167,22,102,134,194,113,218,62,44,222,111,44,73,185,211,148,240,129,4,9,149,230,184,177,123,73,13,163,30,46,177,27,72,62,210,67,45,89,110,251,195,246,219,233,166,145,103,81,31,169,176,204,122,206,12,116,148,97,185,102,241,6,5,222,0,0,0,0,119,7,48,150,238,14,97,44,153,9,81,186,7,109,196,25,112,106,244,143,233,99,165,53,158,100,149,163,14,219,136,50,121,220,184,164,224,213,233,30,151,210,217,136,9,182,76,43,126,177,124,189,231,184,45,7,144,191,29,145,29,183,16,100,106,176,32,242,243,185,113,72,132,190,65,222,26,218,212,125,109,221,228,235,244,212,181,81,131,211,133,199,19,108,152,86,100,107,168,192,253,98,249,122,138,101,201,236,20,1,92,79,99,6,108,217,250,15,61,99,141,8,13,245,59,110,32,200,76,105,16,94,213,96,65,228,162,103,113,114,60,3,228,209,75,4,212,71,210,13,133,253,165,10,181,107,53,181,168,250,66,178,152,108,219,187,201,214,172,188,249,64,50,216,108,227,69,223,92,117,220,214,13,207,171,209,61,89,38,217,48,172,81,222,0,58,200,215,81,128,191,208,97,22,33,180,244,181,86,179,196,35,207,186,149,153,184,189,165,15,40,2,184,158,95,5,136,8,198,12,217,178,177,11,233,36,47,111,124,135,88,104,76,17,193,97,29,171,182,102,45,61,118,220,65,144,1,219,113,6,152,210,32,188,239,213,16,42,113,177,133,137,6,182,181,31,159,191,228,165,232,184,212,51,120,7,201,162,15,0,249,52,150,9,168,142,225,14,152,24,127,106,13,187,8,109,61,45,145,100,108,151,230,99,92,1,107,107,81,244,28,108,97,98,133,101,48,216,242,98,0,78,108,6,149,237,27,1,165,123,130,8,244,193,245,15,196,87,101,176,217,198,18,183,233,80,139,190,184,234,252,185,136,124,98,221,29,223,21,218,45,73,140,211,124,243,251,212,76,101,77,178,97,88,58,181,81,206,163,188,0,116,212,187,48,226,74,223,165,65,61,216,149,215,164,209,196,109,211,214,244,251,67,105,233,106,52,110,217,252,173,103,136,70,218,96,184,208,68,4,45,115,51,3,29,229,170,10,76,95,221,13,124,201,80,5,113,60,39,2,65,170,190,11,16,16,201,12,32,134,87,104,181,37,32,111,133,179,185,102,212,9,206,97,228,159,94,222,249,14,41,217,201,152,176,208,152,34,199,215,168,180,89,179,61,23,46,180,13,129,183,189,92,59,192,186,108,173,237,184,131,32,154,191,179,182,3,182,226,12,116,177,210,154,234,213,71,57,157,210,119,175,4,219,38,21,115,220,22,131,227,99,11,18,148,100,59,132,13,109,106,62,122,106,90,168,228,14,207,11,147,9,255,157,10,0,174,39,125,7,158,177,240,15,147,68,135,8,163,210,30,1,242,104,105,6,194,254,247,98,87,93,128,101,103,203,25,108,54,113,110,107,6,231,254,212,27,118,137,211,43,224,16,218,122,90,103,221,74,204,249,185,223,111,142,190,239,249,23,183,190,67,96,176,142,213,214,214,163,232,161,209,147,126,56,216,194,196,79,223,242,82,209,187,103,241,166,188,87,103,63,181,6,221,72,178,54,75,216,13,43,218,175,10,27,76,54,3,74,246,65,4,122,96,223,96,239,195,168,103,223,85,49,110,142,239,70,105,190,121,203,97,179,140,188,102,131,26,37,111,210,160,82,104,226,54,204,12,119,149,187,11,71,3,34,2,22,185,85,5,38,47,197,186,59,190,178,189,11,40,43,180,90,146,92,179,106,4,194,215,255,167,181,208,207,49,44,217,158,139,91,222,174,29,155,100,194,176,236,99,242,38,117,106,163,156,2,109,147,10,156,9,6,169,235,14,54,63,114,7,103,133,5,0,87,19,149,191,74,130,226,184,122,20,123,177,43,174,12,182,27,56,146,210,142,155,229,213,190,13,124,220,239,183,11,219,223,33,134,211,210,212,241,212,226,66,104,221,179,248,31,218,131,110,129,190,22,205,246,185,38,91,111,176,119,225,24,183,71,119,136,8,90,230,255,15,106,112,102,6,59,202,17,1,11,92,143,101,158,255,248,98,174,105,97,107,255,211,22,108,207,69,160,10,226,120,215,13,210,238,78,4,131,84,57,3,179,194,167,103,38,97,208,96,22,247,73,105,71,77,62,110,119,219,174,209,106,74,217,214,90,220,64,223,11,102,55,216,59,240,169,188,174,83,222,187,158,197,71,178,207,127,48,181,255,233,189,189,242,28,202,186,194,138,83,179,147,48,36,180,163,166,186,208,54,5,205,215,6,147,84,222,87,41,35,217,103,191,179,102,122,46,196,97,74,184,93,104,27,2,42,111,43,148,180,11,190,55,195,12,142,161,90,5,223,27,45,2,239,141,0,0,0,0,25,27,49,65,50,54,98,130,43,45,83,195,100,108,197,4,125,119,244,69,86,90,167,134,79,65,150,199,200,217,138,8,209,194,187,73,250,239,232,138,227,244,217,203,172,181,79,12,181,174,126,77,158,131,45,142,135,152,28,207,74,194,18,81,83,217,35,16,120,244,112,211,97,239,65,146,46,174,215,85,55,181,230,20,28,152,181,215,5,131,132,150,130,27,152,89,155,0,169,24,176,45,250,219,169,54,203,154,230,119,93,93,255,108,108,28,212,65,63,223,205,90,14,158,149,132,36,162,140,159,21,227,167,178,70,32,190,169,119,97,241,232,225,166,232,243,208,231,195,222,131,36,218,197,178,101,93,93,174,170,68,70,159,235,111,107,204,40,118,112,253,105,57,49,107,174,32,42,90,239,11,7,9,44,18,28,56,109,223,70,54,243,198,93,7,178,237,112,84,113,244,107,101,48,187,42,243,247,162,49,194,182,137,28,145,117,144,7,160,52,23,159,188,251,14,132,141,186,37,169,222,121,60,178,239,56,115,243,121,255,106,232,72,190,65,197,27,125,88,222,42,60,240,121,79,5,233,98,126,68,194,79,45,135,219,84,28,198,148,21,138,1,141,14,187,64,166,35,232,131,191,56,217,194,56,160,197,13,33,187,244,76,10,150,167,143,19,141,150,206,92,204,0,9,69,215,49,72,110,250,98,139,119,225,83,202,186,187,93,84,163,160,108,21,136,141,63,214,145,150,14,151,222,215,152,80,199,204,169,17,236,225,250,210,245,250,203,147,114,98,215,92,107,121,230,29,64,84,181,222,89,79,132,159,22,14,18,88,15,21,35,25,36,56,112,218,61,35,65,155,101,253,107,167,124,230,90,230,87,203,9,37,78,208,56,100,1,145,174,163,24,138,159,226,51,167,204,33,42,188,253,96,173,36,225,175,180,63,208,238,159,18,131,45,134,9,178,108,201,72,36,171,208,83,21,234,251,126,70,41,226,101,119,104,47,63,121,246,54,36,72,183,29,9,27,116,4,18,42,53,75,83,188,242,82,72,141,179,121,101,222,112,96,126,239,49,231,230,243,254,254,253,194,191,213,208,145,124,204,203,160,61,131,138,54,250,154,145,7,187,177,188,84,120,168,167,101,57,59,131,152,75,34,152,169,10,9,181,250,201,16,174,203,136,95,239,93,79,70,244,108,14,109,217,63,205,116,194,14,140,243,90,18,67,234,65,35,2,193,108,112,193,216,119,65,128,151,54,215,71,142,45,230,6,165,0,181,197,188,27,132,132,113,65,138,26,104,90,187,91,67,119,232,152,90,108,217,217,21,45,79,30,12,54,126,95,39,27,45,156,62,0,28,221,185,152,0,18,160,131,49,83,139,174,98,144,146,181,83,209,221,244,197,22,196,239,244,87,239,194,167,148,246,217,150,213,174,7,188,233,183,28,141,168,156,49,222,107,133,42,239,42,202,107,121,237,211,112,72,172,248,93,27,111,225,70,42,46,102,222,54,225,127,197,7,160,84,232,84,99,77,243,101,34,2,178,243,229,27,169,194,164,48,132,145,103,41,159,160,38,228,197,174,184,253,222,159,249,214,243,204,58,207,232,253,123,128,169,107,188,153,178,90,253,178,159,9,62,171,132,56,127,44,28,36,176,53,7,21,241,30,42,70,50,7,49,119,115,72,112,225,180,81,107,208,245,122,70,131,54,99,93,178,119,203,250,215,78,210,225,230,15,249,204,181,204,224,215,132,141,175,150,18,74,182,141,35,11,157,160,112,200,132,187,65,137,3,35,93,70,26,56,108,7,49,21,63,196,40,14,14,133,103,79,152,66,126,84,169,3,85,121,250,192,76,98,203,129,129,56,197,31,152,35,244,94,179,14,167,157,170,21,150,220,229,84,0,27,252,79,49,90,215,98,98,153,206,121,83,216,73,225,79,23,80,250,126,86,123,215,45,149,98,204,28,212,45,141,138,19,52,150,187,82,31,187,232,145,6,160,217,208,94,126,243,236,71,101,194,173,108,72,145,110,117,83,160,47,58,18,54,232,35,9,7,169,8,36,84,106,17,63,101,43,150,167,121,228,143,188,72,165,164,145,27,102,189,138,42,39,242,203,188,224,235,208,141,161,192,253,222,98,217,230,239,35,20,188,225,189,13,167,208,252,38,138,131,63,63,145,178,126,112,208,36,185,105,203,21,248,66,230,70,59,91,253,119,122,220,101,107,181,197,126,90,244,238,83,9,55,247,72,56,118,184,9,174,177,161,18,159,240,138,63,204,51,147,36,253,114,0,0,0,0,1,194,106,55,3,132,212,110,2,70,190,89,7,9,168,220,6,203,194,235,4,141,124,178,5,79,22,133,14,19,81,184,15,209,59,143,13,151,133,214,12,85,239,225,9,26,249,100,8,216,147,83,10,158,45,10,11,92,71,61,28,38,163,112,29,228,201,71,31,162,119,30,30,96,29,41,27,47,11,172,26,237,97,155,24,171,223,194,25,105,181,245,18,53,242,200,19,247,152,255,17,177,38,166,16,115,76,145,21,60,90,20,20,254,48,35,22,184,142,122,23,122,228,77,56,77,70,224,57,143,44,215,59,201,146,142,58,11,248,185,63,68,238,60,62,134,132,11,60,192,58,82,61,2,80,101,54,94,23,88,55,156,125,111])
.concat([53,218,195,54,52,24,169,1,49,87,191,132,48,149,213,179,50,211,107,234,51,17,1,221,36,107,229,144,37,169,143,167,39,239,49,254,38,45,91,201,35,98,77,76,34,160,39,123,32,230,153,34,33,36,243,21,42,120,180,40,43,186,222,31,41,252,96,70,40,62,10,113,45,113,28,244,44,179,118,195,46,245,200,154,47,55,162,173,112,154,141,192,113,88,231,247,115,30,89,174,114,220,51,153,119,147,37,28,118,81,79,43,116,23,241,114,117,213,155,69,126,137,220,120,127,75,182,79,125,13,8,22,124,207,98,33,121,128,116,164,120,66,30,147,122,4,160,202,123,198,202,253,108,188,46,176,109,126,68,135,111,56,250,222,110,250,144,233,107,181,134,108,106,119,236,91,104,49,82,2,105,243,56,53,98,175,127,8,99,109,21,63,97,43,171,102,96,233,193,81,101,166,215,212,100,100,189,227,102,34,3,186,103,224,105,141,72,215,203,32,73,21,161,23,75,83,31,78,74,145,117,121,79,222,99,252,78,28,9,203,76,90,183,146,77,152,221,165,70,196,154,152,71,6,240,175,69,64,78,246,68,130,36,193,65,205,50,68,64,15,88,115,66,73,230,42,67,139,140,29,84,241,104,80,85,51,2,103,87,117,188,62,86,183,214,9,83,248,192,140,82,58,170,187,80,124,20,226,81,190,126,213,90,226,57,232,91,32,83,223,89,102,237,134,88,164,135,177,93,235,145,52,92,41,251,3,94,111,69,90,95,173,47,109,225,53,27,128,224,247,113,183,226,177,207,238,227,115,165,217,230,60,179,92,231,254,217,107,229,184,103,50,228,122,13,5,239,38,74,56,238,228,32,15,236,162,158,86,237,96,244,97,232,47,226,228,233,237,136,211,235,171,54,138,234,105,92,189,253,19,184,240,252,209,210,199,254,151,108,158,255,85,6,169,250,26,16,44,251,216,122,27,249,158,196,66,248,92,174,117,243,0,233,72,242,194,131,127,240,132,61,38,241,70,87,17,244,9,65,148,245,203,43,163,247,141,149,250,246,79,255,205,217,120,93,96,216,186,55,87,218,252,137,14,219,62,227,57,222,113,245,188,223,179,159,139,221,245,33,210,220,55,75,229,215,107,12,216,214,169,102,239,212,239,216,182,213,45,178,129,208,98,164,4,209,160,206,51,211,230,112,106,210,36,26,93,197,94,254,16,196,156,148,39,198,218,42,126,199,24,64,73,194,87,86,204,195,149,60,251,193,211,130,162,192,17,232,149,203,77,175,168,202,143,197,159,200,201,123,198,201,11,17,241,204,68,7,116,205,134,109,67,207,192,211,26,206,2,185,45,145,175,150,64,144,109,252,119,146,43,66,46,147,233,40,25,150,166,62,156,151,100,84,171,149,34,234,242,148,224,128,197,159,188,199,248,158,126,173,207,156,56,19,150,157,250,121,161,152,181,111,36,153,119,5,19,155,49,187,74,154,243,209,125,141,137,53,48,140,75,95,7,142,13,225,94,143,207,139,105,138,128,157,236,139,66,247,219,137,4,73,130,136,198,35,181,131,154,100,136,130,88,14,191,128,30,176,230,129,220,218,209,132,147,204,84,133,81,166,99,135,23,24,58,134,213,114,13,169,226,208,160,168,32,186,151,170,102,4,206,171,164,110,249,174,235,120,124,175,41,18,75,173,111,172,18,172,173,198,37,167,241,129,24,166,51,235,47,164,117,85,118,165,183,63,65,160,248,41,196,161,58,67,243,163,124,253,170,162,190,151,157,181,196,115,208,180,6,25,231,182,64,167,190,183,130,205,137,178,205,219,12,179,15,177,59,177,73,15,98,176,139,101,85,187,215,34,104,186,21,72,95,184,83,246,6,185,145,156,49,188,222,138,180,189,28,224,131,191,90,94,218,190,152,52,237,0,0,0,0,184,188,103,101,170,9,200,139,18,181,175,238,143,98,151,87,55,222,240,50,37,107,95,220,157,215,56,185,197,180,40,239,125,8,79,138,111,189,224,100,215,1,135,1,74,214,191,184,242,106,216,221,224,223,119,51,88,99,16,86,80,25,87,159,232,165,48,250,250,16,159,20,66,172,248,113,223,123,192,200,103,199,167,173,117,114,8,67,205,206,111,38,149,173,127,112,45,17,24,21,63,164,183,251,135,24,208,158,26,207,232,39,162,115,143,66,176,198,32,172,8,122,71,201,160,50,175,62,24,142,200,91,10,59,103,181,178,135,0,208,47,80,56,105,151,236,95,12,133,89,240,226,61,229,151,135,101,134,135,209,221,58,224,180,207,143,79,90,119,51,40,63,234,228,16,134,82,88,119,227,64,237,216,13,248,81,191,104,240,43,248,161,72,151,159,196,90,34,48,42,226,158,87,79,127,73,111,246,199,245,8,147,213,64,167,125,109,252,192,24,53,159,208,78,141,35,183,43,159,150,24,197,39,42,127,160,186,253,71,25,2,65,32,124,16,244,143,146,168,72,232,247,155,20,88,61,35,168,63,88,49,29,144,182,137,161,247,211,20,118,207,106,172,202,168,15,190,127,7,225,6,195,96,132,94,160,112,210,230,28,23,183,244,169,184,89,76,21,223,60,209,194,231,133,105,126,128,224,123,203,47,14,195,119,72,107,203,13,15,162,115,177,104,199,97,4,199,41,217,184,160,76,68,111,152,245,252,211,255,144,238,102,80,126,86,218,55,27,14,185,39,77,182,5,64,40,164,176,239,198,28,12,136,163,129,219,176,26,57,103,215,127,43,210,120,145,147,110,31,244,59,38,247,3,131,154,144,102,145,47,63,136,41,147,88,237,180,68,96,84,12,248,7,49,30,77,168,223,166,241,207,186,254,146,223,236,70,46,184,137,84,155,23,103,236,39,112,2,113,240,72,187,201,76,47,222,219,249,128,48,99,69,231,85,107,63,160,156,211,131,199,249,193,54,104,23,121,138,15,114,228,93,55,203,92,225,80,174,78,84,255,64,246,232,152,37,174,139,136,115,22,55,239,22,4,130,64,248,188,62,39,157,33,233,31,36,153,85,120,65,139,224,215,175,51,92,176,202,237,89,182,59,85,229,209,94,71,80,126,176,255,236,25,213,98,59,33,108,218,135,70,9,200,50,233,231,112,142,142,130,40,237,158,212,144,81,249,177,130,228,86,95,58,88,49,58,167,143,9,131,31,51,110,230,13,134,193,8,181,58,166,109,189,64,225,164,5,252,134,193,23,73,41,47,175,245,78,74,50,34,118,243,138,158,17,150,152,43,190,120,32,151,217,29,120,244,201,75,192,72,174,46,210,253,1,192,106,65,102,165,247,150,94,28,79,42,57,121,93,159,150,151,229,35,241,242,77,107,25,5,245,215,126,96,231,98,209,142,95,222,182,235,194,9,142,82,122,181,233,55,104,0,70,217,208,188,33,188,136,223,49,234,48,99,86,143,34,214,249,97,154,106,158,4,7,189,166,189,191,1,193,216,173,180,110,54,21,8,9,83,29,114,78,154,165,206,41,255,183,123,134,17,15,199,225,116,146,16,217,205,42,172,190,168,56,25,17,70,128,165,118,35,216,198,102,117,96,122,1,16,114,207,174,254,202,115,201,155,87,164,241,34,239,24,150,71,253,173,57,169,69,17,94,204,118,77,238,6,206,241,137,99,220,68,38,141,100,248,65,232,249,47,121,81,65,147,30,52,83,38,177,218,235,154,214,191,179,249,198,233,11,69,161,140,25,240,14,98,161,76,105,7,60,155,81,190,132,39,54,219,150,146,153,53,46,46,254,80,38,84,185,153,158,232,222,252,140,93,113,18,52,225,22,119,169,54,46,206,17,138,73,171,3,63,230,69,187,131,129,32,227,224,145,118,91,92,246,19,73,233,89,253,241,85,62,152,108,130,6,33,212,62,97,68,198,139,206,170,126,55,169,207,214,127,65,56,110,195,38,93,124,118,137,179,196,202,238,214,89,29,214,111,225,161,177,10,243,20,30,228,75,168,121,129,19,203,105,215,171,119,14,178,185,194,161,92,1,126,198,57,156,169,254,128,36,21,153,229,54,160,54,11,142,28,81,110,134,102,22,167,62,218,113,194,44,111,222,44,148,211,185,73,9,4,129,240,177,184,230,149,163,13,73,123,27,177,46,30,67,210,62,72,251,110,89,45,233,219,246,195,81,103,145,166,204,176,169,31,116,12,206,122,102,185,97,148,222,5,6,241,0,0,0,0,0,0,0,0,52,0,0,0,4,0,4,0,8,0,4,0,2,0,0,0,4,0,5,0,16,0,8,0,2,0,0,0,4,0,6,0,32,0,32,0,2,0,0,0,4,0,4,0,16,0,16,0,28,0,0,0,8,0,16,0,32,0,32,0,28,0,0,0,8,0,16,0,128,0,128,0,28,0,0,0,8,0,32,0,128,0,0,1,28,0,0,0,32,0,128,0,2,1,0,4,28,0,0,0,32,0,2,1,2,1,0,16,28,0,0,0,16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,10,0,0,0,12,0,0,0,14,0,0,0,16,0,0,0,20,0,0,0,24,0,0,0,28,0,0,0,32,0,0,0,40,0,0,0,48,0,0,0,56,0,0,0,64,0,0,0,80,0,0,0,96,0,0,0,112,0,0,0,128,0,0,0,160,0,0,0,192,0,0,0,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,6,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,24,0,0,0,32,0,0,0,48,0,0,0,64,0,0,0,96,0,0,0,128,0,0,0,192,0,0,0,0,1,0,0,128,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,6,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,24,0,0,0,32,0,0,0,48,0,0,0,64,0,0,0,96,0,0,71,114,97,121,82,101,115,112,111,110,115,101,85,110,105,116,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,99,111,100,101,32,108,101,110,103,116,104,115,32,115,101,116,0,0,0,0,0,0,0,0,90,76,105,98,32,101,114,114,111,114,58,32,37,115,0,0,70,114,101,101,66,121,116,101,67,111,117,110,116,115,0,0,40,99,99,48,37,114,111,119,115,105,122,101,41,61,61,48,0,0,0,0,0,0,0,0,115,112,32,33,61,32,78,85,76,76,0,0,0,0,0,0,76,90,87,68,101,99,111,100,101,58,32,83,116,114,105,112,32,37,100,32,110,111,116,32,116,101,114,109,105,110,97,116,101,100,32,119,105,116,104,32,69,79,73,32,99,111,100,101,0,0,0,0,0,0,0,0,109,117,115,116,32,98,101,32,101,105,116,104,101,114,32,76,111,103,76,85,86,32,111,114,32,76,111,103,76,0,0,0,70,114,101,101,79,102,102,115,101,116,115,0,0,0,0,0,76,105,110,101,32,108,101,110,103,116,104,32,109,105,115,109,97,116,99,104,0,0,0,0,67,67,73,84,84,32,71,114,111,117,112,32,51,0,0,0,89,80,111,115,105,116,105,111,110,0,0,0,0,0,0,0,37,115,58,32,67,97,110,32,110,111,116,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,101,110,116,114,121,46,0,0,67,111,109,112,114,101,115,115,105,111,110,32,115,99,104,101,109,101,32,37,117,32,37,115,32,100,101,99,111,100,105,110,103,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,0,0,0,88,80,111,115,105,116,105,111,110,0,0,0,0,0,0,0,80,97,103,101,78,97,109,101,0,0,0,0,0,0,0,0,73,110,116,101,114,110,97,108,32,101,114,114,111,114,44,32,117,110,107,110,111,119,110,32,116,97,103,32,48,120,37,120,0,0,0,0,0,0,0,0,68,97,116,97,32,98,117,102,102,101,114,32,116,111,111,32,115,109,97,108,108,32,116,111,32,104,111,108,100,32,116,105,108,101,32,37,108,117,0,0,78,111,116,32,97,32,84,73,70,70,32,102,105,108,101,44,32,98,97,100,32,66,105,103,84,73,70,70,32,111,102,102,115,101,116,115,105,122,101,32,37,100,32,40,48,120,37,120,41,0,0,0,0,0,0,0,83,111,114,114,121,44,32,76,111,103,76,32,100,97,116,97,32,109,117,115,116,32,104,97,118,101,32,37,115,61,37,100,0,0,0,0,0,0,0,0,80,108,97,110,97,114,67,111,110,102,105,103,117,114,97,116,105,111,110,0,0,0,0,0,116,105,108,101,115,0,0,0,89,82,101,115,111,108,117,116,105,111,110,0,0,0,0,0,88,82,101,115,111,108,117,116,105,111,110,0,0,0,0,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,116,111,111,32,102,97,114,32,98,97,99,107,0,0,0,77,97,120,83,97,109,112,108,101,86,97,108,117,101,0,0,37,115,58,32,69,114,114,111,114,32,102,101,116,99,104,105,110,103,32,100,105,114,101,99,116,111,114,121,32,108,105,110,107,0,0,0,0,0,0,0,77,105,110,83,97,109,112,108,101,86,97,108,117,101,0,0,105,110,99,111,109,112,97,116,105,98,108,101,32,118,101,114,115,105,111,110,0,0,0,0,116,111,111,32,109,97,110,121,32,108,101,110,103,116,104,32,111,114,32,100,105,115,116,97,110,99,101,32,115,121,109,98,111,108,115,0,0,0,0,0,69,110,99,111,100,101,114,32,101,114,114,111,114,58,32,37,115,0,0,0,0,0,0,0,110,101,101,100,32,100,105,99,116,105,111,110,97,114,121,0,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,0,114,111,119,115,105,122,101,32,62,32,48,0,0,0,0,0,69,110,99,111,100,101,114,32,101,114,114,111,114,58,32,37,115,0,0,0,0,0,0,0,115,112,45,62,100,101,99,95,99,111,100,101,116,97,98,32,33,61,32,78,85,76,76,0,82,111,119,115,80,101,114,83,116,114,105,112,0,0,0,0,73,110,97,112,112,114,111,112,114,105,97,116,101,32,112,104,111,116,111,109,101,116,114,105,99,32,105,110,116,101,114,112,114,101,116,97,116,105,111,110,32,37,100,32,102,111,114,32,83,71,73,76,111,103,32,99,111,109,112,114,101,115,115,105,111,110,59,32,37,115,0,0,80,114,101,109,97,116,117,114,101,32,69,79,76,0,0,0,67,67,73,84,84,32,82,76,69,47,87,0,0,0,0,0,83,97,109,112,108,101,115,80,101,114,80,105,120,101,108,0,37,115,58,32,67,97,110,32,110,111,116,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,0,0,0,37,115,32,37,115,32,100,101,99,111,100,105,110,103,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,0,0,0,0,0,0,79,114,105,101,110,116,97,116,105,111,110,0,0,0,0,0,83,116,114,105,112,79,102,102,115,101,116,115,0,0,0,0,84,73,70,70,70,105,101,108,100,87,105,116,104,84,97,103,0,0,0,0,0,0,0,0,37,108,108,117,58,32,73,110,118,97,108,105,100,32,116,105,108,101,32,98,121,116,101,32,99,111,117,110,116,44,32,116,105,108,101,32,37,108,117,0,78,111,116,32,97,32,84,73,70,70,32,102,105,108,101,44,32,98,97,100,32,118,101,114,115,105,111,110,32,110,117,109,98,101,114,32,37,100,32,40,48,120,37,120,41,0,0,0,73,110,107,83,101,116,0,0,77,111,100,101,108,0,0,0,79,117,116,32,111,102,32,109,101,109,111,114,121,32,114,101,97,100,105,110,103,32,111,102,32,34,37,115,34,59,32,116,97,103,32,105,103,110,111,114,101,100,0,0,0,0,0,0,67,97,110,110,111,116,32,104,97,110,100,108,101,32,122,101,114,111,32,110,117,109,98,101,114,32,111,102,32,37,115,0,77,97,107,101,0,0,0,0,83,97,110,105,116,121,32,99,104,101,99,107,32,111,110,32,115,105,122,101,32,111,102,32,34,37,115,34,32,118,97,108,117,101,32,102,97,105,108,101,100,59,32,116,97,103,32,105,103,110,111,114,101,100,0,0,73,109,97,103,101,68,101,115,99,114,105,112,116,105,111,110,0,0,0,0,0,0,0,0,40,115,99,104,101,109,101,32,61,61,32,67,79,77,80,82,69,83,83,73,79,78,95,68,69,70,76,65,84,69,41,32,124,124,32,40,115,99,104,101,109,101,32,61,61,32,67,79,77,80,82,69,83,83,73,79,78,95,65,68,79,66,69,95,68,69,70,76,65,84,69,41,0,0,0,0,0,0,0,0,67,97,110,110,111,116,32,104,97,110,100,108,101,32,100,105,102,102,101,114,101,110,116,32,118,97,108,117,101,115,32,112,101,114,32,115,97,109,112,108,101,32,102,111,114,32,34,37,115,34,59,32,116,97,103,32,105,103,110,111,114,101,100,0,70,114,97,99,116,105,111,110,97,108,32,115,99,97,110,108,105,110,101,115,32,99,97,110,110,111,116,32,98,101,32,114,101,97,100,0,0,0,0,0,68,111,99,117,109,101,110,116,78,97,109,101,0,0,0,0,37,115,58,32,69,114,114,111,114,32,102,101,116,99,104,105,110,103,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,0,0,0,0,0,0,73,110,99,111,114,114,101,99,116,32,118,97,108,117,101,32,102,111,114,32,34,37,115,34,59,32,116,97,103,32,105,103,110,111,114,101,100,0,0,0,70,105,108,108,79,114,100,101,114,0,0,0,0,0,0,0,98,117,102,102,101,114,32,101,114,114,111,114,0,0,0,0,105,110,118,97,108,105,100,32,115,116,111,114,101,100,32,98,108,111,99,107,32,108,101,110,103,116,104,115,0,0,0,0,73,79,32,101,114,114,111,114,32,100,117,114,105,110,103,32,114,101,97,100,105,110,103,32,111,102,32,34,37,115,34,59,32,116,97,103,32,105,103,110,111,114,101,100,0,0,0,0,90,76,105,98,32,99,97,110,110,111,116,32,100,101,97,108,32,119,105,116,104,32,98,117,102,102,101,114,115,32,116,104,105,115,32,115,105,122,101,0,67,101,108,108,76,101,110,103,116,104,0,0,0,0,0,0,79,117,116,32,111,102,32,109,101,109,111,114,121,32,97,108,108,111,99,97,116,105,110,103,32,37,108,100,32,98,121,116,101,32,116,101,109,112,32,98,117,102,102,101,114,46,0,0,90,76,105,98,32,99,97,110,110,111,116,32,100,101,97,108,32,119,105,116,104,32,98,117,102,102,101,114,115,32,116,104,105,115,32,115,105,122,101,0,73,110,99,111,109,112,97,116,105,98,108,101,32,116,121,112,101,32,102,111,114,32,34,37,115,34,59,32,116,97,103,32,105,103,110,111,114,101,100,0,78,111,32,115,112,97,99,101,32,102,111,114,32,76,90,87,32,104,97,115,104,32,116,97,98,108,101,0,0,0,0,0,67,101,108,108,87,105,100,116,104,0,0,0,0,0,0,0,99,99,37,114,111,119,108,101,110,32,61,61,32,48,0,0,115,112,32,33,61,32,48,0,37,115,32,97,116,32,108,105,110,101,32,37,117,32,111,102,32,37,115,32,37,117,32,40,103,111,116,32,37,117,44,32,101,120,112,101,99,116,101,100,32,37,117,41,0,0,0,0,73,110,99,111,114,114,101,99,116,32,99,111,117,110,116,32,102,111,114,32,34,37,115,34,59,32,116,97,103,32,105,103,110,111,114,101,100,0,0,0,67,67,73,84,84,32,82,76,69,0,0,0,0,0,0,0,84,104,114,101,115,104,104,111,108,100,105,110,103,0,0,0,37,115,58,32,83,101,101,107,32,101,114,114,111,114,32,97,99,99,101,115,115,105,110,103,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,0,79,117,116,32,111,102,32,109,101,109,111,114,121,32,114,101,97,100,105,110,103,32,111,102,32,34,37,115,34,0,0,0,80,104,111,116,111,109,101,116,114,105,99,73,110,116,101,114,112,114,101,116,97,116,105,111,110,0,0,0,0,0,0,0,115,99,104,101,109,101,32,61,61,32,67,79,77,80,82,69,83,83,73,79,78,95,80,73,88,65,82,76,79,71,0,0,73,110,118,97,108,105,100,32,89,67,98,67,114,32,115,117,98,115,97,109,112,108,105,110,103,32,40,37,100,120,37,100,41,0,0,0,0,0,0,0,83,97,110,105,116,121,32,99,104,101,99,107,32,111,110,32,115,105,122,101,32,111,102,32,34,37,115,34,32,118,97,108,117,101,32,102,97,105,108,101,100,0,0,0,0,0,0,0,68,105,115,99,97,114,100,105,110,103,32,37,108,117,32,98,121,116,101,115,32,116,111,32,97,118,111,105,100,32,98,117,102,102,101,114,32,111,118,101,114,114,117,110,0,0,0,0,73,110,116,101,103,101,114,32,97,114,105,116,104,109,101,116,105,99,32,111,118,101,114,102,108,111,119,0,0,0,0,0,67,111,109,112,114,101,115,115,105,111,110,0,0,0,0,0,70,114,97,99,116,105,111,110,97,108,32,115,99,97,110,108,105,110,101,115,32,99,97,110,110,111,116,32,98,101,32,114,101,97,100,0,0,0,0,0,37,108,117,58,32,84,105,108,101,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,78,111,116,32,97,32,84,73,70,70,32,111,114,32,77,68,73,32,102,105,108,101,44,32,98,97,100,32,109,97,103,105,99,32,110,117,109,98,101,114,32,37,100,32,40,48,120,37,120,41,0,0,0,0,0,0,67,97,110,110,111,116,32,104,97,110,100,108,101,32,100,105,102,102,101,114,101,110,116,32,118,97,108,117,101,115,32,112,101,114,32,115,97,109,112,108,101,32,102,111,114,32,34,37,115,34,0,0,0,0,0,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,115,101,112,97,114,97,116,101,100,32,105,109,97,103,101,32,119,105,116,104,32,37,115,61,37,100,0,0,0,0,0,0,0,0,66,105,116,115,80,101,114,83,97,109,112,108,101,0,0,0,73,110,99,111,114,114,101,99,116,32,118,97,108,117,101,32,102,111,114,32,34,37,115,34,0,0,0,0,0,0,0,0,73,109,97,103,101,76,101,110,103,116,104,0,0,0,0,0,73,109,97,103,101,76,101,110,103,116,104,0,0,0,0,0,115,99,104,101,109,101,32,61,61,32,67,79,77,80,82,69,83,83,73,79,78,95,76,90,87,0,0,0,0,0,0,0,73,79,32,101,114,114,111,114,32,100,117,114,105,110,103,32,114,101,97,100,105,110,103,32,111,102,32,34,37,115,34,0,73,109,97,103,101,87,105,100,116,104,0,0,0,0,0,0,73,110,99,111,109,112,97,116,105,98,108,101,32,116,121,112,101,32,102,111,114,32,34,37,115,34,0,0,0,0,0,0,79,108,100,83,117,98,102,105,108,101,84,121,112,101,0,0,83,97,110,105,116,121,32,99,104,101,99,107,32,111,110,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,32,102,97,105,108,101,100,0,0,73,110,99,111,114,114,101,99,116,32,99,111,117,110,116,32,102,111,114,32,34,37,115,34,0,0,0,0,0,0,0,0,115,99,104,101,109,101,32,61,61,32,67,79,77,80,82,69,83,83,73,79,78,95,83,71,73,76,79,71,50,52,32,124,124,32,115,99,104,101,109,101,32,61,61,32,67,79,77,80,82,69,83,83,73,79,78,95,83,71,73,76,79,71,0,0,83,117,98,102,105,108,101,84,121,112,101,0,0,0,0,0,105,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,0,0,0,0,0,105,110,118,97,108,105,100,32,98,108,111,99,107,32,116,121,112,101,0,0,0,0,0,0,73,110,118,97,108,105,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,59,32,116,97,103,115,32,97,114,101,32,110,111,116,32,115,111,114,116,101,100,32,105,110,32,97,115,99,101,110,100,105,110,103,32,111,114,100,101,114,0,0,115,112,45,62,115,116,97,116,101,32,61,61,32,90,83,84,65,84,69,95,73,78,73,84,95,69,78,67,79,68,69,0,73,109,97,103,101,85,110,105,113,117,101,73,68,0,0,0,115,112,45,62,101,110,99,111,100,101,116,105,108,101,32,33,61,32,78,85,76,76,0,0,37,100,32,98,105,116,32,105,110,112,117,116,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,80,105,120,97,114,76,111,103,0,0,67,97,110,110,111,116,32,100,101,116,101,114,109,105,110,101,32,115,105,122,101,32,111,102,32,117,110,107,110,111,119,110,32,116,97,103,32,116,121,112,101,32,37,100,0,0,0,0,115,112,32,33,61,32,78,85,76,76,0,0,0,0,0,0,83,117,98,106,101,99,116,68,105,115,116,97,110,99,101,82,97,110,103,101,0,0,0,0,115,112,32,33,61,32,48,0,70,114,97,99,116,105,111,110,97,108,32,115,99,97,110,108,105,110,101,115,32,99,97,110,110,111,116,32,98,101,32,114,101,97,100,0,0,0,0,0,102,111,114,32,34,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,34,32,97,114,114,97,121,0,0,0,0,0,79,108,100,45,115,116,121,108,101,32,74,80,69,71,0,0,68,101,118,105,99,101,83,101,116,116,105,110,103,68,101,115,99,114,105,112,116,105,111,110,0,0,0,0,0,0,0,0,65,116,116,101,109,112,116,32,116,111,32,114,101,115,101,116,32,102,105,101,108,100,32,111,110,32,100,105,114,101,99,116,111,114,121,32,110,111,116,32,97,108,114,101,97,100,121,32,111,110,32,100,105,115,107,46,0,0,0,0,0,0,0,0,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,105,115,32,109,105,115,115,105,110,103,32,114,101,113,117,105,114,101,100,32,34,37,115,34,32,102,105,101,108,100,0,0,0,83,104,97,114,112,110,101,115,115,0,0,0,0,0,0,0,73,110,116,101,103,101,114,32,111,118,101,114,102,108,111,119,0,0,0,0,0,0,0,0,102,111,114,32,73,70,68,32,108,105,115,116,0,0,0,0,73,110,118,97,108,105,100,32,89,67,98,67,114,32,115,117,98,115,97,109,112,108,105,110,103,0,0,0,0,0,0,0,83,97,116,117,114,97,116,105,111,110,0,0,0,0,0,0,68,97,116,97,32,98,117,102,102,101,114,32,116,111,111,32,115,109,97,108,108,32,116,111,32,104,111,108,100,32,115,116,114,105,112,32,37,108,117,0,69,114,114,111,114,32,119,114,105,116,105,110,103,32,84,73,70,70,32,104,101,97,100,101,114,0,0,0,0,0,0,0,67,111,108,111,114,32,99,104,97,110,110,101,108,115,0,0,67,111,110,116,114,97,115,116,0,0,0,0,0,0,0,0,120,32,61,61,32,108,97,115,116,120,0,0,0,0,0,0,80,108,97,110,97,114,99,111,110,102,105,103,32,116,97,103,32,118,97,108,117,101,32,97,115,115,117,109,101,100,32,105,110,99,111,114,114,101,99,116,44,32,97,115,115,117,109,105,110,103,32,100,97,116,97,32,105,115,32,99,111,110,116,105,103,32,105,110,115,116,101,97,100,32,111,102,32,99,104,117,110,107,121,0,0,0,0,0,110,32,62,32,48,0,0,0,71,97,105,110,67,111,110,116,114,111,108,0,0,0,0,0,67,97,110,32,110,111,116,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,0,0,0,0,0,83,99,101,110,101,67,97,112,116,117,114,101,84,121,112,101,0,0,0,0,0,0,0,0,83,97,110,105,116,121,32,99,104,101,99,107,32,111,110,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,32,102,97,105,108,101,100,44,32,122,101,114,111,32,116,97,103,32,100,105,114,101,99,116,111,114,105,101,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,70,111,99,97,108,76,101,110,103,116,104,73,110,51,53,109,109,70,105,108,109,0,0,0,69,114,114,111,114,32,102,101,116,99,104,105,110,103,32,100,105,114,101,99,116,111,114,121,32,108,105,110,107,0,0,0,78,111,110,101,0,0,0,0,67,97,110,32,110,111,116,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,0,0,0,0,0,0,0,68,105,103,105,116,97,108,90,111,111,109,82,97,116,105,111,0,0,0,0,0,0,0,0,100,97,116,97,32,101,114,114,111,114,0,0,0,0,0,0,104,101,97,100,101,114,32,99,114,99,32,109,105,115,109,97,116,99,104,0,0,0,0,0,37,46,49,48,48,115,58,32,67,97,110,32,110,111,116,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,0,0,0,0,0,115,112,32,33,61,32,78,85,76,76,0,0,0,0,0,0,87,104,105,116,101,66,97,108,97,110,99,101,0,0,0,0,115,112,45,62,101,110,99,111,100,101,112,102,117,110,99,32,33,61,32,78,85,76,76,0,115,112,32,33,61,32,48,0,116,111,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,0,0,110,98,105,116,115,32,60,61,32,66,73,84,83,95,77,65,88,0,0,0,0,0,0,0,69,120,112,111,115,117,114,101,77,111,100,101,0,0,0,0,85,110,107,110,111,119,110,32,101,110,99,111,100,105,110,103,32,37,100,32,102,111,114,32,76,111,103,76,117,118,32,99,111,109,112,114,101,115,115,105,111,110,0,0,0,0,0,0,77,101,114,103,105,110,103,32,67,67,73,84,84,32,70,97,120,32,52,32,99,111,100,101,99,45,115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,83,97,110,105,116,121,32,99,104,101,99,107,32,111,110,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,32,102,97,105,108,101,100,44,32,116,104,105,115,32,105,115,32,112,114,111,98,97,98,108,121,32,110,111,116,32,97,32,118,97,108,105,100,32,73,70,68,32,111,102,102,115,101,116,0,74,80,69,71,0,0,0,0,67,117,115,116,111,109,82,101,110,100,101,114,101,100,0,0,77,101,109,111,114,121,32,109,97,112,112,101,100,32,102,105,108,101,115,32,110,111,116,32,99,117,114,114,101,110,116,108,121,32,115,117,112,112,111,114,116,101,100,32,102,111,114,32,116,104,105,115,32,111,112,101,114,97,116,105,111,110,46,0,37,115,58,32,67,97,110,32,110,111,116,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,0,0,0,67,70,65,80,97,116,116,101,114,110,0,0,0,0,0,0,69,114,114,111,114,32,117,112,100,97,116,105,110,103,32,84,73,70,70,32,104,101,97,100,101,114,0,0,0,0,0,0,84,73,70,70,84,105,108,101,82,111,119,83,105,122,101,0,37,115,58,32,83,101,101,107,32,101,114,114,111,114,32,97,99,99,101,115,115,105,110,103,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,0,83,99,101,110,101,84,121,112,101,0,0,0,0,0,0,0,82,101,97,100,32,101,114,114,111,114,32,111,110,32,115,116,114,105,112,32,37,108,117,59,32,103,111,116,32,37,108,108,117,32,98,121,116,101,115,44,32,101,120,112,101,99,116,101,100,32,37,108,108,117,0,0,67,97,110,110,111,116,32,114,101,97,100,32,84,73,70,70,32,104,101,97,100,101,114,0,115,99,97,110,108,105,110,101,0,0,0,0,0,0,0,0,112,100,105,114,0,0,0,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,82,71,66,32,105,109,97,103,101,32,119,105,116,104,32,37,115,61,37,100,0,0,0,0,0,0,70,105,108,101,83,111,117,114,99,101,0,0,0,0,0,0,48,0,0,0,0,0,0,0,116,105,102,95,100,105,114,114,101,97,100,46,99,0,0,0,83,101,110,115,105,110,103,77,101,116,104,111,100,0,0,0,102,105,112,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,84,73,70,70,95,86,65,82,73,65,66,76,69,50,0,0,0,0,73,110,116,101,103,101,114,32,111,118,101,114,102,108,111,119,32,105,110,32,37,115,0,0,69,120,112,111,115,117,114,101,73,110,100,101,120,0,0,0,67,111,110,115,101,99,117,116,105,118,101,66,97,100,70,97,120,76,105,110,101,115,0,0,102,105,112,45,62,102,105,101,108,100,95,112,97,115,115,99,111,117,110,116,61,61,49,0,83,117,98,106,101,99,116,76,111,99,97,116,105,111,110,0,69,114,114,111,114,32,102,101,116,99,104,105,110,103,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,0,0,67,108,101,97,110,70,97,120,68,97,116,97,0,0,0,0,102,105,112,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,84,73,70,70,95,86,65,82,73,65,66,76,69,0,0,0,0,0,70,111,99,97,108,80,108,97,110,101,82,101,115,111,108,117,116,105,111,110,85,110,105,116,0,0,0,0,0,0,0,0,115,116,114,101,97,109,32,101,114,114,111,114,0,0,0,0,66,97,100,70,97,120,76,105,110,101,115,0,0,0,0,0,117,110,107,110,111,119,110,32,104,101,97,100,101,114,32,102,108,97,103,115,32,115,101,116,0,0,0,0,0,0,0,0,105,110,99,111,114,114,101,99,116,32,99,111,117,110,116,32,102,111,114,32,102,105,101,108,100,32,34,37,115,34,44,32,101,120,112,101,99,116,101,100,32,37,100,44,32,103,111,116,32,37,100,0,0,0,0,0,115,112,32,33,61,32,48,0,87,114,111,110,103,32,98,105,116,115,112,101,114,115,97,109,112,108,101,32,118,97,108,117,101,32,40,37,100,41,44,32,84,104,117,110,100,101,114,32,100,101,99,111,100,101,114,32,111,110,108,121,32,115,117,112,112,111,114,116,115,32,52,98,105,116,115,32,112,101,114,32,115,97,109,112,108,101,46,0,70,111,99,97,108,80,108,97,110,101,89,82,101,115,111,108,117,116,105,111,110,0,0,0,115,112,32,33,61,32,78,85,76,76,0,0,0,0,0,0,70,97,120,70,105,108,108,70,117,110,99,0,0,0,0,0,90,76,105,98,32,101,114,114,111,114,58,32,37,115,0,0,102,105,112,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,62,61,49,0,115,112,45,62,101,110,99,95,104,97,115,104,116,97,98,32,33,61,32,78,85,76,76,0,70,111,99,97,108,80,108,97,110,101,88,82,101,115,111,108,117,116,105,111,110,0,0,0,85,110,107,110,111,119,110,32,100,97,116,97,32,102,111,114,109,97,116,32,37,100,32,102,111,114,32,76,111,103,76,117,118,32,99,111,109,112,114,101,115,115,105,111,110,0,0,0,37,115,58,32,37,115,0,0,70,97,120,77,111,100,101,0,84,73,70,70,73,110,105,116,67,67,73,84,84,70,97,120,52,0,0,0,0,0,0,0,105,110,99,111,114,114,101,99,116,32,99,111,117,110,116,32,102,111,114,32,102,105,101,108,100,32,34,37,115,34,44,32,101,120,112,101,99,116,101,100,32,50,44,32,103,111,116,32,37,100,0,0,0,0,0,0,78,101,88,84,0,0,0,0,83,112,97,116,105,97,108,70,114,101,113,117,101,110,99,121,82,101,115,112,111,110,115,101,0,0,0,0,0,0,0,0,115,112,45,62,118,115,101,116,112,97,114,101,110,116,32,33,61,32,48,0,0,0,0,0,83,97,110,105,116,121,32,99,104,101,99,107,32,111,110,32,116,97,103,32,99,111,117,110,116,32,102,97,105,108,101,100,44,32,108,105,107,101,108,121,32,99,111,114,114,117,112,116,32,84,73,70,70,0,0,0,102,105,112,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,50,0,70,108,97,115,104,69,110,101,114,103,121,0,0,0,0,0,87,97,114,110,105,110,103,44,32,0,0,0,0,0,0,0,37,108,117,58,32,67,111,108,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,0,32,32,67,111,110,115,101,99,117,116,105,118,101,32,66,97,100,32,70,97,120,32,76,105,110,101,115,58,32,37,108,117,10,0,0,0,0,0,0,0,84,73,70,70,78,117,109,98,101,114,79,102,84,105,108,101,115,0,0,0,0,0,0,0,102,105,112,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,49,0,73,110,116,101,103,101,114,32,111,118,101,114,102,108,111,119,0,0,0,0,0,0,0,0,82,101,108,97,116,101,100,83,111,117,110,100,70,105,108,101,0,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,115,116,114,105,112,32,98,121,116,101,32,99,111,117,110,116,32,37,108,108,117,44,32,115,116,114,105,112,32,37,108,117,0,0,0,0,0,0,0,0,32,32,66,97,100,32,70,97,120,32,76,105,110,101,115,58,32,37,108,117,10,0,0,0,118,97,108,117,101,62,61,48,46,48,0,0,0,0,0,0,79,110,101,32,111,102,32,116,104,101,32,99,108,105,101,110,116,32,112,114,111,99,101,100,117,114,101,115,32,105,115,32,78,85,76,76,32,112,111,105,110,116,101,114,46,0,0,0,65,83,67,73,73,32,118,97,108,117,101,32,102,111,114,32,116,97,103,32,34,37,115,34,32,100,111,101,115,32,110,111,116,32,101,110,100,32,105,110,32,110,117,108,108,32,98,121,116,101,0,0,0,0,0,0,83,97,109,112,108,101,115,47,112,105,120,101,108,0,0,0,80,105,120,101,108,89,68,105,109,101,110,115,105,111,110,0,32,40,37,117,32,61,32,48,120,37,120,41,10,0,0,0,42,112,97,32,60,61,32,48,120,70,70,70,70,70,70,70,70,85,76,0,0,0,0,0,65,83,67,73,73,32,118,97,108,117,101,32,102,111,114,32,116,97,103,32,34,37,115,34,32,99,111,110,116,97,105,110,115,32,110,117,108,108,32,98,121,116,101,32,105,110,32,118,97,108,117,101,59,32,118,97,108,117,101,32,105,110,99,111,114,114,101,99,116,108,121,32,116,114,117,110,99,97,116,101,100,32,100,117,114,105,110,103,32,114,101,97,100,105,110,103,32,100,117,101,32,116,111,32,105,109,112,108,101,109,101,110,116,97,116,105,111,110,32,108,105,109,105,116,97,116,105,111,110,115,0,0,0,0,0,0,102,105,105,32,33,61,32,70,65,73,76,69,68,95,70,73,73,0,0,0,0,0,0,0,80,105,120,101,108,88,68,105,109,101,110,115,105,111,110,0,32,117,110,99,111,114,114,101,99,116,101,100,32,101,114,114,111,114,115,0,0,0,0,0,112,97,32,33,61,32,48,0,102,105,112,45,62,102,105,101,108,100,95,112,97,115,115,99,111,117,110,116,61,61,48,0,67,111,108,111,114,83,112,97,99,101,0,0,0,0,0,0,37,108,117,58,32,83,97,109,112,108,101,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,0,0,0,0,0,0,32,114,101,99,101,105,118,101,114,32,114,101,103,101,110,101,114,97,116,101,100,0,0,0,99,111,117,110,116,60,48,120,56,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,115,116,114,105,112,32,98,117,102,102,101,114,0,0,0,0,0,0,0,102,105,112,45,62,115,101,116,95,102,105,101,108,100,95,116,121,112,101,33,61,84,73,70,70,95,83,69,84,71,69,84,95,73,78,84,0,0,0,0,70,108,97,115,104,112,105,120,86,101,114,115,105,111,110,0,32,99,108,101,97,110,0,0,116,105,102,45,62,116,105,102,95,102,108,97,103,115,38,84,73,70,70,95,66,73,71,84,73,70,70,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,66,38,87,32,109,97,112,112,105,110,103,32,116,97,98,108,101,0,0,102,105,112,45,62,115,101,116,95,102,105,101,108,100,95,116,121,112,101,33,61,84,73,70,70,95,83,69,84,71,69,84,95,79,84,72,69,82,0,0,83,117,98,83,101,99,84,105,109,101,68,105,103,105,116,105,122,101,100,0,0,0,0,0,102,105,108,101,32,101,114,114,111,114,0,0,0,0,0,0,32,32,70,97,120,32,68,97,116,97,58,0,0,0,0,0,99,111,117,110,116,60,48,120,50,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,119,105,110,100,111,119,32,115,105,122,101,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,112,104,111,116,111,109,101,116,114,105,99,32,99,111,110,118,101,114,115,105,111,110,32,116,97,98,108,101,0,0,0,0,0,0,0,78,111,32,100,101,102,105,110,105,116,105,111,110,32,102,111,117,110,100,32,102,111,114,32,116,97,103,32,37,100,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,90,73,80,32,115,116,97,116,101,32,98,108,111,99,107,0,0,0,0,84,111,111,32,109,117,99,104,0,0,0,0,0,0,0,0,83,117,98,83,101,99,84,105,109,101,79,114,105,103,105,110,97,108,0,0,0,0,0,0,40,99,99,37,40,98,112,115,42,115,116,114,105,100,101,41,41,61,61,48,0,0,0,0,32,40,37,108,117,32,61,32,48,120,37,108,120,41,10,0,100,97,116,97,108,101,110,103,116,104,60,48,120,56,48,48,48,48,48,48,48,85,76,0,78,111,32,115,112,97,99,101,32,102,111,114,32,80,105,120,97,114,76,111,103,32,115,116,97,116,101,32,98,108,111,99,107,0,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,80,97,108,101,116,116,101,32,109,97,112,112,105,110,103,32,116,97,98,108,101,0,0,0,0,0,0,84,73,70,70,70,101,116,99,104,78,111,114,109,97,108,84,97,103,0,0,0,0,0,0,116,105,102,45,62,116,105,102,95,100,97,116,97,32,33,61,32,48,0,0,0,0,0,0,83,117,98,83,101,99,84,105,109,101,0,0,0,0,0,0,37,115,58,32,78,111,32,115,112,97,99,101,32,102,111,114,32,76,111,103,76,117,118,32,115,116,97,116,101,32,98,108,111,99,107,0,0,0,0,0,37,115,69,79,76,32,112,97,100,100,105,110,103,0,0,0,73,79,32,101,114,114,111,114,32,119,114,105,116,105,110,103,32,116,97,103,32,100,97,116,97,0,0,0,0,0,0,0,37,108,117,58,32,83,116,114,105,112,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,0,0,0,0,0,0,0,65,115,115,117,109,105,110,103,32,56,45,98,105,116,32,99,111,108,111,114,109,97,112,0,77,101,114,103,105,110,103,32,67,67,73,84,84,32,70,97,120,32,51,32,99,111,100,101,99,45,115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,82,101,97,100,68,105,114,69,110,116,114,121,65,114,114,97,121,0,0,0,0,0,0,0,84,104,117,110,100,101,114,83,99,97,110,0,0,0,0,0,85,115,101,114,67,111,109,109,101,110,116,0,0,0,0,0,43,0,0,0,0,0,0,0,100,105,114,91,109,93,46,116,100,105,114,95,116,97,103,33,61,116,97,103,0,0,0,0,69,114,114,111,114,32,119,114,105,116,105,110,103,32,100,105,114,101,99,116,111,114,121,32,108,105,110,107,0,0,0,0,67,111,109,112,114,101,115,115,105,111,110,32,97,108,103,111,114,105,116,104,109,32,100,111,101,115,32,110,111,116,32,115,117,112,112,111,114,116,32,114,97,110,100,111,109,32,97,99,99,101,115,115,0,0,0,0,70,97,105,108,101,100,32,116,111,32,105,110,105,116,105,97,108,105,122,101,32,67,73,69,32,76,42,97,42,98,42,45,62,82,71,66,32,99,111,110,118,101,114,115,105,111,110,32,115,116,97,116,101,46,0,0,40,116,109,115,105,122,101,95])
.concat([116,41,100,97,116,97,115,105,122,101,62,48,0,0,0,0,34,37,115,34,58,32,66,97,100,32,109,111,100,101,0,0,77,97,107,101,114,78,111,116,101,0,0,0,0,0,0,0,46,10,0,0,0,0,0,0,37,115,50,45,100,32,101,110,99,111,100,105,110,103,0,0,99,111,117,110,116,60,48,120,52,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,37,108,117,58,32,83,97,109,112,108,101,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,67,73,69,32,76,42,97,42,98,42,45,62,82,71,66,32,99,111,110,118,101,114,115,105,111,110,32,115,116,97,116,101,46,0,0,102,111,114,32,115,116,114,105,112,32,97,114,114,97,121,0,73,110,118,97,108,105,100,32,89,67,98,67,114,32,115,117,98,115,97,109,112,108,105,110,103,32,40,37,100,120,37,100,41,0,0,0,0,0,0,0,83,117,98,106,101,99,116,65,114,101,97,0,0,0,0,0,73,110,116,101,103,101,114,32,111,118,101,114,102,108,111,119,0,0,0,0,0,0,0,0,32,32,71,114,111,117,112,32,51,32,79,112,116,105,111,110,115,58,0,0,0,0,0,0,65,116,116,101,109,112,116,32,116,111,32,119,114,105,116,101,32,118,97,108,117,101,32,108,97,114,103,101,114,32,116,104,97,110,32,48,120,70,70,70,70,70,70,70,70,32,105,110,32,67,108,97,115,115,105,99,32,84,73,70,70,32,102,105,108,101,46,0,0,0,0,0,37,115,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,40,84,73,70,70,32,115,116,114,117,99,116,117,114,101,41,0,0,0,0,0,0,103,116,84,105,108,101,83,101,112,97,114,97,116,101,0,0,70,97,105,108,101,100,32,116,111,32,97,108,108,111,99,97,116,101,32,102,105,101,108,100,115,32,97,114,114,97,121,0,115,105,122,101,62,48,0,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,99,111,110,116,105,103,117,111,117,115,32,100,97,116,97,32,119,105,116,104,32,37,115,61,37,100,44,32,97,110,100,32,37,115,61,37,100,32,97,110,100,32,66,105,116,115,47,83,97,109,112,108,101,61,37,100,0,0,70,111,99,97,108,76,101,110,103,116,104,0,0,0,0,0,37,115,117,110,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,0,0,0,0,0,69,114,114,111,114,32,119,114,105,116,105,110,103,32,84,73,70,70,32,104,101,97,100,101,114,0,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,116,105,108,101,32,98,117,102,102,101,114,0,0,0,0,0,0,0,0,82,101,103,105,115,116,101,114,105,110,103,32,97,110,111,110,121,109,111,117,115,32,102,105,101,108,100,32,119,105,116,104,32,116,97,103,32,37,100,32,40,48,120,37,120,41,32,102,97,105,108,101,100,0,0,0,70,108,97,115,104,0,0,0,32,32,71,114,111,117,112,32,52,32,79,112,116,105,111,110,115,58,0,0,0,0,0,0,69,114,114,111,114,32,119,114,105,116,105,110,103,32,83,117,98,73,70,68,32,100,105,114,101,99,116,111,114,121,32,108,105,110,107,0,0,0,0,0,103,116,83,116,114,105,112,83,101,112,97,114,97,116,101,0,102,111,114,32,99,104,111,112,112,101,100,32,34,83,116,114,105,112,79,102,102,115,101,116,115,34,32,97,114,114,97,121,0,0,0,0,0,0,0,0,76,105,103,104,116,83,111,117,114,99,101,0,0,0,0,0,83,111,114,114,121,44,32,114,101,113,117,101,115,116,101,100,32,99,111,109,112,114,101,115,115,105,111,110,32,109,101,116,104,111,100,32,105,115,32,110,111,116,32,99,111,110,102,105,103,117,114,101,100,0,0,0,32,0,0,0,0,0,0,0,77,101,116,101,114,105,110,103,77,111,100,101,0,0,0,0,73,79,32,101,114,114,111,114,32,119,114,105,116,105,110,103,32,100,105,114,101,99,116,111,114,121,0,0,0,0,0,0,73,110,116,101,103,101,114,32,111,118,101,114,102,108,111,119,32,105,110,32,37,115,0,0,102,111,114,32,99,104,111,112,112,101,100,32,34,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,34,32,97,114,114,97,121,0,0,0,0,0,84,97,103,32,0,0,0,0,116,105,102,95,100,105,114,46,99,0,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,71,114,111,117,112,32,51,47,52,32,114,101,102,101,114,101,110,99,101,32,108,105,110,101,0,0,0,83,117,98,106,101,99,116,68,105,115,116,97,110,99,101,0,110,97,60,110,100,105,114,0,105,109,103,45,62,85,97,84,111,65,97,61,61,78,85,76,76,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,32,99,111,100,101,0,0,0,0,0,37,115,58,32,67,97,110,110,111,116,32,109,111,100,105,102,121,32,116,97,103,32,34,37,115,34,32,119,104,105,108,101,32,119,114,105,116,105,110,103,0,0,0,0,0,0,0,0,80,114,101,100,105,99,116,111,114,0,0,0,0,0,0,0,102,111,114,32,71,114,111,117,112,32,51,47,52,32,114,117,110,32,97,114,114,97,121,115,0,0,0,0,0,0,0,0,77,97,120,65,112,101,114,116,117,114,101,86,97,108,117,101,0,0,0,0,0,0,0,0,77,97,120,105,109,117,109,32,84,73,70,70,32,102,105,108,101,32,115,105,122,101,32,101,120,99,101,101,100,101,100,0,117,110,107,110,111,119,110,32,99,111,109,112,114,101,115,115,105,111,110,32,109,101,116,104,111,100,0,0,0,0,0,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,77,101,114,103,105,110,103,32,68,101,102,108,97,116,101,32,99,111,100,101,99,45,115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,0,0,0,0,78,111,116,32,101,110,111,117,103,104,0,0,0,0,0,0,37,115,58,32,85,110,107,110,111,119,110,32,37,115,116,97,103,32,37,117,0,0,0,0,115,112,45,62,118,103,101,116,112,97,114,101,110,116,32,33,61,32,78,85,76,76,0,0,77,101,114,103,105,110,103,32,80,114,101,100,105,99,116,111,114,32,99,111,100,101,99,45,115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,0,0,82,111,119,32,112,105,120,101,108,115,32,105,110,116,101,103,101,114,32,111,118,101,114,102,108,111,119,32,40,114,111,119,112,105,120,101,108,115,32,37,117,41,0,0,0,0,0,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,69,120,112,111,115,117,114,101,66,105,97,115,86,97,108,117,101,0,0,0,0,0,0,0,77,101,114,103,105,110,103,32,80,105,120,97,114,76,111,103,32,99,111,100,101,99,45,115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,0,0,0,78,111,116,32,101,110,111,117,103,104,32,100,97,116,97,32,102,111,114,32,115,99,97,110,108,105,110,101,32,37,108,117,0,0,0,0,0,0,0,0,116,105,102,95,103,101,116,105,109,97,103,101,46,99,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,76,90,87,32,115,116,97,116,101,32,98,108,111,99,107,0,0,0,0,37,115,58,32,73,110,118,97,108,105,100,32,73,110,107,78,97,109,101,115,32,118,97,108,117,101,59,32,101,120,112,101,99,116,105,110,103,32,37,100,32,110,97,109,101,115,44,32,102,111,117,110,100,32,37,100,0,0,0,0,0,0,0,0,77,101,114,103,105,110,103,32,83,71,73,76,111,103,32,99,111,100,101,99,45,115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,0,0,0,0,0,115,112,45,62,118,115,101,116,112,97,114,101,110,116,32,33,61,32,78,85,76,76,0,0,66,105,116,115,47,115,97,109,112,108,101,32,109,117,115,116,32,98,101,32,49,32,102,111,114,32,71,114,111,117,112,32,51,47,52,32,101,110,99,111,100,105,110,103,47,100,101,99,111,100,105,110,103,0,0,0,48,0,0,0,0,0,0,0,66,114,105,103,104,116,110,101,115,115,86,97,108,117,101,0,105,109,103,45,62,66,105,116,100,101,112,116,104,49,54,84,111,56,61,61,78,85,76,76,0,0,0,0,0,0,0,0,84,73,70,70,73,110,105,116,67,67,73,84,84,70,97,120,51,0,0,0,0,0,0,0,67,97,110,110,111,116,32,104,97,110,100,108,101,32,122,101,114,111,32,115,116,114,105,112,32,115,105,122,101,0,0,0,78,111,116,32,101,110,111,117,103,104,32,100,97,116,97,32,102,111,114,32,115,99,97,110,108,105,110,101,32,37,108,117,44,32,101,120,112,101,99,116,101,100,32,97,32,114,101,113,117,101,115,116,32,102,111,114,32,97,116,32,109,111,115,116,32,37,108,108,100,32,98,121,116,101,115,44,32,103,111,116,32,97,32,114,101,113,117,101,115,116,32,102,111,114,32,37,108,108,100,32,98,121,116,101,115,0,0,0,0,0,0,0,84,73,70,70,83,101,116,70,105,101,108,100,0,0,0,0,80,97,99,107,66,105,116,115,0,0,0,0,0,0,0,0,37,117,32,40,48,120,37,120,41,10,0,0,0,0,0,0,115,112,32,33,61,32,78,85,76,76,0,0,0,0,0,0,111,45,62,102,105,101,108,100,95,112,97,115,115,99,111,117,110,116,61,61,49,0,0,0,65,112,101,114,116,117,114,101,86,97,108,117,101,0,0,0,69,114,114,111,114,32,102,101,116,99,104,105,110,103,32,100,105,114,101,99,116,111,114,121,32,108,105,110,107,0,0,0,82,101,97,100,32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,44,32,115,116,114,105,112,32,37,108,117,59,32,103,111,116,32,37,108,108,117,32,98,121,116,101,115,44,32,101,120,112,101,99,116,101,100,32,37,108,108,117,0,0,0,0,116,105,108,101,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,89,67,98,67,114,45,62,82,71,66,32,99,111,110,118,101,114,115,105,111,110,32,115,116,97,116,101,0,0,0,0,0,0,0,0,67,97,110,110,111,116,32,104,97,110,100,108,101,32,122,101,114,111,32,116,105,108,101,32,115,105,122,101,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,34,84,114,97,110,115,102,101,114,70,117,110,99,116,105,111,110,34,32,116,97,103,0,0,0,0,0,37,115,58,32,66,97,100,32,118,97,108,117,101,32,37,117,32,102,111,114,32,34,37,115,34,32,116,97,103,0,0,0,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,112,114,101,100,105,99,116,111,114,32,0,0,0,0,0,0,0,37,115,58,32,0,0,0,0,83,71,73,76,111,103,69,110,99,111,100,101,0,0,0,0,116,112,97,114,109,32,60,32,57,0,0,0,0,0,0,0,111,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,84,73,70,70,95,86,65,82,73,65,66,76,69,50,0,0,0,0,0,0,83,104,117,116,116,101,114,83,112,101,101,100,86,97,108,117,101,0,0,0,0,0,0,0,37,108,117,58,32,68,101,112,116,104,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,0,0,0,0,0,0,0,82,101,97,100,32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,59,32,103,111,116,32,37,108,108,117,32,98,121,116,101,115,44,32,101,120,112,101,99,116,101,100,32,37,108,108,117,0,0,0,0,0,0,0,67,97,110,110,111,116,32,104,97,110,100,108,101,32,122,101,114,111,32,115,99,97,110,108,105,110,101,32,115,105,122,101,0,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,116,100,95,115,97,109,112,108,101,115,112,101,114,112,105,120,101,108,32,118,97,108,117,101,0,0,0,0,0,0,0,0,99,117,115,116,111,109,32,116,97,103,32,98,105,110,97,114,121,32,111,98,106,101,99,116,0,0,0,0,0,0,0,0,104,111,114,105,122,111,110,116,97,108,32,100,105,102,102,101,114,101,110,99,105,110,103,32,0,0,0,0,0,0,0,0,83,71,73,76,111,103,68,97,116,97,70,109,116,0,0,0,115,112,32,33,61,32,48,0,111,45,62,102,105,101,108,100,95,116,121,112,101,61,61,84,73,70,70,95,85,78,68,69,70,73,78,69,68,0,0,0,67,111,109,112,114,101,115,115,101,100,66,105,116,115,80,101,114,80,105,120,101,108,0,0,116,105,102,95,111,112,101,110,46,99,0,0,0,0,0,0,83,101,101,107,32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,44,32,115,116,114,105,112,32,37,108,117,0,0,0,87,114,111,110,103,32,34,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,34,32,102,105,101,108,100,44,32,105,103,110,111,114,105,110,103,32,97,110,100,32,99,97,108,99,117,108,97,116,105,110,103,32,102,114,111,109,32,105,109,97,103,101,108,101,110,103,116,104,0,0,0,0,0,0,0,0,83,101,116,116,105,110,103,32,117,112,32,102,105,101,108,100,32,105,110,102,111,32,102,97,105,108,101,100,0,0,0,0,77,105,115,115,105,110,103,32,110,101,101,100,101,100,32,37,115,32,116,97,103,0,0,0,37,115,58,32,78,117,108,108,32,99,111,117,110,116,32,102,111,114,32,34,37,115,34,32,40,116,121,112,101,32,37,100,44,32,119,114,105,116,101,99,111,117,110,116,32,37,100,44,32,112,97,115,115,99,111,117,110,116,32,37,100,41,0,0,110,111,110,101,32,0,0,0,78,111,116,32,101,110,111,117,103,104,32,100,97,116,97,32,97,116,32,114,111,119,32,37,108,117,32,40,115,104,111,114,116,32,37,108,108,117,32,112,105,120,101,108,115,41,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,115,116,97,116,101,32,98,108,111,99,107,0,0,0,0,0,0,0,0,111,45,62,102,105,101,108,100,95,116,121,112,101,61,61,84,73,70,70,95,76,79,78,71,0,0,0,0,0,0,0,0,67,111,109,112,111,110,101,110,116,115,67,111,110,102,105,103,117,114,97,116,105,111,110,0,82,101,97,100,32,101,114,114,111,114,32,97,116,32,114,111,119,32,37,108,117,44,32,99,111,108,32,37,108,117,44,32,116,105,108,101,32,37,108,117,59,32,103,111,116,32,37,108,108,117,32,98,121,116,101,115,44,32,101,120,112,101,99,116,101,100,32,37,108,108,117,0,66,111,103,117,115,32,34,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,34,32,102,105,101,108,100,44,32,105,103,110,111,114,105,110,103,32,97,110,100,32,99,97,108,99,117,108,97,116,105,110,103,32,102,114,111,109,32,105,109,97,103,101,108,101,110,103,116,104,0,0,0,0,0,0,0,0,85,110,107,110,111,119,110,32,102,105,101,108,100,32,119,105,116,104,32,116,97,103,32,37,100,32,40,48,120,37,120,41,32,101,110,99,111,117,110,116,101,114,101,100,0,0,0,0,102,105,112,45,62,102,105,101,108,100,95,119,114,105,116,101,99,111,117,110,116,61,61,84,73,70,70,95,86,65,82,73,65,66,76,69,50,0,0,0,70,97,105,108,101,100,32,116,111,32,114,101,97,100,32,100,105,114,101,99,116,111,114,121,32,97,116,32,111,102,102,115,101,116,32,37,108,117,0,0,73,109,97,103,101,76,97,121,101,114,0,0,0,0,0,0,32,32,80,114,101,100,105,99,116,111,114,58,32,0,0,0,78,111,32,115,117,112,112,111,114,116,32,102,111,114,32,99,111,110,118,101,114,116,105,110,103,32,117,115,101,114,32,100,97,116,97,32,102,111,114,109,97,116,32,116,111,32,76,111,103,76,117,118,0,0,0,0,83,116,114,105,112,82,111,119,67,111,117,110,116,115,0,0,77,101,114,103,105,110,103,32,99,111,109,109,111,110,32,67,67,73,84,84,32,70,97,120,32,99,111,100,101,99,45,115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,0,0,0,84,56,50,79,112,116,105,111,110,115,0,0,0,0,0,0,111,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,49,0,0,0,68,97,116,101,84,105,109,101,68,105,103,105,116,105,122,101,100,0,0,0,0,0,0,0,73,109,97,103,101,66,97,115,101,67,111,108,111,114,0,0,68,101,99,111,100,101,0,0,82,101,97,100,32,101,114,114,111,114,32,97,116,32,114,111,119,32,37,108,117,44,32,99,111,108,32,37,108,117,59,32,103,111,116,32,37,108,108,117,32,98,121,116,101,115,44,32,101,120,112,101,99,116,101,100,32,37,108,108,117,0,0,0,77,111,100,101,78,117,109,98,101,114,0,0,0,0,0,0,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,105,115,32,109,105,115,115,105,110,103,32,114,101,113,117,105,114,101,100,32,34,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,34,32,102,105,101,108,100,44,32,99,97,108,99,117,108,97,116,105,110,103,32,102,114,111,109,32,105,109,97,103,101,108,101,110,103,116,104,0,0,0,0,0,0,0,0,86,101,114,115,105,111,110,89,101,97,114,0,0,0,0,0,67,111,100,105,110,103,77,101,116,104,111,100,115,0,0,0,70,97,120,80,114,111,102,105,108,101,0,0,0,0,0,0,37,115,58,32,66,97,100,32,102,105,101,108,100,32,116,121,112,101,32,37,100,32,102,111,114,32,34,37,115,34,0,0,80,114,111,102,105,108,101,84,121,112,101,0,0,0,0,0,71,108,111,98,97,108,80,97,114,97,109,101,116,101,114,115,73,70,68,0,0,0,0,0,115,112,45,62,100,101,99,111,100,101,114,111,119,32,33,61,32,78,85,76,76,0,0,0,83,71,73,76,111,103,32,99,111,109,112,114,101,115,115,105,111,110,32,99,97,110,110,111,116,32,104,97,110,100,108,101,32,110,111,110,45,99,111,110,116,105,103,117,111,117,115,32,100,97,116,97,0,0,0,0,73,110,100,101,120,101,100,0,73,110,105,116,67,67,73,84,84,70,97,120,51,0,0,0,80,101,114,83,97,109,112,108,101,0,0,0,0,0,0,0,111,45,62,102,105,101,108,100,95,116,121,112,101,61,61,84,73,70,70,95,83,72,79,82,84,0,0,0,0,0,0,0,68,97,116,101,84,105,109,101,79,114,105,103,105,110,97,108,0,0,0,0,0,0,0,0,67,117,114,114,101,110,116,80,114,101,80,114,111,102,105,108,101,77,97,116,114,105,120,0,67,117,114,114,101,110,116,73,67,67,80,114,111,102,105,108,101,0,0,0,0,0,0,0,83,101,101,107,32,101,114,114,111,114,32,97,116,32,114,111,119,32,37,108,117,44,32,99,111,108,32,37,108,117,44,32,116,105,108,101,32,37,108,117,0,0,0,0,0,0,0,0,37,115,0,0,0,0,0,0,65,115,83,104,111,116,80,114,101,80,114,111,102,105,108,101,77,97,116,114,105,120,0,0,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,0,65,115,83,104,111,116,73,67,67,80,114,111,102,105,108,101,0,0,0,0,0,0,0,0,77,97,115,107,101,100,65,114,101,97,115,0,0,0,0,0,65,99,116,105,118,101,65,114,101,97,0,0,0,0,0,0,37,115,58,32,70,97,105,108,101,100,32,116,111,32,97,108,108,111,99,97,116,101,32,115,112,97,99,101,32,102,111,114,32,108,105,115,116,32,111,102,32,99,117,115,116,111,109,32,118,97,108,117,101,115,0,0,79,114,105,103,105,110,97,108,82,97,119,70,105,108,101,68,97,116,97,0,0,0,0,0,79,114,105,103,105,110,97,108,82,97,119,70,105,108,101,78,97,109,101,0,0,0,0,0,115,112,45,62,100,101,99,111,100,101,112,102,117,110,99,32,33,61,32,78,85,76,76,0,116,100,45,62,116,100,95,112,104,111,116,111,109,101,116,114,105,99,32,61,61,32,80,72,79,84,79,77,69,84,82,73,67,95,76,79,71,76,85,86,0,0,0,0,0,0,0,0,82,97,119,68,97,116,97,85,110,105,113,117,101,73,68,0,71,114,111,117,112,51,79,112,116,105,111,110,115,0,0,0,37,115,32,99,111,109,112,114,101,115,115,105,111,110,32,115,117,112,112,111,114,116,32,105,115,32,110,111,116,32,99,111,110,102,105,103,117,114,101,100,0,0,0,0,0,0,0,0,67,97,108,105,98,114,97,116,105,111,110,73,108,108,117,109,105,110,97,110,116,50,0,0,111,45,62,102,105,101,108,100,95,112,97,115,115,99,111,117,110,116,61,61,48,0,0,0,67,97,108,105,98,114,97,116,105,111,110,73,108,108,117,109,105,110,97,110,116,49,0,0,69,120,105,102,86,101,114,115,105,111,110,0,0,0,0,0,77,97,107,101,114,78,111,116,101,83,97,102,101,116,121,0,67,97,110,32,110,111,116,32,114,101,97,100,32,115,99,97,110,108,105,110,101,115,32,102,114,111,109,32,97,32,116,105,108,101,100,32,105,109,97,103,101,0,0,0,0,0,0,0,78,111,32,34,112,117,116,34,32,114,111,117,116,105,110,101,32,115,101,116,117,112,108,59,32,112,114,111,98,97,98,108,121,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,105,109,97,103,101,32,102,111,114,109,97,116,0,0,0,68,78,71,80,114,105,118,97,116,101,68,97,116,97,0,0,67,111,108,111,114,109,97,112,0,0,0,0,0,0,0,0,83,104,97,100,111,119,83,99,97,108,101,0,0,0,0,0,65,110,116,105,65,108,105,97,115,83,116,114,101,110,103,116,104,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,99,111,100,101,0,0,0,67,104,114,111,109,97,66,108,117,114,82,97,100,105,117,115,0,0,0,0,0,0,0,0,37,115,58,32,83,111,114,114,121,44,32,99,97,110,110,111,116,32,110,101,115,116,32,83,117,98,73,70,68,115,0,0,76,101,110,115,73,110,102,111,0,0,0,0,0,0,0,0,105,110,99,111,114,114,101,99,116,32,108,101,110,103,116,104,32,99,104,101,99,107,0,0,115,116,114,101,97,109,32,101,110,100,0,0,0,0,0,0,67,97,109,101,114,97,83,101,114,105,97,108,78,117,109,98,101,114,0,0,0,0,0,0,40,111,99,99,48,37,114,111,119,115,105,122,101,41,61,61,48,0,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,76,90,87,32,99,111,100,101,32,116,97,98,108,101,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,83,71,73,76,111,103,32,116,114,97,110,115,108,97,116,105,111,110,32,98,117,102,102,101,114,0,0,76,105,110,101,97,114,82,101,115,112,111,110,115,101,76,105,109,105,116,0,0,0,0,0,71,114,111,117,112,52,79,112,116,105,111,110,115,0,0,0,37,100,0,0,0,0,0,0,66,97,121,101,114,71,114,101,101,110,83,112,108,105,116,0,111,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,84,73,70,70,95,86,65,82,73,65,66,76,69,0,0,0,0,0,0,0,66,97,115,101,108,105,110,101,83,104,97,114,112,110,101,115,115,0,0,0,0,0,0,0,79,112,116,111,101,108,101,99,116,114,105,99,67,111,110,118,101,114,115,105,111,110,70,97,99,116,111,114,0,0,0,0,66,97,115,101,108,105,110,101,78,111,105,115,101,0,0,0,67,97,110,32,110,111,116,32,114,101,97,100,32,116,105,108,101,115,32,102,114,111,109,32,97,32,115,116,114,105,112,112,101,100,32,105,109,97,103,101,0,0,0,0,0,0,0,0,105,110,99,111,114,114,101,99,116,32,104,101,97,100,101,114,32,99,104,101,99,107,0,0,78,111,32,34,103,101,116,34,32,114,111,117,116,105,110,101,32,115,101,116,117,112,0,0,66,97,115,101,108,105,110,101,69,120,112,111,115,117,114,101,0,0,0,0,0,0,0,0,83,97,109,112,108,101,115,80,101,114,80,105,120,101,108,32,116,97,103,32,105,115,32,109,105,115,115,105,110,103,44,32,97,112,112,108,121,105,110,103,32,99,111,114,114,101,99,116,32,83,97,109,112,108,101,115,80,101,114,80,105,120,101,108,32,118,97,108,117,101,32,111,102,32,51,0,0,0,0,0,65,115,83,104,111,116,87,104,105,116,101,88,89,0,0,0,65,115,83,104,111,116,78,101,117,116,114,97,108,0,0,0,116,105,102,95,122,105,112,46,99,0,0,0,0,0,0,0,37,115,32,100,97,116,97,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,32,40,37,108,108,117,32,33,61,32,37,108,108,117,41,0,0,65,110,97,108,111,103,66,97,108,97,110,99,101,0,0,0,78,111,110,115,116,97,110,100,97,114,100,32,116,105,108,101,32,108,101,110,103,116,104,32,37,100,44,32,99,111,110,118,101,114,116,32,102,105,108,101,0,0,0,0,0,0,0,0,82,101,100,117,99,116,105,111,110,77,97,116,114,105,120,50,0,0,0,0,0,0,0,0,105,110,99,111,114,114,101,99,116,32,100,97,116,97,32,99,104,101,99,107,0,0,0,0,82,101,100,117,99,116,105,111,110,77,97,116,114,105,120,49,0,0,0,0,0,0,0,0,115,112,45,62,100,101,99,111,100,101,116,105,108,101,32,33,61,32,78,85,76,76,0,0,80,105,120,97,114,76,111,103,32,99,111,109,112,114,101,115,115,105,111,110,32,99,97,110,39,116,32,104,97,110,100,108,101,32,98,105,116,115,32,100,101,112,116,104,47,100,97,116,97,32,102,111,114,109,97,116,32,99,111,109,98,105,110,97,116,105,111,110,32,40,100,101,112,116,104,58,32,37,100,41,0,0,0,0,0,0,0,0,78,111,32,115,117,112,112,111,114,116,32,102,111,114,32,99,111,110,118,101,114,116,105,110,103,32,117,115,101,114,32,100,97,116,97,32,102,111,114,109,97,116,32,116,111,32,76,111,103,76,0,0,0,0,0,0,67,97,109,101,114,97,67,97,108,105,98,114,97,116,105,111,110,50,0,0,0,0,0,0,116,105,102,95,112,114,101,100,105,99,116,46,99,0,0,0,85,110,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,32,40,110,111,116,32,115,117,112,112,111,114,116,101,100,41,32,97,116,32,108,105,110,101,32,37,117,32,111,102,32,37,115,32,37,117,32,40,120,32,37,117,41,0,0,0,0,76,90,77,65,0,0,0,0,67,97,109,101,114,97,67,97,108,105,98,114,97,116,105,111,110,49,0,0,0,0,0,0,116,105,102,95,100,105,114,119,114,105,116,101,46,99,0,0,87,114,105,116,101,32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,0,0,0,0,0,67,111,108,111,114,77,97,116,114,105,120,50,0,0,0,0,116,105,102,95,112,105,120,97,114,108,111,103,46,99,0,0,73,83,79,83,112,101,101,100,82,97,116,105,110,103,115,0,84,101,114,109,105,110,97,116,105,110,103,32,80,97,99,107,66,105,116,115,68,101,99,111,100,101,32,100,117,101,32,116,111,32,108,97,99,107,32,111,102,32,100,97,116,97,46,0,67,111,108,111,114,77,97,116,114,105,120,49,0,0,0,0,78,111,116,32,101,110,111,117,103,104,32,100,97,116,97,32,102,111,114,32,115,99,97,110,108,105,110,101,32,37,108,100,0,0,0,0,0,0,0,0,70,105,108,101,32,110,111,116,32,111,112,101,110,32,102,111,114,32,114,101,97,100,105,110,103,0,0,0,0,0,0,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,105,109,97,103,101,0,0,0,0,0,68,101,102,97,117,108,116,67,114,111,112,83,105,122,101,0,83,97,109,112,108,101,115,80,101,114,80,105,120,101,108,32,116,97,103,32,105,115,32,109,105,115,115,105,110,103,44,32,97,115,115,117,109,105,110,103,32,99,111,114,114,101,99,116,32,83,97,109,112,108,101,115,80,101,114,80,105,120,101,108,32,118,97,108,117,101,32,105,115,32,51,0,0,0,0,0,68,101,102,97,117,108,116,67,114,111,112,79,114,105,103,105,110,0,0,0,0,0,0,0,116,105,102,95,108,122,119,46,99,0,0,0,0,0,0,0,66,101,115,116,81,117,97,108,105,116,121,83,99,97,108,101,0,0,0,0,0,0,0,0,68,101,102,97,117,108,116,83,99,97,108,101,0,0,0,0,78,111,110,115,116,97,110,100,97,114,100,32,116,105,108,101,32,119,105,100,116,104,32,37,100,44,32,99,111,110,118,101,114,116,32,102,105,108,101,0,116,105,102,95,108,117,118,46,99,0,0,0,0,0,0,0,87,104,105,116,101,76,101,118,101,108,0,0,0,0,0,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,116,111,111,32,102,97,114,32,98,97,99,107,0,0,0,66,108,97,99,107,76,101,118,101,108,68,101,108,116,97,86,0,0,0,0,0,0,0,0,34,80,114,101,100,105,99,116,111,114,34,32,118,97,108,117,101,32,37,100,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,85,110,115,117,112,112,111,114,116,101,100,32,98,105,116,115,47,115,97,109,112,108,101,58,32,37,100,0,0,0,0,0,79,108,100,45,115,116,121,108,101,32,76,90,87,32,99,111,100,101,115,44,32,99,111,110,118,101,114,116,32,102,105,108,101,0,0,0,0,0,0,0,116,100,45,62,116,100,95,112,104,111,116,111,109,101,116,114,105,99,32,61,61,32,80,72,79,84,79,77,69,84,82,73,67,95,76,79,71,76,0,0,66,108,97,99,107,76,101,118,101,108,68,101,108,116,97,72,0,0,0,0,0,0,0,0,116,101,45,62,114,117,110,108,101,110,32,61,61,32,54,52,42,40,115,112,97,110,62,62,54,41,0,0,0,0,0,0,83,71,73,76,111,103,50,52,0,0,0,0,0,0,0,0,66,108,97,99,107,76,101,118,101,108,0,0,0,0,0,0,111,45,62,102,105,101,108,100,95,116,121,112,101,61,61,84,73,70,70,95,65,83,67,73,73,0,0,0,0,0,0,0,77,97,120,105,109,117,109,32,84,73,70,70,32,102,105,108,101,32,115,105,122,101,32,101,120,99,101,101,100,101,100,0,66,108,97,99,107,76,101,118,101,108,82,101,112,101,97,116,68,105,109,0,0,0,0,0,83,112,101,99,116,114,97,108,83,101,110,115,105,116,105,118,105,116,121,0,0,0,0,0,76,105,110,101,97,114,105,122,97,116,105,111,110,84,97,98,108,101,0,0,0,0,0,0,40,99,99,32,38,32,55,41,32,61,61,32,48,0,0,0,79,117,116,32,111,102,32,109,101,109,111,114,121,32,102,111,114,32,99,111,108,111,114,109,97,112,32,99,111,112,121,0,67,70,65,76,97,121,111,117,116,0,0,0,0,0,0,0,116,105,102,95,102,97,120,51,46,99,0,0,0,0,0,0,66,105,116,115,80,101,114,83,97,109,112,108,101,32,116,97,103,32,105,115,32,109,105,115,115,105,110,103,44,32,97,115,115,117,109,105,110,103,32,56,32,98,105,116,115,32,112,101,114,32,115,97,109,112,108,101,0,0,0,0,0,0,0,0,116,105,102,95,100,117,109,112,109,111,100,101,46,99,0,0,67,70,65,80,108,97,110,101,67,111,108,111,114,0,0,0,76,111,99,97,108,105,122,101,100,67,97,109,101,114,97,77,111,100,101,108,0,0,0,0,85,110,105,113,117,101,67,97,109,101,114,97,77,111,100,101,108,0,0,0,0,0,0,0,116,118,45,62,99,111,117,110,116,32,61,61,32,49,0,0,76,90,87,0,0,0,0,0,68,78,71,66,97,99,107,119,97,114,100,86,101,114,115,105,111,110,0,0,0,0,0,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,99,111,100,101,0,0,0,68,78,71,86,101,114,115,105,111,110,0,0,0,0,0,0,70,108,111,97,116,105,110,103,32,112,111,105,110,116,32,34,80,114,101,100,105,99,116,111,114,34,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,119,105,116,104,32,37,100,32,100,97,116,97,32,102,111,114,109,97,116,0,0,0,0,115,116,114,105,100,101,32,37,108,117,32,105,115,32,110,111,116,32,97,32,109,117,108,116,105,112,108,101,32,111,102,32,115,97,109,112,108,101,32,99,111,117,110,116,44,32,37,108,117,44,32,100,97,116,97,32,116,114,117,110,99,97,116,101,100,46,0,0,0,0,0,0,66,111,103,117,115,32,101,110,99,111,100,105,110,103,44,32,108,111,111,112,32,105,110,32,116,104,101,32,99,111,100,101,32,116,97,98,108,101,59,32,115,99,97,110,108,105,110,101,32,37,100,0,0,0,0,0,115,112,45,62,116,98,117,102,108,101,110,32,62,61,32,110,112,105,120,101,108,115,0,0,73,110,116,101,114,111,112,101,114,97,98,105,108,105,116,121,73,70,68,79,102,102,115,101,116,0,0,0,0,0,0,0,70,114,97,99,116,105,111,110,97,108,32,115,99,97,110,108,105,110,101,115,32,99,97,110,110,111,116,32,98,101,32,119,114,105,116,116,101,110,0,0,83,71,73,76,111,103,0,0,83,116,111,78,105,116,115,0,69,114,114,111,114,32,102,108,117,115,104,105,110,103,32,100,97,116,97,32,98,101,102,111,114,101,32,100,105,114,101,99,116,111,114,121,32,119,114,105,116,101,0,0,0,0,0,0,83,101,101,107,32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,0,0,0,0,0,0,69,114,114,111,114,32,102,101,116,99,104,105,110,103,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,0,0,70,97,120,68,99,115,0,0,69,120,112,111,115,117,114,101,80,114,111,103,114,97,109,0,70,97,120,82,101,99,118,84,105,109,101,0,0,0,0,0,40,99,99,32,38,32,51,41,32,61,61,32,48,0,0,0,115,116,114,105,112,0,0,0,77,105,115,115,105,110,103,32,114,101,113,117,105,114,101,100,32,34,67,111,108,111,114,109,97,112,34,32,116,97,103,0,70,97,120,83,117,98,65,100,100,114,101,115,115,0,0,0,80,104,111,116,111,109,101,116,114,105,99,32,116,97,103,32,118,97,108,117,101,32,97,115,115,117,109,101,100,32,105,110,99,111,114,114,101,99,116,44,32,97,115,115,117,109,105,110,103,32,100,97,116,97,32,105,115,32,89,67,98,67,114,32,105,110,115,116,101,97,100,32,111,102,32,82,71,66,0,0,70,97,120,82,101,99,118,80,97,114,97,109,115,0,0,0,70,97,105,108,101,100,32,116,111,32,97,108,108,111,99,97,116,101,32,109,101,109,111,114,121,32,102,111,114,32,37,115,32,40,37,108,100,32,101,108,101,109,101,110,116,115,32,111,102,32,37,108,100,32,98,121,116,101,115,32,101,97,99,104,41,0,0,0,0,0,0,0,71,80,83,73,70,68,79,102,102,115,101,116,0,0,0,0,73,67,67,32,80,114,111,102,105,108,101,0,0,0,0,0,68,111,116,82,97,110,103,101,0,0,0,0,0,0,0,0,69,88,73,70,73,70,68,79,102,102,115,101,116,0,0,0,105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,32,99,111,100,101,0,0,0,0,0,78,111,116,32,101,110,111,117,103,104,32,100,97,116,97,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,32,40,115,104,111,114,116,32,37,108,117,32,98,121,116,101,115,41,0,0,0,0,0,0,0,80,104,111,116,111,115,104,111,112,0,0,0,0,0,0,0,72,111,114,105,122,111,110,116,97,108,32,100,105,102,102,101,114,101,110,99,105,110,103,32,34,80,114,101,100,105,99,116,111,114,34,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,119,105,116,104,32,37,100,45,98,105,116,32,115,97,109,112,108,101,115,0,0,0,78,111,116,32,101,110,111,117,103,104,32,100,97,116,97,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,32,40,115,104,111,114,116,32,37,108,117,32,98,121,116,101,115,41,0,0,0,0,0,0,0,78,111,116,32,101,110,111,117,103,104,32,100,97,116,97,32,97,116,32,115,99,97,110,108,105,110,101,32,37,100,32,40,115,104,111,114,116,32,37,108,108,117,32,98,121,116,101,115,41,0,0,0,0,0,0,0,115,112,32,33,61,32,78,85,76,76,0,0,0,0,0,0,37,115,58,32,67,97,110,110,111,116,32,111,112,101,110,0,82,105,99,104,84,73,70,70,73,80,84,67,0,0,0,0,108,101,110,103,116,104,32,60,32,57,0,0,0,0,0,0,80,105,120,97,114,76,111,103,0,0,0,0,0,0,0,0,67,111,112,121,114,105,103,104,116,0,0,0,0,0,0,0,69,114,114,111,114,32,112,111,115,116,45,101,110,99,111,100,105,110,103,32,98,101,102,111,114,101,32,100,105,114,101,99,116,111,114,121,32,119,114,105,116,101,0,0,0,0,0,0,116,105,102,95,119,114,105,116,101,46,99,0,0,0,0,0,77,97,116,114,105,120,87,111,114,108,100,84,111,67,97,109,101,114,97,0,0,0,0,0,37,108,117,58,32,82,111,119,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,0,70,78,117,109,98,101,114,0,77,97,116,114,105,120,87,111,114,108,100,84,111,83,99,114,101,101,110,0,0,0,0,0,40,99,99,32,37,32,51,41,32,61,61,32,48,0,0,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,105,109,97,103,101,32,119,105,116,104,32,37,115,61,37,100,0,0,70,105,101,108,100,79,102,86,105,101,119,67,111,116,97,110,103,101,110,116,0,0,0,0,80,104,111,116,111,109,101,116,114,105,99,32,116,97,103,32,105,115,32,109,105,115,115,105,110,103,44,32,97,115,115,117,109,105,110,103,32,100,97,116,97,32,105,115,32,89,67,98,67,114,0,0,0,0,0,0,84,101,120,116,117,114,101,87,114,97,112,77,111,100,101,115,0,0,0,0,0,0,0,0,84,73,70,70,78,117,109,98,101,114,79,102,83,116,114,105,112,115,0,0,0,0,0,0,84,101,120,116,117,114,101,70,111,114,109,97,116,0,0,0,73,109,97,103,101,70,117,108,108,76,101,110,103,116,104,0,85,110,107,110,111,119,110,0,73,109,97,103,101,70,117,108,108,87,105,100,116,104,0,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,115,32,115,101,116,0,0,0,68,101,99,111,100,105,110,103,32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,44,32,37,115,0,0,0,0,0,0,84,105,108,101,68,101,112,116,104,0,0,0,0,0,0,0,40,99,99,37,115,116,114,105,100,101,41,61,61,48,0,0,68,101,99,111,100,105,110,103,32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,44,32,37,115,0,0,0,0,0,0,115,32,61,61,32,48,0,0,73,109,97,103,101,68,101,112,116,104,0,0,0,0,0,0,66,97,100,32,99,111,100,101,32,119,111,114,100,32,97,116,32,108,105,110,101,32,37,117,32,111,102,32,37,115,32,37,117,32,40,120,32,37,117,41,0,0,0,0,0,0,0,0,65,100,111,98,101,68,101,102,108,97,116,101,0,0,0,0,68,97,116,97,84,121,112,101,0,0,0,0,0,0,0,0,37,115,58,32,67,97,110,32,110,111,116,32,119,114,105,116,101,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,101,110,116,114,121,46,0,116,100,45,62,116,100,95,110,115,116,114,105,112,115,32,62,32,48,0,0,0,0,0,0,77,97,116,116,101,105,110,103,0,0,0,0,0,0,0,0,69,120,112,111,115,117,114,101,84,105,109,101,0,0,0,0,88,77,76,80,97,99,107,101,116,0,0,0,0,0,0,0,40,99,99,32,38,32,49,41,32,61,61,32,48,0,0,0,80,108,97,110,97,114,99,111,110,102,105,103,117,114,97,116,105,111,110,0,0,0,0,0,82,101,102,101,114,101,110,99,101,66,108,97,99,107,87,104,105,116,101,0,0,0,0,0,117,110,107,110,111,119,110,32,116,97,103,110,97,109,101,0,89,67,98,67,114,80,111,115,105,116,105,111,110,105,110,103,0,0,0,0,0,0,0,0,89,67,98,67,114,83,117,98,115,97,109,112,108,105,110,103,0,0,0,0,0,0,0,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,105,109,97,103,101,115,32,119,105,116,104,32,37,100,45,98,105,116,32,115,97,109,112,108,101,115,0,0,0,0,0,0,0,0,95,84,73,70,70,83,101,116,117,112,70,105,101,108,100,115,0,0,0,0,0,0,0,0,89,67,98,67,114,67,111,101,102,102,105,99,105,101,110,116,115,0,0,0,0,0,0,0,89,67,108,105,112,80,97,116,104,85,110,105,116,115,0,0,105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,115,32,115,101,116,0,0,0,0,0,115,112,45,62,115,116,97,116,101,32,61,61,32,90,83,84,65,84,69,95,73,78,73,84,95,68,69,67,79,68,69,0,88,67,108,105,112,80,97,116,104,85,110,105,116,115,0,0,40,99,99,37,40,50,42,115,116,114,105,100,101,41,41,61,61,48,0,0,0,0,0,0,37,115,0,0,0,0,0,0,87,114,111,110,103,32,108,101,110,103,116,104,32,111,102,32,100,101,99,111,100,101,100,32,115,116,114,105,110,103,58,32,100,97,116,97,32,112,114,111,98,97,98,108,121,32,99,111,114,114,117,112,116,101,100,32,97,116,32,115,99,97,110,108,105,110,101,32,37,100,0,0,88,89,90,44,32,76,117,118,0,0,0,0,0,0,0,0,67,108,105,112,80,97,116,104,0,0,0,0,0,0,0,0,80,114,101,109,97,116,117,114,101,32,69,79,70,32,97,116,32,108,105,110,101,32,37,117,32,111,102,32,37,115,32,37,117,32,40,120,32,37,117,41,0,0,0,0,0,0,0,0,68,101,102,108,97,116,101,0,83,77,97,120,83,97,109,112,108,101,86,97,108,117,101,0,86,97,108,117,101,32,101,120,99,101,101,100,115,32,51,50,98,105,116,32,114,97,110,103,101,32,111,102,32,111,117,116,112,117,116,32,116,121,112,101,46,0,0,0,0,0,0,0,83,77,105,110,83,97,109,112,108,101,86,97,108,117,101,0,84,97,103,32,37,100,0,0,83,97,109,112,108,101,70,111,114,109,97,116,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,100,97,116,97,32,98,117,102,102,101,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,0,0,0,0,0,0,0,0,69,120,116,114,97,83,97,109,112,108,101,115,0,0,0,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,76,111,103,76,117,118,32,105,109,97,103,101,115,32,119,105,116,104,32,37,115,61,37,100,0,0,112,115,101,117,100,111,45,0,83,116,114,105,112,79,102,102,115,101,116,115,0,0,0,0,67,111,109,112,114,101,115,115,105,111,110,0,0,0,0,0,84,97,114,103,101,116,80,114])
.concat([105,110,116,101,114,0,0,0,68,111,116,82,97,110,103,101,0,0,0,0,0,0,0,0,78,117,109,98,101,114,79,102,73,110,107,115,0,0,0,0,73,110,107,78,97,109,101,115,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,99,111,100,101,32,45,45,32,109,105,115,115,105,110,103,32,101,110,100,45,111,102,45,98,108,111,99,107,0,0,0,0,37,115,0,0,0,0,0,0,73,110,107,83,101,116,0,0,40,99,99,37,40,52,42,115,116,114,105,100,101,41,41,61,61,48,0,0,0,0,0,0,49,46,50,46,53,0,0,0,67,111,114,114,117,112,116,101,100,32,76,90,87,32,116,97,98,108,101,32,97,116,32,115,99,97,110,108,105,110,101,32,37,100,0,0,0,0,0,0,89,44,32,76,0,0,0,0,83,117,98,73,70,68,0,0,115,116,114,105,112,0,0,0,73,83,79,32,74,66,73,71,0,0,0,0,0,0,0,0,84,105,108,101,66,121,116,101,67,111,117,110,116,115,0,0,102,111,114,32,102,105,101,108,100,32,98,117,102,102,101,114,46,0,0,0,0,0,0,0,67,111,109,112,114,101,115,115,105,111,110,32,115,99,104,101,109,101,32,37,117,32,37,115,32,101,110,99,111,100,105,110,103,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,0,0,0,84,105,108,101,79,102,102,115,101,116,115,0,0,0,0,0,84,105,108,101,76,101,110,103,116,104,0,0,0,0,0,0,116,105,102,95,114,101,97,100,46,99,0,0,0,0,0,0,40,116,111,102,102,95,116,41,116,105,102,45,62,116,105,102,95,115,105,122,101,61,61,110,0,0,0,0,0,0,0,0,83,111,114,114,121,44,32,76,111,103,76,117,118,32,100,97,116,97,32,109,117,115,116,32,104,97,118,101,32,37,115,61,37,100,32,111,114,32,37,100,0,0,0,0,0,0,0,0,84,105,108,101,87,105,100,116,104,0,0,0,0,0,0,0,84,105,108,101,79,102,102,115,101,116,115,0,0,0,0,0,72,97,108,102,116,111,110,101,72,105,110,116,115,0,0,0,67,111,108,111,114,77,97,112,0,0,0,0,0,0,0,0,80,114,105,109,97,114,121,67,104,114,111,109,97,116,105,99,105,116,105,101,115,0,0,0,37,115,58,32,73,110,118,97,108,105,100,32,37,115,116,97,103,32,34,37,115,34,32,40,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,99,111,100,101,99,41,0,87,104,105,116,101,80,111,105,110,116,0,0,0,0,0,0,105,110,118,97,108,105,100,32,98,105,116,32,108,101,110,103,116,104,32,114,101,112,101,97,116,0,0,0,0,0,0,0,49,46,50,46,53,0,0,0,72,111,115,116,67,111,109,112,117,116,101,114,0,0,0,0,115,112,45,62,101,110,99,111,100,101,114,111,119,32,33,61,32,78,85,76,76,0,0,0,80,105,120,97,114,76,111,103,32,99,111,109,112,114,101,115,115,105,111,110,32,99,97,110,39,116,32,104,97,110,100,108,101,32,37,100,32,98,105,116,32,108,105,110,101,97,114,32,101,110,99,111,100,105,110,103,115,0,0,0,0,0,0,0,76,90,87,68,101,99,111,100,101,58,32,67,111,114,114,117,112,116,101,100,32,76,90,87,32,116,97,98,108,101,32,97,116,32,115,99,97,110,108,105,110,101,32,37,100,0,0,0,83,71,73,76,111,103,32,99,111,109,112,114,101,115,115,105,111,110,32,115,117,112,112,111,114,116,101,100,32,111,110,108,121,32,102,111,114,32,37,115,44,32,111,114,32,114,97,119,32,100,97,116,97,0,0,0,65,114,116,105,115,116,0,0,116,105,108,101,0,0,0,0,67,67,73,84,84,32,71,114,111,117,112,32,52,0,0,0,68,97,116,101,84,105,109,101,0,0,0,0,0,0,0,0,37,115,58,32,67,111,117,108,100,32,110,111,116,32,102,105,110,100,32,116,97,103,32,37,100,46,0,0,0,0,0,0,37,115,32,37,115,32,101,110,99,111,100,105,110,103,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,0,0,0,0,0,0,83,111,102,116,119,97,114,101,0,0,0,0,0,0,0,0,84,114,97,110,115,102,101,114,70,117,110,99,116,105,111,110,0,0,0,0,0,0,0,0,40,116,105,102,45,62,116,105,102,95,102,108,97,103,115,38,84,73,70,70,95,78,79,82,69,65,68,82,65,87,41,61,61,48,0,0,0,0,0,0,78,111,116,32,97,32,84,73,70,70,32,102,105,108,101,44,32,98,97,100,32,66,105,103,84,73,70,70,32,117,110,117,115,101,100,32,37,100,32,40,48,120,37,120,41,0,0,0,67,111,109,112,114,101,115,115,105,111,110,0,0,0,0,0,67,111,108,111,114,82,101,115,112,111,110,115,101,85,110,105,116,0,0,0,0,0,0,0,115,116,114,105,112,115,0,0,80,97,103,101,78,117,109,98,101,114,0,0,0,0,0,0,82,101,115,111,108,117,116,105,111,110,85,110,105,116,0,0,71,114,97,121,82,101,115,112,111,110,115,101,67,117,114,118,101,0,0,0,0,0,0,0,95,84,73,70,70,86,71,101,116,70,105,101,108,100,0,0,84,97,103,32,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,7,0,0,0,15,0,0,0,31,0,0,0,63,0,0,0,127,0,0,0,255,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,8,9,9,10,10,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,0,1,2,3,4,4,5,5,6,6,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,16,17,18,18,19,19,20,20,20,20,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,115,119,97,98,72,111,114,65,99,99,51,50,0,0,0,0,115,119,97,98,72,111,114,65,99,99,49,54,0,0,0,0,112,117,116,115,112,97,110,0,104,111,114,68,105,102,102,56,0,0,0,0,0,0,0,0,104,111,114,68,105,102,102,51,50,0,0,0,0,0,0,0,104,111,114,68,105,102,102,49,54,0,0,0,0,0,0,0,104,111,114,65,99,99,56,0,104,111,114,65,99,99,51,50,0,0,0,0,0,0,0,0,104,111,114,65,99,99,49,54,0,0,0,0,0,0,0,0,102,112,68,105,102,102,0,0,102,112,65,99,99,0,0,0,95,84,73,70,70,86,83,101,116,70,105,101,108,100,0,0,95,84,73,70,70,83,119,97,98,54,52,66,105,116,68,97,116,97,0,0,0,0,0,0,95,84,73,70,70,83,119,97,98,51,50,66,105,116,68,97,116,97,0,0,0,0,0,0,95,84,73,70,70,83,119,97,98,50,52,66,105,116,68,97,116,97,0,0,0,0,0,0,95,84,73,70,70,83,119,97,98,49,54,66,105,116,68,97,116,97,0,0,0,0,0,0,95,84,73,70,70,70,97,120,51,102,105,108,108,114,117,110,115,0,0,0,0,0,0,0,90,73,80,83,101,116,117,112,69,110,99,111,100,101,0,0,90,73,80,83,101,116,117,112,68,101,99,111,100,101,0,0,90,73,80,80,114,101,69,110,99,111,100,101,0,0,0,0,90,73,80,80,114,101,68,101,99,111,100,101,0,0,0,0,90,73,80,69,110,99,111,100,101,0,0,0,0,0,0,0,90,73,80,68,101,99,111,100,101,0,0,0,0,0,0,0,90,73,80,67,108,101,97,110,117,112,0,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,83,117,98,105,102,100,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,68,97,116,97,0,0,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,83,115,104,111,114,116,65,114,114,97,121,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,83,108,111,110,103,65,114,114,97,121,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,83,108,111,110,103,56,65,114,114,97,121,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,83,104,111,114,116,65,114,114,97,121,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,82,97,116,105,111,110,97,108,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,76,111,110,103,65,114,114,97,121,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,76,111,110,103,56,65,114,114,97,121,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,73,102,100,65,114,114,97,121,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,73,102,100,56,65,114,114,97,121,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,70,108,111,97,116,65,114,114,97,121,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,68,111,117,98,108,101,65,114,114,97,121,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,83,101,99,0,0,0,84,73,70,70,82,101,97,100,82,97,119,84,105,108,101,49,0,0,0,0,0,0,0,0,84,73,70,70,82,101,97,100,82,97,119,83,116,114,105,112,49,0,0,0,0,0,0,0,84,73,70,70,82,101,97,100,68,105,114,101,99,116,111,114,121,0,0,0,0,0,0,0,84,73,70,70,82,101,97,100,68,105,114,69,110,116,114,121,79,117,116,112,117,116,69,114,114,0,0,0,0,0,0,0,84,73,70,70,82,101,97,100,68,105,114,69,110,116,114,121,68,97,116,97,0,0,0,0,84,73,70,70,82,101,97,100,68,105,114,69,110,116,114,121,65,114,114,97,121,0,0,0,84,73,70,70,82,101,97,100,66,117,102,102,101,114,83,101,116,117,112,0,0,0,0,0,84,73,70,70,80,114,101,100,105,99,116,111,114,73,110,105,116,0,0,0,0,0,0,0,84,73,70,70,80,114,101,100,105,99,116,111,114,67,108,101,97,110,117,112,0,0,0,0,84,73,70,70,73,110,105,116,90,73,80,0,0,0,0,0,84,73,70,70,73,110,105,116,83,71,73,76,111,103,0,0,84,73,70,70,73,110,105,116,80,105,120,97,114,76,111,103,0,0,0,0,0,0,0,0,84,73,70,70,73,110,105,116,76,90,87,0,0,0,0,0,84,73,70,70,70,101,116,99,104,68,105,114,101,99,116,111,114,121,0,0,0,0,0,0,84,73,70,70,67,108,105,101,110,116,79,112,101,110,0,0,84,73,70,70,65,112,112,101,110,100,84,111,83,116,114,105,112,0,0,0,0,0,0,0,80,114,101,100,105,99,116,111,114,86,83,101,116,70,105,101,108,100,0,0,0,0,0,0,80,114,101,100,105,99,116,111,114,86,71,101,116,70,105,101,108,100,0,0,0,0,0,0,80,114,101,100,105,99,116,111,114,69,110,99,111,100,101,84,105,108,101,0,0,0,0,0,80,114,101,100,105,99,116,111,114,69,110,99,111,100,101,82,111,119,0,0,0,0,0,0,80,114,101,100,105,99,116,111,114,68,101,99,111,100,101,84,105,108,101,0,0,0,0,0,80,114,101,100,105,99,116,111,114,68,101,99,111,100,101,82,111,119,0,0,0,0,0,0,80,105,120,97,114,76,111,103,83,101,116,117,112,69,110,99,111,100,101,0,0,0,0,0,80,105,120,97,114,76,111,103,83,101,116,117,112,68,101,99,111,100,101,0,0,0,0,0,80,105,120,97,114,76,111,103,80,114,101,69,110,99,111,100,101,0,0,0,0,0,0,0,80,105,120,97,114,76,111,103,80,114,101,68,101,99,111,100,101,0,0,0,0,0,0,0,80,105,120,97,114,76,111,103,68,101,99,111,100,101,0,0,80,105,120,97,114,76,111,103,67,108,101,97,110,117,112,0,76,111,103,76,117,118,73,110,105,116,83,116,97,116,101,0,76,111,103,76,117,118,69,110,99,111,100,101,84,105,108,101,0,0,0,0,0,0,0,0,76,111,103,76,117,118,69,110,99,111,100,101,83,116,114,105,112,0,0,0,0,0,0,0,76,111,103,76,117,118,69,110,99,111,100,101,51,50,0,0,76,111,103,76,117,118,69,110,99,111,100,101,50,52,0,0,76,111,103,76,117,118,68,101,99,111,100,101,84,105,108,101,0,0,0,0,0,0,0,0,76,111,103,76,117,118,68,101,99,111,100,101,83,116,114,105,112,0,0,0,0,0,0,0,76,111,103,76,117,118,68,101,99,111,100,101,51,50,0,0,76,111,103,76,117,118,68,101,99,111,100,101,50,52,0,0,76,111,103,76,117,118,67,108,101,97,110,117,112,0,0,0,76,111,103,76,49,54,73,110,105,116,83,116,97,116,101,0,76,111,103,76,49,54,69,110,99,111,100,101,0,0,0,0,76,111,103,76,49,54,68,101,99,111,100,101,0,0,0,0,76,90,87,83,101,116,117,112,69,110,99,111,100,101,0,0,76,90,87,83,101,116,117,112,68,101,99,111,100,101,0,0,76,90,87,80,114,101,69,110,99,111,100,101,0,0,0,0,76,90,87,80,114,101,68,101,99,111,100,101,0,0,0,0,76,90,87,69,110,99,111,100,101,0,0,0,0,0,0,0,76,90,87,68,101,99,111,100,101,67,111,109,112,97,116,0,76,90,87,68,101,99,111,100,101,0,0,0,0,0,0,0,76,90,87,67,108,101,97,110,117,112,0,0,0,0,0,0,70,97,120,51,86,83,101,116,70,105,101,108,100,0,0,0,70,97,120,51,86,71,101,116,70,105,101,108,100,0,0,0,70,97,120,51,80,117,116,69,79,76,0,0,0,0,0,0,70,97,120,51,80,117,116,66,105,116,115,0,0,0,0,0,70,97,120,51,80,114,105,110,116,68,105,114,0,0,0,0,70,97,120,51,80,114,101,69,110,99,111,100,101,0,0,0,70,97,120,51,80,114,101,68,101,99,111,100,101,0,0,0,70,97,120,51,67,108,101,97,110,117,112,0,0,0,0,0,68,117,109,112,77,111,100,101,69,110,99,111,100,101,0,0,66,117,105,108,100,77,97,112,85,97,84,111,65,97,0,0,66,117,105,108,100,77,97,112,66,105,116,100,101,112,116,104,49,54,84,111,56,0,0,0,34,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,84,73,70,70,82,101,115,101,116,70,105,101,108,100,0,0,102,111,114,32,102,105,101,108,100,115,32,97,114,114,97,121,0,0,0,0,0,0,0,0,95,84,73,70,70,77,101,114,103,101,70,105,101,108,100,115,0,0,0,0,0,0,0,0,0,128,192,224,240,248,252,254,255,0,0,0,0,0,0,0,128,105,0,0,1,0,0,0,56,0,0,0,80,149,0,0,5,0,0,0,38,0,0,0,152,128,0,0,5,128,0,0,10,0,0,0,48,119,0,0,41,128,0,0,22,0,0,0,8,112,0,0,254,127,0,0,44,0,0,0,72,107,0,0,7,0,0,0,14,0,0,0,208,102,0,0,6,0,0,0,14,0,0,0,144,97,0,0,2,0,0,0,18,0,0,0,248,92,0,0,3,128,0,0,48,0,0,0,224,89,0,0,3,0,0,0,34,0,0,0,104,163,0,0,4,0,0,0,36,0,0,0,216,160,0,0,101,135,0,0,14,0,0,0,248,158,0,0,178,128,0,0,42,0,0,0,104,156,0,0,8,0,0,0,42,0,0,0,240,153,0,0,141,128,0,0,32,0,0,0,184,150,0,0,116,135,0,0,54,0,0,0,184,147,0,0,117,135,0,0,54,0,0,0,144,144,0,0,109,136,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,73,80,86,83,101,116,70,105,101,108,100,0,0,0,0,90,73,80,80,111,115,116,69,110,99,111,100,101,0,0,0,84,104,117,110,100,101,114,83,101,116,117,112,68,101,99,111,100,101,0,0,0,0,0,0,84,104,117,110,100,101,114,68,101,99,111,100,101,0,0,0,84,104,117,110,100,101,114,68,101,99,111,100,101,82,111,119,0,0,0,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,84,114,97,110,115,102,101,114,102,117,110,99,116,105,111,110,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,83,104,111,114,116,80,101,114,83,97,109,112,108,101,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,83,97,109,112,108,101,102,111,114,109,97,116,65,114,114,97,121,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,76,111,110,103,76,111,110,103,56,65,114,114,97,121,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,73,102,100,73,102,100,56,65,114,114,97,121,0,0,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,111,108,111,114,109,97,112,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,83,114,97,116,105,111,110,97,108,65,114,114,97,121,0,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,82,97,116,105,111,110,97,108,65,114,114,97,121,0,0,0,0,0,0,0,84,73,70,70,86,84,105,108,101,83,105,122,101,54,52,0,84,73,70,70,86,83,116,114,105,112,83,105,122,101,0,0,84,73,70,70,86,83,116,114,105,112,83,105,122,101,54,52,0,0,0,0,0,0,0,0,135,22,153,62,162,69,22,63,213,120,233,61,0,0,0,0,84,73,70,70,84,105,108,101,83,105,122,101,0,0,0,0,84,73,70,70,83,116,114,105,112,83,105,122,101,0,0,0,84,73,70,70,83,99,97,110,108,105,110,101,83,105,122,101,0,0,0,0,0,0,0,0,84,73,70,70,83,99,97,110,108,105,110,101,83,105,122,101,54,52,0,0,0,0,0,0,84,73,70,70,82,101,119,114,105,116,101,68,105,114,101,99,116,111,114,121,0,0,0,0,84,73,70,70,82,101,97,100,69,110,99,111,100,101,100,84,105,108,101,0,0,0,0,0,84,73,70,70,82,101,97,100,69,110,99,111,100,101,100,83,116,114,105,112,0,0,0,0,84,73,70,70,82,101,97,100,68,105,114,101,99,116,111,114,121,67,104,101,99,107,79,114,100,101,114,0,0,0,0,0,84,73,70,70,79,112,101,110,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,84,73,70,70,76,105,110,107,68,105,114,101,99,116,111,114,121,0,0,0,0,0,0,0,84,73,70,70,70,105,108,108,84,105,108,101,0,0,0,0,84,73,70,70,70,105,108,108,83,116,114,105,112,0,0,0,84,73,70,70,70,101,116,99,104,83,116,114,105,112,84,104,105,110,103,0,0,0,0,0,12,11,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,11,0,0,0,7,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,11,0,0,64,7,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0])
.concat([7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,64,8,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,64,9,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,192,7,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,11,0,0,128,7,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,192,8,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0])
.concat([7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,192,9,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,12,11,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,11,0,0,0,7,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,11,0,0,64,7,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,128,8,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,128,9,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0])
.concat([7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,0,8,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,11,0,0,128,7,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,0,9,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,0,10,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,8,0,53,0,0,0,6,0,7,0,1,0,4,0,7,0,2,0,4,0,8,0,3,0,4,0,11,0,4,0,4,0,12,0,5,0,4,0,14,0,6,0,4,0,15,0,7,0,5,0,19,0,8,0,5,0,20,0,9,0,5,0,7,0,10,0,5,0,8,0,11,0,6,0,8,0,12,0,6,0,3,0,13,0,6,0,52,0,14,0,6,0,53,0,15,0,6,0,42,0,16,0,6,0,43,0,17,0,7,0,39,0,18,0,7,0,12,0,19,0,7,0,8,0,20,0,7,0,23,0,21,0,7,0,3,0,22,0,7,0,4,0,23,0,7,0,40,0,24,0,7,0,43,0,25,0,7,0,19,0,26,0,7,0,36,0,27,0,7,0,24,0,28,0,8,0,2,0,29,0,8,0,3,0,30,0,8,0,26,0,31,0,8,0,27,0,32,0,8,0,18,0,33,0,8,0,19,0,34,0,8,0,20,0,35,0,8,0,21,0,36,0,8,0,22,0,37,0,8,0,23,0,38,0,8,0,40,0,39,0,8,0,41,0,40,0,8,0,42,0,41,0,8,0,43,0,42,0,8,0,44,0,43,0,8,0,45,0,44,0,8,0,4,0,45,0,8,0,5,0,46,0,8,0,10,0,47,0,8,0,11,0,48,0,8,0,82,0,49,0,8,0,83,0,50,0,8,0,84,0,51,0,8,0,85,0,52,0,8,0,36,0,53,0,8,0,37,0,54,0,8,0,88,0,55,0,8,0,89,0,56,0,8,0,90,0,57,0,8,0,91,0,58,0,8,0,74,0,59,0,8,0,75,0,60,0,8,0,50,0,61,0,8,0,51,0,62,0,8,0,52,0,63,0,5,0,27,0,64,0,5,0,18,0,128,0,6,0,23,0,192,0,7,0,55,0,0,1,8,0,54,0,64,1,8,0,55,0,128,1,8,0,100,0,192,1,8,0,101,0,0,2,8,0,104,0,64,2,8,0,103,0,128,2,9,0,204,0,192,2,9,0,205,0,0,3,9,0,210,0,64,3,9,0,211,0,128,3,9,0,212,0,192,3,9,0,213,0,0,4,9,0,214,0,64,4,9,0,215,0,128,4,9,0,216,0,192,4,9,0,217,0,0,5,9,0,218,0,64,5,9,0,219,0,128,5,9,0,152,0,192,5,9,0,153,0,0,6,9,0,154,0,64,6,6,0,24,0,128,6,9,0,155,0,192,6,11,0,8,0,0,7,11,0,12,0,64,7,11,0,13,0,128,7,12,0,18,0,192,7,12,0,19,0,0,8,12,0,20,0,64,8,12,0,21,0,128,8,12,0,22,0,192,8,12,0,23,0,0,9,12,0,28,0,64,9,12,0,29,0,128,9,12,0,30,0,192,9,12,0,31,0,0,10,12,0,1,0,255,255,9,0,1,0,254,255,10,0,1,0,254,255,11,0,1,0,254,255,12,0,0,0,254,255,0,0,12,7,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,5,6,0,0,2,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,5,7,0,0,3,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,4,6,0,0,2,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,6,7,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,5,6,0,0,2,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,4,7,0,0,3,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,4,6,0,0,2,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,12,11,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0])
.concat([8,2,0,0,2,0,0,0,11,11,0,0,0,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,23,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,20,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,25,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,128,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,56,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,30,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,64,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,57,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,21,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,54,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,52,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,48,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,64,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,44,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,36,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,128,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,28,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,60,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,40,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,64,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,192,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,50,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,34,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,128,6,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,26,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,128,5,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,32,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0])
.concat([8,2,0,0,2,0,0,0,11,11,0,0,128,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,61,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,42,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,0,4,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,0,3,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,62,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,192,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,46,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,38,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,0,2,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,19,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,24,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,22,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,192,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,12,11,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,0,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,23,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,20,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,25,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,192,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,0,5,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,31,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,64,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,58,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,21,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,128,3,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,128,2,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,49,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0])
.concat([8,2,0,0,2,0,0,0,11,12,0,0,128,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,45,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,37,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,192,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,29,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,0,6,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,41,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,128,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,0,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,51,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,35,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,64,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,27,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,59,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,33,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,128,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,0,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,43,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,128,4,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,55,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,63,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,0,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,47,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,39,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,53,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,19,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,24,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,22,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0])
.concat([8,2,0,0,2,0,0,0,11,12,0,0,0,10,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,12,11,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,0,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,23,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,20,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,25,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,128,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,56,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,30,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,64,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,57,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,21,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,54,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,52,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,48,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,64,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,44,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,36,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,128,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,28,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,60,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,40,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,64,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0])
.concat([8,2,0,0,2,0,0,0,11,12,0,0,192,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,50,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,34,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,192,6,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,26,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,192,5,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,32,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,128,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,61,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,42,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,64,4,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,64,3,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,62,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,192,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,46,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,38,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,64,2,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,19,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,24,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,22,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,192,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,12,11,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,0,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,23,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,20,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,25,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,192,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,64,5,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,31,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0])
.concat([8,2,0,0,2,0,0,0,11,11,0,0,64,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,58,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,21,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,192,3,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,192,2,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,49,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,128,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,45,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,37,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,192,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,29,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,64,6,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,41,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,128,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,0,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,51,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,35,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,64,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,27,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,59,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,33,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,128,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,0,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,43,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,192,4,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,55,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,63,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0])
.concat([8,2,0,0,2,0,0,0,11,12,0,0,0,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,47,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,39,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,53,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,19,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,24,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,22,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,0,10,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,0,55,0,0,0,3,0,2,0,1,0,2,0,3,0,2,0,2,0,2,0,3,0,3,0,3,0,4,0,4,0,3,0,5,0,4,0,2,0,6,0,5,0,3,0,7,0,6,0,5,0,8,0,6,0,4,0,9,0,7,0,4,0,10,0,7,0,5,0,11,0,7,0,7,0,12,0,8,0,4,0,13,0,8,0,7,0,14,0,9,0,24,0,15,0,10,0,23,0,16,0,10,0,24,0,17,0,10,0,8,0,18,0,11,0,103,0,19,0,11,0,104,0,20,0,11,0,108,0,21,0,11,0,55,0,22,0,11,0,40,0,23,0,11,0,23,0,24,0,11,0,24,0,25,0,12,0,202,0,26,0,12,0,203,0,27,0,12,0,204,0,28,0,12,0,205,0,29,0,12,0,104,0,30,0,12,0,105,0,31,0,12,0,106,0,32,0,12,0,107,0,33,0,12,0,210,0,34,0,12,0,211,0,35,0,12,0,212,0,36,0,12,0,213,0,37,0,12,0,214,0,38,0,12,0,215,0,39,0,12,0,108,0,40,0,12,0,109,0,41,0,12,0,218,0,42,0,12,0,219,0,43,0,12,0,84,0,44,0,12,0,85,0,45,0,12,0,86,0,46,0,12,0,87,0,47,0,12,0,100,0,48,0,12,0,101,0,49,0,12,0,82,0,50,0,12,0,83,0,51,0,12,0,36,0,52,0,12,0,55,0,53,0,12,0,56,0,54,0,12,0,39,0,55,0,12,0,40,0,56,0,12,0,88,0,57,0,12,0,89,0,58,0,12,0,43,0,59,0,12,0,44,0,60,0,12,0,90,0,61,0,12,0,102,0,62,0,12,0,103,0,63,0,10,0,15,0,64,0,12,0,200,0,128,0,12,0,201,0,192,0,12,0,91,0,0,1,12,0,51,0,64,1,12,0,52,0,128,1,12,0,53,0,192,1,13,0,108,0,0,2,13,0,109,0,64,2,13,0,74,0,128,2,13,0,75,0,192,2,13,0,76,0,0,3,13,0,77,0,64,3,13,0,114,0,128,3,13,0,115,0,192,3,13,0,116,0,0,4,13,0,117,0,64,4,13,0,118,0,128,4,13,0,119,0,192,4,13,0,82,0,0,5,13,0,83,0,64,5,13,0,84,0,128,5,13,0,85,0,192,5,13,0,90,0,0,6,13,0,91,0,64,6,13,0,100,0,128,6,13,0,101,0,192,6,11,0,8,0,0,7,11,0,12,0,64,7,11,0,13,0,128,7,12,0,18,0,192,7,12,0,19,0,0,8,12,0,20,0,64,8,12,0,21,0,128,8,12,0,22,0,192,8,12,0,23,0,0,9,12,0,28,0,64,9,12,0,29,0,128,9,12,0,30,0,192,9,12,0,31,0,0,10,12,0,1,0,255,255,9,0,1,0,254,255,10,0,1,0,254,255,11,0,1,0,254,255,12,0,0,0,254,255,0,0,84,73,70,70,67,111,109,112,117,116,101,83,116,114,105,112,0,0,0,0,0,0,0,0,0,128,64,192,32,160,96,224,16,144,80,208,48,176,112,240,8,136,72,200,40,168,104,232,24,152,88,216,56,184,120,248,4,132,68,196,36,164,100,228,20,148,84,212,52,180,116,244,12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,3,131,67,195,35,163,99,227,19,147,83,211,51,179,115,243,11,139,75,203,43,171,107,235,27,155,91,219,59,187,123,251,7,135,71,199,39,167,103,231,23,151,87,215,55,183,119,247,15,143,79,207,47,175,111,239,31,159,95,223,63,191,127,255,84,73,70,70,65,100,118,97,110,99,101,68,105,114,101,99,116,111,114,121,0,0,0,0,80,114,101,100,105,99,116,111,114,83,101,116,117,112,0,0,80,105,120,97,114,76,111,103,86,83,101,116,70,105,101,108,100,0,0,0,0,0,0,0,80,105,120,97,114,76,111,103,80,111,115,116,69,110,99,111,100,101,0,0,0,0,0,0,80,105,120,97,114,76,111,103,69,110,99,111,100,101,0,0,80,97,99,107,66,105,116,115,68,101,99,111,100,101,0,0,78,101,88,84,68,101,99,111,100,101,0,0,0,0,0,0,77,105,115,115,105,110,103,82,101,113,117,105,114,101,100,0,76,111,103,76,117,118,86,83,101,116,70,105,101,108,100,0,76,111,103,76,117,118,83,101,116,117,112,69,110,99,111,100,101,0,0,0,0,0,0,0,76,111,103,76,117,118,83,101,116,117,112,68,101,99,111,100,101,0,0,0,0,0,0,0,24,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,1,0,120,131,0,0,0,0,0,0,25,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,1,0,32,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,97,120,52,69,110,99,111,100,101,0,0,0,0,0,0,70,97,120,52,68,101,99,111,100,101,0,0,0,0,0,0,70,97,120,51,83,101,116,117,112,83,116,97,116,101,0,0,70,97,120,51,69,110,99,111,100,101,0,0,0,0,0,0,70,97,120,51,68,101,99,111,100,101,82,76,69,0,0,0,70,97,120,51,68,101,99,111,100,101,50,68,0,0,0,0,70,97,120,51,68,101,99,111,100,101,49,68,0,0,0,0,69,115,116,105,109,97,116,101,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,0,68,117,109,112,77,111,100,101,68,101,99,111,100,101,0,0])
, "i8", ALLOC_NONE, Runtime.GLOBAL_BASE)
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}
  function _strncmp(px, py, n) {
      var i = 0;
      while (i < n) {
        var x = HEAPU8[(((px)+(i))|0)];
        var y = HEAPU8[(((py)+(i))|0)];
        if (x == y && x == 0) return 0;
        if (x == 0) return -1;
        if (y == 0) return 1;
        if (x == y) {
          i ++;
          continue;
        } else {
          return x > y ? 1 : -1;
        }
      }
      return 0;
    }
  Module["_strlen"] = _strlen;
  var _llvm_va_start=undefined;
  function _llvm_va_end() {}
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }
  function _strcmp(px, py) {
      return _strncmp(px, py, TOTAL_MEMORY);
    }
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i64=_memset;
  function _qsort(base, num, size, cmp) {
      if (num == 0 || size == 0) return;
      // forward calls to the JavaScript sort method
      // first, sort the items logically
      var keys = [];
      for (var i = 0; i < num; i++) keys.push(i);
      keys.sort(function(a, b) {
        return Module['dynCall_iii'](cmp, base+a*size, base+b*size);
      });
      // apply the sort
      var temp = _malloc(num*size);
      _memcpy(temp, base, num*size);
      for (var i = 0; i < num; i++) {
        if (keys[i] == i) continue; // already in place
        _memcpy(base+i*size, temp+keys[i]*size, size);
      }
      _free(temp);
    }
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value
      return value;
    }
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 0777, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 0777 | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && buffer.buffer === HEAP8.buffer && offset === 0) {
              node.contents = buffer; // this is a subarray of the heap, and we can own it
              node.contentMode = MEMFS.CONTENT_OWNING;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },reconcile:function (src, dst, callback) {
        var total = 0;
        var create = {};
        for (var key in src.files) {
          if (!src.files.hasOwnProperty(key)) continue;
          var e = src.files[key];
          var e2 = dst.files[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create[key] = e;
            total++;
          }
        }
        var remove = {};
        for (var key in dst.files) {
          if (!dst.files.hasOwnProperty(key)) continue;
          var e = dst.files[key];
          var e2 = src.files[key];
          if (!e2) {
            remove[key] = e;
            total++;
          }
        }
        if (!total) {
          // early out
          return callback(null);
        }
        var completed = 0;
        var done = function(err) {
          if (err) return callback(err);
          if (++completed >= total) {
            return callback(null);
          }
        };
        // create a single transaction to handle and IDB reads / writes we'll need to do
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        transaction.onerror = function() { callback(this.error); };
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
        for (var path in create) {
          if (!create.hasOwnProperty(path)) continue;
          var entry = create[path];
          if (dst.type === 'local') {
            // save file to local
            try {
              if (FS.isDir(entry.mode)) {
                FS.mkdir(path, entry.mode);
              } else if (FS.isFile(entry.mode)) {
                var stream = FS.open(path, 'w+', 0666);
                FS.write(stream, entry.contents, 0, entry.contents.length, 0, true /* canOwn */);
                FS.close(stream);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // save file to IDB
            var req = store.put(entry, path);
            req.onsuccess = function() { done(null); };
            req.onerror = function() { done(this.error); };
          }
        }
        for (var path in remove) {
          if (!remove.hasOwnProperty(path)) continue;
          var entry = remove[path];
          if (dst.type === 'local') {
            // delete file from local
            try {
              if (FS.isDir(entry.mode)) {
                // TODO recursive delete?
                FS.rmdir(path);
              } else if (FS.isFile(entry.mode)) {
                FS.unlink(path);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // delete file from IDB
            var req = store.delete(path);
            req.onsuccess = function() { done(null); };
            req.onerror = function() { done(this.error); };
          }
        }
      },getLocalSet:function (mount, callback) {
        var files = {};
        var isRealDir = function(p) {
          return p !== '.' && p !== '..';
        };
        var toAbsolute = function(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
        var check = FS.readdir(mount.mountpoint)
          .filter(isRealDir)
          .map(toAbsolute(mount.mountpoint));
        while (check.length) {
          var path = check.pop();
          var stat, node;
          try {
            var lookup = FS.lookupPath(path);
            node = lookup.node;
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path)
              .filter(isRealDir)
              .map(toAbsolute(path)));
            files[path] = { mode: stat.mode, timestamp: stat.mtime };
          } else if (FS.isFile(stat.mode)) {
            files[path] = { contents: node.contents, mode: stat.mode, timestamp: stat.mtime };
          } else {
            return callback(new Error('node type not supported'));
          }
        }
        return callback(null, { type: 'local', files: files });
      },getDB:function (name, callback) {
        // look it up in the cache
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        req.onupgradeneeded = function() {
          db = req.result;
          db.createObjectStore(IDBFS.DB_STORE_NAME);
        };
        req.onsuccess = function() {
          db = req.result;
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getRemoteSet:function (mount, callback) {
        var files = {};
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          store.openCursor().onsuccess = function(event) {
            var cursor = event.target.result;
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, files: files });
            }
            files[cursor.key] = cursor.value;
            cursor.continue();
          };
        });
      }};
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.position = position;
          return position;
        }}};
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[null],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || { recurse_count: 0 };
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
        // start at the root
        var current = FS.root;
        var current_path = '/';
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            current = current.mount.root;
          }
          // follow symlinks
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
            this.parent = null;
            this.mount = null;
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            FS.hashAddNode(this);
          };
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
          FS.FSNode.prototype = {};
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
        return new FS.FSNode(parent, name, mode, rdev);
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 1;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = {};
          // compatibility
          Object.defineProperties(FS.FSStream, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        stream.prototype = FS.FSStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
        var completed = 0;
        var total = FS.mounts.length;
        var done = function(err) {
          if (err) {
            return callback(err);
          }
          if (++completed >= total) {
            callback(null);
          }
        };
        // sync all mounts
        for (var i = 0; i < FS.mounts.length; i++) {
          var mount = FS.mounts[i];
          if (!mount.type.syncfs) {
            done(null);
            continue;
          }
          mount.type.syncfs(mount, populate, done);
        }
      },mount:function (type, opts, mountpoint) {
        var lookup;
        if (mountpoint) {
          lookup = FS.lookupPath(mountpoint, { follow: false });
          mountpoint = lookup.path;  // use the absolute path
        }
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          root: null
        };
        // create a root node for the fs
        var root = type.mount(mount);
        root.mount = mount;
        mount.root = root;
        // assign the mount info to the mountpoint's node
        if (lookup) {
          lookup.node.mount = mount;
          lookup.node.mounted = true;
          // compatibility update FS.root if we mount to /
          if (mountpoint === '/') {
            FS.root = mount.root;
          }
        }
        // add to our cached list of mounts
        FS.mounts.push(mount);
        return root;
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 0666;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 0777;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 0666;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path, { follow: false });
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 0666 : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.errnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0);
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=stdin.fd;
        assert(stdin.fd === 1, 'invalid handle for stdin (' + stdin.fd + ')');
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=stdout.fd;
        assert(stdout.fd === 2, 'invalid handle for stdout (' + stdout.fd + ')');
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=stderr.fd;
        assert(stderr.fd === 3, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
          this.stack = stackTrace();
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
        FS.nameTable = new Array(4096);
        FS.root = FS.createNode(null, '/', 16384 | 0777, 0);
        FS.mount(MEMFS, {}, '/');
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
        FS.ensureErrnoError();
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          var LazyUint8Array = function() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
              if (!hasByteServing) chunkSize = datalength;
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  Module["FS"] = FS;
  var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 0777, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {} : ['binary'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
          var handleMessage = function(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
          // Handle precision.
          var precisionSet = false;
          if (next == 46) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          } else {
            var precision = 6; // Standard default.
          }
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }
  var _llvm_memset_p0i8_i32=_memset;
  function _bsearch(key, base, num, size, compar) {
      var cmp = function(x, y) {
        return Module['dynCall_iii'](compar, x, y);
      };
      var left = 0;
      var right = num;
      var mid, test, addr;
      while (left < right) {
        mid = (left + right) >>> 1;
        addr = base + (mid * size);
        test = cmp(key, addr);
        if (test < 0) {
          right = mid;
        } else if (test > 0) {
          left = mid + 1;
        } else {
          return addr;
        }
      }
      return 0;
    }
  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }
  function _llvm_lifetime_start() {}
  function _llvm_lifetime_end() {}
  function _llvm_uadd_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return ((asm["setTempRet0"](x+y > 4294967295),(x+y)>>>0)|0);
    }
  Module["_strcpy"] = _strcpy;
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  function ___errno_location() {
      return ___errno_state;
    }
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          for (var i = 0; i < msg.length; i++) {
            HEAP8[(((strerrbuf)+(i))|0)]=msg.charCodeAt(i)
          }
          HEAP8[(((strerrbuf)+(i))|0)]=0
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  Module["_memcmp"] = _memcmp;
  function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }
  function _munmap(start, num) {
      if (!_mmap.mappings) _mmap.mappings = {};
      // TODO: support unmmap'ing parts of allocations
      var info = _mmap.mappings[start];
      if (!info) return 0;
      if (num == info.num) {
        _mmap.mappings[start] = null;
        if (info.allocated) {
          _free(info.malloc);
        }
      }
      return 0;
    }
  function _mmap(start, num, prot, flags, stream, offset) {
      /* FIXME: Since mmap is normally implemented at the kernel level,
       * this implementation simply uses malloc underneath the call to
       * mmap.
       */
      var MAP_PRIVATE = 2;
      var ptr;
      var allocated = false;
      if (!_mmap.mappings) _mmap.mappings = {};
      if (stream == -1) {
        ptr = _malloc(num);
        if (!ptr) return -1;
        _memset(ptr, 0, num);
        allocated = true;
      } else {
        var info = FS.getStream(stream);
        if (!info) return -1;
        try {
          var res = FS.mmap(info, HEAPU8, start, num, offset, prot, flags);
          ptr = res.ptr;
          allocated = res.allocated;
        } catch (e) {
          FS.handleFSError(e);
          return -1;
        }
      }
      _mmap.mappings[ptr] = { malloc: ptr, num: num, allocated: allocated };
      return ptr;
    }
  function _stat(path, buf, dontResolveLastLink) {
      // http://pubs.opengroup.org/onlinepubs/7908799/xsh/stat.html
      // int stat(const char *path, struct stat *buf);
      // NOTE: dontResolveLastLink is a shortcut for lstat(). It should never be
      //       used in client code.
      path = typeof path !== 'string' ? Pointer_stringify(path) : path;
      try {
        var stat = dontResolveLastLink ? FS.lstat(path) : FS.stat(path);
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode
        HEAP32[(((buf)+(16))>>2)]=stat.nlink
        HEAP32[(((buf)+(20))>>2)]=stat.uid
        HEAP32[(((buf)+(24))>>2)]=stat.gid
        HEAP32[(((buf)+(28))>>2)]=stat.rdev
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size
        HEAP32[(((buf)+(40))>>2)]=4096
        HEAP32[(((buf)+(44))>>2)]=stat.blocks
        HEAP32[(((buf)+(48))>>2)]=Math.floor(stat.atime.getTime() / 1000)
        HEAP32[(((buf)+(52))>>2)]=0
        HEAP32[(((buf)+(56))>>2)]=Math.floor(stat.mtime.getTime() / 1000)
        HEAP32[(((buf)+(60))>>2)]=0
        HEAP32[(((buf)+(64))>>2)]=Math.floor(stat.ctime.getTime() / 1000)
        HEAP32[(((buf)+(68))>>2)]=0
        HEAP32[(((buf)+(72))>>2)]=stat.ino
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fstat(fildes, buf) {
      // int fstat(int fildes, struct stat *buf);
      // http://pubs.opengroup.org/onlinepubs/7908799/xsh/fstat.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      return _stat(stream.path, buf);
    }
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  var _floor=Math_floor;
  var _llvm_pow_f64=Math_pow;
  var _exp=Math_exp;
  var _log=Math_log;
  function _rand() {
      return Math.floor(Math.random()*0x80000000);
    }
  var _sqrt=Math_sqrt;
  var _atan2=Math_atan2;
  var _fabs=Math_abs;
  function _llvm_bswap_i32(x) {
      return ((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24);
    }
  function _abort() {
      Module['abort']();
    }
  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }
  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }
  var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
        var imagePlugin = {};
        imagePlugin['canHandle'] = function(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
        var audioPlugin = {};
        audioPlugin['canHandle'] = function(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
        // Canvas event setup
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
            ctx = canvas.getContext('experimental-webgl', contextAttributes);
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas - ' + e);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function (func) {
        if (!window.requestAnimationFrame) {
          window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                         window['mozRequestAnimationFrame'] ||
                                         window['webkitRequestAnimationFrame'] ||
                                         window['msRequestAnimationFrame'] ||
                                         window['oRequestAnimationFrame'] ||
                                         window['setTimeout'];
        }
        window.requestAnimationFrame(func);
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (window.scrollX + rect.left);
              y = t.pageY - (window.scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (window.scrollX + rect.left);
            y = event.pageY - (window.scrollY + rect.top);
          }
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
Module["requestFullScreen"] = function(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true; // seal the static portion of memory
STACK_MAX = STACK_BASE + 5242880;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY); // Stack must fit in TOTAL_MEMORY; allocations from here on may enlarge TOTAL_MEMORY
 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);
var Math_min = Math.min;
function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12) {
  try {
    Module["dynCall_viiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env._stderr|0;var p=+env.NaN;var q=+env.Infinity;var r=0;var s=0;var t=0;var u=0;var v=0,w=0,x=0,y=0,z=0.0,A=0,B=0,C=0,D=0.0;var E=0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=global.Math.floor;var P=global.Math.abs;var Q=global.Math.sqrt;var R=global.Math.pow;var S=global.Math.cos;var T=global.Math.sin;var U=global.Math.tan;var V=global.Math.acos;var W=global.Math.asin;var X=global.Math.atan;var Y=global.Math.atan2;var Z=global.Math.exp;var _=global.Math.log;var $=global.Math.ceil;var aa=global.Math.imul;var ab=env.abort;var ac=env.assert;var ad=env.asmPrintInt;var ae=env.asmPrintFloat;var af=env.min;var ag=env.invoke_iiiii;var ah=env.invoke_vi;var ai=env.invoke_vii;var aj=env.invoke_viiiiiiiiiiii;var ak=env.invoke_iiii;var al=env.invoke_ii;var am=env.invoke_viii;var an=env.invoke_v;var ao=env.invoke_viiiiiiiii;var ap=env.invoke_iii;var aq=env.invoke_viiii;var ar=env._strncmp;var as=env._llvm_va_end;var at=env._rand;var au=env._snprintf;var av=env._lseek;var aw=env._abort;var ax=env._fprintf;var ay=env._sqrt;var az=env._pread;var aA=env._close;var aB=env._fflush;var aC=env.__reallyNegative;var aD=env.___assert_fail;var aE=env._open;var aF=env._floor;var aG=env.___setErrNo;var aH=env._fwrite;var aI=env._qsort;var aJ=env._send;var aK=env._write;var aL=env._sprintf;var aM=env._llvm_lifetime_end;var aN=env._munmap;var aO=env._fstat;var aP=env._sysconf;var aQ=env._stat;var aR=env._read;var aS=env._llvm_uadd_with_overflow_i32;var aT=env._time;var aU=env.__formatString;var aV=env._atan2;var aW=env._vfprintf;var aX=env._recv;var aY=env._log;var aZ=env._pwrite;var a_=env._llvm_pow_f64;var a$=env._sbrk;var a0=env._fabs;var a1=env._strerror_r;var a2=env.___errno_location;var a3=env._strerror;var a4=env._llvm_lifetime_start;var a5=env._llvm_bswap_i32;var a6=env._bsearch;var a7=env._exp;var a8=env._mmap;var a9=env._strcmp;
// EMSCRIPTEN_START_FUNCS
function dm(a){a=a|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+8|0;f=d|0;if((b[a+126>>1]|0)!=1){g=d3(a,c[a+56>>2]|0,0,e[a+84>>1]|0,0,45984)|0;h=hy(g,E,7,0)|0;g=E;j=g>>>3|0<<29;k=h>>>3|g<<29;i=d;return(E=j,k)|0}g=b[a+98>>1]|0;do{if((b[a+90>>1]|0)==6&g<<16>>16==3){if((c[a+12>>2]&16384|0)!=0){l=3;break}h=f|0;m=f+2|0;d7(a,530,(n=i,i=i+16|0,c[n>>2]=h,c[n+8>>2]=m,n)|0)|0;i=n;o=b[h>>1]|0;do{if((o<<16>>16|0)==1|(o<<16>>16|0)==2|(o<<16>>16|0)==4){h=b[m>>1]|0;if(!((h<<16>>16|0)==1|(h<<16>>16|0)==2|(h<<16>>16|0)==4)){break}p=o&65535;q=(aa(h,o)|0)+2&65535;h=c[a+56>>2]|0;if(h>>>0<(-p|0)>>>0){r=0;s=((p-1+h|0)>>>0)/(p>>>0)|0}else{r=0;s=0}p=d3(a,s,r,q&65535,0,45984)|0;q=d3(a,p,E,e[a+84>>1]|0,0,45984)|0;p=hy(q,E,7,0)|0;q=E;h=hJ(p>>>3|q<<29,q>>>3|0<<29,e[m>>1]|0,0)|0;j=E;k=h;i=d;return(E=j,k)|0}}while(0);cg(c[a+628>>2]|0,45984,26536,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n;j=0;k=0;i=d;return(E=j,k)|0}else{l=g}}while(0);g=d3(a,c[a+56>>2]|0,0,l&65535,0,45984)|0;l=d3(a,g,E,e[a+84>>1]|0,0,45984)|0;a=hy(l,E,7,0)|0;l=E;j=l>>>3|0<<29;k=a>>>3|l<<29;i=d;return(E=j,k)|0}function dn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=dl(a,b)|0;b=e;if((b|0)==(e|0)&(((b|0)<0|0?-1:0)|0)==(E|0)){f=b;i=d;return f|0}cg(c[a+628>>2]|0,45872,28976,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;f=0;i=d;return f|0}function dp(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=c[a+100>>2]|0;e=c[a+60>>2]|0;f=dl(a,d>>>0>e>>>0?e:d)|0;d=f;if((d|0)==(f|0)&(((d|0)<0|0?-1:0)|0)==(E|0)){g=d;i=b;return g|0}cg(c[a+628>>2]|0,45944,28976,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;g=0;i=b;return g|0}function dq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;if((b|0)>=1){c=b;return c|0}b=dm(a)|0;a=E;d=(b|0)==0&(a|0)==0;e=hJ(8192,0,d?1:b,d?0:a)|0;c=(e|0)==0&(E|0)==0?1:e;return c|0}function dr(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=dm(a)|0;e=d;if((e|0)==(d|0)&(((e|0)<0|0?-1:0)|0)==(E|0)){f=e;i=b;return f|0}cg(c[a+628>>2]|0,45960,25280,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;f=0;i=b;return f|0}function ds(b){b=b|0;var c=0,d=0;c=b;b=c+1|0;d=a[b]|0;a[b]=a[c]|0;a[c]=d;return}function dt(b){b=b|0;var c=0,d=0,e=0;c=b;b=c+3|0;d=a[b]|0;a[b]=a[c]|0;a[c]=d;d=c+2|0;b=a[d]|0;e=c+1|0;a[d]=a[e]|0;a[e]=b;return}function du(b){b=b|0;var c=0,d=0,e=0;c=b;b=c+7|0;d=a[b]|0;a[b]=a[c]|0;a[c]=d;d=c+6|0;b=a[d]|0;e=c+1|0;a[d]=a[e]|0;a[e]=b;b=c+5|0;e=a[b]|0;d=c+2|0;a[b]=a[d]|0;a[d]=e;e=c+4|0;d=a[e]|0;b=c+3|0;a[e]=a[b]|0;a[b]=d;return}function dv(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0;if((c|0)>0){d=c;e=b}else{return}while(1){b=d-1|0;c=e;f=c+1|0;g=a[f]|0;a[f]=a[c]|0;a[c]=g;if((b|0)>0){d=b;e=e+2|0}else{break}}return}function dw(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;if((c|0)>0){d=c;e=b}else{return}while(1){b=d-1|0;c=e+2|0;f=a[c]|0;a[c]=a[e]|0;a[e]=f;if((b|0)>0){d=b;e=e+3|0}else{break}}return}function dx(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;if((c|0)>0){d=c;e=b}else{return}while(1){b=d-1|0;c=e;f=c+3|0;g=a[f]|0;a[f]=a[c]|0;a[c]=g;g=c+2|0;f=a[g]|0;h=c+1|0;a[g]=a[h]|0;a[h]=f;if((b|0)>0){d=b;e=e+4|0}else{break}}return}function dy(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;if((c|0)>0){d=c;e=b}else{return}while(1){b=d-1|0;c=e;f=c+7|0;g=a[f]|0;a[f]=a[c]|0;a[c]=g;g=c+6|0;f=a[g]|0;h=c+1|0;a[g]=a[h]|0;a[h]=f;f=c+5|0;h=a[f]|0;g=c+2|0;a[f]=a[g]|0;a[g]=h;h=c+4|0;g=a[h]|0;f=c+3|0;a[h]=a[f]|0;a[f]=g;if((b|0)>0){d=b;e=e+8|0}else{break}}return}function dz(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;if((c|0)>0){d=c;e=b}else{return}while(1){b=d-1|0;c=e;f=c+3|0;g=a[f]|0;a[f]=a[c]|0;a[c]=g;g=c+2|0;f=a[g]|0;h=c+1|0;a[g]=a[h]|0;a[h]=f;if((b|0)>0){d=b;e=e+4|0}else{break}}return}function dA(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;if((c|0)>0){d=c;e=b}else{return}while(1){b=d-1|0;c=e;f=c+7|0;g=a[f]|0;a[f]=a[c]|0;a[c]=g;g=c+6|0;f=a[g]|0;h=c+1|0;a[g]=a[h]|0;a[h]=f;f=c+5|0;h=a[f]|0;g=c+2|0;a[f]=a[g]|0;a[g]=h;h=c+4|0;g=a[h]|0;f=c+3|0;a[h]=a[f]|0;a[f]=g;if((b|0)>0){d=b;e=e+8|0}else{break}}return}function dB(a){a=a|0;return((a|0)!=0?147128:46128)|0}function dC(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if((c|0)>8){e=c-9&-8;f=e+8|0;g=b;h=c;while(1){a[g]=a[147128+(d[g]|0)|0]|0;i=g+1|0;a[i]=a[147128+(d[i]|0)|0]|0;i=g+2|0;a[i]=a[147128+(d[i]|0)|0]|0;i=g+3|0;a[i]=a[147128+(d[i]|0)|0]|0;i=g+4|0;a[i]=a[147128+(d[i]|0)|0]|0;i=g+5|0;a[i]=a[147128+(d[i]|0)|0]|0;i=g+6|0;a[i]=a[147128+(d[i]|0)|0]|0;i=g+7|0;a[i]=a[147128+(d[i]|0)|0]|0;i=h-8|0;if((i|0)>8){g=g+8|0;h=i}else{break}}j=b+f|0;k=c-8-e|0}else{j=b;k=c}if((k|0)>0){l=j;m=k}else{return}while(1){k=m-1|0;a[l]=a[147128+(d[l]|0)|0]|0;if((k|0)>0){l=l+1|0;m=k}else{break}}return}function dD(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=c[a+68>>2]|0;i=c[a+72>>2]|0;j=c[a+76>>2]|0;k=c[a+64>>2]|0;l=(k|0)==1?0:f;if((h|0)==-1){m=c[a+56>>2]|0}else{m=h}if((i|0)==-1){n=c[a+60>>2]|0}else{n=i}i=(j|0)==-1?k:j;if((m|0)==0|(n|0)==0|(i|0)==0){o=1;return o|0}j=c[a+56>>2]|0;if(j>>>0<(-m|0)>>>0){p=((m-1+j|0)>>>0)/(m>>>0)|0}else{p=0}j=c[a+60>>2]|0;if(j>>>0<(-n|0)>>>0){q=((n-1+j|0)>>>0)/(n>>>0)|0}else{q=0}if(k>>>0<(-i|0)>>>0){r=((i-1+k|0)>>>0)/(i>>>0)|0}else{r=0}k=(b[a+126>>1]|0)==2;a=aa(q,p)|0;if(k){k=aa(r,g&65535)|0;g=aa((e>>>0)/(n>>>0)|0,p)|0;o=((d>>>0)/(m>>>0)|0)+g+(aa(((l>>>0)/(i>>>0)|0)+k|0,a)|0)|0;return o|0}else{k=aa((l>>>0)/(i>>>0)|0,a)|0;o=(aa((e>>>0)/(n>>>0)|0,p)|0)+k+((d>>>0)/(m>>>0)|0)|0;return o|0}return 0}function dE(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;j=c[a+56>>2]|0;if(j>>>0<=d>>>0){cg(c[a+628>>2]|0,c[a>>2]|0,28856,(k=i,i=i+16|0,c[k>>2]=d,c[k+8>>2]=j-1,k)|0);i=k;l=0;i=h;return l|0}j=c[a+60>>2]|0;if(j>>>0<=e>>>0){cg(c[a+628>>2]|0,c[a>>2]|0,39528,(k=i,i=i+16|0,c[k>>2]=e,c[k+8>>2]=j-1,k)|0);i=k;l=0;i=h;return l|0}j=c[a+64>>2]|0;if(j>>>0<=f>>>0){cg(c[a+628>>2]|0,c[a>>2]|0,33408,(k=i,i=i+16|0,c[k>>2]=f,c[k+8>>2]=j-1,k)|0);i=k;l=0;i=h;return l|0}if((b[a+126>>1]|0)!=2){l=1;i=h;return l|0}j=b[a+98>>1]|0;if((j&65535)>(g&65535)){l=1;i=h;return l|0}cg(c[a+628>>2]|0,c[a>>2]|0,30824,(k=i,i=i+16|0,c[k>>2]=g&65535,c[k+8>>2]=(j&65535)-1,k)|0);i=k;l=0;i=h;return l|0}function dF(a){a=a|0;var d=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=c[a+68>>2]|0;f=c[a+72>>2]|0;g=c[a+76>>2]|0;if((d|0)==-1){h=c[a+56>>2]|0}else{h=d}if((f|0)==-1){i=c[a+60>>2]|0}else{i=f}if((g|0)==-1){j=c[a+64>>2]|0}else{j=g}if((h|0)==0|(i|0)==0|(j|0)==0){k=0}else{g=c[a+56>>2]|0;if(g>>>0<(-h|0)>>>0){l=((h-1+g|0)>>>0)/(h>>>0)|0}else{l=0}h=c[a+60>>2]|0;if(h>>>0<(-i|0)>>>0){m=((i-1+h|0)>>>0)/(i>>>0)|0}else{m=0}i=d2(a,l,m,28928)|0;m=c[a+64>>2]|0;if(m>>>0<(-j|0)>>>0){n=((j-1+m|0)>>>0)/(j>>>0)|0}else{n=0}k=d2(a,i,n,28928)|0}if((b[a+126>>1]|0)!=2){o=k;return o|0}o=d2(a,k,e[a+98>>1]|0,28928)|0;return o|0}function dG(a){a=a|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;do{if((c[a+72>>2]|0)==0){f=0;g=0}else{h=c[a+68>>2]|0;if((h|0)==0){f=0;g=0;break}j=d3(a,e[a+84>>1]|0,0,h,0,27640)|0;h=E;if((b[a+126>>1]|0)==1){k=d3(a,j,h,e[a+98>>1]|0,0,27640)|0;l=E;m=k}else{l=h;m=j}j=hy(((m&7|0)!=0|(l&0|0)!=0)&1,0,m>>>3|l<<29,l>>>3|0<<29)|0;f=E;g=j}}while(0);l=g;if((l|0)==(g|0)&(((l|0)<0|0?-1:0)|0)==(f|0)){n=l;i=d;return n|0}cg(c[a+628>>2]|0,27640,26496,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;n=0;i=d;return n|0}function dH(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+8|0;g=f|0;if((c[a+72>>2]|0)==0){h=0;j=0;i=f;return(E=h,j)|0}k=a+68|0;l=c[k>>2]|0;if((l|0)==0){h=0;j=0;i=f;return(E=h,j)|0}if((c[a+76>>2]|0)==0){h=0;j=0;i=f;return(E=h,j)|0}m=a+126|0;do{if((b[m>>1]|0)==1){if((b[a+90>>1]|0)!=6){break}if((b[a+98>>1]|0)!=3){break}if((c[a+12>>2]&16384|0)!=0){break}n=g|0;o=g+2|0;d7(a,530,(p=i,i=i+16|0,c[p>>2]=n,c[p+8>>2]=o,p)|0)|0;i=p;q=b[n>>1]|0;do{if((q<<16>>16|0)==1|(q<<16>>16|0)==2|(q<<16>>16|0)==4){n=b[o>>1]|0;if(!((n<<16>>16|0)==1|(n<<16>>16|0)==2|(n<<16>>16|0)==4)){r=n;break}s=q&65535;t=(aa(n,q)|0)+2&65535;u=c[k>>2]|0;if(u>>>0<(-s|0)>>>0){v=0;w=((s-1+u|0)>>>0)/(s>>>0)|0}else{v=0;w=0}s=n&65535;if(d>>>0<(-s|0)>>>0){x=0;y=((d-1+s|0)>>>0)/(s>>>0)|0}else{x=0;y=0}s=d3(a,w,v,t&65535,0,45856)|0;t=E;n=a+84|0;u=d3(a,s,t,e[n>>1]|0,0,45856)|0;z=(u&7|0)!=0|(E&0|0)!=0;u=d3(a,s,t,e[n>>1]|0,0,45856)|0;n=E;t=hy(u>>>3|n<<29,n>>>3|0<<29,z&1,0)|0;z=d3(a,t,E,y,x,45856)|0;h=E;j=z;i=f;return(E=h,j)|0}else{r=b[o>>1]|0}}while(0);cg(c[a+628>>2]|0,45856,25144,(p=i,i=i+16|0,c[p>>2]=q&65535,c[p+8>>2]=r&65535,p)|0);i=p;h=0;j=0;i=f;return(E=h,j)|0}}while(0);r=d3(a,e[a+84>>1]|0,0,l,0,27640)|0;l=E;if((b[m>>1]|0)==1){m=d3(a,r,l,e[a+98>>1]|0,0,27640)|0;A=E;B=m}else{A=l;B=r}r=hy(((B&7|0)!=0|(A&0|0)!=0)&1,0,B>>>3|A<<29,A>>>3|0<<29)|0;A=d3(a,d,0,r,E,45856)|0;h=E;j=A;i=f;return(E=h,j)|0}function dI(a){a=a|0;var b=0;b=dH(a,c[a+72>>2]|0)|0;return(E=E,b)|0}function dJ(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=dH(a,c[a+72>>2]|0)|0;e=d;if((e|0)==(d|0)&(((e|0)<0|0?-1:0)|0)==(E|0)){f=e;i=b;return f|0}cg(c[a+628>>2]|0,45928,26496,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;f=0;i=b;return f|0}function dK(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;a=c[b>>2]|0;if((a|0)<1){c[b>>2]=256;e=256}else{e=a}a=c[d>>2]|0;if((a|0)<1){c[d>>2]=256;f=c[b>>2]|0;g=256}else{f=e;g=a}if((f&15|0)==0){h=g}else{if(f>>>0<4294967280){i=f+15&-16}else{i=0}c[b>>2]=i;h=c[d>>2]|0}if((h&15|0)==0){return}if(h>>>0<4294967280){j=h+15&-16}else{j=0}c[d>>2]=j;return}function dL(a,b,c){a=a|0;b=b|0;c=c|0;return aR(a|0,b|0,c|0)|0}function dM(a,b,c){a=a|0;b=b|0;c=c|0;return aK(a|0,b|0,c|0)|0}function dN(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b;if((f|0)==(b|0)&(((f|0)<0|0?-1:0)|0)==(d|0)){d=av(a|0,f|0,e|0)|0;g=(d|0)<0|0?-1:0;h=d;return(E=g,h)|0}else{c[(a2()|0)>>2]=22;g=-1;h=-1;return(E=g,h)|0}return 0}function dO(a){a=a|0;return aA(a|0)|0}function dP(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+80|0;d=b|0;if((aO(a|0,d|0)|0)<0){e=0;f=0}else{a=c[d+36>>2]|0;e=(a|0)<0|0?-1:0;f=a}i=b;return(E=e,f)|0}function dQ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+80|0;f=e|0;g=a;if((aO(g|0,f|0)|0)<0){h=0;j=0}else{a=c[f+36>>2]|0;h=(a|0)<0|0?-1:0;j=a}a=j;if(!((a|0)==(j|0)&(((a|0)<0|0?-1:0)|0)==(h|0))){k=0;i=e;return k|0}f=a8(0,a|0,1,1,g|0,0)|0;c[b>>2]=f;if((f|0)==-1){k=0;i=e;return k|0}c[d>>2]=j;c[d+4>>2]=h;k=1;i=e;return k|0}function dR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;aN(b|0,c|0)|0;return}function dS(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=c$(b,46112)|0;if((e|0)==-1){f=0;i=d;return f|0}g=aE(a|0,e|0,(e=i,i=i+8|0,c[e>>2]=438,e)|0)|0;i=e;if((g|0)>=0){h=c0(a,b,g,6,26,40,52,40,34,6)|0;if((h|0)==0){aA(g|0)|0;f=0;i=d;return f|0}else{c[h+4>>2]=g;f=h;i=d;return f|0}}h=a2()|0;g=c[h>>2]|0;do{if((g|0)>0){if((a3(g|0)|0)==0){break}b=a3(c[h>>2]|0)|0;cg(0,46112,28584,(e=i,i=i+16|0,c[e>>2]=a,c[e+8>>2]=b,e)|0);i=e;f=0;i=d;return f|0}}while(0);cg(0,46112,39360,(e=i,i=i+8|0,c[e>>2]=a,e)|0);i=e;f=0;i=d;return f|0}function dT(a){a=a|0;return ho(a)|0}function dU(a){a=a|0;hp(a);return}function dV(a,b){a=a|0;b=b|0;return hq(a,b)|0}function dW(a,b,c){a=a|0;b=b|0;c=c|0;hv(a|0,b&255|0,c|0);return}function dX(a,b,c){a=a|0;b=b|0;c=c|0;hu(a|0,b|0,c)|0;return}function dY(a,b,c){a=a|0;b=b|0;c=c|0;return hx(a|0,b|0,c|0)|0}function dZ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=c[o>>2]|0;if((a|0)!=0){ax(f|0,33304,(g=i,i=i+8|0,c[g>>2]=a,g)|0)|0;i=g}aH(28840,9,1,f|0)|0;aW(f|0,b|0,d|0)|0;aH(30776,2,1,f|0)|0;i=e;return}function d_(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=c[o>>2]|0;if((a|0)!=0){ax(f|0,33304,(g=i,i=i+8|0,c[g>>2]=a,g)|0)|0;i=g}aW(f|0,b|0,d|0)|0;aH(30776,2,1,f|0)|0;i=e;return}function d$(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f|0;h=g|0;j=g;c[j>>2]=e;c[j+4>>2]=0;j=c[11276]|0;if((j|0)!=0){bg[j&127](b,d,h)}j=c[37196]|0;if((j|0)==0){i=f;return}bk[j&7](a,b,d,h);i=f;return}function d0(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;g=a+172|0;h=(c[g>>2]|0)+(b<<3)|0;j=c[h>>2]|0;k=c[h+4>>2]|0;h=(j|0)==0&(k|0)==0;if(h){l=4066}else{m=a+456|0;n=c[m>>2]|0;o=c[m+4>>2]|0;if((n|0)==0&(o|0)==0){l=4066}else{p=-1;q=-1;r=o;s=n}}if((l|0)==4066){if((c[a+168>>2]|0)==0){aD(40112,39488,668,44256);return 0}n=a+176|0;o=(c[n>>2]|0)+(b<<3)|0;m=c[o>>2]|0;t=c[o+4>>2]|0;do{if((m|0)==0&(t|0)==0|h){l=4072}else{o=(e|0)<0|0?-1:0;if(t>>>0<o>>>0|t>>>0==o>>>0&m>>>0<e>>>0){l=4072;break}o=a+628|0;u=ba[c[a+640>>2]&127](c[o>>2]|0,j,k,0)|0;v=E;w=(c[g>>2]|0)+(b<<3)|0;if((u|0)==(c[w>>2]|0)&(v|0)==(c[w+4>>2]|0)){x=v;y=u;break}cg(c[o>>2]|0,44256,38648,(z=i,i=i+8|0,c[z>>2]=c[a+444>>2],z)|0);i=z;A=0;i=f;return A|0}}while(0);if((l|0)==4072){l=ba[c[a+640>>2]&127](c[a+628>>2]|0,0,0,2)|0;k=(c[g>>2]|0)+(b<<3)|0;c[k>>2]=l;c[k+4>>2]=E;k=a+12|0;c[k>>2]=c[k>>2]|2097152;k=(c[g>>2]|0)+(b<<3)|0;x=c[k+4>>2]|0;y=c[k>>2]|0}k=a+456|0;c[k>>2]=y;c[k+4>>2]=x;x=(c[n>>2]|0)+(b<<3)|0;n=c[x>>2]|0;y=c[x+4>>2]|0;c[x>>2]=0;c[x+4>>2]=0;p=y;q=n;r=c[k+4>>2]|0;s=c[k>>2]|0}k=a+456|0;n=e;y=(e|0)<0|0?-1:0;x=hy(s,r,n,y)|0;g=E;l=a+12|0;j=(c[l>>2]&524288|0)==0;m=j?x|0:x;x=j?g&0:g;if(x>>>0<r>>>0|x>>>0==r>>>0&m>>>0<s>>>0|(x>>>0<y>>>0|x>>>0==y>>>0&m>>>0<n>>>0)){cg(c[a+628>>2]|0,44256,37880,(z=i,i=i+1|0,i=i+7&-8,c[z>>2]=0,z)|0);i=z;A=0;i=f;return A|0}s=a+628|0;if((be[c[a+636>>2]&63](c[s>>2]|0,d,e)|0)!=(e|0)){cg(c[s>>2]|0,44256,37056,(z=i,i=i+8|0,c[z>>2]=c[a+444>>2],z)|0);i=z;A=0;i=f;return A|0}c[k>>2]=m;c[k+4>>2]=x;x=a+176|0;a=(c[x>>2]|0)+(b<<3)|0;k=hy(c[a>>2]|0,c[a+4>>2]|0,n,y)|0;c[a>>2]=k;c[a+4>>2]=E;a=(c[x>>2]|0)+(b<<3)|0;if((c[a>>2]|0)==(q|0)&(c[a+4>>2]|0)==(p|0)){A=1;i=f;return A|0}c[l>>2]=c[l>>2]|2097152;A=1;i=f;return A|0}function d1(a){a=a|0;var b=0,d=0,f=0,g=0,h=0,i=0,j=0,k=0;b=a+608|0;d=c[b>>2]|0;if((d|0)<=0){f=1;return f|0}g=a+12|0;h=c[g>>2]|0;if((h&1048576|0)==0){f=1;return f|0}i=a+588|0;if(((e[a+94>>1]|0|256)&h|0)==0){dC(c[i>>2]|0,d);j=c[g>>2]|0;k=c[b>>2]|0}else{j=h;k=d}if((d0(a,c[((j&1024|0)==0?a+452|0:a+492|0)>>2]|0,c[i>>2]|0,k)|0)==0){f=0;return f|0}c[b>>2]=0;c[a+604>>2]=c[i>>2];f=1;return f|0}function d2(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=aa(d,b)|0;if((d|0)==0){h=g;i=f;return h|0}if(((g>>>0)/(d>>>0)|0|0)==(b|0)){h=g;i=f;return h|0}cg(c[a+628>>2]|0,e,27960,(a=i,i=i+8|0,c[a>>2]=e,a)|0);i=a;h=0;i=f;return h|0}function d3(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;j=hI(e,f,b,d)|0;k=E;if((e|0)==0&(f|0)==0){l=k;m=j;i=h;return(E=l,m)|0}n=hJ(j,k,e,f)|0;if((n|0)==(b|0)&(E|0)==(d|0)){l=k;m=j;i=h;return(E=l,m)|0}cg(c[a+628>>2]|0,g,27960,(a=i,i=i+8|0,c[a>>2]=g,a)|0);i=a;l=0;m=0;i=h;return(E=l,m)|0}function d4(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;do{if(!((d|0)==0|(e|0)==0)){h=dV(b,aa(e,d)|0)|0;if((h|0)==0){break}else{j=h}i=g;return j|0}}while(0);cg(c[a+628>>2]|0,c[a>>2]|0,38920,(a=i,i=i+24|0,c[a>>2]=f,c[a+8>>2]=d,c[a+16>>2]=e,a)|0);i=a;j=0;i=g;return j|0}function d5(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;do{if(!((b|0)==0|(d|0)==0)){g=dV(0,aa(d,b)|0)|0;if((g|0)==0){break}else{h=g}i=f;return h|0}}while(0);cg(c[a+628>>2]|0,c[a>>2]|0,38920,(a=i,i=i+24|0,c[a>>2]=e,c[a+8>>2]=b,c[a+16>>2]=d,a)|0);i=a;h=0;i=f;return h|0}function d6(a,d,f){a=a|0;d=d|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0,u=0,w=0,x=0;h=i;if((bI(a,d,f)|0)!=0){j=1;i=h;return j|0}if((d|0)==296){k=b[a+124>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=k;j=1;i=h;return j|0}else if((d|0)==274){k=b[a+96>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=k;j=1;i=h;return j|0}else if((d|0)==254){k=c[a+80>>2]|0;c[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>2]=k;j=1;i=h;return j|0}else if((d|0)==280){k=b[a+104>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=k;j=1;i=h;return j|0}else if((d|0)==278){k=c[a+100>>2]|0;c[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>2]=k;j=1;i=h;return j|0}else if((d|0)==263){k=b[a+92>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=k;j=1;i=h;return j|0}else if((d|0)==281){k=b[a+106>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=k;j=1;i=h;return j|0}else if((d|0)==338){k=b[a+156>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=k;k=c[a+160>>2]|0;c[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>2]=k;j=1;i=h;return j|0}else if((d|0)==258){k=b[a+84>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=k;j=1;i=h;return j|0}else if((d|0)==284){k=b[a+126>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=k;j=1;i=h;return j|0}else if((d|0)==266){k=b[a+94>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=k;j=1;i=h;return j|0}else if((d|0)==301){k=a+200|0;L5452:do{if((c[k>>2]|0)==0){l=a+208|0;c[l>>2]=0;m=a+204|0;c[m>>2]=0;c[k>>2]=0;n=b[a+84>>1]|0;do{if((n&65535)<=29){o=1<<(n&65535);p=o<<1;q=dT(p)|0;r=q;c[k>>2]=r;if((q|0)==0){break}b[r>>1]=0;if((o|0)>1){s=+(o|0)+-1.0;r=1;do{q=~~+O(+(+R(+(+(r|0)/s),2.2)*65535.0+.5));b[(c[k>>2]|0)+(r<<1)>>1]=q;r=r+1|0;}while((r|0)<(o|0))}o=a+98|0;r=a+156|0;if(((e[o>>1]|0)-(e[r>>1]|0)|0)<=1){t=o;u=r;break L5452}q=dT(p)|0;c[m>>2]=q;do{if((q|0)!=0){dX(q,c[k>>2]|0,p);w=dT(p)|0;c[l>>2]=w;if((w|0)==0){break}dX(w,c[k>>2]|0,p);t=o;u=r;break L5452}}while(0);r=c[k>>2]|0;if((r|0)!=0){dU(r)}r=c[m>>2]|0;if((r|0)!=0){dU(r)}r=c[l>>2]|0;if((r|0)!=0){dU(r)}c[l>>2]=0;c[m>>2]=0;c[k>>2]=0}}while(0);cg(c[a+628>>2]|0,c[a>>2]|0,33200,(m=i,i=i+1|0,i=i+7&-8,c[m>>2]=0,m)|0);i=m;j=0;i=h;return j|0}else{t=a+98|0;u=a+156|0}}while(0);m=c[k>>2]|0;c[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>2]=m;if(((e[t>>1]|0)-(e[u>>1]|0)|0)<=1){j=1;i=h;return j|0}u=c[a+204>>2]|0;c[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>2]=u;u=c[a+208>>2]|0;c[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>2]=u;j=1;i=h;return j|0}else if((d|0)==332){b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=1;j=1;i=h;return j|0}else if((d|0)==531){u=b[a+196>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=u;j=1;i=h;return j|0}else if((d|0)==32996){u=(b[a+86>>1]|0)-1&65535;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=u;j=1;i=h;return j|0}else if((d|0)==339){u=b[a+86>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=u;j=1;i=h;return j|0}else if((d|0)==32997){u=c[a+64>>2]|0;c[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>2]=u;j=1;i=h;return j|0}else if((d|0)==334){b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=4;j=1;i=h;return j|0}else if((d|0)==317){u=c[c[a+576>>2]>>2]&65535;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=u;j=1;i=h;return j|0}else if((d|0)==277){u=b[a+98>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=u;j=1;i=h;return j|0}else if((d|0)==32998){u=c[a+76>>2]|0;c[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>2]=u;j=1;i=h;return j|0}else if((d|0)==318){g[37202]=.3457419276237488;g[37203]=.3585604429244995;c[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>2]=148808;j=1;i=h;return j|0}else if((d|0)==32995){if((b[a+156>>1]|0)==1){x=(b[c[a+160>>2]>>1]|0)==1|0}else{x=0}b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=x;j=1;i=h;return j|0}else if((d|0)==529){c[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>2]=45912;j=1;i=h;return j|0}else if((d|0)==530){x=b[a+192>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=x;x=b[a+194>>1]|0;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=x;j=1;i=h;return j|0}else if((d|0)==532){x=a+212|0;do{if((c[x>>2]|0)==0){u=dT(24)|0;t=u;c[x>>2]=t;if((u|0)==0){j=0;i=h;return j|0}if((b[a+90>>1]|0)==6){g[t>>2]=0.0;g[(c[x>>2]|0)+20>>2]=255.0;g[(c[x>>2]|0)+12>>2]=255.0;g[(c[x>>2]|0)+4>>2]=255.0;g[(c[x>>2]|0)+16>>2]=128.0;g[(c[x>>2]|0)+8>>2]=128.0;break}else{u=a+84|0;g[t>>2]=0.0;g[(c[x>>2]|0)+4>>2]=+((1<<e[u>>1])-1|0);g[(c[x>>2]|0)+8>>2]=0.0;g[(c[x>>2]|0)+12>>2]=+((1<<e[u>>1])-1|0);g[(c[x>>2]|0)+16>>2]=0.0;g[(c[x>>2]|0)+20>>2]=+((1<<e[u>>1])-1|0);break}}}while(0);u=c[x>>2]|0;c[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>2]=u;j=1;i=h;return j|0}else if((d|0)==336){b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=0;d=(1<<e[a+84>>1])+65535&65535;b[(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)>>1]=d;j=1;i=h;return j|0}else{j=0;i=h;return j|0}return 0}function d7(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e|0;g=f;c[g>>2]=d;c[g+4>>2]=0;g=d6(a,b,f|0)|0;i=e;return g|0}function d8(a,b,c,d,e,f,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,k=0.0,l=0.0,m=0.0;i=+(b>>>0>>>0)*100.0/255.0;if(i<8.855999946594238){b=a+20|0;j=i*+g[b>>2]/903.2919921875;g[f>>2]=j;k=j/+g[b>>2]*7.7870001792907715+.13793103396892548}else{j=(i+16.0)/116.0;g[f>>2]=j*j*j*+g[a+20>>2];k=j}j=k+ +(c|0)/500.0;i=+g[a+16>>2];if(j<.2069000005722046){l=i*(j+-.1379300057888031)/7.7870001792907715}else{l=j*j*i*j}g[e>>2]=l;l=k- +(d|0)/200.0;k=+g[a+24>>2];if(l<.2069000005722046){m=k*(l+-.1379300057888031)/7.7870001792907715;g[h>>2]=m;return}else{m=l*l*k*l;g[h>>2]=m;return}}function d9(a,b,d,e,f,h,i){a=a|0;b=+b;d=+d;e=+e;f=f|0;h=h|0;i=i|0;var j=0.0,k=0.0,l=0.0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;j=+g[a+28>>2]*b+ +g[a+32>>2]*d+ +g[a+36>>2]*e;k=+g[a+40>>2]*b+ +g[a+44>>2]*d+ +g[a+48>>2]*e;l=+g[a+52>>2]*b+ +g[a+56>>2]*d+ +g[a+60>>2]*e;e=+g[a+88>>2];d=j>e?j:e;m=a+92|0;j=+g[m>>2];b=k>j?k:j;n=a+96|0;j=+g[n>>2];k=l>j?l:j;j=+g[a+64>>2];l=+g[a+68>>2];o=+g[a+72>>2];p=~~(((d<j?d:j)-e)/+g[a+4>>2]);q=a|0;r=c[q>>2]|0;e=+g[a+112+(((r|0)<(p|0)?r:p)<<2)>>2];j=e;if(e>0.0){s=j+.5}else{s=j+-.5}c[f>>2]=~~s;p=~~(((b<l?b:l)- +g[m>>2])/+g[a+8>>2]);m=c[q>>2]|0;l=+g[a+6116+(((m|0)<(p|0)?m:p)<<2)>>2];b=l;if(l>0.0){t=b+.5}else{t=b+-.5}c[h>>2]=~~t;p=~~(((k<o?k:o)- +g[n>>2])/+g[a+12>>2]);n=c[q>>2]|0;o=+g[a+12120+(((n|0)<(p|0)?n:p)<<2)>>2];k=o;if(o>0.0){u=k+.5;v=~~u;c[i>>2]=v;w=c[f>>2]|0;x=a+76|0;y=c[x>>2]|0;z=w>>>0<y>>>0;A=z?w:y;c[f>>2]=A;B=c[h>>2]|0;C=a+80|0;D=c[C>>2]|0;E=B>>>0<D>>>0;F=E?B:D;c[h>>2]=F;G=c[i>>2]|0;H=a+84|0;I=c[H>>2]|0;J=G>>>0<I>>>0;K=J?G:I;c[i>>2]=K;return}else{u=k+-.5;v=~~u;c[i>>2]=v;w=c[f>>2]|0;x=a+76|0;y=c[x>>2]|0;z=w>>>0<y>>>0;A=z?w:y;c[f>>2]=A;B=c[h>>2]|0;C=a+80|0;D=c[C>>2]|0;E=B>>>0<D>>>0;F=E?B:D;c[h>>2]=F;G=c[i>>2]|0;H=a+84|0;I=c[H>>2]|0;J=G>>>0<I>>>0;K=J?G:I;c[i>>2]=K;return}}function ea(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0,j=0.0,k=0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0,u=0.0,v=0,w=0,x=0.0,y=0,z=0,A=0.0,B=0;e=a|0;c[e>>2]=1500;dX(a+28|0,b,84);f=1.0/+g[a+100>>2];b=a+64|0;h=+g[b>>2];i=a+88|0;j=+g[i>>2];k=c[e>>2]|0;g[a+4>>2]=(h-j)/+(k|0);if((k|0)<0){l=h;m=j;n=k}else{o=a+76|0;p=0;q=k;do{j=+((c[o>>2]|0)>>>0>>>0);g[a+112+(p<<2)>>2]=j*+R(+(+(p|0)/+(q|0)),+f);p=p+1|0;q=c[e>>2]|0;}while((p|0)<=(q|0));l=+g[b>>2];m=+g[i>>2];n=q}f=1.0/+g[a+104>>2];g[a+8>>2]=(l-m)/+(n|0);if((n|0)<0){r=l;s=m;t=n}else{q=a+80|0;p=0;o=n;do{m=+((c[q>>2]|0)>>>0>>>0);g[a+6116+(p<<2)>>2]=m*+R(+(+(p|0)/+(o|0)),+f);p=p+1|0;o=c[e>>2]|0;}while((p|0)<=(o|0));r=+g[b>>2];s=+g[i>>2];t=o}f=1.0/+g[a+108>>2];g[a+12>>2]=(r-s)/+(t|0);if((t|0)<0){u=+g[d>>2];v=a+16|0;g[v>>2]=u;w=d+4|0;x=+g[w>>2];y=a+20|0;g[y>>2]=x;z=d+8|0;A=+g[z>>2];B=a+24|0;g[B>>2]=A;return 0}o=a+84|0;i=0;b=t;do{s=+((c[o>>2]|0)>>>0>>>0);g[a+12120+(i<<2)>>2]=s*+R(+(+(i|0)/+(b|0)),+f);i=i+1|0;b=c[e>>2]|0;}while((i|0)<=(b|0));u=+g[d>>2];v=a+16|0;g[v>>2]=u;w=d+4|0;x=+g[w>>2];y=a+20|0;g[y>>2]=x;z=d+8|0;A=+g[z>>2];B=a+24|0;g[B>>2]=A;return 0}function eb(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0;i=b>>>0>255?255:b;if((d|0)<0){j=0}else{j=(d|0)>255?255:d}if((e|0)<0){k=0}else{k=(e|0)>255?255:e}e=a+20|0;d=(c[(c[a+4>>2]|0)+(k<<2)>>2]|0)+(c[(c[e>>2]|0)+(i<<2)>>2]|0)|0;if((d|0)<0){l=0}else{l=(d|0)>255?255:d}c[f>>2]=l;l=((c[(c[a+12>>2]|0)+(k<<2)>>2]|0)+(c[(c[a+16>>2]|0)+(j<<2)>>2]|0)>>16)+(c[(c[e>>2]|0)+(i<<2)>>2]|0)|0;if((l|0)<0){m=0}else{m=(l|0)>255?255:l}c[g>>2]=m;m=(c[(c[a+8>>2]|0)+(j<<2)>>2]|0)+(c[(c[e>>2]|0)+(i<<2)>>2]|0)|0;if((m|0)<0){n=0;c[h>>2]=n;return}n=(m|0)>255?255:m;c[h>>2]=n;return}function ec(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;dW(b+24|0,0,256);f=b+280|0;h=f;c[b>>2]=h;i=0;do{a[h+i|0]=i&255;i=i+1|0;}while((i|0)<256);dW(f+256|0,255,512);i=f+768|0;h=b+4|0;c[h>>2]=i;j=b+8|0;c[j>>2]=f+1792;k=b+12|0;c[k>>2]=f+2816;l=b+16|0;c[l>>2]=f+3840;m=b+20|0;c[m>>2]=f+4864;n=+g[d>>2];o=2.0-n*2.0;f=~~(o*65536.0+.5);p=+g[d+4>>2];b=-~~(n*o/p*65536.0+.5)|0;o=+g[d+8>>2];n=2.0-o*2.0;d=~~(n*65536.0+.5);q=~~(o*n/p*65536.0+.5);r=e+16|0;s=e+20|0;t=e+8|0;u=e+12|0;v=e+4|0;w=-128;x=0;y=i;while(1){p=+g[r>>2]+-128.0;n=+g[s>>2]+-128.0-p;i=~~(+(w-~~p|0)*127.0/(n!=0.0?n:1.0));n=+g[t>>2]+-128.0;p=+g[u>>2]+-128.0-n;z=~~(+(w-~~n|0)*127.0/(p!=0.0?p:1.0));c[y+(x<<2)>>2]=(aa(i,f)|0)+32768>>16;A=(aa(z,d)|0)+32768>>16;c[(c[j>>2]|0)+(x<<2)>>2]=A;A=aa(i,b)|0;c[(c[k>>2]|0)+(x<<2)>>2]=A;A=32768-(aa(z,q)|0)|0;c[(c[l>>2]|0)+(x<<2)>>2]=A;p=+g[e>>2];n=+g[v>>2]-p;c[(c[m>>2]|0)+(x<<2)>>2]=~~(+(w+128-~~p|0)*255.0/(n!=0.0?n:1.0));A=x+1|0;if((A|0)>=256){break}w=w+1|0;x=A;y=c[h>>2]|0}return 0}function ed(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;e=b[a+88>>1]|0;d=147848;while(1){g=c[d>>2]|0;if((g|0)==0){h=45200;j=4273;break}k=c[g+4>>2]|0;if((b[k+4>>1]|0)==e<<16>>16){l=k;j=4276;break}else{d=g|0}}L5603:do{if((j|0)==4273){while(1){j=0;if((c[h>>2]|0)==0){break}if((b[h+4>>1]|0)==e<<16>>16){l=h;j=4276;break L5603}else{h=h+12|0;j=4273}}m=c[a+628>>2]|0;n=c[a>>2]|0}}while(0);do{if((j|0)==4276){h=c[a+628>>2]|0;d=c[a>>2]|0;if((l|0)==0){m=h;n=d;break}cg(h,d,41896,(o=i,i=i+16|0,c[o>>2]=c[l>>2],c[o+8>>2]=27792,o)|0);i=o;i=f;return-1|0}}while(0);cg(m,n,41232,(o=i,i=i+16|0,c[o>>2]=e&65535,c[o+8>>2]=27792,o)|0);i=o;i=f;return-1|0}function ee(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;e=b[a+88>>1]|0;d=147848;while(1){g=c[d>>2]|0;if((g|0)==0){h=45200;j=4285;break}k=c[g+4>>2]|0;if((b[k+4>>1]|0)==e<<16>>16){l=k;j=4288;break}else{d=g|0}}L5618:do{if((j|0)==4285){while(1){j=0;if((c[h>>2]|0)==0){break}if((b[h+4>>1]|0)==e<<16>>16){l=h;j=4288;break L5618}else{h=h+12|0;j=4285}}m=c[a+628>>2]|0;n=c[a>>2]|0}}while(0);do{if((j|0)==4288){h=c[a+628>>2]|0;d=c[a>>2]|0;if((l|0)==0){m=h;n=d;break}cg(h,d,41896,(o=i,i=i+16|0,c[o>>2]=c[l>>2],c[o+8>>2]=38768,o)|0);i=o;i=f;return-1|0}}while(0);cg(m,n,41232,(o=i,i=i+16|0,c[o>>2]=e&65535,c[o+8>>2]=38768,o)|0);i=o;i=f;return-1|0}function ef(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;e=b[a+88>>1]|0;d=147848;while(1){g=c[d>>2]|0;if((g|0)==0){h=45200;j=4297;break}k=c[g+4>>2]|0;if((b[k+4>>1]|0)==e<<16>>16){l=k;j=4300;break}else{d=g|0}}L5633:do{if((j|0)==4297){while(1){j=0;if((c[h>>2]|0)==0){break}if((b[h+4>>1]|0)==e<<16>>16){l=h;j=4300;break L5633}else{h=h+12|0;j=4297}}m=c[a+628>>2]|0;n=c[a>>2]|0}}while(0);do{if((j|0)==4300){h=c[a+628>>2]|0;d=c[a>>2]|0;if((l|0)==0){m=h;n=d;break}cg(h,d,41896,(o=i,i=i+16|0,c[o>>2]=c[l>>2],c[o+8>>2]=33112,o)|0);i=o;i=f;return-1|0}}while(0);cg(m,n,41232,(o=i,i=i+16|0,c[o>>2]=e&65535,c[o+8>>2]=33112,o)|0);i=o;i=f;return-1|0}function eg(a){a=a|0;return 1}function eh(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;e=b[a+88>>1]|0;d=147848;while(1){g=c[d>>2]|0;if((g|0)==0){h=45200;j=4310;break}k=c[g+4>>2]|0;if((b[k+4>>1]|0)==e<<16>>16){l=k;j=4313;break}else{d=g|0}}L5649:do{if((j|0)==4310){while(1){j=0;if((c[h>>2]|0)==0){break}if((b[h+4>>1]|0)==e<<16>>16){l=h;j=4313;break L5649}else{h=h+12|0;j=4310}}m=c[a+628>>2]|0;n=c[a>>2]|0}}while(0);do{if((j|0)==4313){h=c[a+628>>2]|0;d=c[a>>2]|0;if((l|0)==0){m=h;n=d;break}cg(h,d,23872,(o=i,i=i+16|0,c[o>>2]=c[l>>2],c[o+8>>2]=27792,o)|0);i=o;i=f;return-1|0}}while(0);cg(m,n,23080,(o=i,i=i+16|0,c[o>>2]=e&65535,c[o+8>>2]=27792,o)|0);i=o;i=f;return-1|0}function ei(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;e=b[a+88>>1]|0;d=147848;while(1){g=c[d>>2]|0;if((g|0)==0){h=45200;j=4322;break}k=c[g+4>>2]|0;if((b[k+4>>1]|0)==e<<16>>16){l=k;j=4325;break}else{d=g|0}}L5664:do{if((j|0)==4322){while(1){j=0;if((c[h>>2]|0)==0){break}if((b[h+4>>1]|0)==e<<16>>16){l=h;j=4325;break L5664}else{h=h+12|0;j=4322}}m=c[a+628>>2]|0;n=c[a>>2]|0}}while(0);do{if((j|0)==4325){h=c[a+628>>2]|0;d=c[a>>2]|0;if((l|0)==0){m=h;n=d;break}cg(h,d,23872,(o=i,i=i+16|0,c[o>>2]=c[l>>2],c[o+8>>2]=38768,o)|0);i=o;i=f;return-1|0}}while(0);cg(m,n,23080,(o=i,i=i+16|0,c[o>>2]=e&65535,c[o+8>>2]=38768,o)|0);i=o;i=f;return-1|0}function ej(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;e=b[a+88>>1]|0;d=147848;while(1){g=c[d>>2]|0;if((g|0)==0){h=45200;j=4334;break}k=c[g+4>>2]|0;if((b[k+4>>1]|0)==e<<16>>16){l=k;j=4337;break}else{d=g|0}}L5679:do{if((j|0)==4334){while(1){j=0;if((c[h>>2]|0)==0){break}if((b[h+4>>1]|0)==e<<16>>16){l=h;j=4337;break L5679}else{h=h+12|0;j=4334}}m=c[a+628>>2]|0;n=c[a>>2]|0}}while(0);do{if((j|0)==4337){h=c[a+628>>2]|0;d=c[a>>2]|0;if((l|0)==0){m=h;n=d;break}cg(h,d,23872,(o=i,i=i+16|0,c[o>>2]=c[l>>2],c[o+8>>2]=33112,o)|0);i=o;i=f;return-1|0}}while(0);cg(m,n,23080,(o=i,i=i+16|0,c[o>>2]=e&65535,c[o+8>>2]=33112,o)|0);i=o;i=f;return-1|0}function ek(a,b){a=a|0;b=b|0;b=i;cg(c[a+628>>2]|0,c[a>>2]|0,30608,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;i=b;return 0}function el(a,b){a=a|0;b=b|0;return 1}function em(a){a=a|0;var b=0;c[a+504>>2]=48;c[a+500>>2]=1;c[a+508>>2]=44;c[a+512>>2]=8;c[a+532>>2]=50;c[a+540>>2]=86;c[a+548>>2]=8;c[a+520>>2]=1;c[a+516>>2]=44;c[a+524>>2]=8;c[a+528>>2]=44;c[a+536>>2]=42;c[a+544>>2]=78;c[a+552>>2]=70;c[a+556>>2]=18;c[a+560>>2]=24;c[a+564>>2]=18;c[a+568>>2]=6;c[a+572>>2]=38;b=a+12|0;c[b>>2]=c[b>>2]&-131329;return}function en(a){a=a|0;return 1}function eo(a){a=a|0;return}function ep(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=d&65535;f=147848;while(1){g=c[f>>2]|0;if((g|0)==0){h=45200;i=4351;break}j=c[g+4>>2]|0;if((b[j+4>>1]|0)==e<<16>>16){k=j;break}else{f=g|0}}L5699:do{if((i|0)==4351){while(1){i=0;if((c[h>>2]|0)==0){k=0;break L5699}if((b[h+4>>1]|0)==e<<16>>16){k=h;break}else{h=h+12|0;i=4351}}}}while(0);c[a+504>>2]=48;c[a+500>>2]=1;c[a+508>>2]=44;c[a+512>>2]=8;c[a+532>>2]=50;c[a+540>>2]=86;c[a+548>>2]=8;c[a+520>>2]=1;c[a+516>>2]=44;c[a+524>>2]=8;c[a+528>>2]=44;c[a+536>>2]=42;c[a+544>>2]=78;c[a+552>>2]=70;c[a+556>>2]=18;c[a+560>>2]=24;c[a+564>>2]=18;c[a+568>>2]=6;c[a+572>>2]=38;i=a+12|0;c[i>>2]=c[i>>2]&-131329;if((k|0)==0){l=1;return l|0}l=bj[c[k+8>>2]&63](a,d)|0;return l|0}function eq(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=147848;while(1){e=c[d>>2]|0;if((e|0)==0){f=45200;break}g=c[e+4>>2]|0;if((b[g+4>>1]|0)==a<<16>>16){h=g;i=4364;break}else{d=e|0}}if((i|0)==4364){return h|0}while(1){if((c[f>>2]|0)==0){h=0;i=4366;break}if((b[f+4>>1]|0)==a<<16>>16){h=f;i=4365;break}else{f=f+12|0}}if((i|0)==4365){return h|0}else if((i|0)==4366){return h|0}return 0}function er(d,f,h,j){d=d|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,bc=0,bd=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bI=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0,ca=0,cb=0,cc=0,cd=0,ce=0,cf=0,ch=0,ci=0,cj=0,ck=0,cl=0,cm=0,cn=0,co=0,cp=0,cq=0,cr=0,cs=0,ct=0,cu=0,cv=0,cw=0,cx=0,cy=0,cz=0,cA=0,cB=0,cC=0,cD=0,cE=0,cF=0,cG=0,cH=0,cI=0,cJ=0,cK=0,cL=0,cM=0,cN=0,cO=0,cP=0,cQ=0,cR=0,cS=0,cT=0,cU=0,cV=0,cW=0,cX=0,cY=0,cZ=0,c_=0,c$=0,c0=0,c1=0.0,c2=0,c3=0,c4=0,c5=0,c6=0,c7=0,c8=0,c9=0,da=0,db=0,dc=0,dd=0,de=0,df=0,dg=0,dh=0,di=0,dj=0,dk=0,dl=0,dm=0;k=i;i=i+328|0;l=k|0;m=k+8|0;n=k+16|0;o=k+24|0;p=k+32|0;q=k+40|0;r=k+48|0;s=k+56|0;t=k+64|0;u=k+72|0;v=k+80|0;w=k+88|0;x=k+96|0;y=k+104|0;z=k+112|0;A=k+120|0;B=k+128|0;C=k+136|0;D=k+144|0;F=k+152|0;G=k+160|0;H=k+168|0;I=k+176|0;J=k+184|0;K=k+192|0;L=k+200|0;M=k+208|0;N=k+216|0;O=k+224|0;P=k+232|0;Q=k+240|0;R=k+248|0;S=k+256|0;T=k+264|0;U=k+272|0;V=k+280|0;W=k+288|0;X=k+296|0;Y=k+304|0;Z=k+312|0;_=k+320|0;if((c[d+8>>2]|0)==0){$=1;i=k;return $|0}b2(d)|0;aa=(h|0)!=0;h=d+12|0;if(aa){ab=c[h>>2]|0;do{if((ab&4096|0)!=0){c[h>>2]=ab&-4097;if((bf[c[d+528>>2]&63](d)|0)!=0){break}cg(c[d+628>>2]|0,43896,39440,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;$=0;i=k;return $|0}}while(0);bb[c[d+556>>2]&31](d);ab=d+608|0;do{if((c[ab>>2]|0)>0){if((c[h>>2]&64|0)==0){break}if((d1(d)|0)!=0){break}cg(c[d+628>>2]|0,43896,38600,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;$=0;i=k;return $|0}}while(0);ad=c[h>>2]|0;do{if((ad&512|0)==0){ae=ad}else{af=d+588|0;ag=c[af>>2]|0;if((ag|0)==0){ae=ad;break}dU(ag);c[ab>>2]=0;hv(af|0,0,16);ae=c[h>>2]|0}}while(0);c[h>>2]=ae&-81}ae=(f|0)!=0;f=d+40|0;ab=d+156|0;ad=d+44|0;af=d+184|0;ag=d+464|0;ah=d+188|0;ai=d+472|0;aj=d+480|0;ak=d+660|0;al=d+656|0;am=z;an=y;ao=d+216|0;ap=d+220|0;aq=d+84|0;ar=d+98|0;as=d+200|0;at=d+208|0;au=d+204|0;av=d+212|0;aw=d+196|0;ax=A;ay=d+192|0;az=ay;aA=d+152|0;aB=aA;aC=d+76|0;aE=B;aF=d+64|0;aG=C;aH=d+112|0;aI=d+108|0;aJ=d+86|0;aK=d+140|0;aL=d+144|0;aM=d+148|0;aN=d+168|0;aO=d+172|0;aP=d+176|0;aQ=d+136|0;aR=aQ;aS=d+124|0;aT=D;aU=d+126|0;aV=F;aW=d+106|0;aX=d+104|0;aY=d+100|0;aZ=G;a_=l;a$=H;a0=d+96|0;a1=I;a2=d+94|0;a3=J;a4=d+92|0;a5=K;a6=d+90|0;a7=L;a8=d+88|0;a9=M;bc=d+80|0;bd=N;bg=d+128|0;bh=d+132|0;bi=d+116|0;bj=d+120|0;bk=d+68|0;bl=d+72|0;bm=O;bn=m;bo=P;bp=n;bq=d+56|0;br=d+60|0;bs=Q;bt=o;bu=R;bv=p;bw=d+224|0;bx=d+16|0;by=q;bz=r;bA=s;bB=t;bC=u;bD=v;bE=w;bF=x;bG=d+640|0;bI=d+628|0;bL=d+432|0;bM=d+636|0;bN=d+632|0;bO=d+428|0;bP=(j|0)==0;bQ=d+448|0;bR=d+228|0;bS=0;bT=0;L5742:while(1){c[S>>2]=0;do{if(ae){L5746:do{if((c[f>>2]&2|0)!=0){bU=c[bq>>2]|0;bV=(bS|0)==0;do{if(bV){c[S>>2]=1}else{if(bU>>>0<65536){b[R>>1]=bU&65535;if((c[h>>2]&128|0)!=0){ds(R)}bW=ey(d,S,bS,256,3,1,2,bu)|0}else{c[p>>2]=bU;if((c[h>>2]&128|0)!=0){dt(p)}bW=ey(d,S,bS,256,4,1,4,bv)|0}if((bW|0)==0){bX=bS;bY=4967;break L5742}bZ=c[br>>2]|0;if(bV){break}if(bZ>>>0<65536){b[Q>>1]=bZ&65535;if((c[h>>2]&128|0)!=0){ds(Q)}b_=ey(d,S,bS,257,3,1,2,bs)|0}else{c[o>>2]=bZ;if((c[h>>2]&128|0)!=0){dt(o)}b_=ey(d,S,bS,257,4,1,4,bt)|0}if((b_|0)==0){bX=bS;bY=4967;break L5742}else{break L5746}}}while(0);c[S>>2]=(c[S>>2]|0)+1}}while(0);L5775:do{if((c[f>>2]&4|0)!=0){bV=c[bk>>2]|0;bU=(bS|0)==0;do{if(bU){c[S>>2]=(c[S>>2]|0)+1}else{if(bV>>>0<65536){b[P>>1]=bV&65535;if((c[h>>2]&128|0)!=0){ds(P)}b$=ey(d,S,bS,322,3,1,2,bo)|0}else{c[n>>2]=bV;if((c[h>>2]&128|0)!=0){dt(n)}b$=ey(d,S,bS,322,4,1,4,bp)|0}if((b$|0)==0){bX=bS;bY=4967;break L5742}bZ=c[bl>>2]|0;if(bU){break}if(bZ>>>0<65536){b[O>>1]=bZ&65535;if((c[h>>2]&128|0)!=0){ds(O)}b0=ey(d,S,bS,323,3,1,2,bm)|0}else{c[m>>2]=bZ;if((c[h>>2]&128|0)!=0){dt(m)}b0=ey(d,S,bS,323,4,1,4,bn)|0}if((b0|0)==0){bX=bS;bY=4967;break L5742}else{break L5775}}}while(0);c[S>>2]=(c[S>>2]|0)+1}}while(0);bU=c[f>>2]|0;if((bU&8|0)==0){b1=bU}else{if((eu(d,S,bS,282,+g[bi>>2])|0)==0){bX=bS;bY=4967;break L5742}if((eu(d,S,bS,283,+g[bj>>2])|0)==0){bX=bS;bY=4967;break L5742}b1=c[f>>2]|0}if((b1&16|0)==0){b3=b1}else{if((eu(d,S,bS,286,+g[bg>>2])|0)==0){bX=bS;bY=4967;break L5742}if((eu(d,S,bS,287,+g[bh>>2])|0)==0){bX=bS;bY=4967;break L5742}b3=c[f>>2]|0}do{if((b3&32|0)==0){b4=b3}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;b4=b3;break}c[N>>2]=c[bc>>2];if((c[h>>2]&128|0)!=0){dt(N)}if((ey(d,S,bS,254,4,1,4,bd)|0)==0){bX=bS;bY=4967;break L5742}b4=c[f>>2]|0}}while(0);do{if((b4&64|0)==0){b5=b4}else{bU=b[aq>>1]|0;if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;b5=b4;break}bV=dT(e[ar>>1]<<1)|0;bZ=bV;if((bV|0)==0){bY=4444;break L5742}if((b[ar>>1]|0)==0){b6=0}else{b7=bZ;b8=0;while(1){b[b7>>1]=bU;b9=b8+1&65535;ca=b[ar>>1]|0;if((b9&65535)<(ca&65535)){b7=b7+2|0;b8=b9}else{break}}b6=ca&65535}if((c[h>>2]&128|0)!=0){dv(bZ,b6)}b8=ey(d,S,bS,258,3,b6,b6<<1,bV)|0;dU(bV);if((b8|0)==0){bX=bS;bY=4967;break L5742}b5=c[f>>2]|0}}while(0);do{if((b5&128|0)==0){cb=b5}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cb=b5;break}b[M>>1]=b[a8>>1]|0;if((c[h>>2]&128|0)!=0){ds(M)}if((ey(d,S,bS,259,3,1,2,a9)|0)==0){bX=bS;bY=4967;break L5742}cb=c[f>>2]|0}}while(0);do{if((cb&256|0)==0){cc=cb}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cc=cb;break}b[L>>1]=b[a6>>1]|0;if((c[h>>2]&128|0)!=0){ds(L)}if((ey(d,S,bS,262,3,1,2,a7)|0)==0){bX=bS;bY=4967;break L5742}cc=c[f>>2]|0}}while(0);do{if((cc&512|0)==0){cd=cc}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cd=cc;break}b[K>>1]=b[a4>>1]|0;if((c[h>>2]&128|0)!=0){ds(K)}if((ey(d,S,bS,263,3,1,2,a5)|0)==0){bX=bS;bY=4967;break L5742}cd=c[f>>2]|0}}while(0);do{if((cd&1024|0)==0){ce=cd}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;ce=cd;break}b[J>>1]=b[a2>>1]|0;if((c[h>>2]&128|0)!=0){ds(J)}if((ey(d,S,bS,266,3,1,2,a3)|0)==0){bX=bS;bY=4967;break L5742}ce=c[f>>2]|0}}while(0);do{if((ce&32768|0)==0){cf=ce}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cf=ce;break}b[I>>1]=b[a0>>1]|0;if((c[h>>2]&128|0)!=0){ds(I)}if((ey(d,S,bS,274,3,1,2,a1)|0)==0){bX=bS;bY=4967;break L5742}cf=c[f>>2]|0}}while(0);do{if((cf&65536|0)==0){ch=cf}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;ch=cf;break}b[H>>1]=b[ar>>1]|0;if((c[h>>2]&128|0)!=0){ds(H)}if((ey(d,S,bS,277,3,1,2,a$)|0)==0){bX=bS;bY=4967;break L5742}ch=c[f>>2]|0}}while(0);do{if((ch&131072|0)==0){ci=ch}else{b8=c[aY>>2]|0;if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;ci=ch;break}if(b8>>>0<65536){b[G>>1]=b8&65535;if((c[h>>2]&128|0)!=0){ds(G)}cj=ey(d,S,bS,278,3,1,2,aZ)|0}else{c[l>>2]=b8;if((c[h>>2]&128|0)!=0){dt(l)}cj=ey(d,S,bS,278,4,1,4,a_)|0}if((cj|0)==0){bX=bS;bY=4967;break L5742}ci=c[f>>2]|0}}while(0);do{if((ci&262144|0)==0){ck=ci}else{b8=b[aX>>1]|0;if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;ck=ci;break}b7=dT(e[ar>>1]<<1)|0;bU=b7;if((b7|0)==0){bY=4510;break L5742}if((b[ar>>1]|0)==0){cl=0}else{b9=bU;cm=0;while(1){b[b9>>1]=b8;cn=cm+1&65535;co=b[ar>>1]|0;if((cn&65535)<(co&65535)){b9=b9+2|0;cm=cn}else{break}}cl=co&65535}if((c[h>>2]&128|0)!=0){dv(bU,cl)}cm=ey(d,S,bS,280,3,cl,cl<<1,b7)|0;dU(b7);if((cm|0)==0){bX=bS;bY=4967;break L5742}ck=c[f>>2]|0}}while(0);do{if((ck&524288|0)==0){cp=ck}else{cm=b[aW>>1]|0;if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cp=ck;break}b9=dT(e[ar>>1]<<1)|0;b8=b9;if((b9|0)==0){bY=4522;break L5742}if((b[ar>>1]|0)==0){cq=0}else{bV=b8;bZ=0;while(1){b[bV>>1]=cm;cn=bZ+1&65535;cr=b[ar>>1]|0;if((cn&65535)<(cr&65535)){bV=bV+2|0;bZ=cn}else{break}}cq=cr&65535}if((c[h>>2]&128|0)!=0){dv(b8,cq)}bZ=ey(d,S,bS,281,3,cq,cq<<1,b9)|0;dU(b9);if((bZ|0)==0){bX=bS;bY=4967;break L5742}cp=c[f>>2]|0}}while(0);do{if((cp&1048576|0)==0){cs=cp}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cs=cp;break}b[F>>1]=b[aU>>1]|0;if((c[h>>2]&128|0)!=0){ds(F)}if((ey(d,S,bS,284,3,1,2,aV)|0)==0){bX=bS;bY=4967;break L5742}cs=c[f>>2]|0}}while(0);do{if((cs&4194304|0)==0){ct=cs}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;ct=cs;break}b[D>>1]=b[aS>>1]|0;if((c[h>>2]&128|0)!=0){ds(D)}if((ey(d,S,bS,296,3,1,2,aT)|0)==0){bX=bS;bY=4967;break L5742}ct=c[f>>2]|0}}while(0);do{if((ct&8388608|0)==0){cu=ct}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cu=ct;break}if((c[h>>2]&128|0)!=0){dv(aQ,2)}if((ey(d,S,bS,297,3,2,4,aR)|0)==0){bX=bS;bY=4967;break L5742}cu=c[f>>2]|0}}while(0);do{if((cu&16777216|0)!=0){bZ=c[aN>>2]|0;bV=c[aP>>2]|0;if((c[h>>2]&1024|0)==0){if((ev(d,S,bS,279,bZ,bV)|0)==0){bX=bS;bY=4967;break L5742}else{break}}else{if((ev(d,S,bS,325,bZ,bV)|0)==0){bX=bS;bY=4967;break L5742}else{break}}}}while(0);do{if((c[f>>2]&33554432|0)!=0){bV=c[aN>>2]|0;bZ=c[aO>>2]|0;if((c[h>>2]&1024|0)==0){if((ev(d,S,bS,273,bV,bZ)|0)==0){bX=bS;bY=4967;break L5742}else{break}}else{if((ev(d,S,bS,324,bV,bZ)|0)==0){bX=bS;bY=4967;break L5742}else{break}}}}while(0);bZ=c[f>>2]|0;do{if((bZ&67108864|0)==0){cv=bZ}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cv=bZ;break}bV=e[aq>>1]|0;cm=1<<bV;b7=3<<bV;bV=b7<<1;bU=dT(bV)|0;cn=bU;if((bU|0)==0){bY=4562;break L5742}cw=cm<<1;dX(bU,c[aK>>2]|0,cw);dX(cn+(cm<<1)|0,c[aL>>2]|0,cw);dX(cn+(cw<<1)|0,c[aM>>2]|0,cw);if((b7|0)<=-1){bY=4564;break L5742}if((c[h>>2]&128|0)!=0){dv(cn,b7)}cn=ey(d,S,bS,320,3,b7,bV,bU)|0;dU(bU);if((cn|0)==0){bX=bS;bY=4967;break L5742}cv=c[f>>2]|0}}while(0);do{if((cv|0)<0){if((b[ab>>1]|0)==0){break}d7(d,338,(ac=i,i=i+16|0,c[ac>>2]=T,c[ac+8>>2]=U,ac)|0)|0;i=ac;bZ=e[T>>1]|0;cn=c[U>>2]|0;if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;break}if((c[h>>2]&128|0)!=0){dv(cn,bZ)}if((ey(d,S,bS,338,3,bZ,bZ<<1,cn)|0)==0){bX=bS;bY=4967;break L5742}}}while(0);cn=c[ad>>2]|0;do{if((cn&1|0)==0){cx=cn}else{bZ=b[aJ>>1]|0;if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cx=cn;break}bU=dT(e[ar>>1]<<1)|0;bV=bU;if((bU|0)==0){bY=4581;break L5742}if((b[ar>>1]|0)==0){cy=0}else{b7=bV;cw=0;while(1){b[b7>>1]=bZ;cm=cw+1&65535;cz=b[ar>>1]|0;if((cm&65535)<(cz&65535)){b7=b7+2|0;cw=cm}else{break}}cy=cz&65535}if((c[h>>2]&128|0)!=0){dv(bV,cy)}cw=ey(d,S,bS,339,3,cy,cy<<1,bU)|0;dU(bU);if((cw|0)==0){bX=bS;bY=4967;break L5742}cx=c[ad>>2]|0}}while(0);if((cx&2|0)==0){cA=cx}else{if((ew(d,S,bS,340,e[ar>>1]|0,c[aI>>2]|0)|0)==0){bX=bS;bY=4967;break L5742}cA=c[ad>>2]|0}if((cA&4|0)==0){cB=cA}else{if((ew(d,S,bS,341,e[ar>>1]|0,c[aH>>2]|0)|0)==0){bX=bS;bY=4967;break L5742}cB=c[ad>>2]|0}do{if((cB&8|0)==0){cC=cB}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cC=cB;break}c[C>>2]=c[aF>>2];if((c[h>>2]&128|0)!=0){dt(C)}if((ey(d,S,bS,-32539,4,1,4,aG)|0)==0){bX=bS;bY=4967;break L5742}cC=c[ad>>2]|0}}while(0);do{if((cC&16|0)==0){cD=cC}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cD=cC;break}c[B>>2]=c[aC>>2];if((c[h>>2]&128|0)!=0){dt(B)}if((ey(d,S,bS,-32538,4,1,4,aE)|0)==0){bX=bS;bY=4967;break L5742}cD=c[ad>>2]|0}}while(0);do{if((cD&32|0)==0){cE=cD}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cE=cD;break}if((c[h>>2]&128|0)!=0){dv(aA,2)}if((ey(d,S,bS,321,3,2,4,aB)|0)==0){bX=bS;bY=4967;break L5742}cE=c[ad>>2]|0}}while(0);do{if((cE&128|0)==0){cF=cE}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cF=cE;break}if((c[h>>2]&128|0)!=0){dv(ay,2)}if((ey(d,S,bS,530,3,2,4,az)|0)==0){bX=bS;bY=4967;break L5742}cF=c[ad>>2]|0}}while(0);do{if((cF&256|0)==0){cG=cF}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cG=cF;break}b[A>>1]=b[aw>>1]|0;if((c[h>>2]&128|0)!=0){ds(A)}if((ey(d,S,bS,531,3,1,2,ax)|0)==0){bX=bS;bY=4967;break L5742}cG=c[ad>>2]|0}}while(0);if((cG&512|0)==0){cH=cG}else{if((ex(d,S,bS,532,6,c[av>>2]|0)|0)==0){bX=bS;bY=4967;break L5742}cH=c[ad>>2]|0}do{if((cH&4096|0)==0){cI=cH}else{if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cI=cH;break}cn=e[aq>>1]|0;cw=1<<cn;b7=(b[ar>>1]|0)-(b[ab>>1]|0)&65535;bZ=(b7&65535)>3?3:b7;if(bZ<<16>>16==3){cJ=(dY(c[as>>2]|0,c[at>>2]|0,cw<<1)|0)==0?2:3}else{cJ=bZ}if(cJ<<16>>16==2){cK=(dY(c[as>>2]|0,c[au>>2]|0,cw<<1)|0)==0?1:2}else{cK=cJ}bZ=cK<<16>>16==0?1:cK;b7=(bZ&65535)<<cn;cn=b7<<1;b9=dT(cn)|0;b8=b9;if((b9|0)==0){bY=4640;break L5742}cm=cw<<1;dX(b9,c[as>>2]|0,cm);do{if((bZ&65535)>1){dX(b8+(cw<<1)|0,c[au>>2]|0,cm);if((bZ&65535)<=2){break}dX(b8+(cm<<1)|0,c[at>>2]|0,cm)}}while(0);if((b7|0)<=-1){bY=4645;break L5742}if((c[h>>2]&128|0)!=0){dv(b8,b7)}cm=ey(d,S,bS,301,3,b7,cn,b9)|0;dU(b9);if((cm|0)==0){bX=bS;bY=4967;break L5742}cI=c[ad>>2]|0}}while(0);do{if((cI&16384|0)==0){cL=cI}else{cm=c[ao>>2]|0;if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;cL=cI;break}if((ey(d,S,bS,333,2,cm,cm,c[ap>>2]|0)|0)==0){cM=bS;break L5742}cL=c[ad>>2]|0}}while(0);do{if((cL&131072|0)!=0){cm=b[af>>1]|0;bZ=cm&65535;if(cm<<16>>16==0){break}if((bS|0)==0){c[S>>2]=(c[S>>2]|0)+1;break}cm=c[ag>>2]|0;cw=c[ag+4>>2]|0;bU=c[h>>2]|0;if((bU&524288|0)==0){bV=dT(bZ<<2)|0;cN=bV;if((bV|0)==0){bY=4661;break L5742}if((b[af>>1]|0)==0){cO=0}else{cP=c[ah>>2]|0;cQ=cN;cR=0;while(1){if((cP|0)==0){bY=4665;break L5742}cS=c[cP>>2]|0;cT=c[cP+4>>2]|0;cU=1;if(!(cT>>>0<cU>>>0|cT>>>0==cU>>>0&cS>>>0<0>>>0)){bY=4667;break L5742}c[cQ>>2]=cS;cS=cR+1&65535;cV=b[af>>1]|0;if((cS&65535)<(cV&65535)){cP=cP+8|0;cQ=cQ+4|0;cR=cS}else{break}}cO=cV&65535}if((c[h>>2]&128|0)!=0){dx(cN,cO)}cR=ey(d,S,bS,330,13,cO,cO<<2,bV)|0;dU(bV);cW=cR}else{cR=c[ah>>2]|0;if((bU&128|0)!=0){dy(cR,bZ)}cW=ey(d,S,bS,330,18,bZ,bZ<<3,cR)|0}if((cW|0)==0){bX=bS;bY=4967;break L5742}c[h>>2]=c[h>>2]|8192;cR=b[af>>1]|0;b[ai>>1]=cR;if(cR<<16>>16==1){c[aj>>2]=0;c[aj+4>>2]=0;break}else{c[aj>>2]=cm;c[aj+4>>2]=cw;break}}}while(0);if((c[ak>>2]|0)==0){break}cR=(bS|0)==0;cQ=0;do{cP=c[(c[al>>2]|0)+(cQ<<2)>>2]|0;b9=b[cP+24>>1]|0;cn=b9&65535;do{if((b9&65535)>65){if((c[d+40+(cn>>>5<<2)>>2]&1<<(cn&31)|0)==0){break}b7=c[cP+20>>2]|0;if((b7|0)==1){if((c[cP+8>>2]|0)!=2){bY=4686;break L5742}if((b[cP+4>>1]|0)!=-1){bY=4688;break L5742}if((a[cP+27|0]|0)!=0){bY=4690;break L5742}b8=cP|0;cS=c[b8>>2]|0;bH(d,cS,(ac=i,i=i+8|0,c[ac>>2]=V,ac)|0)|0;i=ac;cS=c[V>>2]|0;cU=ht(cS|0)|0;if(cR){c[S>>2]=(c[S>>2]|0)+1;break}else{if((ey(d,S,bS,c[b8>>2]&65535,2,cU,cU,cS)|0)==0){cM=bS;break L5742}else{break}}}else if((b7|0)==4){if((c[cP+8>>2]|0)!=3){bY=4695;break L5742}if((b[cP+4>>1]|0)!=1){bY=4697;break L5742}if((a[cP+27|0]|0)!=0){bY=4699;break L5742}cS=cP|0;bH(d,c[cS>>2]|0,(ac=i,i=i+8|0,c[ac>>2]=W,ac)|0)|0;i=ac;cU=c[cS>>2]&65535;if(cR){c[S>>2]=(c[S>>2]|0)+1;break}b[z>>1]=b[W>>1]|0;if((c[h>>2]&128|0)!=0){ds(z)}if((ey(d,S,bS,cU,3,1,2,am)|0)==0){bX=bS;bY=4967;break L5742}else{break}}else if((b7|0)==6){if((c[cP+8>>2]|0)!=4){bY=4706;break L5742}if((b[cP+4>>1]|0)!=1){bY=4708;break L5742}if((a[cP+27|0]|0)!=0){bY=4710;break L5742}cU=cP|0;bH(d,c[cU>>2]|0,(ac=i,i=i+8|0,c[ac>>2]=X,ac)|0)|0;i=ac;cS=c[cU>>2]&65535;if(cR){c[S>>2]=(c[S>>2]|0)+1;break}c[y>>2]=c[X>>2];if((c[h>>2]&128|0)!=0){dt(y)}if((ey(d,S,bS,cS,4,1,4,an)|0)==0){bX=bS;bY=4967;break L5742}else{break}}else if((b7|0)==40){if((c[cP+8>>2]|0)!=7){bY=4717;break L5742}if((b[cP+4>>1]|0)!=-3){bY=4719;break L5742}if((a[cP+27|0]|0)!=1){bY=4721;break L5742}b7=cP|0;bH(d,c[b7>>2]|0,(ac=i,i=i+16|0,c[ac>>2]=Y,c[ac+8>>2]=Z,ac)|0)|0;i=ac;cS=c[Y>>2]|0;if(cR){c[S>>2]=(c[S>>2]|0)+1;break}else{if((ey(d,S,bS,c[b7>>2]&65535,7,cS,cS,c[Z>>2]|0)|0)==0){cM=bS;break L5742}else{break}}}else{bY=4725;break L5742}}}while(0);cQ=cQ+1|0;}while(cQ>>>0<(c[ak>>2]|0)>>>0)}}while(0);L6193:do{if((c[bw>>2]|0)!=0){cQ=(bS|0)==0;cR=0;while(1){cP=c[bR>>2]|0;cn=c[cP+(cR*12|0)>>2]|0;L6197:do{switch(c[cn+8>>2]|0){case 12:{b9=c[cn>>2]&65535;cw=c[cP+(cR*12|0)+4>>2]|0;cm=c[cP+(cR*12|0)+8>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}if(cw>>>0>=536870912){bY=4819;break L5742}if((c[h>>2]&128|0)!=0){dA(cm,cw)}if((ey(d,S,bS,b9,12,cw,cw<<3,cm)|0)==0){bX=bS;bY=4967;break L5742}break};case 13:{cm=c[cn>>2]&65535;cw=c[cP+(cR*12|0)+4>>2]|0;b9=c[cP+(cR*12|0)+8>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}if(cw>>>0>=1073741824){bY=4826;break L5742}if((c[h>>2]&128|0)!=0){dx(b9,cw)}if((ey(d,S,bS,cm,13,cw,cw<<2,b9)|0)==0){bX=bS;bY=4967;break L5742}break};case 18:{b9=c[cn>>2]&65535;cw=c[cP+(cR*12|0)+4>>2]|0;cm=c[cP+(cR*12|0)+8>>2]|0;bZ=cm;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}bU=c[h>>2]|0;if((bU&524288|0)==0){bV=cw<<2;cX=dT(bV)|0;cN=cX;if((cX|0)==0){bY=4840;break L5742}if((cw|0)!=0){cS=0;b7=bZ;cU=cN;while(1){b8=c[b7>>2]|0;cT=c[b7+4>>2]|0;cY=0;if(cT>>>0>cY>>>0|cT>>>0==cY>>>0&b8>>>0>-1>>>0){bY=4842;break L5742}c[cU>>2]=b8;b8=cS+1|0;if(b8>>>0<cw>>>0){cS=b8;b7=b7+8|0;cU=cU+4|0}else{break}}if(cw>>>0>=1073741824){bY=4845;break L5742}}if((c[h>>2]&128|0)!=0){dx(cN,cw)}cU=ey(d,S,bS,b9,13,cw,bV,cX)|0;dU(cX);cZ=cU}else{if(cw>>>0>=536870912){bY=4834;break L5742}if((bU&128|0)!=0){dy(bZ,cw)}cZ=ey(d,S,bS,b9,18,cw,cw<<3,cm)|0}if((cZ|0)==0){bX=bS;bY=4967;break L5742}break};case 5:{if((ex(d,S,bS,c[cn>>2]&65535,c[cP+(cR*12|0)+4>>2]|0,c[cP+(cR*12|0)+8>>2]|0)|0)==0){bX=bS;bY=4967;break L5742}break};case 10:{cU=c[cn>>2]&65535;b7=c[cP+(cR*12|0)+4>>2]|0;cS=c[cP+(cR*12|0)+8>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}b8=b7<<1;cY=b7<<3;cT=dT(cY)|0;c_=cT;if((cT|0)==0){bY=4793;break L5742}if((b7|0)!=0){c$=cS;cS=c_;c0=0;while(1){c1=+g[c$>>2];c2=~~c1;c3=c1==+(c2|0);do{if(c1<0.0){if(c3){c[cS>>2]=c2;c[cS+4>>2]=1;break}if(c1>-1.0){c[cS>>2]=-~~(c1*-2147483648.0);c[cS+4>>2]=2147483647;break}else{c[cS>>2]=-2147483647;c[cS+4>>2]=~~(2147483648.0/(-0.0- +g[c$>>2]));break}}else{if(c3){c[cS>>2]=c2;c[cS+4>>2]=1;break}if(c1<1.0){c[cS>>2]=~~(c1*2147483648.0);c[cS+4>>2]=2147483647;break}else{c[cS>>2]=2147483647;c[cS+4>>2]=~~(2147483648.0/+g[c$>>2]);break}}}while(0);c2=c0+1|0;if(c2>>>0<b7>>>0){c$=c$+4|0;cS=cS+8|0;c0=c2}else{break}}}if((c[h>>2]&128|0)!=0){dx(c_,b8)}c0=ey(d,S,bS,cU,10,b7,cY,cT)|0;dU(cT);if((c0|0)==0){bX=bS;bY=4967;break L5742}break};case 11:{c0=c[cn>>2]&65535;cS=c[cP+(cR*12|0)+4>>2]|0;c$=c[cP+(cR*12|0)+8>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}if(cS>>>0>=1073741824){bY=4812;break L5742}if((c[h>>2]&128|0)!=0){dz(c$,cS)}if((ey(d,S,bS,c0,11,cS,cS<<2,c$)|0)==0){bX=bS;bY=4967;break L5742}break};case 2:{c$=c[cP+(cR*12|0)+4>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}else{if((ey(d,S,bS,c[cn>>2]&65535,2,c$,c$,c[cP+(cR*12|0)+8>>2]|0)|0)==0){cM=bS;break L5742}else{break L6197}}break};case 7:{c$=c[cP+(cR*12|0)+4>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}else{if((ey(d,S,bS,c[cn>>2]&65535,7,c$,c$,c[cP+(cR*12|0)+8>>2]|0)|0)==0){cM=bS;break L5742}else{break L6197}}break};case 1:{c$=c[cP+(cR*12|0)+4>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}else{if((ey(d,S,bS,c[cn>>2]&65535,1,c$,c$,c[cP+(cR*12|0)+8>>2]|0)|0)==0){cM=bS;break L5742}else{break L6197}}break};case 6:{c$=c[cP+(cR*12|0)+4>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}else{if((ey(d,S,bS,c[cn>>2]&65535,6,c$,c$,c[cP+(cR*12|0)+8>>2]|0)|0)==0){cM=bS;break L5742}else{break L6197}}break};case 3:{c$=c[cn>>2]&65535;cS=c[cP+(cR*12|0)+4>>2]|0;c0=c[cP+(cR*12|0)+8>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}if((cS|0)<=-1){bY=4745;break L5742}if((c[h>>2]&128|0)!=0){dv(c0,cS)}if((ey(d,S,bS,c$,3,cS,cS<<1,c0)|0)==0){bX=bS;bY=4967;break L5742}break};case 8:{c0=c[cn>>2]&65535;cS=c[cP+(cR*12|0)+4>>2]|0;c$=c[cP+(cR*12|0)+8>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}if((cS|0)<=-1){bY=4752;break L5742}if((c[h>>2]&128|0)!=0){dv(c$,cS)}if((ey(d,S,bS,c0,8,cS,cS<<1,c$)|0)==0){bX=bS;bY=4967;break L5742}break};case 4:{c$=c[cn>>2]&65535;cS=c[cP+(cR*12|0)+4>>2]|0;c0=c[cP+(cR*12|0)+8>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}if(cS>>>0>=1073741824){bY=4759;break L5742}if((c[h>>2]&128|0)!=0){dx(c0,cS)}if((ey(d,S,bS,c$,4,cS,cS<<2,c0)|0)==0){bX=bS;bY=4967;break L5742}break};case 9:{c0=c[cn>>2]&65535;cS=c[cP+(cR*12|0)+4>>2]|0;c$=c[cP+(cR*12|0)+8>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}if(cS>>>0>=1073741824){bY=4766;break L5742}if((c[h>>2]&128|0)!=0){dx(c$,cS)}if((ey(d,S,bS,c0,9,cS,cS<<2,c$)|0)==0){bX=bS;bY=4967;break L5742}break};case 16:{c$=c[cn>>2]&65535;cS=c[cP+(cR*12|0)+4>>2]|0;c0=c[cP+(cR*12|0)+8>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}if(cS>>>0>=536870912){bY=4773;break L5742}cm=c[h>>2]|0;if((cm&524288|0)==0){bY=4775;break L5742}if((cm&128|0)!=0){dy(c0,cS)}if((ey(d,S,bS,c$,16,cS,cS<<3,c0)|0)==0){bX=bS;bY=4967;break L5742}break};case 17:{c0=c[cn>>2]&65535;cS=c[cP+(cR*12|0)+4>>2]|0;c$=c[cP+(cR*12|0)+8>>2]|0;if(cQ){c[S>>2]=(c[S>>2]|0)+1;break L6197}if(cS>>>0>=536870912){bY=4782;break L5742}cm=c[h>>2]|0;if((cm&524288|0)==0){bY=4784;break L5742}if((cm&128|0)!=0){dy(c$,cS)}if((ey(d,S,bS,c0,17,cS,cS<<3,c$)|0)==0){bX=bS;bY=4967;break L5742}break};default:{bY=4850;break L5742}}}while(0);cR=cR+1|0;if(cR>>>0>=(c[bw>>2]|0)>>>0){break L6193}}}}while(0);if((bS|0)!=0){bY=4922;break}cR=dT((c[S>>2]|0)*24|0)|0;c4=cR;if((cR|0)==0){bY=4854;break}do{if(ae){if(!((c[bx>>2]|0)==0&(c[bx+4>>2]|0)==0)){break}cR=ba[c[bG>>2]&127](c[bI>>2]|0,0,0,2)|0;cQ=hy(cR,E,1,0)|0;cR=cQ&-2;cQ=E|0;c[bx>>2]=cR;c[bx+4>>2]=cQ;cP=c[h>>2]|0;cn=(cP&524288|0)!=0;if((cP&8192|0)!=0){if(cn){c[r>>2]=cR;c[r+4>>2]=cQ;if((cP&128|0)!=0){du(r)}c$=c[bG>>2]|0;cS=c[bI>>2]|0;c0=c[aj>>2]|0;cm=c[aj+4>>2]|0;ba[c$&127](cS,c0,cm,0)|0;if((be[c[bM>>2]&63](c[bI>>2]|0,bz,8)|0)!=8){bY=4869;break L5742}cm=(b[ai>>1]|0)-1&65535;b[ai>>1]=cm;if(cm<<16>>16==0){c[h>>2]=c[h>>2]&-8193;break}else{cm=hy(c[aj>>2]|0,c[aj+4>>2]|0,8,0)|0;c[aj>>2]=cm;c[aj+4>>2]=E;break}}else{c[q>>2]=cR;if((cP&128|0)!=0){dt(q)}cm=c[bG>>2]|0;c0=c[bI>>2]|0;cS=c[aj>>2]|0;c$=c[aj+4>>2]|0;ba[cm&127](c0,cS,c$,0)|0;if((be[c[bM>>2]&63](c[bI>>2]|0,by,4)|0)!=4){bY=4862;break L5742}c$=(b[ai>>1]|0)-1&65535;b[ai>>1]=c$;if(c$<<16>>16==0){c[h>>2]=c[h>>2]&-8193;break}else{c$=hy(c[aj>>2]|0,c[aj+4>>2]|0,4,0)|0;c[aj>>2]=c$;c[aj+4>>2]=E;break}}}if(!cn){c[s>>2]=cR;if((cP&128|0)!=0){dt(s)}cn=c[bO>>2]|0;if((cn|0)==0){c[bO>>2]=c[bx>>2];c$=c[bG>>2]|0;cS=c[bI>>2]|0;c0=4;cm=0;ba[c$&127](cS,c0,cm,0)|0;if((be[c[bM>>2]&63](c[bI>>2]|0,bA,4)|0)==4){break}else{bY=4878;break L5742}}else{c5=cn}do{cn=c5;cm=0;c0=ba[c[bG>>2]&127](c[bI>>2]|0,cn,cm,0)|0;if(!((c0|0)==(cn|0)&(E|0)==(cm|0))){bY=4881;break L5742}if((be[c[bN>>2]&63](c[bI>>2]|0,bB,2)|0)!=2){bY=4881;break L5742}if((c[h>>2]&128|0)!=0){ds(t)}c6=c5+2|0;ba[c[bG>>2]&127](c[bI>>2]|0,((e[t>>1]|0)*12|0)+c6|0,0,0)|0;if((be[c[bN>>2]&63](c[bI>>2]|0,bC,4)|0)!=4){bY=4885;break L5742}if((c[h>>2]&128|0)!=0){dt(u)}c5=c[u>>2]|0;}while((c5|0)!=0);ba[c[bG>>2]&127](c[bI>>2]|0,((e[t>>1]|0)*12|0)+c6|0,0,0)|0;if((be[c[bM>>2]&63](c[bI>>2]|0,bA,4)|0)==4){break}else{bY=4890;break L5742}}c[v>>2]=cR;c[v+4>>2]=cQ;if((cP&128|0)!=0){du(v)}cm=c[bL>>2]|0;cn=c[bL+4>>2]|0;if((cm|0)==0&(cn|0)==0){c0=c[bx+4>>2]|0;c[bL>>2]=c[bx>>2];c[bL+4>>2]=c0;c0=c[bG>>2]|0;cS=c[bI>>2]|0;c$=8;cw=0;ba[c0&127](cS,c$,cw,0)|0;if((be[c[bM>>2]&63](c[bI>>2]|0,bD,8)|0)==8){break}else{bY=4895;break L5742}}else{c7=cn;c8=cm}do{cm=ba[c[bG>>2]&127](c[bI>>2]|0,c8,c7,0)|0;if(!((cm|0)==(c8|0)&(E|0)==(c7|0))){bY=4898;break L5742}if((be[c[bN>>2]&63](c[bI>>2]|0,bE,8)|0)!=8){bY=4898;break L5742}if((c[h>>2]&128|0)!=0){du(w)}cm=c[w>>2]|0;cn=c[w+4>>2]|0;cw=0;if(cn>>>0>cw>>>0|cn>>>0==cw>>>0&cm>>>0>65535>>>0){bY=4902;break L5742}cw=c[bG>>2]|0;cn=c[bI>>2]|0;c$=hy(c8,c7,8,0)|0;c9=hy(c$,E,(cm&65535)*20|0,0)|0;da=E;ba[cw&127](cn,c9,da,0)|0;if((be[c[bN>>2]&63](c[bI>>2]|0,bF,8)|0)!=8){bY=4904;break L5742}if((c[h>>2]&128|0)!=0){du(x)}c8=c[x>>2]|0;c7=c[x+4>>2]|0;}while(!((c8|0)==0&(c7|0)==0));ba[c[bG>>2]&127](c[bI>>2]|0,c9,da,0)|0;if((be[c[bM>>2]&63](c[bI>>2]|0,bD,8)|0)!=8){bY=4909;break L5742}}else{cP=ba[c[bG>>2]&127](c[bI>>2]|0,0,0,2)|0;cQ=hy(cP,E,1,0)|0;c[bx>>2]=cQ&-2;c[bx+4>>2]=E|0}}while(0);if(!bP){cQ=c[bx+4>>2]|0;c[j>>2]=c[bx>>2];c[j+4>>2]=cQ}cQ=c[S>>2]|0;if((c[h>>2]&524288|0)==0){cP=(cQ*12|0|2)+4|0;cR=c[bx>>2]|0;cn=c[bx+4>>2]|0;cw=cP;cm=0;c$=hy(cR,cn,cw,cm)|0;db=E&0;dc=c$|0;dd=cP;de=cn;df=cR;dg=cm;dh=cw}else{cw=(cQ*20|0)+16|0;cQ=c[bx>>2]|0;cm=c[bx+4>>2]|0;cR=cw;cn=0;cP=hy(cQ,cm,cR,cn)|0;db=E;dc=cP;dd=cw;de=cm;df=cQ;dg=cn;dh=cR}c[ag>>2]=dc;c[ag+4>>2]=db;if(db>>>0<de>>>0|db>>>0==de>>>0&dc>>>0<df>>>0|(db>>>0<dg>>>0|db>>>0==dg>>>0&dc>>>0<dh>>>0)){bY=4917;break}if(!((dc&1|0)==0&(db&0|0)==0)){cR=hy(dc,db,1,0)|0;c[ag>>2]=cR;c[ag+4>>2]=E}if(!ae){bS=c4;bT=dd;continue}b[bQ>>1]=(b[bQ>>1]|0)+1&65535;bS=c4;bT=dd}do{if((bY|0)==4510){cg(c[bI>>2]|0,45568,32312,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;cM=bS}else if((bY|0)==4581){cg(c[bI>>2]|0,45568,32312,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;cM=bS}else if((bY|0)==4909){cg(c[bI>>2]|0,46384,30576,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=c4;bY=4967}else if((bY|0)==4917){cg(c[bI>>2]|0,43896,32024,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=c4;bY=4967}else if((bY|0)==4922){do{if(ae){if((c[ad>>2]&131072|0)==0){break}if(!((c[aj>>2]|0)==0&(c[aj+4>>2]|0)==0)){break}dd=c[S>>2]|0;if((dd|0)==0){aD(31840,37040,809,43896);return 0}else{di=0;dj=bS}while(1){if((b[dj>>1]|0)==330){break}bQ=di+1|0;if(bQ>>>0<dd>>>0){di=bQ;dj=dj+24|0}else{bY=4973;break}}if((bY|0)==4973){aD(31840,37040,809,43896);return 0}dd=c[bx>>2]|0;bQ=c[bx+4>>2]|0;if((c[h>>2]&524288|0)==0){ag=hy(di*12|0,0,10,0)|0;db=hy(ag,E,dd,bQ)|0;c[aj>>2]=db;c[aj+4>>2]=E;break}else{db=hy(di*20|0,0,20,0)|0;ag=hy(db,E,dd,bQ)|0;c[aj>>2]=ag;c[aj+4>>2]=E;break}}}while(0);ag=dT(bT)|0;if((ag|0)==0){cg(c[bI>>2]|0,43896,32312,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=bS;bY=4967;break}bQ=c[S>>2]|0;do{if((c[h>>2]&524288|0)==0){dd=ag;b[dd>>1]=bQ&65535;if((c[h>>2]&128|0)!=0){ds(dd)}dd=ag+2|0;if((c[S>>2]|0)==0){dk=dd}else{db=_;dc=0;dh=dd;dd=bS;while(1){dg=dh;b[dg>>1]=b[dd>>1]|0;if((c[h>>2]&128|0)!=0){ds(dg)}dg=dh+2|0;b[dg>>1]=b[dd+2>>1]|0;if((c[h>>2]&128|0)!=0){ds(dg)}dg=dh+4|0;c[_>>2]=c[dd+8>>2];dX(dg,db,4);if((c[h>>2]&128|0)!=0){dt(dg)}dX(dh+8|0,dd+16|0,4);dg=dh+12|0;df=dc+1|0;if(df>>>0<(c[S>>2]|0)>>>0){dc=df;dh=dg;dd=dd+24|0}else{dk=dg;break}}}c[_>>2]=c[d+24>>2];if((c[h>>2]&128|0)!=0){dt(_)}dX(dk,_,4)}else{dd=ag;c[dd>>2]=bQ;c[dd+4>>2]=0;if((c[h>>2]&128|0)==0){dl=bQ}else{du(dd);dl=c[S>>2]|0}dd=ag+8|0;if((dl|0)==0){dm=dd}else{dh=0;dc=ag;db=bS;dg=dd;while(1){dd=dg;b[dd>>1]=b[db>>1]|0;if((c[h>>2]&128|0)!=0){ds(dd)}dd=dc+10|0;b[dd>>1]=b[db+2>>1]|0;if((c[h>>2]&128|0)!=0){ds(dd)}dd=dc+12|0;dX(dd,db+8|0,8);if((c[h>>2]&128|0)!=0){du(dd)}dd=dc+20|0;dX(dd,db+16|0,8);df=dh+1|0;de=dc+28|0;if(df>>>0<(c[S>>2]|0)>>>0){dh=df;dc=dd;db=db+24|0;dg=de}else{dm=de;break}}}dX(dm,d+24|0,8);if((c[h>>2]&128|0)==0){break}du(dm)}}while(0);dU(bS);bQ=ba[c[bG>>2]&127](c[bI>>2]|0,c[bx>>2]|0,c[bx+4>>2]|0,0)|0;do{if((bQ|0)==(c[bx>>2]|0)&(E|0)==(c[bx+4>>2]|0)){if((be[c[bM>>2]&63](c[bI>>2]|0,ag,bT)|0)!=(bT|0)){cg(c[bI>>2]|0,43896,31664,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;break}dU(ag);if(!aa){$=1;i=k;return $|0}bJ(d);c[h>>2]=c[h>>2]&-2097161;bb[c[d+564>>2]&31](d);bK(d)|0;$=1;i=k;return $|0}else{cg(c[bI>>2]|0,43896,31664,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac}}while(0);if((ag|0)==0){$=0;i=k;return $|0}dU(ag);$=0;i=k;return $|0}else if((bY|0)==4522){cg(c[bI>>2]|0,45568,32312,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;cM=bS}else if((bY|0)==4562){cg(c[bI>>2]|0,45728,32312,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;cM=bS}else if((bY|0)==4564){aD(29600,37040,1956,43576);return 0}else if((bY|0)==4444){cg(c[bI>>2]|0,45568,32312,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;cM=bS}else if((bY|0)==4640){cg(c[bI>>2]|0,45528,32312,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=bS;bY=4967}else if((bY|0)==4645){aD(29600,37040,1956,43576);return 0}else if((bY|0)==4686){aD(37848,37040,643,43896);return 0}else if((bY|0)==4688){aD(36200,37040,644,43896);return 0}else if((bY|0)==4690){aD(35616,37040,645,43896);return 0}else if((bY|0)==4695){aD(35080,37040,655,43896);return 0}else if((bY|0)==4697){aD(34592,37040,656,43896);return 0}else if((bY|0)==4699){aD(35616,37040,657,43896);return 0}else if((bY|0)==4706){aD(34080,37040,666,43896);return 0}else if((bY|0)==4708){aD(34592,37040,667,43896);return 0}else if((bY|0)==4710){aD(35616,37040,668,43896);return 0}else if((bY|0)==4661){cg(c[bI>>2]|0,43392,32312,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=bS;bY=4967}else if((bY|0)==4665){aD(29488,37040,1868,43392);return 0}else if((bY|0)==4667){aD(29264,37040,1869,43392);return 0}else if((bY|0)==4881){cg(c[bI>>2]|0,46384,38680,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=c4;bY=4967}else if((bY|0)==4885){cg(c[bI>>2]|0,46384,33008,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=c4;bY=4967}else if((bY|0)==4890){cg(c[bI>>2]|0,46384,30576,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=c4;bY=4967}else if((bY|0)==4895){cg(c[bI>>2]|0,c[d>>2]|0,31320,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=c4;bY=4967}else if((bY|0)==4898){cg(c[bI>>2]|0,46384,38680,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=c4;bY=4967}else if((bY|0)==4902){cg(c[bI>>2]|0,46384,28744,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=c4;bY=4967}else if((bY|0)==4904){cg(c[bI>>2]|0,46384,33008,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=c4;bY=4967}else if((bY|0)==4862){cg(c[bI>>2]|0,46384,31472,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=c4;bY=4967}else if((bY|0)==4869){cg(c[bI>>2]|0,46384,31472,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=c4;bY=4967}else if((bY|0)==4878){cg(c[bI>>2]|0,c[d>>2]|0,31320,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=c4;bY=4967}else if((bY|0)==4819){aD(29880,37040,2264,43856);return 0}else if((bY|0)==4826){aD(30800,37040,2275,43736);return 0}else if((bY|0)==4834){aD(29880,37040,2285,43776);return 0}else if((bY|0)==4840){cg(c[bI>>2]|0,45688,32312,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=bS;bY=4967}else if((bY|0)==4842){cg(c[bI>>2]|0,45688,31032,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;dU(cX);bX=bS;bY=4967}else if((bY|0)==4845){aD(30800,37040,2275,43736);return 0}else if((bY|0)==4850){aD(32680,37040,763,43896);return 0}else if((bY|0)==4854){cg(c[bI>>2]|0,43896,32312,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;bX=c4;bY=4967}else if((bY|0)==4782){aD(29880,37040,2072,43536);return 0}else if((bY|0)==4784){aD(29720,37040,2074,43536);return 0}else if((bY|0)==4793){cg(c[bI>>2]|0,45760,32312,(ac=i,i=i+1|0,i=i+7&-8,c[ac>>2]=0,ac)|0);i=ac;cM=bS}else if((bY|0)==4812){aD(30800,37040,2239,43816);return 0}else if((bY|0)==4717){aD(33680,37040,678,43896);return 0}else if((bY|0)==4719){aD(33344,37040,679,43896);return 0}else if((bY|0)==4721){aD(32968,37040,680,43896);return 0}else if((bY|0)==4725){aD(32680,37040,687,43896);return 0}else if((bY|0)==4745){aD(29600,37040,1956,43576);return 0}else if((bY|0)==4752){aD(29600,37040,1979,43456);return 0}else if((bY|0)==4759){aD(30800,37040,2e3,43656);return 0}else if((bY|0)==4766){aD(30800,37040,2023,43496);return 0}else if((bY|0)==4773){aD(29880,37040,2047,43696);return 0}else if((bY|0)==4775){aD(29720,37040,2049,43696);return 0}}while(0);do{if((bY|0)==4967){if((bX|0)==0){$=0}else{cM=bX;break}i=k;return $|0}}while(0);dU(cM);$=0;i=k;return $|0}function es(a){a=a|0;var b=0,d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0;b=i;i=i+48|0;d=b|0;f=b+8|0;g=b+16|0;h=b+24|0;j=b+32|0;k=b+40|0;l=a+16|0;m=c[l>>2]|0;n=c[l+4>>2]|0;if((m|0)==0&(n|0)==0){o=er(a,1,1,0)|0;i=b;return o|0}p=a+12|0;do{if((c[p>>2]&524288|0)==0){q=a+428|0;r=q;s=c[r>>2]|0;if((s|0)==(m|0)&0==(n|0)){c[r>>2]=0;c[l>>2]=0;c[l+4>>2]=0;r=c[a+640>>2]|0;t=a+628|0;u=c[t>>2]|0;v=4;w=0;ba[r&127](u,v,w,0)|0;if((be[c[a+636>>2]&63](c[t>>2]|0,q,4)|0)==4){break}cg(c[t>>2]|0,c[a>>2]|0,27608,(x=i,i=i+1|0,i=i+7&-8,c[x>>2]=0,x)|0);i=x;o=0;i=b;return o|0}t=a+640|0;q=a+628|0;w=a+632|0;v=d;u=f;r=s;while(1){s=r;y=0;z=ba[c[t>>2]&127](c[q>>2]|0,s,y,0)|0;if(!((z|0)==(s|0)&(E|0)==(y|0))){A=4992;break}if((be[c[w>>2]&63](c[q>>2]|0,v,2)|0)!=2){A=4992;break}if((c[p>>2]&128|0)!=0){ds(d)}B=r+2|0;ba[c[t>>2]&127](c[q>>2]|0,((e[d>>1]|0)*12|0)+B|0,0,0)|0;if((be[c[w>>2]&63](c[q>>2]|0,u,4)|0)!=4){A=4996;break}if((c[p>>2]&128|0)!=0){dt(f)}y=c[f>>2]|0;if((y|0)==(c[l>>2]|0)&0==(c[l+4>>2]|0)){A=5e3;break}else{r=y}}if((A|0)==4996){cg(c[q>>2]|0,46008,33008,(x=i,i=i+1|0,i=i+7&-8,c[x>>2]=0,x)|0);i=x;o=0;i=b;return o|0}else if((A|0)==4992){cg(c[q>>2]|0,46008,38680,(x=i,i=i+1|0,i=i+7&-8,c[x>>2]=0,x)|0);i=x;o=0;i=b;return o|0}else if((A|0)==5e3){c[g>>2]=0;ba[c[t>>2]&127](c[q>>2]|0,((e[d>>1]|0)*12|0)+B|0,0,0)|0;if((be[c[a+636>>2]&63](c[q>>2]|0,g,4)|0)==4){c[l>>2]=0;c[l+4>>2]=0;break}cg(c[q>>2]|0,46008,30576,(x=i,i=i+1|0,i=i+7&-8,c[x>>2]=0,x)|0);i=x;o=0;i=b;return o|0}}else{r=a+432|0;u=c[r>>2]|0;w=c[r+4>>2]|0;if((u|0)==(m|0)&(w|0)==(n|0)){c[r>>2]=0;c[r+4>>2]=0;c[l>>2]=0;c[l+4>>2]=0;v=c[a+640>>2]|0;y=a+628|0;s=c[y>>2]|0;z=8;C=0;ba[v&127](s,z,C,0)|0;if((be[c[a+636>>2]&63](c[y>>2]|0,r,8)|0)==8){break}cg(c[y>>2]|0,c[a>>2]|0,27608,(x=i,i=i+1|0,i=i+7&-8,c[x>>2]=0,x)|0);i=x;o=0;i=b;return o|0}y=a+640|0;r=a+628|0;C=a+632|0;z=h;s=j;v=w;w=u;while(1){u=ba[c[y>>2]&127](c[r>>2]|0,w,v,0)|0;if(!((u|0)==(w|0)&(E|0)==(v|0))){A=5009;break}if((be[c[C>>2]&63](c[r>>2]|0,z,8)|0)!=8){A=5009;break}if((c[p>>2]&128|0)!=0){du(h)}u=c[h>>2]|0;D=c[h+4>>2]|0;F=0;if(D>>>0>F>>>0|D>>>0==F>>>0&u>>>0>65535>>>0){A=5013;break}F=c[y>>2]|0;D=c[r>>2]|0;G=hy(w,v,8,0)|0;H=hy(G,E,(u&65535)*20|0,0)|0;I=E;ba[F&127](D,H,I,0)|0;if((be[c[C>>2]&63](c[r>>2]|0,s,8)|0)!=8){A=5015;break}if((c[p>>2]&128|0)!=0){du(j)}D=c[j>>2]|0;F=c[j+4>>2]|0;if((D|0)==(c[l>>2]|0)&(F|0)==(c[l+4>>2]|0)){A=5019;break}else{v=F;w=D}}if((A|0)==5009){cg(c[r>>2]|0,46008,38680,(x=i,i=i+1|0,i=i+7&-8,c[x>>2]=0,x)|0);i=x;o=0;i=b;return o|0}else if((A|0)==5013){cg(c[r>>2]|0,46008,28744,(x=i,i=i+1|0,i=i+7&-8,c[x>>2]=0,x)|0);i=x;o=0;i=b;return o|0}else if((A|0)==5015){cg(c[r>>2]|0,46008,33008,(x=i,i=i+1|0,i=i+7&-8,c[x>>2]=0,x)|0);i=x;o=0;i=b;return o|0}else if((A|0)==5019){c[k>>2]=0;c[k+4>>2]=0;ba[c[y>>2]&127](c[r>>2]|0,H,I,0)|0;if((be[c[a+636>>2]&63](c[r>>2]|0,k,8)|0)==8){c[l>>2]=0;c[l+4>>2]=0;break}cg(c[r>>2]|0,46008,30576,(x=i,i=i+1|0,i=i+7&-8,c[x>>2]=0,x)|0);i=x;o=0;i=b;return o|0}}}while(0);o=er(a,1,1,0)|0;i=b;return o|0}function et(a,d,f,g,h){a=a|0;d=d|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;j=i;i=i+32|0;k=j|0;l=j+8|0;m=l|0;n=i;i=i+2|0;i=i+7&-8;o=i;i=i+2|0;i=i+7&-8;p=i;i=i+8|0;q=i;i=i+8|0;r=i;i=i+8|0;s=i;i=i+4|0;i=i+7&-8;b[n>>1]=0;b[o>>1]=0;c[p>>2]=0;c[p+4>>2]=0;c[q>>2]=0;c[q+4>>2]=0;t=d&65535;bT(a,t,0)|0;u=a+12|0;if((c[u>>2]&2048|0)!=0){cg(c[a+628>>2]|0,45120,27488,(v=i,i=i+1|0,i=i+7&-8,c[v>>2]=0,v)|0);i=v;x=0;i=j;return x|0}y=a+16|0;z=c[y>>2]|0;A=c[y+4>>2]|0;if((z|0)==0&(A|0)==0){cg(c[a+628>>2]|0,45120,26368,(v=i,i=i+1|0,i=i+7&-8,c[v>>2]=0,v)|0);i=v;x=0;i=j;return x|0}B=a+640|0;C=a+628|0;D=ba[c[B>>2]&127](c[C>>2]|0,z,A,0)|0;A=E;if(!((D|0)==(c[y>>2]|0)&(A|0)==(c[y+4>>2]|0))){cg(c[C>>2]|0,45120,25008,(v=i,i=i+8|0,c[v>>2]=c[a>>2],v)|0);i=v;x=0;i=j;return x|0}y=a+632|0;z=c[y>>2]|0;F=c[C>>2]|0;if((c[u>>2]&524288|0)==0){if((be[z&63](F,k,2)|0)!=2){cg(c[C>>2]|0,45120,23832,(v=i,i=i+8|0,c[v>>2]=c[a>>2],v)|0);i=v;x=0;i=j;return x|0}if((c[u>>2]&128|0)!=0){ds(k)}G=hy(D,A,2,0)|0;H=E;I=G;J=12;K=5052}else{if((be[z&63](F,r,8)|0)!=8){cg(c[C>>2]|0,45120,23832,(v=i,i=i+8|0,c[v>>2]=c[a>>2],v)|0);i=v;x=0;i=j;return x|0}if((c[u>>2]&128|0)!=0){du(r)}F=c[r>>2]&65535;b[k>>1]=F;r=hy(D,A,8,0)|0;L=E;M=r;N=20;O=F}while(1){if((K|0)==5052){K=0;L=H;M=I;N=J;O=b[k>>1]|0}if(O<<16>>16==0){K=5060;break}if((be[c[y>>2]&63](c[C>>2]|0,l,N)|0)!=(N|0)){K=5055;break}F=b[m>>1]|0;b[n>>1]=F;if((c[u>>2]&128|0)==0){P=F}else{ds(n);P=b[n>>1]|0}if(P<<16>>16==d<<16>>16){break}F=hy(M,L,N,0)|0;H=E;I=F;J=N;K=5052}if((K|0)==5055){cg(c[C>>2]|0,45120,23040,(v=i,i=i+8|0,c[v>>2]=c[a>>2],v)|0);i=v;x=0;i=j;return x|0}do{if((K|0)==5060){if((b[n>>1]|0)==d<<16>>16){break}cg(c[C>>2]|0,45120,41864,(v=i,i=i+16|0,c[v>>2]=c[a>>2],c[v+8>>2]=t,v)|0);i=v;x=0;i=j;return x|0}}while(0);t=l;d=l+2|0;b[o>>1]=b[d>>1]|0;n=c[u>>2]|0;if((n&128|0)==0){Q=n}else{ds(o);Q=c[u>>2]|0}n=l+4|0;do{if((Q&524288|0)==0){K=n;J=e[K>>1]|e[K+2>>1]<<16;c[s>>2]=J;if((Q&128|0)==0){R=J;S=Q}else{dt(s);R=c[s>>2]|0;S=c[u>>2]|0}c[p>>2]=R;c[p+4>>2]=0;J=l+8|0;K=e[J>>1]|e[J+2>>1]<<16;c[s>>2]=K;if((S&128|0)==0){T=K}else{dt(s);T=c[s>>2]|0}c[q>>2]=T;c[q+4>>2]=0}else{K=n;J=K|0;I=K+4|0;K=e[I>>1]|e[I+2>>1]<<16;c[p>>2]=e[J>>1]|e[J+2>>1]<<16;c[p+4>>2]=K;if((Q&128|0)==0){U=Q}else{du(p);U=c[u>>2]|0}K=l+12|0;J=K|0;I=K+4|0;K=e[I>>1]|e[I+2>>1]<<16;c[q>>2]=e[J>>1]|e[J+2>>1]<<16;c[q+4>>2]=K;if((U&128|0)==0){break}du(q)}}while(0);do{if((bV(f)|0)==8){if((c[u>>2]&524288|0)!=0){V=f;break}if((f|0)==16){V=4;break}else if((f|0)==17){V=9;break}else if((f|0)==18){V=13;break}else{V=f;break}}else{V=f}}while(0);U=d5(a,g,bV(V)|0,41208)|0;if((U|0)==0){x=0;i=j;return x|0}L6695:do{if((V|0)==(f|0)){Q=aa(bV(f)|0,g)|0;hu(U|0,h|0,Q)|0}else{if((V|0)==9&(f|0)==17){Q=h;T=U;s=0;while(1){if((s|0)>=(g|0)){break L6695}S=Q+(s<<3)|0;R=c[S>>2]|0;c[T+(s<<2)>>2]=R;if((R|0)==(c[S>>2]|0)&(((R|0)<0|0?-1:0)|0)==(c[S+4>>2]|0)){s=s+1|0}else{break}}dU(U);cg(c[C>>2]|0,45120,40720,(v=i,i=i+1|0,i=i+7&-8,c[v>>2]=0,v)|0);i=v;x=0;i=j;return x|0}if(!((V|0)==4&(f|0)==16)){if(!((V|0)==13&(f|0)==18)){break}}s=h;T=U;Q=0;while(1){if((Q|0)>=(g|0)){break L6695}S=s+(Q<<3)|0;R=c[S>>2]|0;K=c[S+4>>2]|0;c[T+(Q<<2)>>2]=R;if((R|0|0)==(c[S>>2]|0)&(K&0|0)==(c[S+4>>2]|0)){Q=Q+1|0}else{break}}dU(U);cg(c[C>>2]|0,45120,40720,(v=i,i=i+1|0,i=i+7&-8,c[v>>2]=0,v)|0);i=v;x=0;i=j;return x|0}}while(0);do{if((bV(V)|0)>1){if((c[u>>2]&128|0)==0){break}if((bV(V)|0)==2){dv(U,g);break}if((bV(V)|0)==4){dx(U,g);break}if((bV(V)|0)!=8){break}dy(U,g)}}while(0);h=(c[u>>2]&524288|0)==0;f=aa(bV(V)|0,g)|0;do{if(h){if((f|0)>=5){W=0;break}Q=hy(M,L,8,0)|0;c[q>>2]=Q;c[q+4>>2]=E;W=1}else{if((f|0)>=9){W=0;break}Q=hy(M,L,12,0)|0;c[q>>2]=Q;c[q+4>>2]=E;W=1}}while(0);do{if((c[p>>2]|0)==(g|0)&(c[p+4>>2]|0)==(((g|0)<0|0?-1:0)|0)){if((b[o>>1]|0)!=(V&65535)<<16>>16){break}f=ba[c[B>>2]&127](c[C>>2]|0,c[q>>2]|0,c[q+4>>2]|0,0)|0;if(!((f|0)==(c[q>>2]|0)&(E|0)==(c[q+4>>2]|0))){dU(U);cg(c[C>>2]|0,45120,25008,(v=i,i=i+8|0,c[v>>2]=c[a>>2],v)|0);i=v;x=0;i=j;return x|0}f=c[a+636>>2]|0;h=c[C>>2]|0;Q=aa(bV(V)|0,g)|0;T=be[f&63](h,U,Q)|0;Q=(T|0)==(aa(bV(V)|0,g)|0);dU(U);if(Q){x=1;i=j;return x|0}cg(c[C>>2]|0,45120,30576,(v=i,i=i+1|0,i=i+7&-8,c[v>>2]=0,v)|0);i=v;x=0;i=j;return x|0}}while(0);do{if((W|0)==0){Q=ba[c[B>>2]&127](c[C>>2]|0,0,0,2)|0;c[q>>2]=Q;c[q+4>>2]=E;Q=c[a+636>>2]|0;T=c[C>>2]|0;h=aa(bV(V)|0,g)|0;f=be[Q&63](T,U,h)|0;h=(f|0)==(aa(bV(V)|0,g)|0);dU(U);if(h){break}cg(c[C>>2]|0,45120,30576,(v=i,i=i+1|0,i=i+7&-8,c[v>>2]=0,v)|0);i=v;x=0;i=j;return x|0}else{h=q;f=aa(bV(V)|0,g)|0;hu(h|0,U|0,f)|0}}while(0);U=V&65535;b[o>>1]=U;b[d>>1]=U;U=c[u>>2]|0;if((U&128|0)==0){X=U}else{ds(d);X=c[u>>2]|0}do{if((X&524288|0)==0){d=n;w=c[p>>2]|0;b[d>>1]=w&65535;b[d+2>>1]=w>>16;if((X&128|0)==0){Y=X}else{dt(d);Y=c[u>>2]|0}d=l+8|0;w=c[q>>2]|0;b[d>>1]=w&65535;b[d+2>>1]=w>>16;if((Y&128|0)==0){break}dt(d)}else{d=n;U=c[p+4>>2]|0;o=d|0;w=c[p>>2]|0;b[o>>1]=w&65535;b[o+2>>1]=w>>16;o=d+4|0;w=U;b[o>>1]=w&65535;b[o+2>>1]=w>>16;if((X&128|0)==0){Z=X}else{du(d);Z=c[u>>2]|0}d=l+12|0;o=c[q+4>>2]|0;U=d|0;w=c[q>>2]|0;b[U>>1]=w&65535;b[U+2>>1]=w>>16;U=d+4|0;w=o;b[U>>1]=w&65535;b[U+2>>1]=w>>16;if((Z&128|0)==0){break}du(d)}}while(0);Z=ba[c[B>>2]&127](c[C>>2]|0,M,L,0)|0;if(!((Z|0)==(M|0)&(E|0)==(L|0))){cg(c[C>>2]|0,45120,25008,(v=i,i=i+8|0,c[v>>2]=c[a>>2],v)|0);i=v;x=0;i=j;return x|0}if((be[c[a+636>>2]&63](c[C>>2]|0,t,N)|0)==(N|0)){x=1;i=j;return x|0}cg(c[C>>2]|0,45120,40072,(v=i,i=i+8|0,c[v>>2]=c[a>>2],v)|0);i=v;x=0;i=j;return x|0}function eu(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+8|0;h=g|0;if((d|0)==0){c[b>>2]=(c[b>>2]|0)+1;j=1;i=g;return j|0}k=h;if(f<0.0){aD(29096,37040,2084,43616);return 0}do{if(f>0.0){l=~~f;if(+(l>>>0>>>0)==f){c[h>>2]=l;c[h+4>>2]=1;break}if(f<1.0){c[h>>2]=~~(f*4294967295.0);c[h+4>>2]=-1;break}else{c[h>>2]=-1;c[h+4>>2]=~~(4294967295.0/f);break}}else{c[h>>2]=0;c[h+4>>2]=1}}while(0);if((c[a+12>>2]&128|0)!=0){dt(h|0);dt(h+4|0)}j=ey(a,b,d,e,5,1,8,k)|0;i=g;return j|0}function ev(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=i;if((d|0)==0){c[b>>2]=(c[b>>2]|0)+1;j=1;i=h;return j|0}k=a+12|0;l=c[k>>2]|0;if((l&524288|0)!=0){if(f>>>0>=536870912){aD(29880,37040,2047,43696);return 0}if((l&128|0)!=0){dy(g,f)}j=ey(a,b,d,e,16,f,f<<3,g)|0;i=h;return j|0}l=f<<2;m=dT(l)|0;n=m;if((m|0)==0){cg(c[a+628>>2]|0,45648,32312,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o;j=0;i=h;return j|0}do{if((f|0)!=0){p=0;q=g;r=n;while(1){s=c[q>>2]|0;t=c[q+4>>2]|0;u=0;if(t>>>0>u>>>0|t>>>0==u>>>0&s>>>0>-1>>>0){v=5179;break}c[r>>2]=s;s=p+1|0;if(s>>>0<f>>>0){p=s;q=q+8|0;r=r+4|0}else{v=5181;break}}if((v|0)==5181){if(f>>>0<1073741824){break}aD(30800,37040,2e3,43656);return 0}else if((v|0)==5179){cg(c[a+628>>2]|0,45648,31032,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o;dU(m);j=0;i=h;return j|0}}}while(0);if((c[k>>2]&128|0)!=0){dx(n,f)}n=ey(a,b,d,e,4,f,l,m)|0;dU(m);j=n;i=h;return j|0}function ew(d,f,j,k,l,m){d=d|0;f=f|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;n=i;o=l<<3;p=dT(o)|0;if((p|0)==0){cg(c[d+628>>2]|0,45608,32312,(q=i,i=i+1|0,i=i+7&-8,c[q>>2]=0,q)|0);i=q;r=0;i=n;return r|0}q=e[d+86>>1]|0;do{if((q|0)==3){if((e[d+84>>1]|0)>=33){if((j|0)==0){c[f>>2]=(c[f>>2]|0)+1;s=1;break}if(l>>>0>=536870912){aD(29880,37040,2264,43856);return 0}if((c[d+12>>2]&128|0)!=0){dA(m,l)}s=ey(d,f,j,k,12,l,o,m)|0;break}t=p;if((l|0)!=0){u=0;do{g[t+(u<<2)>>2]=+h[m+(u<<3)>>3];u=u+1|0;}while(u>>>0<l>>>0)}if((j|0)==0){c[f>>2]=(c[f>>2]|0)+1;s=1;break}if(l>>>0>=1073741824){aD(30800,37040,2239,43816);return 0}if((c[d+12>>2]&128|0)!=0){dz(t,l)}s=ey(d,f,j,k,11,l,l<<2,p)|0}else if((q|0)==2){u=b[d+84>>1]|0;if((u&65535)<9){if((l|0)!=0){v=0;do{a[p+v|0]=~~+h[m+(v<<3)>>3];v=v+1|0;}while(v>>>0<l>>>0)}if((j|0)==0){c[f>>2]=(c[f>>2]|0)+1;s=1;break}else{s=ey(d,f,j,k,6,l,l,p)|0;break}}v=(l|0)==0;if((u&65535)<17){t=p;if(!v){w=0;do{b[t+(w<<1)>>1]=~~+h[m+(w<<3)>>3];w=w+1|0;}while(w>>>0<l>>>0)}if((j|0)==0){c[f>>2]=(c[f>>2]|0)+1;s=1;break}if((l|0)<=-1){aD(29600,37040,1979,43456);return 0}if((c[d+12>>2]&128|0)!=0){dv(t,l)}s=ey(d,f,j,k,8,l,l<<1,p)|0;break}else{w=p;if(!v){u=0;do{c[w+(u<<2)>>2]=~~+h[m+(u<<3)>>3];u=u+1|0;}while(u>>>0<l>>>0)}if((j|0)==0){c[f>>2]=(c[f>>2]|0)+1;s=1;break}if(l>>>0>=1073741824){aD(30800,37040,2023,43496);return 0}if((c[d+12>>2]&128|0)!=0){dx(w,l)}s=ey(d,f,j,k,9,l,l<<2,p)|0;break}}else if((q|0)==1){u=b[d+84>>1]|0;if((u&65535)<9){if((l|0)!=0){v=0;do{a[p+v|0]=~~+h[m+(v<<3)>>3];v=v+1|0;}while(v>>>0<l>>>0)}if((j|0)==0){c[f>>2]=(c[f>>2]|0)+1;s=1;break}else{s=ey(d,f,j,k,1,l,l,p)|0;break}}v=(l|0)==0;if((u&65535)<17){w=p;if(!v){t=0;do{b[w+(t<<1)>>1]=~~+h[m+(t<<3)>>3];t=t+1|0;}while(t>>>0<l>>>0)}if((j|0)==0){c[f>>2]=(c[f>>2]|0)+1;s=1;break}if((l|0)<=-1){aD(29600,37040,1956,43576);return 0}if((c[d+12>>2]&128|0)!=0){dv(w,l)}s=ey(d,f,j,k,3,l,l<<1,p)|0;break}else{t=p;if(!v){u=0;do{c[t+(u<<2)>>2]=~~+h[m+(u<<3)>>3];u=u+1|0;}while(u>>>0<l>>>0)}if((j|0)==0){c[f>>2]=(c[f>>2]|0)+1;s=1;break}if(l>>>0>=1073741824){aD(30800,37040,2e3,43656);return 0}if((c[d+12>>2]&128|0)!=0){dx(t,l)}s=ey(d,f,j,k,4,l,l<<2,p)|0;break}}else{s=0}}while(0);dU(p);r=s;i=n;return r|0}function ex(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0;j=i;if((d|0)==0){c[b>>2]=(c[b>>2]|0)+1;k=1;i=j;return k|0}l=f<<1;m=f<<3;n=dT(m)|0;o=n;if((n|0)==0){cg(c[a+628>>2]|0,45808,32312,(p=i,i=i+1|0,i=i+7&-8,c[p>>2]=0,p)|0);i=p;k=0;i=j;return k|0}if((f|0)!=0){p=h;h=o;q=0;while(1){r=+g[p>>2];do{if(r>0.0){s=~~r;if(r==+(s>>>0>>>0)){c[h>>2]=s;c[h+4>>2]=1;break}if(r<1.0){c[h>>2]=~~(r*4294967296.0);c[h+4>>2]=-1;break}else{c[h>>2]=-1;c[h+4>>2]=~~(4294967296.0/+g[p>>2]);break}}else{c[h>>2]=0;c[h+4>>2]=1}}while(0);s=q+1|0;if(s>>>0<f>>>0){p=p+4|0;h=h+8|0;q=s}else{break}}}if((c[a+12>>2]&128|0)!=0){dx(o,l)}l=ey(a,b,d,e,5,f,m,n)|0;dU(n);k=l;i=j;return k|0}function ey(a,d,e,f,g,h,j,k){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;l=i;i=i+8|0;m=l|0;n=c[d>>2]|0;o=0;while(1){p=o>>>0<n>>>0;if(!p){break}q=b[e+(o*24|0)>>1]|0;if(q<<16>>16==f<<16>>16){r=5289;break}if((q&65535)>(f&65535)){r=5291;break}else{o=o+1|0}}if((r|0)==5289){aD(30552,37040,2301,43424);return 0}do{if((r|0)==5291){if(p){s=n}else{break}while(1){q=s-1|0;t=e+(s*24|0)|0;u=e+(q*24|0)|0;c[t>>2]=c[u>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2];c[t+12>>2]=c[u+12>>2];c[t+16>>2]=c[u+16>>2];c[t+20>>2]=c[u+20>>2];if(q>>>0>o>>>0){s=q}else{break}}}}while(0);b[e+(o*24|0)>>1]=f;b[e+(o*24|0)+2>>1]=g;g=e+(o*24|0)+8|0;c[g>>2]=h;c[g+4>>2]=0;g=e+(o*24|0)+16|0;o=g|0;c[o>>2]=0;c[o+4>>2]=0;e=a+12|0;h=c[e>>2]&524288;do{if(((h>>>17)+4|0)>>>0<j>>>0){f=(h|0)==0;s=a+464|0;n=c[s>>2]|0;p=c[s+4>>2]|0;r=j;q=0;u=hy(n,p,r,q)|0;t=E;v=f?u|0:u;u=f?t&0:t;if(u>>>0<p>>>0|u>>>0==p>>>0&v>>>0<n>>>0|(u>>>0<q>>>0|u>>>0==q>>>0&v>>>0<r>>>0)){cg(c[a+628>>2]|0,43424,32024,(w=i,i=i+1|0,i=i+7&-8,c[w>>2]=0,w)|0);i=w;x=0;i=l;return x|0}r=a+628|0;q=ba[c[a+640>>2]&127](c[r>>2]|0,n,p,0)|0;if(!((q|0)==(n|0)&(E|0)==(p|0))){cg(c[r>>2]|0,43424,30344,(w=i,i=i+1|0,i=i+7&-8,c[w>>2]=0,w)|0);i=w;x=0;i=l;return x|0}if((j|0)<=-1){aD(30120,37040,2335,43424);return 0}if((be[c[a+636>>2]&63](c[r>>2]|0,k,j)|0)!=(j|0)){cg(c[r>>2]|0,43424,30344,(w=i,i=i+1|0,i=i+7&-8,c[w>>2]=0,w)|0);i=w;x=0;i=l;return x|0}r=hy(v&1,u&0,v,u)|0;c[s>>2]=r;c[s+4>>2]=E;s=c[e>>2]|0;if((s&524288|0)!=0){c[o>>2]=n;c[o+4>>2]=p;if((c[e>>2]&128|0)==0){break}du(o);break}c[m>>2]=n;if((s&128|0)!=0){dt(m)}dX(g,m,4)}else{dX(g,k,j)}}while(0);c[d>>2]=(c[d>>2]|0)+1;x=1;i=l;return x|0}function ez(a,b){a=a|0;b=b|0;c[a+504>>2]=34;c[a+500>>2]=0;c[a+508>>2]=34;c[a+520>>2]=0;c[a+516>>2]=34;return 1}function eA(a){a=a|0;var d=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+24|0;f=a+88|0;g=eq(b[f>>1]|0)|0;h=d|0;aL(h|0,36176,(j=i,i=i+8|0,c[j>>2]=e[f>>1]|0,j)|0)|0;i=j;if((g|0)==0){k=h}else{k=c[g>>2]|0}cg(c[a+628>>2]|0,c[a>>2]|0,35544,(j=i,i=i+8|0,c[j>>2]=k,j)|0);i=j;i=d;return 0}function eB(a,b){a=a|0;b=b|0;c[a+504>>2]=2;c[a+532>>2]=2;c[a+540>>2]=2;c[a+548>>2]=2;c[a+536>>2]=30;c[a+544>>2]=30;c[a+552>>2]=30;c[a+560>>2]=40;return 1}function eC(a){a=a|0;return 1}function eD(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;e=i;f=a+608|0;g=c[f>>2]|0;if((g|0)<(d|0)){cg(c[a+628>>2]|0,147832,32792,(h=i,i=i+40|0,c[h>>2]=c[a+444>>2],c[h+8>>2]=g,c[h+16>>2]=(g|0)<0|0?-1:0,c[h+24>>2]=d,c[h+32>>2]=(d|0)<0|0?-1:0,h)|0);i=h;j=0;i=e;return j|0}h=a+604|0;a=c[h>>2]|0;if((a|0)==(b|0)){k=b;l=g}else{dX(b,a,d);k=c[h>>2]|0;l=c[f>>2]|0}c[h>>2]=k+d;c[f>>2]=l-d;j=1;i=e;return j|0}function eE(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if((d|0)<=0){f=1;return f|0}e=a+608|0;g=a+592|0;h=a+604|0;i=b;b=d;while(1){d=c[e>>2]|0;j=c[g>>2]|0;k=(d+b|0)>(j|0)?j-d|0:b;if((k|0)<=0){l=5332;break}m=c[h>>2]|0;if((m|0)==(i|0)){n=i;o=d;p=j}else{dX(m,i,k);n=c[h>>2]|0;o=c[e>>2]|0;p=c[g>>2]|0}c[h>>2]=n+k;m=o+k|0;c[e>>2]=m;j=i+k|0;d=b-k|0;if((m|0)>=(p|0)){if((d1(a)|0)==0){f=-1;l=5340;break}}if((d|0)>0){i=j;b=d}else{f=1;l=5341;break}}if((l|0)==5332){aD(26792,38128,55,45048);return 0}else if((l|0)==5340){return f|0}else if((l|0)==5341){return f|0}return 0}function eF(a,b){a=a|0;b=b|0;var d=0;d=aa(c[a+580>>2]|0,b)|0;b=a+604|0;c[b>>2]=(c[b>>2]|0)+d;b=a+608|0;c[b>>2]=(c[b>>2]|0)-d;return 1}function eG(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;if((f-e&4|0)==0){h=f}else{c[f>>2]=0;h=f+4|0}if(h>>>0>e>>>0){f=e;e=0;while(1){i=c[f>>2]|0;if((i+e|0)>>>0>g>>>0|i>>>0>g>>>0){j=g-e|0;c[f>>2]=j;k=j}else{k=i}if((k|0)==0){l=e}else{i=e>>>3;j=b+i|0;m=e&7;n=8-m|0;do{if(k>>>0>n>>>0){if((m|0)==0){o=k;p=j}else{a[j]=(d[j]|0)&255<<n&255;o=k-n|0;p=b+(i+1)|0}q=o>>>3;if((q|0)==0){r=o;s=p}else{if(o>>>0>63){t=p;u=q;while(1){if((t&3|0)==0){v=t;w=u;break}x=t+1|0;a[t]=0;y=u-1|0;if((y|0)==0){v=x;w=0;break}else{t=x;u=y}}u=w>>>2;t=u<<2;hv(v|0,0,t|0);z=w-(u<<2)|0;A=v+t|0}else{z=q;A=p}switch(z|0){case 2:{B=5371;break};case 6:{B=5367;break};case 4:{B=5369;break};case 5:{B=5368;break};case 3:{B=5370;break};case 15:{a[A+14|0]=0;B=5359;break};case 10:{B=5363;break};case 12:{B=5361;break};case 14:{B=5359;break};case 8:{B=5365;break};case 1:{B=5372;break};case 9:{B=5364;break};case 13:{B=5360;break};case 7:{B=5366;break};case 11:{B=5362;break};default:{C=A}}if((B|0)==5359){B=0;a[A+13|0]=0;B=5360}if((B|0)==5360){B=0;a[A+12|0]=0;B=5361}if((B|0)==5361){B=0;a[A+11|0]=0;B=5362}if((B|0)==5362){B=0;a[A+10|0]=0;B=5363}if((B|0)==5363){B=0;a[A+9|0]=0;B=5364}if((B|0)==5364){B=0;a[A+8|0]=0;B=5365}if((B|0)==5365){B=0;a[A+7|0]=0;B=5366}if((B|0)==5366){B=0;a[A+6|0]=0;B=5367}if((B|0)==5367){B=0;a[A+5|0]=0;B=5368}if((B|0)==5368){B=0;a[A+4|0]=0;B=5369}if((B|0)==5369){B=0;a[A+3|0]=0;B=5370}if((B|0)==5370){B=0;a[A+2|0]=0;B=5371}if((B|0)==5371){B=0;a[A+1|0]=0;B=5372}if((B|0)==5372){B=0;a[A]=0;C=A+z|0}r=o&7;s=C}if((r|0)==0){break}a[s]=(d[s]|0)&255>>>(r>>>0)&255}else{a[j]=((d[45184+k|0]|0)>>>(m>>>0)^255)&(d[j]|0)&255}}while(0);l=(c[f>>2]|0)+e|0}j=f+4|0;m=c[j>>2]|0;if((m+l|0)>>>0>g>>>0|m>>>0>g>>>0){i=g-l|0;c[j>>2]=i;D=i}else{D=m}if((D|0)==0){E=l}else{m=l>>>3;i=b+m|0;n=l&7;t=8-n|0;do{if(D>>>0>t>>>0){if((n|0)==0){F=D;G=i}else{a[i]=(d[i]|0|255>>>(n>>>0))&255;F=D-t|0;G=b+(m+1)|0}u=F>>>3;if((u|0)==0){H=F;I=G}else{if(F>>>0>63){y=G;x=u;while(1){if((y&3|0)==0){J=y;K=x;break}L=y+1|0;a[y]=-1;M=x-1|0;if((M|0)==0){J=L;K=0;break}else{y=L;x=M}}x=K>>>2;y=x<<2;hv(J|0,-1|0,y|0);N=K-(x<<2)|0;O=J+y|0}else{N=u;O=G}switch(N|0){case 2:{B=5403;break};case 1:{B=5404;break};case 15:{a[O+14|0]=-1;B=5391;break};case 14:{B=5391;break};case 7:{B=5398;break};case 6:{B=5399;break};case 5:{B=5400;break};case 4:{B=5401;break};case 3:{B=5402;break};case 9:{B=5396;break};case 8:{B=5397;break};case 13:{B=5392;break};case 12:{B=5393;break};case 11:{B=5394;break};case 10:{B=5395;break};default:{P=O}}if((B|0)==5391){B=0;a[O+13|0]=-1;B=5392}if((B|0)==5392){B=0;a[O+12|0]=-1;B=5393}if((B|0)==5393){B=0;a[O+11|0]=-1;B=5394}if((B|0)==5394){B=0;a[O+10|0]=-1;B=5395}if((B|0)==5395){B=0;a[O+9|0]=-1;B=5396}if((B|0)==5396){B=0;a[O+8|0]=-1;B=5397}if((B|0)==5397){B=0;a[O+7|0]=-1;B=5398}if((B|0)==5398){B=0;a[O+6|0]=-1;B=5399}if((B|0)==5399){B=0;a[O+5|0]=-1;B=5400}if((B|0)==5400){B=0;a[O+4|0]=-1;B=5401}if((B|0)==5401){B=0;a[O+3|0]=-1;B=5402}if((B|0)==5402){B=0;a[O+2|0]=-1;B=5403}if((B|0)==5403){B=0;a[O+1|0]=-1;B=5404}if((B|0)==5404){B=0;a[O]=-1;P=O+N|0}H=F&7;I=P}if((H|0)==0){break}a[I]=(d[I]|0|65280>>>(H>>>0))&255}else{a[i]=(d[i]|0|(d[45184+D|0]|0)>>>(n>>>0))&255}}while(0);E=(c[j>>2]|0)+l|0}n=f+8|0;if(n>>>0<h>>>0){f=n;e=E}else{Q=E;break}}}else{Q=0}if((Q|0)==(g|0)){return}else{aD(26688,38048,452,43256)}}function eH(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;b=i;if((eI(a)|0)==0){d=1;i=b;return d|0}if((bS(a,11696,1)|0)==0){cg(c[a+628>>2]|0,32736,30440,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e;d=0;i=b;return d|0}else{f=bF(a,65536,(e=i,i=i+8|0,c[e>>2]=1,e)|0)|0;i=e;d=f;i=b;return d|0}return 0}function eI(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;if((bS(a,11472,5)|0)==0){cg(c[a+628>>2]|0,35048,34520,(d=i,i=i+1|0,i=i+7&-8,c[d>>2]=0,d)|0);i=d;e=0;i=b;return e|0}f=dT(96)|0;g=a+576|0;c[g>>2]=f;if((f|0)==0){cg(c[a+628>>2]|0,35048,34048,(d=i,i=i+1|0,i=i+7&-8,c[d>>2]=0,d)|0);i=d;e=0;i=b;return e|0}h=f;c[h>>2]=c[a+8>>2];j=a+672|0;c[f+32>>2]=c[j>>2];c[j>>2]=22;j=a+668|0;c[f+36>>2]=c[j>>2];c[j>>2]=28;j=a+676|0;c[f+40>>2]=c[j>>2];c[j>>2]=60;c[f+28>>2]=0;if((c[h>>2]|0)==0){h=a+12|0;c[h>>2]=c[h>>2]|256}c[(c[g>>2]|0)+64>>2]=0;bF(a,65540,(d=i,i=i+8|0,c[d>>2]=2,d)|0)|0;i=d;c[(c[g>>2]|0)+80>>2]=0;c[a+504>>2]=10;c[a+508>>2]=12;c[a+512>>2]=16;c[a+532>>2]=90;c[a+540>>2]=90;c[a+548>>2]=90;c[a+516>>2]=12;c[a+524>>2]=46;c[a+528>>2]=18;c[a+536>>2]=64;c[a+544>>2]=64;c[a+552>>2]=64;c[a+556>>2]=6;c[a+564>>2]=10;e=1;i=b;return e|0}function eJ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;b=i;if((eI(a)|0)==0){d=0;i=b;return d|0}if((bS(a,11656,1)|0)==0){cg(c[a+628>>2]|0,28600,27336,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e;d=0;i=b;return d|0}else{c[a+532>>2]=48;c[a+540>>2]=48;c[a+548>>2]=48;c[a+536>>2]=80;c[a+544>>2]=80;c[a+552>>2]=80;c[a+528>>2]=36;f=bF(a,65536,(e=i,i=i+8|0,c[e>>2]=1,e)|0)|0;i=e;d=f;i=b;return d|0}return 0}function eK(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0,ca=0,cb=0,cc=0,cd=0,ce=0,cf=0,ch=0,ci=0,cj=0,ck=0,cl=0,cm=0,cn=0,co=0,cp=0,cq=0,cr=0,cs=0,ct=0,cu=0,cv=0,cw=0,cx=0,cy=0,cz=0,cA=0,cB=0,cC=0,cD=0,cE=0,cF=0,cG=0,cH=0,cI=0,cJ=0,cK=0,cL=0,cM=0,cN=0,cO=0,cP=0,cQ=0,cR=0,cS=0,cT=0,cU=0,cV=0,cW=0,cX=0,cY=0,cZ=0,c_=0,c$=0,c0=0,c1=0,c2=0,c3=0,c4=0,c5=0,c6=0,c7=0;f=i;g=c[a+576>>2]|0;h=c[g+12>>2]|0;j=c[g+44>>2]|0;k=g+8|0;if(((e|0)%(c[k>>2]|0)|0|0)!=0){cg(c[a+628>>2]|0,147712,26248,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0);i=l;m=-1;i=f;return m|0}n=g+48|0;o=c[n>>2]|0;p=g+52|0;q=c[p>>2]|0;r=g+56|0;s=c[r>>2]|0;t=a+604|0;u=c[t>>2]|0;v=a+608|0;w=u+(c[v>>2]|0)|0;L7197:do{if((e|0)>0){x=g+72|0;y=g+68|0;z=(h|0)>0;A=g+92|0;B=a+628|0;C=a+12|0;D=a+492|0;E=a+452|0;F=g+60|0;G=o;H=q;I=u;J=e;K=s;L=b;M=c[x>>2]|0;N=c[y>>2]|0;L7199:while(1){L7201:do{if(z){O=M;P=G;Q=H;R=I;S=0;T=M;U=c[N>>2]|0;V=N+4|0;W=0;L7203:while(1){X=(T|0)==(M|0);L7205:do{if(X){Y=P;Z=Q;_=0;$=R;aa=S;ab=U;ac=V;ad=W;while(1){do{if((Z|0)<7){if($>>>0<w>>>0){ae=$+1|0;af=Z+8|0;ag=(d[j+(d[$]|0)|0]|0)<<Z|Y;break}else{if((Z|0)==0){ah=M;ai=aa;aj=$;ak=_;al=0;am=Y;an=5528;break L7199}else{ae=$;af=7;ag=Y;break}}}else{ae=$;af=Z;ag=Y}}while(0);ao=ag&127;ap=d[79889+(ao<<3)|0]|0;aq=af-ap|0;ar=ag>>>(ap>>>0);switch(d[79888+(ao<<3)|0]|0|0){case 5:{as=_;at=aa;au=ab;av=ac;aw=ae;ax=ao;ay=aq;az=ar;an=5510;break L7205;break};case 1:{break};case 2:{aA=_;aB=aa;aC=ab;aD=ac;aE=ae;aF=aq;aG=ar;an=5462;break L7205;break};case 3:{aH=_;aI=aa;aJ=ab;aK=ac;aL=ad;aM=ae;aN=aq;aO=ar;an=5502;break L7205;break};case 4:{aP=_;aQ=aa;aR=ab;aS=ac;aT=ad;aU=ae;aV=ao;aW=aq;aX=ar;an=5506;break L7205;break};case 6:{aY=_;aZ=aa;a_=ae;a$=aq;a0=ar;a1=M;an=5517;break L7203;break};case 12:{a2=_;a3=aa;a4=af;a5=ae;a6=ap;a7=aq;a8=ar;a9=M;an=5518;break L7203;break};default:{ba=ae;bb=aq;bc=ar;bd=_;be=aa;bf=M;an=5525;break L7203}}ap=(c[ac>>2]|0)+ab|0;ao=ad+_+ap|0;if((ap|0)<(h|0)){Y=ar;Z=aq;_=ao;$=ae;aa=ap;ab=ap+(c[ac+4>>2]|0)|0;ac=ac+8|0;ad=-ap|0}else{bg=ar;bh=aq;bi=ao;bj=ae;bl=ap;bm=M;an=5539;break L7203}}}else{ad=P;ac=Q;ab=0;aa=R;$=S;_=U;Z=V;Y=W;while(1){do{if((ac|0)<7){if(aa>>>0<w>>>0){bn=aa+1|0;bo=ac+8|0;bp=(d[j+(d[aa]|0)|0]|0)<<ac|ad;break}else{if((ac|0)==0){ah=T;ai=$;aj=aa;ak=ab;al=0;am=ad;an=5528;break L7199}else{bn=aa;bo=7;bp=ad;break}}}else{bn=aa;bo=ac;bp=ad}}while(0);ap=bp&127;ao=d[79889+(ap<<3)|0]|0;aq=bo-ao|0;ar=bp>>>(ao>>>0);switch(d[79888+(ap<<3)|0]|0|0){case 5:{as=ab;at=$;au=_;av=Z;aw=bn;ax=ap;ay=aq;az=ar;an=5510;break L7205;break};case 2:{aA=ab;aB=$;aC=_;aD=Z;aE=bn;aF=aq;aG=ar;an=5462;break L7205;break};case 3:{aH=ab;aI=$;aJ=_;aK=Z;aL=Y;aM=bn;aN=aq;aO=ar;an=5502;break L7205;break};case 4:{aP=ab;aQ=$;aR=_;aS=Z;aT=Y;aU=bn;aV=ap;aW=aq;aX=ar;an=5506;break L7205;break};case 6:{aY=ab;aZ=$;a_=bn;a$=aq;a0=ar;a1=T;an=5517;break L7203;break};case 12:{a2=ab;a3=$;a4=bo;a5=bn;a6=ao;a7=aq;a8=ar;a9=T;an=5518;break L7203;break};case 1:{break};default:{ba=bn;bb=aq;bc=ar;bd=ab;be=$;bf=T;an=5525;break L7203}}if((_|0)<=($|0)&(_|0)<(h|0)){ao=_;ap=Z;while(1){bq=(c[ap>>2]|0)+ao+(c[ap+4>>2]|0)|0;br=ap+8|0;if((bq|0)<=($|0)&(bq|0)<(h|0)){ao=bq;ap=br}else{bs=bq;bt=br;break}}}else{bs=_;bt=Z}ap=(c[bt>>2]|0)+bs|0;ao=Y+ab+ap|0;if((ap|0)<(h|0)){ad=ar;ac=aq;ab=ao;aa=bn;$=ap;_=ap+(c[bt+4>>2]|0)|0;Z=bt+8|0;Y=-ap|0}else{bg=ar;bh=aq;bi=ao;bj=bn;bl=ap;bm=T;an=5539;break L7203}}}}while(0);do{if((an|0)==5510){an=0;Y=(T|0)!=(M|0);do{if(Y){if((au|0)<=(at|0)&(au|0)<(h|0)){bu=au;bv=av}else{bw=av;bx=au;break}while(1){Z=(c[bv>>2]|0)+bu+(c[bv+4>>2]|0)|0;_=bv+8|0;if((Z|0)<=(at|0)&(Z|0)<(h|0)){bu=Z;bv=_}else{bw=_;bx=Z;break}}}else{bw=av;bx=au}}while(0);aq=c[79892+(ax<<3)>>2]|0;ar=aq+at|0;if((bx|0)<=(ar|0)&((bx|0)<(ar|0)|Y)){an=5514;break L7203}c[T>>2]=bx-at+as-aq;ar=bw-4|0;by=ar;bz=bx-(c[ar>>2]|0)|0;bA=T+4|0;bB=bx-aq|0;bC=aw;bD=ay;bE=az}else if((an|0)==5462){an=0;if((T-O&4|0)==0){aq=aB;ar=aE;Z=aA;_=aF;$=aG;while(1){do{if((_|0)<12){if(ar>>>0>=w>>>0){if((_|0)==0){ah=T;ai=aq;aj=ar;ak=Z;al=0;am=$;an=5528;break L7199}else{bF=ar;bG=12;bH=$;break}}aa=ar+1|0;ab=(d[j+(d[ar]|0)|0]|0)<<_|$;ac=_+8|0;if((ac|0)>=12){bF=aa;bG=ac;bH=ab;break}if(aa>>>0>=w>>>0){bF=aa;bG=12;bH=ab;break}bF=ar+2|0;bG=_+16|0;bH=(d[j+(d[aa]|0)|0]|0)<<ac|ab}else{bF=ar;bG=_;bH=$}}while(0);bI=bH&4095;ab=d[46465+(bI<<3)|0]|0;bJ=bG-ab|0;bK=bH>>>(ab>>>0);ab=d[46464+(bI<<3)|0]|0;if((ab|0)==7){break}else if(!((ab|0)==9|(ab|0)==11)){bL=T;bM=aq;bN=bF;bO=Z;bP=bJ;bQ=bK;an=5527;break L7203}ab=c[46468+(bI<<3)>>2]|0;aq=ab+aq|0;ar=bF;Z=ab+Z|0;_=bJ;$=bK}$=c[46468+(bI<<3)>>2]|0;_=T+4|0;c[T>>2]=$+Z;ar=$+aq|0;$=bF;Y=0;ab=bJ;ac=bK;while(1){do{if((ab|0)<13){if($>>>0>=w>>>0){if((ab|0)==0){ah=_;ai=ar;aj=$;ak=Y;al=0;am=ac;an=5528;break L7199}else{bR=$;bS=13;bT=ac;break}}aa=$+1|0;ad=(d[j+(d[$]|0)|0]|0)<<ab|ac;ap=ab+8|0;if((ap|0)>=13){bR=aa;bS=ap;bT=ad;break}if(aa>>>0>=w>>>0){bR=aa;bS=13;bT=ad;break}bR=$+2|0;bS=ab+16|0;bT=(d[j+(d[aa]|0)|0]|0)<<ap|ad}else{bR=$;bS=ab;bT=ac}}while(0);bU=bT&8191;ad=d[80913+(bU<<3)|0]|0;bV=bS-ad|0;bW=bT>>>(ad>>>0);ad=d[80912+(bU<<3)|0]|0;if((ad|0)==8){break}else if(!((ad|0)==10|(ad|0)==11)){bX=_;bY=ar;bZ=bR;b_=Y;b$=bV;b0=bW;an=5526;break L7203}ad=c[80916+(bU<<3)>>2]|0;ar=ad+ar|0;$=bR;Y=ad+Y|0;ab=bV;ac=bW}ac=c[80916+(bU<<3)>>2]|0;c[_>>2]=ac+Y;b1=ac+ar|0;b2=bR;b3=bV;b4=bW}else{ac=aB;ab=aE;$=aA;aq=aF;Z=aG;while(1){do{if((aq|0)<13){if(ab>>>0>=w>>>0){if((aq|0)==0){ah=T;ai=ac;aj=ab;ak=$;al=0;am=Z;an=5528;break L7199}else{b5=ab;b6=13;b7=Z;break}}ad=ab+1|0;ap=(d[j+(d[ab]|0)|0]|0)<<aq|Z;aa=aq+8|0;if((aa|0)>=13){b5=ad;b6=aa;b7=ap;break}if(ad>>>0>=w>>>0){b5=ad;b6=13;b7=ap;break}b5=ab+2|0;b6=aq+16|0;b7=(d[j+(d[ad]|0)|0]|0)<<aa|ap}else{b5=ab;b6=aq;b7=Z}}while(0);b8=b7&8191;ap=d[80913+(b8<<3)|0]|0;b9=b6-ap|0;ca=b7>>>(ap>>>0);ap=d[80912+(b8<<3)|0]|0;if((ap|0)==8){break}else if(!((ap|0)==10|(ap|0)==11)){bX=T;bY=ac;bZ=b5;b_=$;b$=b9;b0=ca;an=5526;break L7203}ap=c[80916+(b8<<3)>>2]|0;ac=ap+ac|0;ab=b5;$=ap+$|0;aq=b9;Z=ca}Z=c[80916+(b8<<3)>>2]|0;aq=T+4|0;c[T>>2]=Z+$;ab=Z+ac|0;Z=b5;ar=0;Y=b9;_=ca;while(1){do{if((Y|0)<12){if(Z>>>0>=w>>>0){if((Y|0)==0){ah=aq;ai=ab;aj=Z;ak=ar;al=0;am=_;an=5528;break L7199}else{cb=Z;cc=12;cd=_;break}}ap=Z+1|0;aa=(d[j+(d[Z]|0)|0]|0)<<Y|_;ad=Y+8|0;if((ad|0)>=12){cb=ap;cc=ad;cd=aa;break}if(ap>>>0>=w>>>0){cb=ap;cc=12;cd=aa;break}cb=Z+2|0;cc=Y+16|0;cd=(d[j+(d[ap]|0)|0]|0)<<ad|aa}else{cb=Z;cc=Y;cd=_}}while(0);ce=cd&4095;aa=d[46465+(ce<<3)|0]|0;cf=cc-aa|0;ch=cd>>>(aa>>>0);aa=d[46464+(ce<<3)|0]|0;if((aa|0)==7){break}else if(!((aa|0)==9|(aa|0)==11)){bL=aq;bM=ab;bN=cb;bO=ar;bP=cf;bQ=ch;an=5527;break L7203}aa=c[46468+(ce<<3)>>2]|0;ab=aa+ab|0;Z=cb;ar=aa+ar|0;Y=cf;_=ch}_=c[46468+(ce<<3)>>2]|0;c[aq>>2]=_+ar;b1=_+ab|0;b2=cb;b3=cf;b4=ch}_=T+8|0;if((_|0)==(M|0)){by=aD;bz=aC;bA=M;bB=b1;bC=b2;bD=b3;bE=b4;break}if((aC|0)<=(b1|0)&(aC|0)<(h|0)){ci=aC;cj=aD}else{by=aD;bz=aC;bA=_;bB=b1;bC=b2;bD=b3;bE=b4;break}while(1){Y=(c[cj>>2]|0)+ci+(c[cj+4>>2]|0)|0;Z=cj+8|0;if((Y|0)<=(b1|0)&(Y|0)<(h|0)){ci=Y;cj=Z}else{by=Z;bz=Y;bA=_;bB=b1;bC=b2;bD=b3;bE=b4;break}}}else if((an|0)==5502){an=0;do{if(X){ck=aK;cl=aJ}else{if((aJ|0)<=(aI|0)&(aJ|0)<(h|0)){cm=aJ;cn=aK}else{ck=aK;cl=aJ;break}while(1){_=(c[cn>>2]|0)+cm+(c[cn+4>>2]|0)|0;ab=cn+8|0;if((_|0)<=(aI|0)&(_|0)<(h|0)){cm=_;cn=ab}else{ck=ab;cl=_;break}}}}while(0);c[T>>2]=aL+aH+cl;by=ck+4|0;bz=(c[ck>>2]|0)+cl|0;bA=T+4|0;bB=cl;bC=aM;bD=aN;bE=aO}else if((an|0)==5506){an=0;do{if(X){co=aS;cp=aR}else{if((aR|0)<=(aQ|0)&(aR|0)<(h|0)){cq=aR;cr=aS}else{co=aS;cp=aR;break}while(1){_=(c[cr>>2]|0)+cq+(c[cr+4>>2]|0)|0;ab=cr+8|0;if((_|0)<=(aQ|0)&(_|0)<(h|0)){cq=_;cr=ab}else{co=ab;cp=_;break}}}}while(0);_=c[79892+(aV<<3)>>2]|0;c[T>>2]=aT+aP+cp+_;by=co+4|0;bz=(c[co>>2]|0)+cp|0;bA=T+4|0;bB=_+cp|0;bC=aU;bD=aW;bE=aX}}while(0);if((bB|0)<(h|0)){P=bE;Q=bD;R=bC;S=bB;T=bA;U=bz;V=by;W=-bB|0}else{cs=bA;ct=bE;cu=bD;cv=bC;cw=bB;cx=K;break L7201}}do{if((an|0)==5514){an=0;W=(c[C>>2]&1024|0)!=0;V=c[(W?D:E)>>2]|0;cg(c[B>>2]|0,147712,39992,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=W?41824:41168,c[l+16>>2]=V,c[l+24>>2]=at,l)|0);i=l;cy=K;cz=T;cA=at;cB=aw;cC=as;cD=ay;cE=az}else if((an|0)==5517){an=0;c[a1>>2]=h-aZ;V=(c[C>>2]&1024|0)!=0;W=c[(V?D:E)>>2]|0;cg(c[B>>2]|0,147712,36944,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=V?41824:41168,c[l+16>>2]=W,c[l+24>>2]=aZ,l)|0);i=l;cy=K;cz=a1+4|0;cA=aZ;cB=a_;cC=aY;cD=a$;cE=a0}else if((an|0)==5518){an=0;W=a9+4|0;c[a9>>2]=h-a3;do{if((a7|0)<4){if(a5>>>0<w>>>0){cF=a5+1|0;cG=a7+8|0;cH=(d[j+(d[a5]|0)|0]|0)<<a7|a8;break}else{if((a4|0)==(a6|0)){ah=W;ai=a3;aj=a5;ak=a2;al=a7;am=a8;an=5528;break L7199}else{cF=a5;cG=4;cH=a8;break}}}else{cF=a5;cG=a7;cH=a8}}while(0);if((cH&15|0)!=0){V=(c[C>>2]&1024|0)!=0;U=c[(V?D:E)>>2]|0;cg(c[B>>2]|0,147712,39992,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=V?41824:41168,c[l+16>>2]=U,c[l+24>>2]=a3,l)|0);i=l}cy=1;cz=W;cA=a3;cB=cF;cC=a2;cD=cG-4|0;cE=cH>>>4}else if((an|0)==5539){an=0;if((bi|0)==0){cs=bm;ct=bg;cu=bh;cv=bj;cw=bl;cx=K;break L7201}if((bl+bi|0)<(h|0)){do{if((bh|0)<1){if(bj>>>0<w>>>0){cI=bj+1|0;cJ=bh+8|0;cK=(d[j+(d[bj]|0)|0]|0)<<bh|bg;break}else{if((bh|0)==0){ah=bm;ai=bl;aj=bj;ak=bi;al=0;am=bg;an=5528;break L7199}else{cI=bj;cJ=1;cK=bg;break}}}else{cI=bj;cJ=bh;cK=bg}}while(0);if((cK&1|0)==0){ba=cI;bb=cJ;bc=cK;bd=bi;be=bl;bf=bm;an=5525;break}cL=cI;cM=cJ-1|0;cN=cK>>>1}else{cL=bj;cM=bh;cN=bg}c[bm>>2]=bi;cs=bm+4|0;ct=cN;cu=cM;cv=cL;cw=bl;cx=K;break L7201}else if((an|0)==5526){an=0;W=(c[C>>2]&1024|0)!=0;U=c[(W?D:E)>>2]|0;cg(c[B>>2]|0,147712,39992,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=W?41824:41168,c[l+16>>2]=U,c[l+24>>2]=bY,l)|0);i=l;cy=K;cz=bX;cA=bY;cB=bZ;cC=b_;cD=b$;cE=b0}else if((an|0)==5527){an=0;U=(c[C>>2]&1024|0)!=0;W=c[(U?D:E)>>2]|0;cg(c[B>>2]|0,147712,39992,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=U?41824:41168,c[l+16>>2]=W,c[l+24>>2]=bM,l)|0);i=l;cy=K;cz=bL;cA=bM;cB=bN;cC=bO;cD=bP;cE=bQ}}while(0);if((an|0)==5525){an=0;T=(c[C>>2]&1024|0)!=0;W=c[(T?D:E)>>2]|0;cg(c[B>>2]|0,147712,39992,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=T?41824:41168,c[l+16>>2]=W,c[l+24>>2]=be,l)|0);i=l;cy=K;cz=bf;cA=be;cB=ba;cC=bd;cD=bb;cE=bc}if((cC|0)==0){cs=cz;ct=cE;cu=cD;cv=cB;cw=cA;cx=cy;break}c[cz>>2]=cC;cs=cz+4|0;ct=cE;cu=cD;cv=cB;cw=cA;cx=cy}else{cs=M;ct=G;cu=H;cv=I;cw=0;cx=K}}while(0);do{if((cw|0)==(h|0)){cO=cs}else{W=c[A>>2]|0;T=(c[C>>2]&1024|0)!=0;U=c[(T?D:E)>>2]|0;d$(c[B>>2]|0,147712,24888,(l=i,i=i+48|0,c[l>>2]=cw>>>0<h>>>0?23784:22984,c[l+8>>2]=W,c[l+16>>2]=T?41824:41168,c[l+24>>2]=U,c[l+32>>2]=cw,c[l+40>>2]=h,l)|0);i=l;U=(cw|0)>(h|0);if(U&cs>>>0>M>>>0){T=cw;W=cs;while(1){V=W-4|0;S=T-(c[V>>2]|0)|0;R=(S|0)>(h|0);if(R&V>>>0>M>>>0){T=S;W=V}else{cP=S;cQ=V;cR=R;break}}}else{cP=cw;cQ=cs;cR=U}if((cP|0)>=(h|0)){if(!cR){cO=cQ;break}c[cQ>>2]=h;c[cQ+4>>2]=0;cO=cQ+8|0;break}if((cQ-M&4|0)==0){cS=cQ}else{c[cQ>>2]=0;cS=cQ+4|0}c[cS>>2]=h-((cP|0)<0?0:cP);cO=cS+4|0}}while(0);if((cx|0)!=0){cT=cx;cU=cO;cV=cv;cW=cu;cX=ct;break}bk[c[F>>2]&7](L,M,cO,h);c[cO>>2]=0;W=c[x>>2]|0;T=c[y>>2]|0;c[x>>2]=T;c[y>>2]=W;R=c[k>>2]|0;V=J-R|0;c[A>>2]=(c[A>>2]|0)+1;if((V|0)>0){G=ct;H=cu;I=cv;J=V;K=0;L=L+R|0;M=T;N=W}else{cY=ct;cZ=cu;c_=cv;c$=0;break L7197}}do{if((an|0)==5528){N=(c[C>>2]&1024|0)!=0;J=c[(N?D:E)>>2]|0;d$(c[B>>2]|0,147712,40648,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=N?41824:41168,c[l+16>>2]=J,c[l+24>>2]=ai,l)|0);i=l;if((ak|0)==0){c0=ah}else{c[ah>>2]=ak;c0=ah+4|0}if((ai|0)==(h|0)){cT=K;cU=c0;cV=aj;cW=al;cX=am;break}J=c[A>>2]|0;N=(c[C>>2]&1024|0)!=0;I=c[(N?D:E)>>2]|0;d$(c[B>>2]|0,147712,24888,(l=i,i=i+48|0,c[l>>2]=ai>>>0<h>>>0?23784:22984,c[l+8>>2]=J,c[l+16>>2]=N?41824:41168,c[l+24>>2]=I,c[l+32>>2]=ai,c[l+40>>2]=h,l)|0);i=l;I=(ai|0)>(h|0);if(I&c0>>>0>M>>>0){N=ai;J=c0;while(1){H=J-4|0;G=N-(c[H>>2]|0)|0;y=(G|0)>(h|0);if(y&H>>>0>M>>>0){N=G;J=H}else{c1=G;c2=H;c3=y;break}}}else{c1=ai;c2=c0;c3=I}if((c1|0)>=(h|0)){if(!c3){cT=K;cU=c2;cV=aj;cW=al;cX=am;break}c[c2>>2]=h;c[c2+4>>2]=0;cT=K;cU=c2+8|0;cV=aj;cW=al;cX=am;break}if((c2-M&4|0)==0){c4=c2}else{c[c2>>2]=0;c4=c2+4|0}c[c4>>2]=h-((c1|0)<0?0:c1);cT=K;cU=c4+4|0;cV=aj;cW=al;cX=am}}while(0);do{if((cW|0)<13){if(cV>>>0>=w>>>0){c5=cV;c6=(cW|0)==0?0:13;c7=cX;break}K=cV+1|0;B=(d[j+(d[cV]|0)|0]|0)<<cW|cX;E=cW+8|0;if((E|0)>=13){c5=K;c6=E;c7=B;break}if(K>>>0>=w>>>0){c5=K;c6=13;c7=B;break}c5=cV+2|0;c6=cW+16|0;c7=(d[j+(d[K]|0)|0]|0)<<E|B}else{c5=cV;c6=cW;c7=cX}}while(0);bk[c[F>>2]&7](L,M,cU,h);c[p>>2]=c6-13;c[n>>2]=c7>>>13;c[r>>2]=cT;c[v>>2]=(c[t>>2]|0)-c5+(c[v>>2]|0);c[t>>2]=c5;m=(c[A>>2]|0)!=0?1:-1;i=f;return m|0}else{cY=o;cZ=q;c_=u;c$=s}}while(0);c[p>>2]=cZ;c[n>>2]=cY;c[r>>2]=c$;c[v>>2]=(c[t>>2]|0)-c_+(c[v>>2]|0);c[t>>2]=c_;m=1;i=f;return m|0}function eL(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;e=i;f=c[a+576>>2]|0;g=f+8|0;if(((d|0)%(c[g>>2]|0)|0|0)!=0){cg(c[a+628>>2]|0,147696,38544,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h;j=0;i=e;return j|0}if((d|0)<=0){j=1;i=e;return j|0}h=f+80|0;k=f+12|0;f=d;d=b;while(1){eR(a,d,c[h>>2]|0,c[k>>2]|0);dX(c[h>>2]|0,d,c[g>>2]|0);b=c[g>>2]|0;l=f-b|0;if((l|0)>0){f=l;d=d+b|0}else{j=1;break}}i=e;return j|0}function eM(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[b+576>>2]|0;eQ(b,1,12);eQ(b,1,12);e=d+52|0;if((c[e>>2]|0)==8){return 1}f=b+608|0;if((c[f>>2]|0)>=(c[b+592>>2]|0)){d1(b)|0}g=d+48|0;d=c[g>>2]&255;h=b+604|0;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=d;c[f>>2]=(c[f>>2]|0)+1;c[g>>2]=0;c[e>>2]=8;return 1}function eN(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;if((eI(a)|0)==0){d=0;i=b;return d|0}c[a+532>>2]=28;c[a+540>>2]=28;c[a+548>>2]=28;e=bF(a,65536,(a=i,i=i+8|0,c[a>>2]=7,a)|0)|0;i=a;d=e;i=b;return d|0}function eO(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0;f=i;g=c[a+576>>2]|0;h=c[g+12>>2]|0;j=c[g+44>>2]|0;k=c[g+4>>2]|0;l=g+8|0;if(((e|0)%(c[l>>2]|0)|0|0)!=0){cg(c[a+628>>2]|0,147760,26248,(m=i,i=i+1|0,i=i+7&-8,c[m>>2]=0,m)|0);i=m;n=-1;i=f;return n|0}o=g+48|0;p=c[o>>2]|0;q=g+52|0;r=c[q>>2]|0;s=g+56|0;t=c[s>>2]|0;u=a+604|0;v=c[u>>2]|0;w=a+608|0;x=v+(c[w>>2]|0)|0;y=c[g+72>>2]|0;L7408:do{if((e|0)>0){z=g+92|0;A=a+628|0;B=a+12|0;C=a+492|0;D=a+452|0;E=g+60|0;F=(k&4|0)==0;G=(k&8|0)==0;H=y;I=v;J=r;K=p;L=t;M=e;N=b;L7410:while(1){O=0;P=K;Q=y;R=J;S=I;L7412:while(1){T=O;U=P;V=R;W=S;X=0;while(1){do{if((V|0)<12){if(W>>>0>=x>>>0){if((V|0)==0){Y=T;Z=U;_=Q;$=W;aa=X;break L7410}else{ab=U;ac=12;ad=W;break}}ae=W+1|0;af=(d[j+(d[W]|0)|0]|0)<<V|U;ag=V+8|0;if((ag|0)>=12){ab=af;ac=ag;ad=ae;break}if(ae>>>0>=x>>>0){ab=af;ac=12;ad=ae;break}ab=(d[j+(d[ae]|0)|0]|0)<<ag|af;ac=V+16|0;ad=W+2|0}else{ab=U;ac=V;ad=W}}while(0);ah=ab&4095;af=d[46465+(ah<<3)|0]|0;ai=ac-af|0;aj=ab>>>(af>>>0);af=d[46464+(ah<<3)|0]|0;if((af|0)==7){break}else if((af|0)==12){ak=T;al=1;am=aj;an=Q;ao=ai;ap=ad;aq=X;ar=5633;break L7412}else if(!((af|0)==9|(af|0)==11)){ar=5609;break L7412}af=c[46468+(ah<<3)>>2]|0;T=af+T|0;U=aj;V=ai;W=ad;X=af+X|0}W=c[46468+(ah<<3)>>2]|0;V=W+X|0;as=Q+4|0;c[Q>>2]=V;U=W+T|0;if((U|0)<(h|0)){at=U;au=aj;av=ai;aw=ad;ax=0}else{ay=as;az=ad;aA=ai;aB=aj;aC=L;aD=U;break}while(1){do{if((av|0)<13){if(aw>>>0>=x>>>0){if((av|0)==0){Y=at;Z=au;_=as;$=aw;aa=ax;break L7410}else{aE=au;aF=13;aG=aw;break}}U=aw+1|0;W=(d[j+(d[aw]|0)|0]|0)<<av|au;af=av+8|0;if((af|0)>=13){aE=W;aF=af;aG=U;break}if(U>>>0>=x>>>0){aE=W;aF=13;aG=U;break}aE=(d[j+(d[U]|0)|0]|0)<<af|W;aF=av+16|0;aG=aw+2|0}else{aE=au;aF=av;aG=aw}}while(0);aH=aE&8191;W=d[80913+(aH<<3)|0]|0;aI=aF-W|0;aJ=aE>>>(W>>>0);W=d[80912+(aH<<3)|0]|0;if((W|0)==8){break}else if((W|0)==12){ak=at;al=1;am=aJ;an=as;ao=aI;ap=aG;aq=ax;ar=5633;break L7412}else if(!((W|0)==10|(W|0)==11)){ar=5619;break L7412}W=c[80916+(aH<<3)>>2]|0;at=W+at|0;au=aJ;av=aI;aw=aG;ax=W+ax|0}W=c[80916+(aH<<3)>>2]|0;af=W+ax|0;U=Q+8|0;c[as>>2]=af;ag=W+at|0;if((ag|0)>=(h|0)){ay=U;az=aG;aA=aI;aB=aJ;aC=L;aD=ag;break}if((af|0)!=0){O=ag;P=aJ;Q=U;R=aI;S=aG;continue}O=ag;P=aJ;Q=(V|0)==0?Q:U;R=aI;S=aG}if((ar|0)==5609){ar=0;S=(c[B>>2]&1024|0)!=0;R=c[(S?C:D)>>2]|0;cg(c[A>>2]|0,147760,39992,(m=i,i=i+32|0,c[m>>2]=c[z>>2],c[m+8>>2]=S?41824:41168,c[m+16>>2]=R,c[m+24>>2]=T,m)|0);i=m;ak=T;al=L;am=aj;an=Q;ao=ai;ap=ad;aq=X;ar=5633}else if((ar|0)==5619){ar=0;R=(c[B>>2]&1024|0)!=0;S=c[(R?C:D)>>2]|0;cg(c[A>>2]|0,147760,39992,(m=i,i=i+32|0,c[m>>2]=c[z>>2],c[m+8>>2]=R?41824:41168,c[m+16>>2]=S,c[m+24>>2]=at,m)|0);i=m;ak=at;al=L;am=aJ;an=as;ao=aI;ap=aG;aq=ax;ar=5633}do{if((ar|0)==5633){ar=0;if((aq|0)==0){ay=an;az=ap;aA=ao;aB=am;aC=al;aD=ak;break}c[an>>2]=aq;ay=an+4|0;az=ap;aA=ao;aB=am;aC=al;aD=ak}}while(0);do{if((aD|0)==(h|0)){aK=ay}else{Q=c[z>>2]|0;S=(c[B>>2]&1024|0)!=0;R=c[(S?C:D)>>2]|0;d$(c[A>>2]|0,147760,24888,(m=i,i=i+48|0,c[m>>2]=aD>>>0<h>>>0?23784:22984,c[m+8>>2]=Q,c[m+16>>2]=S?41824:41168,c[m+24>>2]=R,c[m+32>>2]=aD,c[m+40>>2]=h,m)|0);i=m;R=(aD|0)>(h|0);if(R&ay>>>0>y>>>0){S=ay;Q=aD;while(1){P=S-4|0;O=Q-(c[P>>2]|0)|0;U=(O|0)>(h|0);if(U&P>>>0>y>>>0){S=P;Q=O}else{aL=P;aM=O;aN=U;break}}}else{aL=ay;aM=aD;aN=R}if((aM|0)>=(h|0)){if(!aN){aK=aL;break}c[aL>>2]=h;c[aL+4>>2]=0;aK=aL+8|0;break}if((aL-H&4|0)==0){aO=aL}else{c[aL>>2]=0;aO=aL+4|0}c[aO>>2]=h-((aM|0)<0?0:aM);aK=aO+4|0}}while(0);bk[c[E>>2]&7](N,y,aK,h);do{if(F){if(G){aP=aB;aQ=aA;aR=az;break}Q=aA&-16;S=aB>>>((aA-Q|0)>>>0);if((Q|0)!=0){aP=S;aQ=Q;aR=az;break}aP=S;aQ=0;aR=(az&1|0)==0?az:az+1|0}else{S=aA&-8;aP=aB>>>((aA-S|0)>>>0);aQ=S;aR=az}}while(0);S=c[l>>2]|0;Q=M-S|0;c[z>>2]=(c[z>>2]|0)+1;if((Q|0)>0){I=aR;J=aQ;K=aP;L=aC;M=Q;N=N+S|0}else{aS=aR;aT=aQ;aU=aP;aV=aC;break L7408}}M=(c[B>>2]&1024|0)!=0;K=c[(M?C:D)>>2]|0;d$(c[A>>2]|0,147760,40648,(m=i,i=i+32|0,c[m>>2]=c[z>>2],c[m+8>>2]=M?41824:41168,c[m+16>>2]=K,c[m+24>>2]=Y,m)|0);i=m;if((aa|0)==0){aW=_}else{c[_>>2]=aa;aW=_+4|0}do{if((Y|0)==(h|0)){aX=aW}else{K=c[z>>2]|0;M=(c[B>>2]&1024|0)!=0;J=c[(M?C:D)>>2]|0;d$(c[A>>2]|0,147760,24888,(m=i,i=i+48|0,c[m>>2]=Y>>>0<h>>>0?23784:22984,c[m+8>>2]=K,c[m+16>>2]=M?41824:41168,c[m+24>>2]=J,c[m+32>>2]=Y,c[m+40>>2]=h,m)|0);i=m;J=(Y|0)>(h|0);if(J&aW>>>0>y>>>0){M=aW;K=Y;while(1){I=M-4|0;G=K-(c[I>>2]|0)|0;F=(G|0)>(h|0);if(F&I>>>0>y>>>0){M=I;K=G}else{aY=I;aZ=G;a_=F;break}}}else{aY=aW;aZ=Y;a_=J}if((aZ|0)>=(h|0)){if(!a_){aX=aY;break}c[aY>>2]=h;c[aY+4>>2]=0;aX=aY+8|0;break}if((aY-H&4|0)==0){a$=aY}else{c[aY>>2]=0;a$=aY+4|0}c[a$>>2]=h-((aZ|0)<0?0:aZ);aX=a$+4|0}}while(0);bk[c[E>>2]&7](N,y,aX,h);c[q>>2]=0;c[o>>2]=Z;c[s>>2]=L;c[w>>2]=(c[u>>2]|0)-$+(c[w>>2]|0);c[u>>2]=$;n=-1;i=f;return n|0}else{aS=v;aT=r;aU=p;aV=t}}while(0);c[q>>2]=aT;c[o>>2]=aU;c[s>>2]=aV;c[w>>2]=(c[u>>2]|0)-aS+(c[w>>2]|0);c[u>>2]=aS;n=1;i=f;return n|0}function eP(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;if((eI(a)|0)==0){d=0;i=b;return d|0}c[a+532>>2]=28;c[a+540>>2]=28;c[a+548>>2]=28;e=bF(a,65536,(a=i,i=i+8|0,c[a>>2]=11,a)|0)|0;i=a;d=e;i=b;return d|0}function eQ(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=c[b+576>>2]|0;g=f+52|0;h=c[g>>2]|0;i=f+48|0;f=c[i>>2]|0;do{if(h>>>0<e>>>0){j=b+608|0;k=b+592|0;l=b+604|0;m=e;n=h;o=f;p=c[j>>2]|0;while(1){q=m-n|0;if((p|0)>=(c[k>>2]|0)){d1(b)|0}r=c[l>>2]|0;c[l>>2]=r+1;a[r]=(d>>>(q>>>0)|o)&255;r=(c[j>>2]|0)+1|0;c[j>>2]=r;if(q>>>0>8){m=q;n=8;o=0;p=r}else{s=0;t=8;u=q;break}}}else{if(e>>>0<9){s=f;t=h;u=e;break}aD(39392,38048,608,44968)}}while(0);e=t-u|0;h=(c[42192+(u<<2)>>2]&d)<<e|s;if((t|0)!=(u|0)){v=h;w=e;c[i>>2]=v;c[g>>2]=w;return}e=b+608|0;if((c[e>>2]|0)>=(c[b+592>>2]|0)){d1(b)|0}u=b+604|0;b=c[u>>2]|0;c[u>>2]=b+1;a[b]=h&255;c[e>>2]=(c[e>>2]|0)+1;v=0;w=8;c[i>>2]=v;c[g>>2]=w;return}function eR(b,f,g,h){b=b|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0;i=a[f]|0;j=(h|0)>0;L7512:do{if(i<<24>>24>-1&j){if((h|0)>63){L7516:do{if((f&3|0)==0){k=f;l=h;m=0}else{n=f;o=h;p=0;q=i;while(1){if(q<<24>>24!=0){break}r=p+8|0;s=o-8|0;t=n+1|0;if((t&3|0)==0){k=t;l=s;m=r;break L7516}n=t;o=s;p=r;q=a[t]|0}u=(d[48+(q&255)|0]|0)+p|0;break L7512}}while(0);o=k;L7523:do{if((l|0)>31){n=l;t=m;r=o;while(1){if((c[r>>2]|0)!=0){v=n;w=t;x=r;break L7523}s=t+32|0;y=n-32|0;z=r+4|0;if((y|0)>31){n=y;t=s;r=z}else{v=y;w=s;x=z;break}}}else{v=l;w=m;x=o}}while(0);A=w;B=v;C=x}else{A=0;B=h;C=f}L7529:do{if((B|0)>7){o=C;r=B;t=A;while(1){D=a[o]|0;if(D<<24>>24!=0){break}n=t+8|0;p=r-8|0;q=o+1|0;if((p|0)>7){o=q;r=p;t=n}else{E=q;F=p;G=n;break L7529}}u=(d[48+(D&255)|0]|0)+t|0;break L7512}else{E=C;F=B;G=A}}while(0);if((F|0)<=0){u=G;break}r=d[48+(d[E]|0)|0]|0;u=((r|0)>(F|0)?F:r)+G|0}else{u=0}}while(0);G=a[g]|0;L7537:do{if(G<<24>>24>-1&j){if((h|0)>63){L7541:do{if((g&3|0)==0){H=g;I=h;J=0}else{F=g;E=h;A=0;B=G;while(1){if(B<<24>>24!=0){break}C=A+8|0;D=E-8|0;x=F+1|0;if((x&3|0)==0){H=x;I=D;J=C;break L7541}F=x;E=D;A=C;B=a[x]|0}K=0;L=u;M=(d[48+(B&255)|0]|0)+A|0;break L7537}}while(0);E=H;L7548:do{if((I|0)>31){F=I;t=J;x=E;while(1){if((c[x>>2]|0)!=0){N=F;O=t;P=x;break L7548}C=t+32|0;D=F-32|0;v=x+4|0;if((D|0)>31){F=D;t=C;x=v}else{N=D;O=C;P=v;break}}}else{N=I;O=J;P=E}}while(0);Q=O;R=N;S=P}else{Q=0;R=h;S=g}L7554:do{if((R|0)>7){E=S;x=R;t=Q;while(1){T=a[E]|0;if(T<<24>>24!=0){break}F=t+8|0;A=x-8|0;B=E+1|0;if((A|0)>7){E=B;x=A;t=F}else{U=B;V=A;W=F;break L7554}}K=0;L=u;M=(d[48+(T&255)|0]|0)+t|0;break L7537}else{U=S;V=R;W=Q}}while(0);if((V|0)<=0){K=0;L=u;M=W;break}x=d[48+(d[U]|0)|0]|0;K=0;L=u;M=((x|0)>(V|0)?V:x)+W|0}else{K=0;L=u;M=0}}while(0);while(1){if(M>>>0<h>>>0){if(((d[g+(M>>>3)|0]|0)&1<<(M&7^7)|0)==0){X=eS(g,M,h)|0}else{X=eT(g,M,h)|0}Y=X+M|0}else{Y=h}L7570:do{if(Y>>>0<L>>>0){eQ(b,1,4);Z=Y}else{u=M-L+3|0;if(u>>>0<7){eQ(b,e[346+(u*6|0)>>1]|0,e[344+(u*6|0)>>1]|0);Z=L;break}if(L>>>0<h>>>0){if(((d[f+(L>>>3)|0]|0)&1<<(L&7^7)|0)==0){_=eS(f,L,h)|0}else{_=eT(f,L,h)|0}$=_+L|0}else{$=h}eQ(b,1,3);do{if((K|0)!=(-L|0)){if(((d[f+(K>>>3)|0]|0)&1<<(K&7^7)|0)==0){break}eU(b,L-K|0,146448);eU(b,$-L|0,79232);Z=$;break L7570}}while(0);eU(b,L-K|0,79232);eU(b,$-L|0,146448);Z=$}}while(0);if(Z>>>0>=h>>>0){break}if(((d[f+(Z>>>3)|0]|0)&1<<(Z&7^7)|0)==0){t=eS(f,Z,h)|0;u=(eT(g,Z,h)|0)+Z|0;aa=eS(g,u,h)|0;ab=t;ac=u}else{u=eT(f,Z,h)|0;t=(eS(g,Z,h)|0)+Z|0;aa=eT(g,t,h)|0;ab=u;ac=t}K=Z;L=ab+Z|0;M=aa+ac|0}return}function eS(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;g=f-e|0;f=e>>3;h=b+f|0;if((g|0)<=0){i=0;return i|0}j=e&7;do{if((j|0)==0){k=0;l=g;m=h}else{e=d[48+((d[h]|0)<<j&255)|0]|0;n=8-j|0;o=e>>>0>n>>>0?n:e;e=(o|0)>(g|0)?g:o;if((e+j|0)<8){i=e;return i|0}else{k=e;l=g-e|0;m=b+(f+1)|0;break}}}while(0);if((l|0)>63){L7606:do{if((m&3|0)==0){p=m;q=l;r=k}else{f=m;b=l;g=k;while(1){s=a[f]|0;if(s<<24>>24!=0){break}j=g+8|0;h=b-8|0;e=f+1|0;if((e&3|0)==0){p=e;q=h;r=j;break L7606}else{f=e;b=h;g=j}}i=(d[48+(s&255)|0]|0)+g|0;return i|0}}while(0);s=p;L7613:do{if((q|0)>31){p=q;b=r;f=s;while(1){if((c[f>>2]|0)!=0){t=p;u=b;v=f;break L7613}j=b+32|0;h=p-32|0;e=f+4|0;if((h|0)>31){p=h;b=j;f=e}else{t=h;u=j;v=e;break}}}else{t=q;u=r;v=s}}while(0);w=u;x=t;y=v}else{w=k;x=l;y=m}L7619:do{if((x|0)>7){m=y;l=x;k=w;while(1){z=a[m]|0;if(z<<24>>24!=0){break}v=k+8|0;t=l-8|0;u=m+1|0;if((t|0)>7){m=u;l=t;k=v}else{A=u;B=t;C=v;break L7619}}i=(d[48+(z&255)|0]|0)+k|0;return i|0}else{A=y;B=x;C=w}}while(0);if((B|0)<=0){i=C;return i|0}w=d[48+(d[A]|0)|0]|0;i=((w|0)>(B|0)?B:w)+C|0;return i|0}function eT(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;g=f-e|0;f=e>>3;h=b+f|0;if((g|0)<=0){i=0;return i|0}j=e&7;do{if((j|0)==0){k=0;l=g;m=h}else{e=d[8696+((d[h]|0)<<j&255)|0]|0;n=8-j|0;o=e>>>0>n>>>0?n:e;e=(o|0)>(g|0)?g:o;if((e+j|0)<8){i=e;return i|0}else{k=e;l=g-e|0;m=b+(f+1)|0;break}}}while(0);if((l|0)>63){L7642:do{if((m&3|0)==0){p=m;q=l;r=k}else{f=m;b=l;g=k;while(1){s=a[f]|0;if(s<<24>>24!=-1){break}j=g+8|0;h=b-8|0;e=f+1|0;if((e&3|0)==0){p=e;q=h;r=j;break L7642}else{f=e;b=h;g=j}}i=(d[8696+(s&255)|0]|0)+g|0;return i|0}}while(0);s=p;L7649:do{if((q|0)>31){p=q;b=r;f=s;while(1){if((c[f>>2]|0)!=-1){t=p;u=b;v=f;break L7649}j=b+32|0;h=p-32|0;e=f+4|0;if((h|0)>31){p=h;b=j;f=e}else{t=h;u=j;v=e;break}}}else{t=q;u=r;v=s}}while(0);w=u;x=t;y=v}else{w=k;x=l;y=m}L7655:do{if((x|0)>7){m=y;l=x;k=w;while(1){z=a[m]|0;if(z<<24>>24!=-1){break}v=k+8|0;t=l-8|0;u=m+1|0;if((t|0)>7){m=u;l=t;k=v}else{A=u;B=t;C=v;break L7655}}i=(d[8696+(z&255)|0]|0)+k|0;return i|0}else{A=y;B=x;C=w}}while(0);if((B|0)<=0){i=C;return i|0}w=d[8696+(d[A]|0)|0]|0;i=((w|0)>(B|0)?B:w)+C|0;return i|0}function eU(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;h=c[d+576>>2]|0;i=h+52|0;j=c[i>>2]|0;k=h+48|0;h=c[k>>2]|0;L7667:do{if((f|0)>2623){l=g+620|0;m=g+618|0;n=d+608|0;o=d+592|0;p=d+604|0;q=g+622|0;r=h;s=j;t=f;while(1){u=e[l>>1]|0;v=b[m>>1]|0;w=v&65535;if(w>>>0>s>>>0){x=r;y=w;z=s;A=c[n>>2]|0;while(1){B=y-z|0;if((A|0)>=(c[o>>2]|0)){d1(d)|0}C=c[p>>2]|0;c[p>>2]=C+1;a[C]=(u>>>(B>>>0)|x)&255;C=(c[n>>2]|0)+1|0;c[n>>2]=C;if(B>>>0>8){x=0;y=B;z=8;A=C}else{D=8;E=B;F=0;break}}}else{if((v&65535)<9){D=s;E=w;F=r}else{break}}A=D-E|0;z=(c[42192+(E<<2)>>2]&u)<<A|F;if((D|0)==(E|0)){if((c[n>>2]|0)>=(c[o>>2]|0)){d1(d)|0}y=c[p>>2]|0;c[p>>2]=y+1;a[y]=z&255;c[n>>2]=(c[n>>2]|0)+1;G=8;H=0}else{G=A;H=z}z=t-(b[q>>1]|0)|0;if((z|0)>2623){r=H;s=G;t=z}else{I=H;J=G;K=z;break L7667}}aD(39392,38048,650,43032)}else{I=h;J=j;K=f}}while(0);if((K|0)>63){f=K>>6;j=f+63|0;h=g+(j*6|0)+4|0;if((b[h>>1]|0)!=(f<<6|0)){aD(37784,38048,655,43032)}f=e[g+(j*6|0)+2>>1]|0;G=b[g+(j*6|0)>>1]|0;j=G&65535;do{if(j>>>0>J>>>0){H=d+608|0;E=d+592|0;D=d+604|0;F=I;t=j;s=J;r=c[H>>2]|0;while(1){q=t-s|0;if((r|0)>=(c[E>>2]|0)){d1(d)|0}n=c[D>>2]|0;c[D>>2]=n+1;a[n]=(f>>>(q>>>0)|F)&255;n=(c[H>>2]|0)+1|0;c[H>>2]=n;if(q>>>0>8){F=0;t=q;s=8;r=n}else{L=8;M=q;N=0;break}}}else{if((G&65535)<9){L=J;M=j;N=I;break}aD(39392,38048,660,43032)}}while(0);j=L-M|0;G=(c[42192+(M<<2)>>2]&f)<<j|N;if((L|0)==(M|0)){M=d+608|0;if((c[M>>2]|0)>=(c[d+592>>2]|0)){d1(d)|0}L=d+604|0;N=c[L>>2]|0;c[L>>2]=N+1;a[N]=G&255;c[M>>2]=(c[M>>2]|0)+1;O=8;P=0}else{O=j;P=G}Q=K-(b[h>>1]|0)|0;R=O;S=P}else{Q=K;R=J;S=I}I=e[g+(Q*6|0)+2>>1]|0;J=b[g+(Q*6|0)>>1]|0;Q=J&65535;do{if(Q>>>0>R>>>0){g=d+608|0;K=d+592|0;P=d+604|0;O=S;h=Q;G=R;j=c[g>>2]|0;while(1){M=h-G|0;if((j|0)>=(c[K>>2]|0)){d1(d)|0}N=c[P>>2]|0;c[P>>2]=N+1;a[N]=(I>>>(M>>>0)|O)&255;N=(c[g>>2]|0)+1|0;c[g>>2]=N;if(M>>>0>8){O=0;h=M;G=8;j=N}else{T=8;U=M;V=0;break}}}else{if((J&65535)<9){T=R;U=Q;V=S;break}aD(39392,38048,667,43032)}}while(0);S=T-U|0;Q=(c[42192+(U<<2)>>2]&I)<<S|V;if((T|0)!=(U|0)){W=S;X=Q;c[k>>2]=X;c[i>>2]=W;return}S=d+608|0;if((c[S>>2]|0)>=(c[d+592>>2]|0)){d1(d)|0}U=d+604|0;d=c[U>>2]|0;c[U>>2]=d+1;a[d]=Q&255;c[S>>2]=(c[S>>2]|0)+1;W=8;X=0;c[k>>2]=X;c[i>>2]=W;return}function eV(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[a+576>>2]|0;if((f|0)==0){aD(33672,38048,1198,44936);return 0}if((d|0)==292|(d|0)==293){g=c[f+28>>2]|0;c[(v=c[e+4>>2]|0,c[e+4>>2]=v+8,c[(c[e>>2]|0)+v>>2]|0)>>2]=g;h=1;return h|0}else if((d|0)==328){g=c[f+20>>2]|0;c[(v=c[e+4>>2]|0,c[e+4>>2]=v+8,c[(c[e>>2]|0)+v>>2]|0)>>2]=g;h=1;return h|0}else if((d|0)==326){g=c[f+24>>2]|0;c[(v=c[e+4>>2]|0,c[e+4>>2]=v+8,c[(c[e>>2]|0)+v>>2]|0)>>2]=g;h=1;return h|0}else if((d|0)==327){g=b[f+16>>1]|0;b[(v=c[e+4>>2]|0,c[e+4>>2]=v+8,c[(c[e>>2]|0)+v>>2]|0)>>1]=g;h=1;return h|0}else if((d|0)==65536){g=c[f+4>>2]|0;c[(v=c[e+4>>2]|0,c[e+4>>2]=v+8,c[(c[e>>2]|0)+v>>2]|0)>>2]=g;h=1;return h|0}else if((d|0)==65540){g=c[f+60>>2]|0;c[(v=c[e+4>>2]|0,c[e+4>>2]=v+8,c[(c[e>>2]|0)+v>>2]|0)>>2]=g;h=1;return h|0}else{h=be[c[f+32>>2]&63](a,d,e)|0;return h|0}return 0}function eW(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0;g=a+576|0;h=c[g>>2]|0;if((h|0)==0){aD(33672,38048,1151,44920);return 0}i=c[h+36>>2]|0;if((i|0)==0){aD(28720,38048,1152,44920);return 0}do{if((d|0)==65536){c[h+4>>2]=(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0);j=1;return j|0}else if((d|0)==293){if((b[a+88>>1]|0)!=4){break}c[h+28>>2]=(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)}else if((d|0)==328){c[h+20>>2]=(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)}else if((d|0)==292){if((b[a+88>>1]|0)!=3){break}c[h+28>>2]=(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)}else if((d|0)==65540){c[(c[g>>2]|0)+60>>2]=(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0);j=1;return j|0}else if((d|0)==326){c[h+24>>2]=(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)}else if((d|0)==327){b[h+16>>1]=(v=c[f+4>>2]|0,c[f+4>>2]=v+8,c[(c[f>>2]|0)+v>>2]|0)&65535}else{j=be[i&63](a,d,f)|0;return j|0}}while(0);f=bX(a,d)|0;if((f|0)==0){j=0;return j|0}d=e[f+24>>1]|0;f=a+40+(d>>>5<<2)|0;c[f>>2]=1<<(d&31)|c[f>>2];f=a+12|0;c[f>>2]=c[f>>2]|8;j=1;return j|0}function eX(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;h=c[a+576>>2]|0;if((h|0)==0){aD(33672,38048,1231,44984)}j=a+48|0;k=c[j>>2]|0;if((k&512|0)==0){l=k}else{do{if((b[a+88>>1]|0)==4){aH(31448,18,1,d|0)|0;if((c[h+28>>2]&2|0)==0){break}ax(d|0,31296,(m=i,i=i+8|0,c[m>>2]=31640,m)|0)|0;i=m}else{aH(31008,18,1,d|0)|0;k=h+28|0;n=c[k>>2]|0;if((n&1|0)==0){o=31640;p=n}else{ax(d|0,30784,(m=i,i=i+8|0,c[m>>2]=31640,m)|0)|0;i=m;o=30544;p=c[k>>2]|0}if((p&4|0)==0){q=o;r=p}else{ax(d|0,30328,(m=i,i=i+8|0,c[m>>2]=o,m)|0)|0;i=m;q=30544;r=c[k>>2]|0}if((r&2|0)==0){break}ax(d|0,31296,(m=i,i=i+8|0,c[m>>2]=q,m)|0)|0;i=m}}while(0);q=c[h+28>>2]|0;ax(d|0,30104,(m=i,i=i+16|0,c[m>>2]=q,c[m+8>>2]=q,m)|0)|0;i=m;l=c[j>>2]|0}if((l&8|0)==0){s=l}else{aH(29864,11,1,d|0)|0;l=h+16|0;q=e[l>>1]|0;if((q|0)==2){aH(29464,19,1,d|0)|0}else if((q|0)==1){aH(29576,21,1,d|0)|0}else if((q|0)==0){aH(29712,6,1,d|0)|0}q=e[l>>1]|0;ax(d|0,29248,(m=i,i=i+16|0,c[m>>2]=q,c[m+8>>2]=q,m)|0)|0;i=m;s=c[j>>2]|0}if((s&4|0)==0){t=s}else{s=c[h+24>>2]|0;ax(d|0,29072,(m=i,i=i+8|0,c[m>>2]=s,m)|0)|0;i=m;t=c[j>>2]|0}if((t&16|0)!=0){t=c[h+20>>2]|0;ax(d|0,28888,(m=i,i=i+8|0,c[m>>2]=t,m)|0)|0;i=m}m=c[h+40>>2]|0;if((m|0)==0){i=g;return}bg[m&127](a,d,f);i=g;return}function eY(a){a=a|0;return 1}function eZ(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;e=a+576|0;f=c[e>>2]|0;if((b[a+84>>1]|0)!=1){cg(c[a+628>>2]|0,147728,32624,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;h=0;i=d;return h|0}if((c[a+12>>2]&1024|0)==0){j=a+56|0;k=dr(a)|0}else{j=a+68|0;k=dG(a)|0}l=c[j>>2]|0;c[f+8>>2]=k;c[f+12>>2]=l;j=f+28|0;if((c[j>>2]&1|0)==0){m=(b[a+88>>1]|0)==4}else{m=1}n=f+64|0;c[n>>2]=0;if(l>>>0<4294967264){o=l+31&-32}else{o=0}if(m){p=(o&2147483616|0)==(o|0)?o<<1:0}else{p=o}do{if((p|0)!=0){o=p<<1;q=(p&2147483647|0)==(p|0);if((o|0)==0|q^1){break}r=d5(a,q?o:0,4,31968)|0;c[n>>2]=r;if((r|0)==0){h=0;i=d;return h|0}hv(r|0,0,(q?p<<3:0)|0);q=c[n>>2]|0;c[f+72>>2]=q;if(m){c[f+68>>2]=q+(p<<2)}else{c[f+68>>2]=0}do{if((b[a+88>>1]|0)==3){if((c[j>>2]&1|0)==0){break}c[a+532>>2]=60;c[a+540>>2]=60;c[a+548>>2]=60}}while(0);q=c[e>>2]|0;if(!m){c[q+80>>2]=0;h=1;i=d;return h|0}r=dT(k)|0;c[q+80>>2]=r;if((r|0)!=0){h=1;i=d;return h|0}cg(c[a+628>>2]|0,147728,31784,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;h=0;i=d;return h|0}}while(0);cg(c[a+628>>2]|0,c[a>>2]|0,32264,(g=i,i=i+8|0,c[g>>2]=l,g)|0);i=g;h=0;i=d;return h|0}function e_(a,d){a=a|0;d=d|0;var e=0,f=0,g=0;d=c[a+576>>2]|0;if((d|0)==0){aD(32952,38048,152,45016);return 0}c[d+52>>2]=0;c[d+48>>2]=0;c[d+56>>2]=0;c[d+44>>2]=dB((b[a+94>>1]|0)!=2|0)|0;a=d+68|0;e=c[a>>2]|0;if((e|0)==0){f=d+92|0;g=f;c[g>>2]=0;return 1}c[e>>2]=c[d+12>>2];c[(c[a>>2]|0)+4>>2]=0;f=d+92|0;g=f;c[g>>2]=0;return 1}function e$(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0;f=i;g=c[a+576>>2]|0;h=c[g+12>>2]|0;j=c[g+44>>2]|0;k=g+8|0;if(((e|0)%(c[k>>2]|0)|0|0)!=0){cg(c[a+628>>2]|0,147792,26248,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0);i=l;m=-1;i=f;return m|0}n=g+48|0;o=c[n>>2]|0;p=g+52|0;q=c[p>>2]|0;r=g+56|0;s=c[r>>2]|0;t=a+604|0;u=c[t>>2]|0;v=a+608|0;w=u+(c[v>>2]|0)|0;x=c[g+72>>2]|0;L7865:do{if((e|0)>0){y=g+92|0;z=a+628|0;A=a+12|0;B=a+492|0;C=a+452|0;D=g+60|0;E=x;F=o;G=q;H=u;I=e;J=b;K=s;L7867:while(1){L7869:do{if((K|0)==0){L=H;M=G;N=F;while(1){do{if((M|0)<11){if(L>>>0>=w>>>0){if((M|0)==0){O=L;P=N;Q=0;R=6003;break L7867}else{S=L;T=11;U=N;break}}V=L+1|0;W=(d[j+(d[L]|0)|0]|0)<<M|N;X=M+8|0;if((X|0)>=11){S=V;T=X;U=W;break}if(V>>>0>=w>>>0){S=V;T=11;U=W;break}S=L+2|0;T=M+16|0;U=(d[j+(d[V]|0)|0]|0)<<X|W}else{S=L;T=M;U=N}}while(0);if((U&2047|0)==0){Y=S;Z=T;_=U;break L7869}L=S;M=T-1|0;N=U>>>1}}else{Y=H;Z=G;_=F}}while(0);while(1){do{if((Z|0)<8){if(Y>>>0<w>>>0){$=Y+1|0;aa=Z+8|0;ab=(d[j+(d[Y]|0)|0]|0)<<Z|_;break}else{if((Z|0)==0){O=Y;P=_;Q=K;R=6003;break L7867}else{$=Y;aa=8;ab=_;break}}}else{$=Y;aa=Z;ab=_}}while(0);if((ab&255|0)!=0){ac=aa;ad=ab;break}Y=$;Z=aa-8|0;_=ab>>>8}while(1){N=ac-1|0;M=ad>>>1;if((ad&1|0)==0){ac=N;ad=M}else{ae=x;af=$;ag=N;ah=M;ai=0;break}}L7892:while(1){M=af;aj=0;N=ag;L=ah;ak=ai;while(1){do{if((N|0)<12){if(M>>>0>=w>>>0){if((N|0)==0){al=ae;am=M;an=aj;ao=L;ap=ak;R=5980;break L7867}else{aq=M;ar=12;as=L;break}}W=M+1|0;X=(d[j+(d[M]|0)|0]|0)<<N|L;V=N+8|0;if((V|0)>=12){aq=W;ar=V;as=X;break}if(W>>>0>=w>>>0){aq=W;ar=12;as=X;break}aq=M+2|0;ar=N+16|0;as=(d[j+(d[W]|0)|0]|0)<<V|X}else{aq=M;ar=N;as=L}}while(0);at=as&4095;X=d[46465+(at<<3)|0]|0;au=ar-X|0;av=as>>>(X>>>0);X=d[46464+(at<<3)|0]|0;if((X|0)==12){aw=1;ax=ae;ay=aq;az=aj;aA=au;aB=av;aC=ak;R=5991;break L7892}else if((X|0)==7){break}else if(!((X|0)==9|(X|0)==11)){R=5967;break L7892}X=c[46468+(at<<3)>>2]|0;M=aq;aj=X+aj|0;N=au;L=av;ak=X+ak|0}L=c[46468+(at<<3)>>2]|0;N=L+aj|0;aD=ae+4|0;c[ae>>2]=N;M=L+ak|0;if((M|0)<(h|0)){aE=aq;aF=0;aG=au;aH=av;aI=M}else{aJ=aD;aK=M;aL=av;aM=au;aN=aq;aO=0;break}while(1){do{if((aG|0)<13){if(aE>>>0>=w>>>0){if((aG|0)==0){al=aD;am=aE;an=aF;ao=aH;ap=aI;R=5980;break L7867}else{aP=aE;aQ=13;aR=aH;break}}M=aE+1|0;L=(d[j+(d[aE]|0)|0]|0)<<aG|aH;X=aG+8|0;if((X|0)>=13){aP=M;aQ=X;aR=L;break}if(M>>>0>=w>>>0){aP=M;aQ=13;aR=L;break}aP=aE+2|0;aQ=aG+16|0;aR=(d[j+(d[M]|0)|0]|0)<<X|L}else{aP=aE;aQ=aG;aR=aH}}while(0);aS=aR&8191;L=d[80913+(aS<<3)|0]|0;aT=aQ-L|0;aU=aR>>>(L>>>0);L=d[80912+(aS<<3)|0]|0;if((L|0)==12){aw=1;ax=aD;ay=aP;az=aF;aA=aT;aB=aU;aC=aI;R=5991;break L7892}else if((L|0)==8){break}else if(!((L|0)==10|(L|0)==11)){R=5977;break L7892}L=c[80916+(aS<<3)>>2]|0;aE=aP;aF=L+aF|0;aG=aT;aH=aU;aI=L+aI|0}L=c[80916+(aS<<3)>>2]|0;X=L+aF|0;M=ae+8|0;c[aD>>2]=X;V=L+aI|0;if((V|0)>=(h|0)){aJ=M;aK=V;aL=aU;aM=aT;aN=aP;aO=0;break}if((X|0)!=0){ae=M;af=aP;ag=aT;ah=aU;ai=V;continue}ae=(N|0)==0?ae:M;af=aP;ag=aT;ah=aU;ai=V}if((R|0)==5967){R=0;V=(c[A>>2]&1024|0)!=0;M=c[(V?B:C)>>2]|0;cg(c[z>>2]|0,147792,39992,(l=i,i=i+32|0,c[l>>2]=c[y>>2],c[l+8>>2]=V?41824:41168,c[l+16>>2]=M,c[l+24>>2]=ak,l)|0);i=l;aw=0;ax=ae;ay=aq;az=aj;aA=au;aB=av;aC=ak;R=5991}else if((R|0)==5977){R=0;M=(c[A>>2]&1024|0)!=0;V=c[(M?B:C)>>2]|0;cg(c[z>>2]|0,147792,39992,(l=i,i=i+32|0,c[l>>2]=c[y>>2],c[l+8>>2]=M?41824:41168,c[l+16>>2]=V,c[l+24>>2]=aI,l)|0);i=l;aw=0;ax=aD;ay=aP;az=aF;aA=aT;aB=aU;aC=aI;R=5991}do{if((R|0)==5991){R=0;if((az|0)==0){aJ=ax;aK=aC;aL=aB;aM=aA;aN=ay;aO=aw;break}c[ax>>2]=az;aJ=ax+4|0;aK=aC;aL=aB;aM=aA;aN=ay;aO=aw}}while(0);do{if((aK|0)==(h|0)){aV=aJ}else{V=c[y>>2]|0;M=(c[A>>2]&1024|0)!=0;X=c[(M?B:C)>>2]|0;d$(c[z>>2]|0,147792,24888,(l=i,i=i+48|0,c[l>>2]=aK>>>0<h>>>0?23784:22984,c[l+8>>2]=V,c[l+16>>2]=M?41824:41168,c[l+24>>2]=X,c[l+32>>2]=aK,c[l+40>>2]=h,l)|0);i=l;X=(aK|0)>(h|0);if(X&aJ>>>0>x>>>0){M=aK;V=aJ;while(1){L=V-4|0;W=M-(c[L>>2]|0)|0;aW=(W|0)>(h|0);if(aW&L>>>0>x>>>0){M=W;V=L}else{aX=W;aY=L;aZ=aW;break}}}else{aX=aK;aY=aJ;aZ=X}if((aX|0)>=(h|0)){if(!aZ){aV=aY;break}c[aY>>2]=h;c[aY+4>>2]=0;aV=aY+8|0;break}if((aY-E&4|0)==0){a_=aY}else{c[aY>>2]=0;a_=aY+4|0}c[a_>>2]=h-((aX|0)<0?0:aX);aV=a_+4|0}}while(0);bk[c[D>>2]&7](J,x,aV,h);V=c[k>>2]|0;M=I-V|0;c[y>>2]=(c[y>>2]|0)+1;if((M|0)>0){F=aL;G=aM;H=aN;I=M;J=J+V|0;K=aO}else{a$=aL;a0=aM;a1=aN;a2=aO;break L7865}}do{if((R|0)==6003){if((h|0)==0){a3=Q;a4=x;a5=O;a6=P;break}K=c[y>>2]|0;I=(c[A>>2]&1024|0)!=0;H=c[(I?B:C)>>2]|0;d$(c[z>>2]|0,147792,24888,(l=i,i=i+48|0,c[l>>2]=23784,c[l+8>>2]=K,c[l+16>>2]=I?41824:41168,c[l+24>>2]=H,c[l+32>>2]=0,c[l+40>>2]=h,l)|0);i=l;H=x+4|0;c[x>>2]=h;if((h|0)>0){a3=Q;a4=H;a5=O;a6=P;break}c[H>>2]=0;a3=Q;a4=x+8|0;a5=O;a6=P}else if((R|0)==5980){H=(c[A>>2]&1024|0)!=0;I=c[(H?B:C)>>2]|0;d$(c[z>>2]|0,147792,40648,(l=i,i=i+32|0,c[l>>2]=c[y>>2],c[l+8>>2]=H?41824:41168,c[l+16>>2]=I,c[l+24>>2]=ap,l)|0);i=l;if((an|0)==0){a7=al}else{c[al>>2]=an;a7=al+4|0}if((ap|0)==(h|0)){a3=0;a4=a7;a5=am;a6=ao;break}I=c[y>>2]|0;H=(c[A>>2]&1024|0)!=0;K=c[(H?B:C)>>2]|0;d$(c[z>>2]|0,147792,24888,(l=i,i=i+48|0,c[l>>2]=ap>>>0<h>>>0?23784:22984,c[l+8>>2]=I,c[l+16>>2]=H?41824:41168,c[l+24>>2]=K,c[l+32>>2]=ap,c[l+40>>2]=h,l)|0);i=l;K=(ap|0)>(h|0);if(K&a7>>>0>x>>>0){H=ap;I=a7;while(1){G=I-4|0;F=H-(c[G>>2]|0)|0;V=(F|0)>(h|0);if(V&G>>>0>x>>>0){H=F;I=G}else{a8=F;a9=G;ba=V;break}}}else{a8=ap;a9=a7;ba=K}if((a8|0)>=(h|0)){if(!ba){a3=0;a4=a9;a5=am;a6=ao;break}c[a9>>2]=h;c[a9+4>>2]=0;a3=0;a4=a9+8|0;a5=am;a6=ao;break}if((a9-E&4|0)==0){bb=a9}else{c[a9>>2]=0;bb=a9+4|0}c[bb>>2]=h-((a8|0)<0?0:a8);a3=0;a4=bb+4|0;a5=am;a6=ao}}while(0);bk[c[D>>2]&7](J,x,a4,h);c[p>>2]=0;c[n>>2]=a6;c[r>>2]=a3;c[v>>2]=(c[t>>2]|0)-a5+(c[v>>2]|0);c[t>>2]=a5;m=-1;i=f;return m|0}else{a$=o;a0=q;a1=u;a2=s}}while(0);c[p>>2]=a0;c[n>>2]=a$;c[r>>2]=a2;c[v>>2]=(c[t>>2]|0)-a1+(c[v>>2]|0);c[t>>2]=a1;m=1;i=f;return m|0}function e0(a,d){a=a|0;d=d|0;var e=0,f=0,h=0,i=0.0,j=0.0;d=c[a+576>>2]|0;if((d|0)==0){aD(32952,38048,722,45e3);return 0}c[d+52>>2]=8;c[d+48>>2]=0;c[d+76>>2]=0;e=c[d+80>>2]|0;if((e|0)!=0){dW(e,0,c[d+8>>2]|0)}if((c[d+28>>2]&1|0)==0){c[d+88>>2]=0;c[d+84>>2]=0;f=d+92|0;h=f;c[h>>2]=0;return 1}i=+g[a+120>>2];if((b[a+124>>1]|0)==3){j=i*2.5399999618530273}else{j=i}a=j>150.0?4:2;c[d+88>>2]=a;c[d+84>>2]=a-1;f=d+92|0;h=f;c[h>>2]=0;return 1}function e1(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[b+576>>2]|0;e=d+52|0;if((c[e>>2]|0)==8){return 1}f=b+608|0;if((c[f>>2]|0)>=(c[b+592>>2]|0)){d1(b)|0}g=d+48|0;d=c[g>>2]&255;h=b+604|0;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=d;c[f>>2]=(c[f>>2]|0)+1;c[g>>2]=0;c[e>>2]=8;return 1}function e2(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;f=i;g=b+576|0;h=c[g>>2]|0;j=h+8|0;if(((e|0)%(c[j>>2]|0)|0|0)!=0){cg(c[b+628>>2]|0,147744,38544,(k=i,i=i+1|0,i=i+7&-8,c[k>>2]=0,k)|0);i=k;l=0;i=f;return l|0}if((e|0)<=0){l=1;i=f;return l|0}k=h+4|0;m=b+608|0;n=b+592|0;o=b+604|0;p=h+28|0;q=h+12|0;r=h+76|0;s=h+84|0;t=h+88|0;u=h+80|0;h=e;e=d;L7996:while(1){if((c[k>>2]&2|0)==0){d=c[g>>2]|0;v=d+52|0;w=c[v>>2]|0;x=d+48|0;y=c[x>>2]|0;z=d+28|0;L8000:do{if((c[z>>2]&4|0)==0|(w|0)==4){A=y;B=w}else{C=((w|0)<4?4:-4)+w|0;do{if(C>>>0>w>>>0){D=w;E=y&255;F=C;G=c[m>>2]|0;while(1){H=F-D|0;if((G|0)>=(c[n>>2]|0)){d1(b)|0}I=c[o>>2]|0;c[o>>2]=I+1;a[I]=E;J=(c[m>>2]|0)+1|0;c[m>>2]=J;if(H>>>0>8){D=8;E=0;F=H;G=J}else{break}}if((H|0)!=8){K=8;L=0;M=H;break}if((J|0)>=(c[n>>2]|0)){d1(b)|0}G=c[o>>2]|0;c[o>>2]=G+1;a[G]=0;c[m>>2]=(c[m>>2]|0)+1;A=0;B=8;break L8000}else{if(C>>>0<9){K=w;L=y;M=C}else{N=6043;break L7996}}}while(0);A=L;B=K-M|0}}while(0);if((c[z>>2]&1|0)==0){O=12;P=1}else{O=13;P=(c[d+76>>2]|0)==0|2}if(O>>>0<=B>>>0){N=6056;break}y=B;w=A;C=O;G=c[m>>2]|0;while(1){Q=C-y|0;if((G|0)>=(c[n>>2]|0)){d1(b)|0}F=c[o>>2]|0;c[o>>2]=F+1;a[F]=(P>>>(Q>>>0)|w)&255;R=(c[m>>2]|0)+1|0;c[m>>2]=R;if(Q>>>0>8){y=8;w=0;C=Q;G=R}else{break}}G=8-Q|0;C=(c[42192+(Q<<2)>>2]&P)<<G;if((Q|0)==8){if((R|0)>=(c[n>>2]|0)){d1(b)|0}w=c[o>>2]|0;c[o>>2]=w+1;a[w]=C&255;c[m>>2]=(c[m>>2]|0)+1;S=0;T=8}else{S=C;T=G}c[x>>2]=S;c[v>>2]=T}do{if((c[p>>2]&1|0)==0){e5(b,e,c[q>>2]|0)}else{if((c[r>>2]|0)==0){e5(b,e,c[q>>2]|0);c[r>>2]=1;U=c[s>>2]|0}else{eR(b,e,c[u>>2]|0,c[q>>2]|0);G=(c[s>>2]|0)-1|0;c[s>>2]=G;U=G}if((U|0)==0){c[r>>2]=0;c[s>>2]=(c[t>>2]|0)-1;break}else{dX(c[u>>2]|0,e,c[j>>2]|0);break}}}while(0);v=c[j>>2]|0;x=h-v|0;if((x|0)>0){h=x;e=e+v|0}else{l=1;N=6073;break}}if((N|0)==6073){i=f;return l|0}else if((N|0)==6043){aD(33328,38048,701,44952);return 0}else if((N|0)==6056){aD(39392,38048,707,44952);return 0}return 0}function e3(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[b+576>>2]|0;if((c[d+4>>2]&1|0)!=0){return}if((c[d+28>>2]&1|0)==0){e=12;f=1}else{e=13;f=(c[d+76>>2]|0)==0|2}eQ(b,f,e);eQ(b,f,e);eQ(b,f,e);eQ(b,f,e);eQ(b,f,e);eQ(b,f,e);e=b+608|0;if((c[e>>2]|0)>=(c[b+592>>2]|0)){d1(b)|0}f=d+48|0;g=c[f>>2]&255;h=b+604|0;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=g;c[e>>2]=(c[e>>2]|0)+1;c[f>>2]=0;c[d+52>>2]=8;return}function e4(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+576|0;d=c[b>>2]|0;if((d|0)==0){aD(33672,38048,1109,45032)}c[a+672>>2]=c[d+32>>2];c[a+668>>2]=c[d+36>>2];c[a+676>>2]=c[d+40>>2];e=c[d+64>>2]|0;if((e|0)!=0){dU(e)}e=c[d+80>>2]|0;if((e|0)==0){f=c[b>>2]|0;dU(f);c[b>>2]=0;em(a);return}dU(e);f=c[b>>2]|0;dU(f);c[b>>2]=0;em(a);return}function e5(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=c[b+576>>2]|0;g=0;do{h=eS(d,g,e)|0;eU(b,h,79232);i=h+g|0;if(i>>>0>=e>>>0){break}h=eT(d,i,e)|0;eU(b,h,146448);g=h+i|0;}while(g>>>0<e>>>0);e=f+4|0;g=c[e>>2]|0;if((g&12|0)==0){return}d=f+52|0;if((c[d>>2]|0)==8){j=g}else{g=b+608|0;if((c[g>>2]|0)>=(c[b+592>>2]|0)){d1(b)|0}i=f+48|0;h=c[i>>2]&255;k=b+604|0;l=c[k>>2]|0;c[k>>2]=l+1;a[l]=h;c[g>>2]=(c[g>>2]|0)+1;c[i>>2]=0;c[d>>2]=8;j=c[e>>2]|0}if((j&8|0)==0){return}j=b+604|0;e=c[j>>2]|0;if((e&1|0)==0){return}i=b+608|0;if((c[i>>2]|0)<(c[b+592>>2]|0)){m=e}else{d1(b)|0;m=c[j>>2]|0}b=f+48|0;f=c[b>>2]&255;c[j>>2]=m+1;a[m]=f;c[i>>2]=(c[i>>2]|0)+1;c[b>>2]=0;c[d>>2]=8;return}function e6(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0,ca=0,cb=0,cc=0,cd=0,ce=0,cf=0,ch=0,ci=0,cj=0,ck=0,cl=0,cm=0,cn=0,co=0,cp=0,cq=0,cr=0,cs=0,ct=0,cu=0,cv=0,cw=0,cx=0,cy=0,cz=0,cA=0,cB=0,cC=0,cD=0,cE=0,cF=0,cG=0,cH=0,cI=0,cJ=0,cK=0,cL=0,cM=0,cN=0,cO=0,cP=0,cQ=0,cR=0,cS=0,cT=0,cU=0,cV=0,cW=0,cX=0,cY=0,cZ=0,c_=0,c$=0,c0=0,c1=0,c2=0,c3=0,c4=0,c5=0,c6=0,c7=0,c8=0,c9=0,da=0,db=0,dc=0,dd=0,de=0,df=0,dg=0,dh=0,di=0,dj=0,dk=0,dl=0,dm=0,dn=0,dp=0,dq=0,dr=0,ds=0,dt=0,du=0,dv=0,dw=0,dx=0,dy=0,dz=0,dA=0,dB=0,dC=0,dD=0,dE=0,dF=0,dG=0,dH=0,dI=0,dJ=0,dK=0,dL=0,dM=0,dN=0,dO=0,dP=0,dQ=0,dR=0,dS=0,dT=0,dU=0,dV=0,dW=0,dX=0,dY=0,dZ=0,d_=0,d0=0,d1=0,d2=0,d3=0,d4=0,d5=0,d6=0,d7=0,d8=0,d9=0,ea=0,eb=0,ec=0,ed=0,ee=0,ef=0;f=i;g=c[a+576>>2]|0;h=c[g+12>>2]|0;j=c[g+44>>2]|0;k=g+8|0;if(((e|0)%(c[k>>2]|0)|0|0)!=0){cg(c[a+628>>2]|0,147776,26248,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0);i=l;m=-1;i=f;return m|0}n=g+48|0;o=c[n>>2]|0;p=g+52|0;q=c[p>>2]|0;r=g+56|0;s=c[r>>2]|0;t=a+604|0;u=c[t>>2]|0;v=a+608|0;w=u+(c[v>>2]|0)|0;L8100:do{if((e|0)>0){x=g+72|0;y=g+68|0;z=(h|0)>0;A=g+92|0;B=a+628|0;C=a+12|0;D=a+492|0;E=a+452|0;F=g+60|0;G=q;H=u;I=o;J=s;K=e;L=b;M=c[x>>2]|0;L8102:while(1){L8104:do{if((J|0)==0){N=I;O=H;P=G;while(1){do{if((P|0)<11){if(O>>>0>=w>>>0){if((P|0)==0){Q=0;R=N;S=O;T=6296;break L8102}else{U=N;V=O;W=11;break}}X=O+1|0;Y=(d[j+(d[O]|0)|0]|0)<<P|N;Z=P+8|0;if((Z|0)>=11){U=Y;V=X;W=Z;break}if(X>>>0>=w>>>0){U=Y;V=X;W=11;break}U=(d[j+(d[X]|0)|0]|0)<<Z|Y;V=O+2|0;W=P+16|0}else{U=N;V=O;W=P}}while(0);if((U&2047|0)==0){_=U;$=V;aa=W;break L8104}N=U>>>1;O=V;P=W-1|0}}else{_=I;$=H;aa=G}}while(0);while(1){do{if((aa|0)<8){if($>>>0<w>>>0){ab=(d[j+(d[$]|0)|0]|0)<<aa|_;ac=$+1|0;ad=aa+8|0;break}else{if((aa|0)==0){Q=J;R=_;S=$;T=6296;break L8102}else{ab=_;ac=$;ad=8;break}}}else{ab=_;ac=$;ad=aa}}while(0);if((ab&255|0)!=0){ae=ab;af=ad;break}_=ab>>>8;$=ac;aa=ad-8|0}while(1){ag=af-1|0;ah=ae>>>1;if((ae&1|0)==0){ae=ah;af=ag}else{break}}do{if((ag|0)<1){if(ac>>>0<w>>>0){ai=(d[j+(d[ac]|0)|0]|0)<<ag|ah;aj=ac+1|0;ak=af+7|0;break}else{if((ag|0)==0){Q=0;R=ah;S=ac;T=6296;break L8102}else{ai=ah;aj=ac;ak=1;break}}}else{ai=ah;aj=ac;ak=ag}}while(0);P=ak-1|0;O=ai>>>1;N=c[y>>2]|0;Y=N+4|0;Z=c[N>>2]|0;do{if((ai&1|0)==0){L8183:do{if(z){N=M;X=P;al=aj;am=O;an=M;ao=0;ap=Z;aq=Y;ar=0;L8185:while(1){as=(an|0)==(M|0);L8187:do{if(as){at=X;au=0;av=al;aw=am;ax=ao;ay=ap;az=aq;aA=ar;while(1){do{if((at|0)<7){if(av>>>0<w>>>0){aB=(d[j+(d[av]|0)|0]|0)<<at|aw;aC=av+1|0;aD=at+8|0;break}else{if((at|0)==0){aE=ax;aF=M;aG=aw;aH=av;aI=au;aJ=0;T=6264;break L8102}else{aB=aw;aC=av;aD=7;break}}}else{aB=aw;aC=av;aD=at}}while(0);aK=aB&127;aL=d[79889+(aK<<3)|0]|0;aM=aD-aL|0;aN=aB>>>(aL>>>0);switch(d[79888+(aK<<3)|0]|0|0){case 3:{aO=au;aP=ax;aQ=ay;aR=az;aS=aA;aT=aC;aU=aM;aV=aN;T=6238;break L8187;break};case 4:{aW=au;aX=ax;aY=ay;aZ=az;a_=aA;a$=aC;a0=aK;a1=aM;a2=aN;T=6242;break L8187;break};case 5:{a3=au;a4=ax;a5=ay;a6=az;a7=aC;a8=aK;a9=aM;ba=aN;T=6246;break L8187;break};case 6:{bb=au;bc=ax;bd=aC;be=aM;bf=aN;bg=M;T=6253;break L8185;break};case 12:{bh=au;bi=ax;bj=aD;bl=aC;bm=aL;bn=aM;bo=aN;bp=M;T=6254;break L8185;break};case 1:{break};case 2:{bq=au;br=ax;bs=ay;bt=az;bu=aC;bv=aM;bw=aN;T=6198;break L8187;break};default:{bx=aN;by=aC;bz=aM;bA=au;bB=ax;bC=M;T=6261;break L8185}}aL=(c[az>>2]|0)+ay|0;aK=aA+au+aL|0;if((aL|0)<(h|0)){at=aM;au=aK;av=aC;aw=aN;ax=aL;ay=aL+(c[az+4>>2]|0)|0;az=az+8|0;aA=-aL|0}else{bD=aM;bE=aK;bF=aC;bG=aN;bH=aL;bI=M;T=6275;break L8185}}}else{aA=X;az=0;ay=al;ax=am;aw=ao;av=ap;au=aq;at=ar;while(1){do{if((aA|0)<7){if(ay>>>0<w>>>0){bJ=(d[j+(d[ay]|0)|0]|0)<<aA|ax;bK=ay+1|0;bL=aA+8|0;break}else{if((aA|0)==0){aE=aw;aF=an;aG=ax;aH=ay;aI=az;aJ=0;T=6264;break L8102}else{bJ=ax;bK=ay;bL=7;break}}}else{bJ=ax;bK=ay;bL=aA}}while(0);aL=bJ&127;aN=d[79889+(aL<<3)|0]|0;aK=bL-aN|0;aM=bJ>>>(aN>>>0);switch(d[79888+(aL<<3)|0]|0|0){case 3:{aO=az;aP=aw;aQ=av;aR=au;aS=at;aT=bK;aU=aK;aV=aM;T=6238;break L8187;break};case 4:{aW=az;aX=aw;aY=av;aZ=au;a_=at;a$=bK;a0=aL;a1=aK;a2=aM;T=6242;break L8187;break};case 5:{a3=az;a4=aw;a5=av;a6=au;a7=bK;a8=aL;a9=aK;ba=aM;T=6246;break L8187;break};case 6:{bb=az;bc=aw;bd=bK;be=aK;bf=aM;bg=an;T=6253;break L8185;break};case 12:{bh=az;bi=aw;bj=bL;bl=bK;bm=aN;bn=aK;bo=aM;bp=an;T=6254;break L8185;break};case 1:{break};case 2:{bq=az;br=aw;bs=av;bt=au;bu=bK;bv=aK;bw=aM;T=6198;break L8187;break};default:{bx=aM;by=bK;bz=aK;bA=az;bB=aw;bC=an;T=6261;break L8185}}if((av|0)<=(aw|0)&(av|0)<(h|0)){aN=av;aL=au;while(1){bM=(c[aL>>2]|0)+aN+(c[aL+4>>2]|0)|0;bN=aL+8|0;if((bM|0)<=(aw|0)&(bM|0)<(h|0)){aN=bM;aL=bN}else{bO=bM;bP=bN;break}}}else{bO=av;bP=au}aL=(c[bP>>2]|0)+bO|0;aN=at+az+aL|0;if((aL|0)<(h|0)){aA=aK;az=aN;ay=bK;ax=aM;aw=aL;av=aL+(c[bP+4>>2]|0)|0;au=bP+8|0;at=-aL|0}else{bD=aK;bE=aN;bF=bK;bG=aM;bH=aL;bI=an;T=6275;break L8185}}}}while(0);do{if((T|0)==6238){T=0;do{if(as){bQ=aR;bR=aQ}else{if((aQ|0)<=(aP|0)&(aQ|0)<(h|0)){bS=aQ;bT=aR}else{bQ=aR;bR=aQ;break}while(1){at=(c[bT>>2]|0)+bS+(c[bT+4>>2]|0)|0;au=bT+8|0;if((at|0)<=(aP|0)&(at|0)<(h|0)){bS=at;bT=au}else{bQ=au;bR=at;break}}}}while(0);c[an>>2]=aS+aO+bR;bU=bQ+4|0;bV=(c[bQ>>2]|0)+bR|0;bW=bR;bX=an+4|0;bY=aV;bZ=aT;b_=aU}else if((T|0)==6242){T=0;do{if(as){b$=aZ;b0=aY}else{if((aY|0)<=(aX|0)&(aY|0)<(h|0)){b1=aY;b2=aZ}else{b$=aZ;b0=aY;break}while(1){aM=(c[b2>>2]|0)+b1+(c[b2+4>>2]|0)|0;aK=b2+8|0;if((aM|0)<=(aX|0)&(aM|0)<(h|0)){b1=aM;b2=aK}else{b$=aK;b0=aM;break}}}}while(0);aM=c[79892+(a0<<3)>>2]|0;c[an>>2]=a_+aW+b0+aM;bU=b$+4|0;bV=(c[b$>>2]|0)+b0|0;bW=aM+b0|0;bX=an+4|0;bY=a2;bZ=a$;b_=a1}else if((T|0)==6246){T=0;aM=(an|0)!=(M|0);do{if(aM){if((a5|0)<=(a4|0)&(a5|0)<(h|0)){b3=a5;b4=a6}else{b5=a6;b6=a5;break}while(1){aK=(c[b4>>2]|0)+b3+(c[b4+4>>2]|0)|0;at=b4+8|0;if((aK|0)<=(a4|0)&(aK|0)<(h|0)){b3=aK;b4=at}else{b5=at;b6=aK;break}}}else{b5=a6;b6=a5}}while(0);aK=c[79892+(a8<<3)>>2]|0;at=aK+a4|0;if((b6|0)<=(at|0)&((b6|0)<(at|0)|aM)){T=6250;break L8185}c[an>>2]=b6-a4+a3-aK;at=b5-4|0;bU=at;bV=b6-(c[at>>2]|0)|0;bW=b6-aK|0;bX=an+4|0;bY=ba;bZ=a7;b_=a9}else if((T|0)==6198){T=0;if((an-N&4|0)==0){aK=br;at=bw;au=bu;av=bq;aw=bv;while(1){do{if((aw|0)<12){if(au>>>0>=w>>>0){if((aw|0)==0){aE=aK;aF=an;aG=at;aH=au;aI=av;aJ=0;T=6264;break L8102}else{b7=at;b8=au;b9=12;break}}ax=au+1|0;ay=(d[j+(d[au]|0)|0]|0)<<aw|at;az=aw+8|0;if((az|0)>=12){b7=ay;b8=ax;b9=az;break}if(ax>>>0>=w>>>0){b7=ay;b8=ax;b9=12;break}b7=(d[j+(d[ax]|0)|0]|0)<<az|ay;b8=au+2|0;b9=aw+16|0}else{b7=at;b8=au;b9=aw}}while(0);ca=b7&4095;ay=d[46465+(ca<<3)|0]|0;cb=b9-ay|0;cc=b7>>>(ay>>>0);ay=d[46464+(ca<<3)|0]|0;if((ay|0)==7){break}else if(!((ay|0)==9|(ay|0)==11)){cd=aK;ce=an;cf=cc;ch=b8;ci=av;cj=cb;T=6263;break L8185}ay=c[46468+(ca<<3)>>2]|0;aK=ay+aK|0;at=cc;au=b8;av=ay+av|0;aw=cb}aw=c[46468+(ca<<3)>>2]|0;au=an+4|0;c[an>>2]=aw+av;at=aw+aK|0;aw=cc;aM=b8;ay=0;az=cb;while(1){do{if((az|0)<13){if(aM>>>0>=w>>>0){if((az|0)==0){aE=at;aF=au;aG=aw;aH=aM;aI=ay;aJ=0;T=6264;break L8102}else{ck=aw;cl=aM;cm=13;break}}ax=aM+1|0;aA=(d[j+(d[aM]|0)|0]|0)<<az|aw;aL=az+8|0;if((aL|0)>=13){ck=aA;cl=ax;cm=aL;break}if(ax>>>0>=w>>>0){ck=aA;cl=ax;cm=13;break}ck=(d[j+(d[ax]|0)|0]|0)<<aL|aA;cl=aM+2|0;cm=az+16|0}else{ck=aw;cl=aM;cm=az}}while(0);cn=ck&8191;aA=d[80913+(cn<<3)|0]|0;co=cm-aA|0;cp=ck>>>(aA>>>0);aA=d[80912+(cn<<3)|0]|0;if((aA|0)==8){break}else if(!((aA|0)==10|(aA|0)==11)){cq=at;cr=au;cs=cp;ct=cl;cu=ay;cv=co;T=6262;break L8185}aA=c[80916+(cn<<3)>>2]|0;at=aA+at|0;aw=cp;aM=cl;ay=aA+ay|0;az=co}az=c[80916+(cn<<3)>>2]|0;c[au>>2]=az+ay;cw=az+at|0;cx=cp;cy=cl;cz=co}else{az=br;aM=bw;aw=bu;aK=bq;av=bv;while(1){do{if((av|0)<13){if(aw>>>0>=w>>>0){if((av|0)==0){aE=az;aF=an;aG=aM;aH=aw;aI=aK;aJ=0;T=6264;break L8102}else{cA=aM;cB=aw;cC=13;break}}aA=aw+1|0;aL=(d[j+(d[aw]|0)|0]|0)<<av|aM;ax=av+8|0;if((ax|0)>=13){cA=aL;cB=aA;cC=ax;break}if(aA>>>0>=w>>>0){cA=aL;cB=aA;cC=13;break}cA=(d[j+(d[aA]|0)|0]|0)<<ax|aL;cB=aw+2|0;cC=av+16|0}else{cA=aM;cB=aw;cC=av}}while(0);cD=cA&8191;aL=d[80913+(cD<<3)|0]|0;cE=cC-aL|0;cF=cA>>>(aL>>>0);aL=d[80912+(cD<<3)|0]|0;if((aL|0)==8){break}else if(!((aL|0)==10|(aL|0)==11)){cq=az;cr=an;cs=cF;ct=cB;cu=aK;cv=cE;T=6262;break L8185}aL=c[80916+(cD<<3)>>2]|0;az=aL+az|0;aM=cF;aw=cB;aK=aL+aK|0;av=cE}av=c[80916+(cD<<3)>>2]|0;aw=an+4|0;c[an>>2]=av+aK;aM=av+az|0;av=cF;at=cB;ay=0;au=cE;while(1){do{if((au|0)<12){if(at>>>0>=w>>>0){if((au|0)==0){aE=aM;aF=aw;aG=av;aH=at;aI=ay;aJ=0;T=6264;break L8102}else{cG=av;cH=at;cI=12;break}}aL=at+1|0;ax=(d[j+(d[at]|0)|0]|0)<<au|av;aA=au+8|0;if((aA|0)>=12){cG=ax;cH=aL;cI=aA;break}if(aL>>>0>=w>>>0){cG=ax;cH=aL;cI=12;break}cG=(d[j+(d[aL]|0)|0]|0)<<aA|ax;cH=at+2|0;cI=au+16|0}else{cG=av;cH=at;cI=au}}while(0);cJ=cG&4095;ax=d[46465+(cJ<<3)|0]|0;cK=cI-ax|0;cL=cG>>>(ax>>>0);ax=d[46464+(cJ<<3)|0]|0;if((ax|0)==7){break}else if(!((ax|0)==9|(ax|0)==11)){cd=aM;ce=aw;cf=cL;ch=cH;ci=ay;cj=cK;T=6263;break L8185}ax=c[46468+(cJ<<3)>>2]|0;aM=ax+aM|0;av=cL;at=cH;ay=ax+ay|0;au=cK}au=c[46468+(cJ<<3)>>2]|0;c[aw>>2]=au+ay;cw=au+aM|0;cx=cL;cy=cH;cz=cK}au=an+8|0;if((au|0)==(M|0)){bU=bt;bV=bs;bW=cw;bX=M;bY=cx;bZ=cy;b_=cz;break}if((bs|0)<=(cw|0)&(bs|0)<(h|0)){cM=bs;cN=bt}else{bU=bt;bV=bs;bW=cw;bX=au;bY=cx;bZ=cy;b_=cz;break}while(1){at=(c[cN>>2]|0)+cM+(c[cN+4>>2]|0)|0;av=cN+8|0;if((at|0)<=(cw|0)&(at|0)<(h|0)){cM=at;cN=av}else{bU=av;bV=at;bW=cw;bX=au;bY=cx;bZ=cy;b_=cz;break}}}}while(0);if((bW|0)<(h|0)){X=b_;al=bZ;am=bY;an=bX;ao=bW;ap=bV;aq=bU;ar=-bW|0}else{cO=bX;cP=b_;cQ=bZ;cR=bY;cS=bW;cT=0;break L8183}}do{if((T|0)==6262){T=0;ar=(c[C>>2]&1024|0)!=0;aq=c[(ar?D:E)>>2]|0;cg(c[B>>2]|0,147776,39992,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=ar?41824:41168,c[l+16>>2]=aq,c[l+24>>2]=cq,l)|0);i=l;cU=0;cV=cq;cW=cr;cX=cs;cY=ct;cZ=cu;c_=cv}else if((T|0)==6263){T=0;aq=(c[C>>2]&1024|0)!=0;ar=c[(aq?D:E)>>2]|0;cg(c[B>>2]|0,147776,39992,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=aq?41824:41168,c[l+16>>2]=ar,c[l+24>>2]=cd,l)|0);i=l;cU=0;cV=cd;cW=ce;cX=cf;cY=ch;cZ=ci;c_=cj}else if((T|0)==6253){T=0;c[bg>>2]=h-bc;ar=(c[C>>2]&1024|0)!=0;aq=c[(ar?D:E)>>2]|0;cg(c[B>>2]|0,147776,36944,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=ar?41824:41168,c[l+16>>2]=aq,c[l+24>>2]=bc,l)|0);i=l;cU=0;cV=bc;cW=bg+4|0;cX=bf;cY=bd;cZ=bb;c_=be}else if((T|0)==6254){T=0;aq=bp+4|0;c[bp>>2]=h-bi;do{if((bn|0)<4){if(bl>>>0<w>>>0){c$=(d[j+(d[bl]|0)|0]|0)<<bn|bo;c0=bl+1|0;c1=bn+8|0;break}else{if((bj|0)==(bm|0)){aE=bi;aF=aq;aG=bo;aH=bl;aI=bh;aJ=bn;T=6264;break L8102}else{c$=bo;c0=bl;c1=4;break}}}else{c$=bo;c0=bl;c1=bn}}while(0);if((c$&15|0)!=0){ar=(c[C>>2]&1024|0)!=0;ap=c[(ar?D:E)>>2]|0;cg(c[B>>2]|0,147776,39992,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=ar?41824:41168,c[l+16>>2]=ap,c[l+24>>2]=bi,l)|0);i=l}cU=1;cV=bi;cW=aq;cX=c$>>>4;cY=c0;cZ=bh;c_=c1-4|0}else if((T|0)==6275){T=0;if((bE|0)==0){cO=bI;cP=bD;cQ=bF;cR=bG;cS=bH;cT=0;break L8183}if((bH+bE|0)<(h|0)){do{if((bD|0)<1){if(bF>>>0<w>>>0){c2=(d[j+(d[bF]|0)|0]|0)<<bD|bG;c3=bF+1|0;c4=bD+8|0;break}else{if((bD|0)==0){aE=bH;aF=bI;aG=bG;aH=bF;aI=bE;aJ=0;T=6264;break L8102}else{c2=bG;c3=bF;c4=1;break}}}else{c2=bG;c3=bF;c4=bD}}while(0);if((c2&1|0)==0){bx=c2;by=c3;bz=c4;bA=bE;bB=bH;bC=bI;T=6261;break}c5=c2>>>1;c6=c3;c7=c4-1|0}else{c5=bG;c6=bF;c7=bD}c[bI>>2]=bE;cO=bI+4|0;cP=c7;cQ=c6;cR=c5;cS=bH;cT=0;break L8183}else if((T|0)==6250){T=0;aq=(c[C>>2]&1024|0)!=0;ap=c[(aq?D:E)>>2]|0;cg(c[B>>2]|0,147776,39992,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=aq?41824:41168,c[l+16>>2]=ap,c[l+24>>2]=a4,l)|0);i=l;cU=0;cV=a4;cW=an;cX=ba;cY=a7;cZ=a3;c_=a9}}while(0);if((T|0)==6261){T=0;an=(c[C>>2]&1024|0)!=0;ap=c[(an?D:E)>>2]|0;cg(c[B>>2]|0,147776,39992,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=an?41824:41168,c[l+16>>2]=ap,c[l+24>>2]=bB,l)|0);i=l;cU=0;cV=bB;cW=bC;cX=bx;cY=by;cZ=bA;c_=bz}if((cZ|0)==0){cO=cW;cP=c_;cQ=cY;cR=cX;cS=cV;cT=cU;break}c[cW>>2]=cZ;cO=cW+4|0;cP=c_;cQ=cY;cR=cX;cS=cV;cT=cU}else{cO=M;cP=P;cQ=aj;cR=O;cS=0;cT=0}}while(0);if((cS|0)==(h|0)){c8=cT;c9=cO;da=cR;db=cQ;dc=cP;break}ap=c[A>>2]|0;an=(c[C>>2]&1024|0)!=0;aq=c[(an?D:E)>>2]|0;d$(c[B>>2]|0,147776,24888,(l=i,i=i+48|0,c[l>>2]=cS>>>0<h>>>0?23784:22984,c[l+8>>2]=ap,c[l+16>>2]=an?41824:41168,c[l+24>>2]=aq,c[l+32>>2]=cS,c[l+40>>2]=h,l)|0);i=l;aq=(cS|0)>(h|0);if(aq&cO>>>0>M>>>0){an=cO;ap=cS;while(1){ar=an-4|0;ao=ap-(c[ar>>2]|0)|0;am=(ao|0)>(h|0);if(am&ar>>>0>M>>>0){an=ar;ap=ao}else{dd=ar;de=ao;df=am;break}}}else{dd=cO;de=cS;df=aq}if((de|0)>=(h|0)){if(!df){c8=cT;c9=dd;da=cR;db=cQ;dc=cP;break}c[dd>>2]=h;c[dd+4>>2]=0;c8=cT;c9=dd+8|0;da=cR;db=cQ;dc=cP;break}if((dd-M&4|0)==0){dg=dd}else{c[dd>>2]=0;dg=dd+4|0}c[dg>>2]=h-((de|0)<0?0:de);c8=cT;c9=dg+4|0;da=cR;db=cQ;dc=cP}else{ap=0;an=M;am=O;ao=aj;ar=P;L8135:while(1){dh=ap;al=am;X=ao;di=0;N=ar;while(1){do{if((N|0)<12){if(X>>>0>=w>>>0){if((N|0)==0){dj=dh;dk=an;dl=al;dm=X;dn=di;T=6161;break L8102}else{dp=al;dq=X;dr=12;break}}as=X+1|0;au=(d[j+(d[X]|0)|0]|0)<<N|al;aM=N+8|0;if((aM|0)>=12){dp=au;dq=as;dr=aM;break}if(as>>>0>=w>>>0){dp=au;dq=as;dr=12;break}dp=(d[j+(d[as]|0)|0]|0)<<aM|au;dq=X+2|0;dr=N+16|0}else{dp=al;dq=X;dr=N}}while(0);ds=dp&4095;au=d[46465+(ds<<3)|0]|0;dt=dr-au|0;du=dp>>>(au>>>0);au=d[46464+(ds<<3)|0]|0;if((au|0)==12){dv=1;dw=dh;dx=an;dy=du;dz=dq;dA=di;dB=dt;T=6172;break L8135}else if((au|0)==7){break}else if(!((au|0)==9|(au|0)==11)){T=6148;break L8135}au=c[46468+(ds<<3)>>2]|0;dh=au+dh|0;al=du;X=dq;di=au+di|0;N=dt}N=c[46468+(ds<<3)>>2]|0;X=N+di|0;dC=an+4|0;c[an>>2]=X;al=N+dh|0;if((al|0)<(h|0)){dD=al;dE=du;dF=dq;dG=0;dH=dt}else{dI=dC;dJ=dt;dK=dq;dL=du;dM=al;dN=0;break}while(1){do{if((dH|0)<13){if(dF>>>0>=w>>>0){if((dH|0)==0){dj=dD;dk=dC;dl=dE;dm=dF;dn=dG;T=6161;break L8102}else{dO=dE;dP=dF;dQ=13;break}}al=dF+1|0;N=(d[j+(d[dF]|0)|0]|0)<<dH|dE;au=dH+8|0;if((au|0)>=13){dO=N;dP=al;dQ=au;break}if(al>>>0>=w>>>0){dO=N;dP=al;dQ=13;break}dO=(d[j+(d[al]|0)|0]|0)<<au|N;dP=dF+2|0;dQ=dH+16|0}else{dO=dE;dP=dF;dQ=dH}}while(0);dR=dO&8191;N=d[80913+(dR<<3)|0]|0;dS=dQ-N|0;dT=dO>>>(N>>>0);N=d[80912+(dR<<3)|0]|0;if((N|0)==12){dv=1;dw=dD;dx=dC;dy=dT;dz=dP;dA=dG;dB=dS;T=6172;break L8135}else if((N|0)==8){break}else if(!((N|0)==10|(N|0)==11)){T=6158;break L8135}N=c[80916+(dR<<3)>>2]|0;dD=N+dD|0;dE=dT;dF=dP;dG=N+dG|0;dH=dS}N=c[80916+(dR<<3)>>2]|0;au=N+dG|0;al=an+8|0;c[dC>>2]=au;aM=N+dD|0;if((aM|0)>=(h|0)){dI=al;dJ=dS;dK=dP;dL=dT;dM=aM;dN=0;break}if((au|0)!=0){ap=aM;an=al;am=dT;ao=dP;ar=dS;continue}ap=aM;an=(X|0)==0?an:al;am=dT;ao=dP;ar=dS}if((T|0)==6158){T=0;ar=(c[C>>2]&1024|0)!=0;ao=c[(ar?D:E)>>2]|0;cg(c[B>>2]|0,147776,39992,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=ar?41824:41168,c[l+16>>2]=ao,c[l+24>>2]=dD,l)|0);i=l;dv=0;dw=dD;dx=dC;dy=dT;dz=dP;dA=dG;dB=dS;T=6172}else if((T|0)==6148){T=0;ao=(c[C>>2]&1024|0)!=0;ar=c[(ao?D:E)>>2]|0;cg(c[B>>2]|0,147776,39992,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=ao?41824:41168,c[l+16>>2]=ar,c[l+24>>2]=dh,l)|0);i=l;dv=0;dw=dh;dx=an;dy=du;dz=dq;dA=di;dB=dt;T=6172}do{if((T|0)==6172){T=0;if((dA|0)==0){dI=dx;dJ=dB;dK=dz;dL=dy;dM=dw;dN=dv;break}c[dx>>2]=dA;dI=dx+4|0;dJ=dB;dK=dz;dL=dy;dM=dw;dN=dv}}while(0);if((dM|0)==(h|0)){c8=dN;c9=dI;da=dL;db=dK;dc=dJ;break}an=c[A>>2]|0;ar=(c[C>>2]&1024|0)!=0;ao=c[(ar?D:E)>>2]|0;d$(c[B>>2]|0,147776,24888,(l=i,i=i+48|0,c[l>>2]=dM>>>0<h>>>0?23784:22984,c[l+8>>2]=an,c[l+16>>2]=ar?41824:41168,c[l+24>>2]=ao,c[l+32>>2]=dM,c[l+40>>2]=h,l)|0);i=l;ao=(dM|0)>(h|0);if(ao&dI>>>0>M>>>0){ar=dI;an=dM;while(1){am=ar-4|0;ap=an-(c[am>>2]|0)|0;aq=(ap|0)>(h|0);if(aq&am>>>0>M>>>0){ar=am;an=ap}else{dU=am;dV=ap;dW=aq;break}}}else{dU=dI;dV=dM;dW=ao}if((dV|0)>=(h|0)){if(!dW){c8=dN;c9=dU;da=dL;db=dK;dc=dJ;break}c[dU>>2]=h;c[dU+4>>2]=0;c8=dN;c9=dU+8|0;da=dL;db=dK;dc=dJ;break}if((dU-M&4|0)==0){dX=dU}else{c[dU>>2]=0;dX=dU+4|0}c[dX>>2]=h-((dV|0)<0?0:dV);c8=dN;c9=dX+4|0;da=dL;db=dK;dc=dJ}}while(0);bk[c[F>>2]&7](L,M,c9,h);c[c9>>2]=0;P=c[x>>2]|0;O=c[y>>2]|0;c[x>>2]=O;c[y>>2]=P;P=c[k>>2]|0;Y=K-P|0;c[A>>2]=(c[A>>2]|0)+1;if((Y|0)>0){G=dc;H=db;I=da;J=c8;K=Y;L=L+P|0;M=O}else{dY=dc;dZ=db;d_=da;d0=c8;break L8100}}do{if((T|0)==6161){K=(c[C>>2]&1024|0)!=0;J=c[(K?D:E)>>2]|0;d$(c[B>>2]|0,147776,40648,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=K?41824:41168,c[l+16>>2]=J,c[l+24>>2]=dj,l)|0);i=l;if((dn|0)==0){d1=dk}else{c[dk>>2]=dn;d1=dk+4|0}if((dj|0)==(h|0)){d2=0;d3=d1;d4=dl;d5=dm;d6=0;break}J=c[A>>2]|0;K=(c[C>>2]&1024|0)!=0;I=c[(K?D:E)>>2]|0;d$(c[B>>2]|0,147776,24888,(l=i,i=i+48|0,c[l>>2]=dj>>>0<h>>>0?23784:22984,c[l+8>>2]=J,c[l+16>>2]=K?41824:41168,c[l+24>>2]=I,c[l+32>>2]=dj,c[l+40>>2]=h,l)|0);i=l;I=(dj|0)>(h|0);if(I&d1>>>0>M>>>0){K=d1;J=dj;while(1){H=K-4|0;G=J-(c[H>>2]|0)|0;y=(G|0)>(h|0);if(y&H>>>0>M>>>0){K=H;J=G}else{d7=H;d8=G;d9=y;break}}}else{d7=d1;d8=dj;d9=I}if((d8|0)>=(h|0)){if(!d9){d2=0;d3=d7;d4=dl;d5=dm;d6=0;break}c[d7>>2]=h;c[d7+4>>2]=0;d2=0;d3=d7+8|0;d4=dl;d5=dm;d6=0;break}if((d7-M&4|0)==0){ea=d7}else{c[d7>>2]=0;ea=d7+4|0}c[ea>>2]=h-((d8|0)<0?0:d8);d2=0;d3=ea+4|0;d4=dl;d5=dm;d6=0}else if((T|0)==6296){if((h|0)==0){d2=Q;d3=M;d4=R;d5=S;d6=0;break}J=c[A>>2]|0;K=(c[C>>2]&1024|0)!=0;y=c[(K?D:E)>>2]|0;d$(c[B>>2]|0,147776,24888,(l=i,i=i+48|0,c[l>>2]=23784,c[l+8>>2]=J,c[l+16>>2]=K?41824:41168,c[l+24>>2]=y,c[l+32>>2]=0,c[l+40>>2]=h,l)|0);i=l;y=M+4|0;c[M>>2]=h;if(z){d2=Q;d3=y;d4=R;d5=S;d6=0;break}c[y>>2]=0;d2=Q;d3=M+8|0;d4=R;d5=S;d6=0}else if((T|0)==6264){y=(c[C>>2]&1024|0)!=0;K=c[(y?D:E)>>2]|0;d$(c[B>>2]|0,147776,40648,(l=i,i=i+32|0,c[l>>2]=c[A>>2],c[l+8>>2]=y?41824:41168,c[l+16>>2]=K,c[l+24>>2]=aE,l)|0);i=l;if((aI|0)==0){eb=aF}else{c[aF>>2]=aI;eb=aF+4|0}if((aE|0)==(h|0)){d2=0;d3=eb;d4=aG;d5=aH;d6=aJ;break}K=c[A>>2]|0;y=(c[C>>2]&1024|0)!=0;J=c[(y?D:E)>>2]|0;d$(c[B>>2]|0,147776,24888,(l=i,i=i+48|0,c[l>>2]=aE>>>0<h>>>0?23784:22984,c[l+8>>2]=K,c[l+16>>2]=y?41824:41168,c[l+24>>2]=J,c[l+32>>2]=aE,c[l+40>>2]=h,l)|0);i=l;J=(aE|0)>(h|0);if(J&eb>>>0>M>>>0){y=eb;K=aE;while(1){G=y-4|0;H=K-(c[G>>2]|0)|0;x=(H|0)>(h|0);if(x&G>>>0>M>>>0){y=G;K=H}else{ec=G;ed=H;ee=x;break}}}else{ec=eb;ed=aE;ee=J}if((ed|0)>=(h|0)){if(!ee){d2=0;d3=ec;d4=aG;d5=aH;d6=aJ;break}c[ec>>2]=h;c[ec+4>>2]=0;d2=0;d3=ec+8|0;d4=aG;d5=aH;d6=aJ;break}if((ec-M&4|0)==0){ef=ec}else{c[ec>>2]=0;ef=ec+4|0}c[ef>>2]=h-((ed|0)<0?0:ed);d2=0;d3=ef+4|0;d4=aG;d5=aH;d6=aJ}}while(0);bk[c[F>>2]&7](L,M,d3,h);c[p>>2]=d6;c[n>>2]=d4;c[r>>2]=d2;c[v>>2]=(c[t>>2]|0)-d5+(c[v>>2]|0);c[t>>2]=d5;m=-1;i=f;return m|0}else{dY=q;dZ=u;d_=o;d0=s}}while(0);c[p>>2]=dY;c[n>>2]=d_;c[r>>2]=d0;c[v>>2]=(c[t>>2]|0)-dZ+(c[v>>2]|0);c[t>>2]=dZ;m=1;i=f;return m|0}function e7(a,b){a=+a;b=b|0;var c=0,d=0.0,e=0.0,f=0.0;if(a>=18371976.0e12){c=32767;return c|0}if(a<=-18371976.0e12){c=65535;return c|0}if(a>5.4136769e-20){d=(+_(+a)*1.4426950408889634+64.0)*256.0;if((b|0)==0){e=d}else{e=d+ +(at()|0)*4.656612875245797e-10+-.5}c=~~e;return c|0}if(a>=-5.4136769e-20){c=0;return c|0}e=(+_(+(-0.0-a))*1.4426950408889634+64.0)*256.0;if((b|0)==0){f=e}else{f=e+ +(at()|0)*4.656612875245797e-10+-.5}c=~~f|-32768;return c|0}function e8(a,c,d){a=+a;c=+c;d=d|0;var e=0,f=0,h=0.0,i=0.0,j=0.0;if(c<.016939999535679817){e=e9(a,c)|0;return e|0}f=(d|0)==0;h=(c+-.016939999535679817)*285.7142768952314;if(f){i=h}else{i=h+ +(at()|0)*4.656612875245797e-10+-.5}d=~~i;if((d|0)>162){e=e9(a,c)|0;return e|0}i=+g[392+(d<<3)>>2];if(i>a){e=e9(a,c)|0;return e|0}h=(a-i)*285.7142768952314;if(f){j=h}else{j=h+ +(at()|0)*4.656612875245797e-10+-.5}f=~~j;if((f|0)<(b[396+(d<<3)>>1]|0)){e=(b[398+(d<<3)>>1]|0)+f|0;return e|0}else{e=e9(a,c)|0;return e|0}return 0}function e9(d,e){d=+d;e=+e;var f=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0,x=0,y=0.0,z=0.0,A=0,B=0,C=0.0,D=0,E=0,F=0;f=i;i=i+800|0;j=f|0;if(a[8688]|0){k=e+-.473684211;l=d+-.210526316;m=+Y(+k,+l);n=m*15.915494277358546;o=n+50.0;p=~~o;q=147856+(p<<2)|0;r=c[q>>2]|0;i=f;return r|0}else{s=99}while(1){h[j+(s<<3)>>3]=2.0;if((s|0)==0){t=163;u=162;break}else{s=s-1|0}}while(1){v=(+(u|0)+.5)*.0035000001080334187+.016939999535679817;s=(b[396+(u<<3)>>1]|0)-1|0;if((t|0)==163|(t|0)==1){w=6345}else{if((s|0)<1){w=6345}else{x=s}}if((w|0)==6345){w=0;x=1}y=+g[392+(u<<3)>>2];z=v+-.473684211;A=398+(u<<3)|0;B=s;do{v=+Y(+z,+((+(B|0)+.5)*.0035000001080334187+y+-.210526316))*15.915494277358546+50.0;s=~~v;C=+P(+(v-(+(s|0)+.5)));D=j+(s<<3)|0;if(C<+h[D>>3]){c[147856+(s<<2)>>2]=(b[A>>1]|0)+B;h[D>>3]=C}B=B-x|0;}while((B|0)>-1);if((u|0)==0){E=100;F=99;break}else{t=u;u=u-1|0}}while(1){do{if(+h[j+(F<<3)>>3]>1.5){u=1;while(1){if((u|0)>=50){break}if(+h[j+(((u+F|0)%100|0)<<3)>>3]<1.5){break}else{u=u+1|0}}t=E+99|0;x=1;while(1){if((x|0)>=50){break}if(+h[j+(((t-x|0)%100|0)<<3)>>3]<1.5){break}else{x=x+1|0}}if((u|0)<(x|0)){c[147856+(F<<2)>>2]=c[147856+(((u+F|0)%100|0)<<2)>>2];break}else{c[147856+(F<<2)>>2]=c[147856+(((t-x|0)%100|0)<<2)>>2];break}}}while(0);if((F|0)==0){break}else{E=F;F=F-1|0}}a[8688]=1;k=e+-.473684211;l=d+-.210526316;m=+Y(+k,+l);n=m*15.915494277358546;o=n+50.0;p=~~o;q=147856+(p<<2)|0;r=c[q>>2]|0;i=f;return r|0}function fa(a,c){a=a|0;c=c|0;var d=0,e=0.0,f=0,h=0.0,i=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0;d=a>>>14&1023;do{if((d|0)!=0){e=+Z(+((+(d|0)+.5)*.010830424696249145+ -8.317766166719343));if(e<=0.0){break}f=a&16383;if(f>>>0>16288){h=.473684211;i=.210526316}else{j=0;k=163;L8455:while(1){l=j;while(1){if((k-l|0)<=1){m=6372;break L8455}n=l+k>>1;o=b[398+(n<<3)>>1]|0;p=f-(o<<16>>16)|0;if((p|0)>0){l=n}else{break}}if((p|0)<0){j=l;k=n}else{q=n;r=o;break}}if((m|0)==6372){q=l;r=b[398+(l<<3)>>1]|0}h=(+(q|0)+.5)*.0035000001080334187+.016939999535679817;i=+g[392+(q<<3)>>2]+(+(f-(r<<16>>16)|0)+.5)*.0035000001080334187}s=1.0/(i*6.0-h*16.0+12.0);t=i*9.0*s;u=h*4.0*s;g[c>>2]=e*(t/u);g[c+4>>2]=e;g[c+8>>2]=e*((1.0-t-u)/u);return}}while(0);g[c+8>>2]=0.0;g[c+4>>2]=0.0;g[c>>2]=0.0;return}function fb(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0;c=a+4|0;d=+g[c>>2];e=d;do{if(e<15.742){if(e<=24283.0e-8){f=0;h=d;break}i=(+_(+e)*1.4426950408889634+12.0)*64.0;if((b|0)==0){j=i;k=d}else{l=i+ +(at()|0)*4.656612875245797e-10+-.5;j=l;k=+g[c>>2]}f=~~j;h=k}else{f=1023;h=d}}while(0);d=+g[a>>2];k=h;h=d+k*15.0+ +g[a+8>>2]*3.0;if((f|0)!=0&h>0.0){m=k*9.0/h;n=d*4.0/h}else{m=.473684211;n=.210526316}a=e8(n,m,b)|0;if((a|0)>=0){o=a;p=f<<14;q=o|p;return q|0}o=e8(.210526316,.473684211,0)|0;p=f<<14;q=o|p;return q|0}function fc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;c=a>>16;d=c&32767;do{if((d|0)!=0){e=+Z(+((+(d|0)+.5)*.0027076061740622863+ -44.3614195558365));if((c&32768|0)==0){f=e}else{f=-0.0-e}if(f<=0.0){break}e=(+((a>>>8&255)>>>0>>>0)+.5)*.0024390243902439024;h=(+((a&255)>>>0>>>0)+.5)*.0024390243902439024;i=1.0/(e*6.0-h*16.0+12.0);j=e*9.0*i;e=h*4.0*i;g[b>>2]=f*(j/e);g[b+4>>2]=f;g[b+8>>2]=f*((1.0-j-e)/e);return}}while(0);g[b+8>>2]=0.0;g[b+4>>2]=0.0;g[b>>2]=0.0;return}function fd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0,m=0,n=0.0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0;c=a+4|0;d=e7(+g[c>>2],b)|0;e=+g[a>>2];f=+g[c>>2];h=e+f*15.0+ +g[a+8>>2]*3.0;if((d|0)!=0&h>0.0){i=e*4.0/h;e=f*9.0/h;if(i>0.0){j=i;k=e;l=6401}else{m=0;n=e}}else{j=.210526316;k=.473684211;l=6401}if((l|0)==6401){e=j*410.0;if((b|0)==0){o=e}else{o=e+ +(at()|0)*4.656612875245797e-10+-.5}m=~~o;n=k}l=m>>>0>255;if(n<=0.0){p=0;q=p>>>0>255;r=q?255:p;s=d<<16;t=m<<8;u=l?65280:t;v=u|s;w=v|r;return w|0}k=n*410.0;if((b|0)==0){x=k}else{x=k+ +(at()|0)*4.656612875245797e-10+-.5}p=~~x;q=p>>>0>255;r=q?255:p;s=d<<16;t=m<<8;u=l?65280:t;v=u|s;w=v|r;return w|0}function fe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;if((b-34676|0)>>>0>=2){aD(25848,37520,1620,44160);return 0}if((bS(a,147600,2)|0)==0){cg(c[a+628>>2]|0,44160,32552,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e;f=0;i=d;return f|0}g=dT(32)|0;c[a+576>>2]=g;if((g|0)==0){cg(c[a+628>>2]|0,44160,30288,(e=i,i=i+8|0,c[e>>2]=c[a>>2],e)|0);i=e;f=0;i=d;return f|0}else{dW(g,0,32);c[g>>2]=-1;c[g+4>>2]=(b|0)==34677;c[g+20>>2]=28;c[a+504>>2]=26;c[a+508>>2]=42;c[a+540>>2]=20;c[a+548>>2]=4;c[a+516>>2]=8;c[a+544>>2]=84;c[a+552>>2]=26;c[a+556>>2]=8;c[a+564>>2]=16;b=a+672|0;c[g+24>>2]=c[b>>2];c[b>>2]=8;b=a+668|0;c[g+28>>2]=c[b>>2];c[b>>2]=4;f=1;i=d;return f|0}return 0}function ff(a,b,c){a=a|0;b=b|0;c=c|0;return}function fg(a){a=a|0;return 1}function fh(a){a=a|0;var d=0,f=0,g=0,h=0,j=0,k=0;d=i;f=c[a+576>>2]|0;c[a+652>>2]=66;g=e[a+90>>1]|0;do{if((g|0)==32845){if((fr(a)|0)==0){h=0;break}j=a+532|0;if((b[a+88>>1]|0)==-30859){c[j>>2]=66;k=c[f>>2]|0;if((k|0)==0){c[f+20>>2]=26;h=1;break}else if((k|0)==3){c[f+20>>2]=58;h=1;break}else if((k|0)==1){c[f+20>>2]=46;h=1;break}else{h=1;break}}else{c[j>>2]=76;j=c[f>>2]|0;if((j|0)==3){c[f+20>>2]=18;h=1;break}else if((j|0)==1){c[f+20>>2]=48;h=1;break}else if((j|0)==0){c[f+20>>2]=54;h=1;break}else{h=1;break}}}else if((g|0)==32844){if((fy(a)|0)==0){h=0;break}c[a+532>>2]=74;j=c[f>>2]|0;if((j|0)==0){c[f+20>>2]=62;h=1;break}else if((j|0)==3){c[f+20>>2]=52;h=1;break}else{h=1;break}}else{cg(c[a+628>>2]|0,147576,23712,(j=i,i=i+16|0,c[j>>2]=g,c[j+8>>2]=22936,j)|0);i=j;h=0}}while(0);i=d;return h|0}function fi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=dr(a)|0;if(((d|0)%(f|0)|0|0)!=0){aD(24864,37520,382,44672);return 0}g=a+532|0;if((d|0)==0){h=1;return h|0}else{i=d;j=b}while(1){if((ba[c[g>>2]&127](a,j,f,e)|0)==0){h=0;k=6449;break}if((i|0)==(f|0)){h=1;k=6448;break}else{i=i-f|0;j=j+f|0}}if((k|0)==6449){return h|0}else if((k|0)==6448){return h|0}return 0}function fj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=dG(a)|0;if(((d|0)%(f|0)|0|0)!=0){aD(24864,37520,398,44648);return 0}g=a+532|0;if((d|0)==0){h=1;return h|0}else{i=d;j=b}while(1){if((ba[c[g>>2]&127](a,j,f,e)|0)==0){h=0;k=6457;break}if((i|0)==(f|0)){h=1;k=6458;break}else{i=i-f|0;j=j+f|0}}if((k|0)==6457){return h|0}else if((k|0)==6458){return h|0}return 0}function fk(a){a=a|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;f=c[a+576>>2]|0;g=a+90|0;h=e[g>>1]|0;do{if((h|0)==32845){if((fr(a)|0)==0){j=1;break}k=a+536|0;if((b[a+88>>1]|0)==-30859){c[k>>2]=82;l=c[f>>2]|0;if((l|0)==2){j=1;break}else if((l|0)==1){c[f+20>>2]=22;j=1;break}else if((l|0)==0){c[f+20>>2]=24;j=1;break}else{m=6472;break}}else{c[k>>2]=10;k=c[f>>2]|0;if((k|0)==1){c[f+20>>2]=64;j=1;break}else if((k|0)==0){c[f+20>>2]=40;j=1;break}else if((k|0)==2){j=1;break}else{m=6472;break}}}else if((h|0)==32844){if((fy(a)|0)==0){j=1;break}c[a+536>>2]=22;k=c[f>>2]|0;if((k|0)==1){j=1;break}else if((k|0)!=0){m=6472;break}c[f+20>>2]=56;j=1}else{cg(c[a+628>>2]|0,147552,23712,(n=i,i=i+16|0,c[n>>2]=h,c[n+8>>2]=22936,n)|0);i=n;j=1}}while(0);if((m|0)==6472){cg(c[a+628>>2]|0,147552,41760,(n=i,i=i+8|0,c[n>>2]=(b[g>>1]|0)==-32692?41152:40616,n)|0);i=n;j=0}i=d;return j|0}function fl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=dr(a)|0;if(((d|0)%(f|0)|0|0)!=0){aD(24864,37520,647,44592);return 0}g=a+536|0;if((d|0)==0){h=1;return h|0}else{i=d;j=b}while(1){if((ba[c[g>>2]&127](a,j,f,e)|0)!=1){h=0;k=6480;break}if((i|0)==(f|0)){h=1;k=6481;break}else{i=i-f|0;j=j+f|0}}if((k|0)==6480){return h|0}else if((k|0)==6481){return h|0}return 0}function fm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=dG(a)|0;if(((d|0)%(f|0)|0|0)!=0){aD(24864,37520,662,44568);return 0}g=a+536|0;if((d|0)==0){h=1;return h|0}else{i=d;j=b}while(1){if((ba[c[g>>2]&127](a,j,f,e)|0)!=1){h=0;k=6491;break}if((i|0)==(f|0)){h=1;k=6489;break}else{i=i-f|0;j=j+f|0}}if((k|0)==6491){return h|0}else if((k|0)==6489){return h|0}return 0}function fn(a){a=a|0;b[a+98>>1]=(b[a+90>>1]|0)==-32692?1:3;b[a+84>>1]=16;b[a+86>>1]=2;return}function fo(a){a=a|0;var b=0,d=0,e=0;b=a+576|0;d=c[b>>2]|0;if((d|0)==0){aD(26240,37520,1523,44728)}c[a+672>>2]=c[d+24>>2];c[a+668>>2]=c[d+28>>2];e=c[d+12>>2]|0;if((e|0)==0){dU(d);c[b>>2]=0;em(a);return}dU(e);dU(d);c[b>>2]=0;em(a);return}function fp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a+576>>2]|0;if((b|0)==65560){f=c[e>>2]|0;c[(v=c[d+4>>2]|0,c[d+4>>2]=v+8,c[(c[d>>2]|0)+v>>2]|0)>>2]=f;g=1;return g|0}else{g=be[c[e+24>>2]&63](a,b,d)|0;return g|0}return 0}function fq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;f=c[a+576>>2]|0;if((b|0)==65560){g=(v=c[d+4>>2]|0,c[d+4>>2]=v+8,c[(c[d>>2]|0)+v>>2]|0);c[f>>2]=g;if((g|0)==0){h=3;j=32}else if((g|0)==2){bF(a,277,(k=i,i=i+8|0,c[k>>2]=1,k)|0)|0;i=k;h=1;j=32}else if((g|0)==3){h=1;j=8}else if((g|0)==1){h=2;j=16}else{cg(c[a+628>>2]|0,c[a>>2]|0,28536,(k=i,i=i+8|0,c[k>>2]=g,k)|0);i=k;l=0;i=e;return l|0}bF(a,258,(k=i,i=i+8|0,c[k>>2]=j,k)|0)|0;i=k;bF(a,339,(k=i,i=i+8|0,c[k>>2]=h,k)|0)|0;i=k;if((c[a+12>>2]&1024|0)==0){m=-1}else{m=dJ(a)|0}c[a+496>>2]=m;c[a+580>>2]=dr(a)|0;l=1;i=e;return l|0}else if((b|0)==65561){m=(v=c[d+4>>2]|0,c[d+4>>2]=v+8,c[(c[d>>2]|0)+v>>2]|0);c[f+4>>2]=m;if(m>>>0<2){l=1;i=e;return l|0}cg(c[a+628>>2]|0,147536,27288,(k=i,i=i+8|0,c[k>>2]=m,k)|0);i=k;l=0;i=e;return l|0}else{l=be[c[f+28>>2]&63](a,b,d)|0;i=e;return l|0}return 0}function fr(a){a=a|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;f=c[a+576>>2]|0;if((f|0)==0){aD(39344,37520,1321,44552);return 0}if((b[a+90>>1]|0)!=-32691){aD(35464,37520,1322,44552);return 0}if((b[a+126>>1]|0)!=1){cg(c[a+628>>2]|0,44552,34984,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;h=0;i=d;return h|0}j=f;k=c[j>>2]|0;if((k|0)==-1){switch(e[a+84>>1]<<3|e[a+86>>1]|0){case 132:case 130:case 129:{l=1;break};case 259:{l=0;break};case 68:case 65:{l=3;break};case 260:case 257:case 258:{l=2;break};default:{l=-1}}m=e[a+98>>1]|0;if((m|0)==1){n=(l|0)==2?2:-1}else if((m|0)==3){n=(l|0)==2?-1:l}else{n=-1}c[j>>2]=n;o=n}else{o=k}if((o|0)==0){c[f+8>>2]=12}else if((o|0)==1){c[f+8>>2]=6}else if((o|0)==2){c[f+8>>2]=4}else if((o|0)==3){c[f+8>>2]=3}else{cg(c[a+628>>2]|0,44552,34448,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;h=0;i=d;return h|0}if((c[a+12>>2]&1024|0)==0){o=aa(c[a+100>>2]|0,c[a+56>>2]|0)|0;c[f+16>>2]=o;p=o}else{o=aa(c[a+72>>2]|0,c[a+68>>2]|0)|0;c[f+16>>2]=o;p=o}do{if((p&1073741823|0)!=0){o=dT(p<<2)|0;c[f+12>>2]=o;if((o|0)==0){break}else{h=1}i=d;return h|0}}while(0);cg(c[a+628>>2]|0,44552,36096,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;h=0;i=d;return h|0}function fs(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=c[b+576>>2]|0;h=g;if(f<<16>>16!=0){aD(39968,37520,510,44632);return 0}if((g|0)==0){aD(39344,37520,511,44632);return 0}f=(e|0)/(c[g+8>>2]|0)|0;do{if((c[g>>2]|0)==2){i=d}else{if((c[g+16>>2]|0)<(f|0)){aD(38488,37520,518,44632);return 0}else{e=c[g+12>>2]|0;bg[c[g+20>>2]&127](h,d,f);i=e;break}}}while(0);d=b+604|0;h=c[d>>2]|0;g=b+592|0;e=c[g>>2]|0;j=b+608|0;k=e-(c[j>>2]|0)|0;do{if((f|0)==0){l=k;m=h;n=e}else{o=k;p=h;q=i;r=f;while(1){s=r-1|0;if((o|0)<3){c[d>>2]=p;c[j>>2]=(c[g>>2]|0)-o;if((d1(b)|0)==0){t=-1;u=6574;break}v=c[d>>2]|0;w=(c[g>>2]|0)-(c[j>>2]|0)|0}else{v=p;w=o}a[v]=(c[q>>2]|0)>>>16&255;a[v+1|0]=(c[q>>2]|0)>>>8&255;x=v+3|0;a[v+2|0]=c[q>>2]&255;y=w-3|0;if((s|0)==0){u=6571;break}else{o=y;p=x;q=q+4|0;r=s}}if((u|0)==6574){return t|0}else if((u|0)==6571){l=y;m=x;n=c[g>>2]|0;break}}}while(0);c[d>>2]=m;c[j>>2]=n-l;t=1;return t|0}function ft(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((d|0)<=0){return}e=a+4|0;f=d;d=c[a+12>>2]|0;a=b;while(1){b=f-1|0;c[d>>2]=fb(a,c[e>>2]|0)|0;if((b|0)>0){f=b;d=d+4|0;a=a+12|0}else{break}}return}function fu(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;if((e|0)<=0){return}f=a+4|0;g=c[a+12>>2]|0;a=d;d=e;while(1){e=d-1|0;h=b[a>>1]|0;i=h<<16>>16;do{if(h<<16>>16<1){j=0}else{if(h<<16>>16>7409){j=1023;break}if((c[f>>2]|0)==0){j=i-3314>>2;break}else{j=~~((+(h<<16>>16|0)+-3314.0)*.25+ +(at()|0)*4.656612875245797e-10+-.5);break}}}while(0);h=e8((+(b[a+2>>1]|0)+.5)*30517578125.0e-15,(+(b[a+4>>1]|0)+.5)*30517578125.0e-15,c[f>>2]|0)|0;if((h|0)<0){k=e8(.210526316,.473684211,0)|0}else{k=h}c[g>>2]=k|j<<14;if((e|0)>0){g=g+4|0;a=a+6|0;d=e}else{break}}return}function fv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;g=c[b+576>>2]|0;h=g;if(f<<16>>16!=0){aD(39968,37520,562,44616);return 0}if((g|0)==0){aD(39344,37520,563,44616);return 0}f=(e|0)/(c[g+8>>2]|0)|0;do{if((c[g>>2]|0)==2){i=d}else{if((c[g+16>>2]|0)<(f|0)){aD(38488,37520,571,44616);return 0}else{e=c[g+12>>2]|0;bg[c[g+20>>2]&127](h,d,f);i=e;break}}}while(0);d=i;i=b+604|0;h=b+592|0;g=b+608|0;e=(f|0)>0;j=c[i>>2]|0;k=(c[h>>2]|0)-(c[g>>2]|0)|0;l=0;m=24;L8754:while(1){if(e){n=255<<m;o=0;p=j;q=k;r=l;s=0;while(1){if((q|0)<4){c[i>>2]=p;c[g>>2]=(c[h>>2]|0)-q;if((d1(b)|0)==0){t=-1;u=6637;break L8754}v=(c[h>>2]|0)-(c[g>>2]|0)|0;w=c[i>>2]|0}else{v=q;w=p}x=o;y=r;L8764:while(1){if((x|0)>=(f|0)){z=y;break}A=c[d+(x<<2)>>2]|0;B=1;while(1){if((B|0)>=129){z=B;break L8764}C=B+x|0;if((C|0)>=(f|0)){break}if(((c[d+(C<<2)>>2]^A)&n|0)==0){B=B+1|0}else{break}}if((B|0)>3){z=B;break}else{x=C;y=B}}L8773:do{if((s-2+x|0)>>>0<2){y=c[d+(o<<2)>>2]&n;A=o+1|0;while(1){D=A+1|0;if((c[d+(A<<2)>>2]&n|0)!=(y|0)){u=6622;break L8773}if((D|0)==(x|0)){break}else{A=D}}a[w]=s+127+A&255;a[w+1|0]=y>>>(m>>>0)&255;E=x;F=w+2|0;G=v-2|0}else{u=6622}}while(0);do{if((u|0)==6622){u=0;if((o|0)>=(x|0)){E=o;F=w;G=v;break}B=~x;D=o;H=w;I=v;while(1){J=x-D|0;K=(J|0)>127?127:J;if((I|0)<(K+3|0)){c[i>>2]=H;c[g>>2]=(c[h>>2]|0)-I;if((d1(b)|0)==0){t=-1;u=6639;break L8754}L=(c[h>>2]|0)-(c[g>>2]|0)|0;M=c[i>>2]|0}else{L=I;M=H}a[M]=K&255;J=M+1|0;if((K|0)==0){N=D;O=-1;P=J}else{Q=D+B|0;R=(Q|0)>-128?Q:-128;Q=M+(-R|0)|0;S=D-1|0;T=D;U=K;K=J;while(1){J=U-1|0;a[K]=(c[d+(T<<2)>>2]|0)>>>(m>>>0)&255;if((J|0)==0){break}else{T=T+1|0;U=J;K=K+1|0}}N=S-R|0;O=R;P=Q}K=L+O|0;if((N|0)<(x|0)){D=N;H=P;I=K}else{E=N;F=P;G=K;break}}}}while(0);if((z|0)>3){a[F]=z+126&255;a[F+1|0]=(c[d+(x<<2)>>2]|0)>>>(m>>>0)&255;V=z;W=G-2|0;X=F+2|0}else{V=0;W=G;X=F}I=V+E|0;if((I|0)<(f|0)){o=I;p=X;q=W;r=V;s=-I|0}else{Y=X;Z=W;_=V;break}}}else{Y=j;Z=k;_=l}s=m-8|0;if((s|0)>-1){j=Y;k=Z;l=_;m=s}else{u=6635;break}}if((u|0)==6639){return t|0}else if((u|0)==6637){return t|0}else if((u|0)==6635){c[i>>2]=Y;c[g>>2]=(c[h>>2]|0)-Z;t=1;return t|0}return 0}function fw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((d|0)<=0){return}e=a+4|0;f=d;d=c[a+12>>2]|0;a=b;while(1){b=f-1|0;c[d>>2]=fd(a,c[e>>2]|0)|0;if((b|0)>0){f=b;d=d+4|0;a=a+12|0}else{break}}return}function fx(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0,u=0.0,v=0.0;g=c[a+12>>2]|0;h=d;d=a+4|0;a=c[d>>2]|0;i=(f|0)>0;if((a|0)==0){if(i){j=f;k=g;l=h}else{return}while(1){m=j-1|0;c[k>>2]=((b[l+2>>1]|0)*410|0)>>>7&65280|e[l>>1]<<16|((b[l+4>>1]|0)*410|0)>>>15&255;if((m|0)>0){j=m;k=k+4|0;l=l+6|0}else{break}}return}if(i){n=g;o=h;p=f;q=a}else{return}while(1){a=p-1|0;f=e[o>>1]<<16;r=+(b[o+2>>1]|0)*.01251220703125;if((q|0)==0){s=r;t=1}else{u=r+ +(at()|0)*4.656612875245797e-10+-.5;s=u;t=(c[d>>2]|0)==0}u=+(b[o+4>>1]|0)*.01251220703125;if(t){v=u}else{v=u+ +(at()|0)*4.656612875245797e-10+-.5}c[n>>2]=~~s<<8&65280|f|~~v&255;if((a|0)<=0){break}n=n+4|0;o=o+6|0;p=a;q=c[d>>2]|0}return}function fy(a){a=a|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;f=c[a+576>>2]|0;if((f|0)==0){aD(39344,37520,1229,44744);return 0}if((b[a+90>>1]|0)!=-32692){aD(37720,37520,1230,44744);return 0}g=f;h=c[g>>2]|0;if((h|0)==-1){switch(e[a+86>>1]|e[a+84>>1]<<6|e[a+98>>1]<<3|0){case 1036:case 1034:case 1033:{j=1;break};case 524:case 521:{j=3;break};case 2059:{j=0;break};default:{j=-1}}c[g>>2]=j;k=j}else{k=h}if((k|0)==0){c[f+8>>2]=4}else if((k|0)==1){c[f+8>>2]=2}else if((k|0)==3){c[f+8>>2]=1}else{cg(c[a+628>>2]|0,44744,36848,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0);i=l;m=0;i=d;return m|0}if((c[a+12>>2]&1024|0)==0){k=aa(c[a+100>>2]|0,c[a+56>>2]|0)|0;c[f+16>>2]=k;n=k}else{k=aa(c[a+72>>2]|0,c[a+68>>2]|0)|0;c[f+16>>2]=k;n=k}do{if((n&2147483647|0)!=0){k=dT(n<<1)|0;c[f+12>>2]=k;if((k|0)==0){break}else{m=1}i=d;return m|0}}while(0);cg(c[a+628>>2]|0,44744,36096,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0);i=l;m=0;i=d;return m|0}function fz(d,f,g,h){d=d|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;i=c[d+576>>2]|0;j=i;if(h<<16>>16!=0){aD(39968,37520,422,44760);return 0}if((i|0)==0){aD(39344,37520,423,44760);return 0}h=(g|0)/(c[i+8>>2]|0)|0;do{if((c[i>>2]|0)==1){k=f}else{if((c[i+16>>2]|0)<(h|0)){aD(38488,37520,430,44760);return 0}else{g=c[i+12>>2]|0;bg[c[i+20>>2]&127](j,f,h);k=g;break}}}while(0);f=k;k=d+604|0;j=d+592|0;i=d+608|0;g=(h|0)>0;l=c[k>>2]|0;m=(c[j>>2]|0)-(c[i>>2]|0)|0;n=0;o=8;L44:while(1){if(g){p=255<<o;q=0;r=l;s=m;t=n;u=0;while(1){if((s|0)<4){c[k>>2]=r;c[i>>2]=(c[j>>2]|0)-s;if((d1(d)|0)==0){v=-1;w=68;break L44}x=(c[j>>2]|0)-(c[i>>2]|0)|0;y=c[k>>2]|0}else{x=s;y=r}z=q;A=t;L54:while(1){if((z|0)>=(h|0)){B=A;break}C=(e[f+(z<<1)>>1]&p)<<16>>16;D=1;while(1){if((D|0)>=129){B=D;break L54}E=D+z|0;if((E|0)>=(h|0)){break}if((b[f+(E<<1)>>1]&p|0)==(C|0)){D=D+1|0}else{break}}if((D|0)>3){B=D;break}else{z=E;A=D}}L63:do{if((u-2+z|0)>>>0<2){A=(e[f+(q<<1)>>1]&p)<<16>>16;C=q+1|0;while(1){F=C+1|0;if((b[f+(C<<1)>>1]&p|0)!=(A|0)){w=53;break L63}if((F|0)==(z|0)){break}else{C=F}}a[y]=u+127+C&255;a[y+1|0]=A>>o&255;G=z;H=y+2|0;I=x-2|0}else{w=53}}while(0);do{if((w|0)==53){w=0;if((q|0)>=(z|0)){G=q;H=y;I=x;break}D=~z;F=q;J=y;K=x;while(1){L=z-F|0;M=(L|0)>127?127:L;if((K|0)<(M+3|0)){c[k>>2]=J;c[i>>2]=(c[j>>2]|0)-K;if((d1(d)|0)==0){v=-1;w=69;break L44}N=(c[j>>2]|0)-(c[i>>2]|0)|0;O=c[k>>2]|0}else{N=K;O=J}a[O]=M&255;L=O+1|0;if((M|0)==0){P=F;Q=-1;R=L}else{S=F+D|0;T=(S|0)>-128?S:-128;S=O+(-T|0)|0;U=F-1|0;V=F;W=M;M=L;while(1){L=W-1|0;a[M]=b[f+(V<<1)>>1]>>o&255;if((L|0)==0){break}else{V=V+1|0;W=L;M=M+1|0}}P=U-T|0;Q=T;R=S}M=N+Q|0;if((P|0)<(z|0)){F=P;J=R;K=M}else{G=P;H=R;I=M;break}}}}while(0);if((B|0)>3){a[H]=B+126&255;a[H+1|0]=b[f+(z<<1)>>1]>>o&255;X=B;Y=I-2|0;Z=H+2|0}else{X=0;Y=I;Z=H}K=X+G|0;if((K|0)<(h|0)){q=K;r=Z;s=Y;t=X;u=-K|0}else{_=Z;$=Y;aa=X;break}}}else{_=l;$=m;aa=n}u=o-8|0;if((u|0)>-1){l=_;m=$;n=aa;o=u}else{w=66;break}}if((w|0)==66){c[k>>2]=_;c[i>>2]=(c[j>>2]|0)-$;v=1;return v|0}else if((w|0)==68){return v|0}else if((w|0)==69){return v|0}return 0}function fA(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,h=0;if((e|0)<=0){return}f=a+4|0;h=e;e=c[a+12>>2]|0;a=d;while(1){d=h-1|0;b[e>>1]=(e7(+g[a>>2],c[f>>2]|0)|0)&65535;if((d|0)>0){h=d;e=e+2|0;a=a+4|0}else{break}}return}function fB(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;g=i;h=c[a+576>>2]|0;j=h;if(f<<16>>16!=0){aD(39968,37520,263,44712);return 0}if((h|0)==0){aD(39344,37520,264,44712);return 0}f=(e|0)/(c[h+8>>2]|0)|0;do{if((c[h>>2]|0)==2){k=b}else{if((c[h+16>>2]|0)<(f|0)){aD(38488,37520,271,44712);return 0}else{k=c[h+12>>2]|0;break}}}while(0);e=k;k=a+604|0;l=c[k>>2]|0;m=a+608|0;n=c[m>>2]|0;if((f|0)>0&(n|0)>0){o=-f|0;p=~(((n-1|0)>>>0)/3|0);q=o>>>0>p>>>0?o:p;p=q*3|0;o=q*-3|0;r=n;s=0;t=l;while(1){c[e+(s<<2)>>2]=(d[t+1|0]|0)<<8|(d[t]|0)<<16|(d[t+2|0]|0);u=r-3|0;v=s+1|0;if((v|0)<(f|0)&(u|0)>0){r=u;s=v;t=t+3|0}else{break}}w=n+p|0;x=-q|0;y=l+o|0}else{w=n;x=0;y=l}c[k>>2]=y;c[m>>2]=w;if((x|0)==(f|0)){bg[c[h+20>>2]&127](j,b,f);z=1;i=g;return z|0}else{b=f-x|0;cg(c[a+628>>2]|0,44712,34e3,(x=i,i=i+24|0,c[x>>2]=c[a+444>>2],c[x+8>>2]=b,c[x+16>>2]=(b|0)<0|0?-1:0,x)|0);i=x;z=0;i=g;return z|0}return 0}function fC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((d|0)<=0){return}e=d;d=c[a+12>>2]|0;a=b;while(1){b=e-1|0;fa(c[d>>2]|0,a);if((b|0)>0){e=b;d=d+4|0;a=a+12|0}else{break}}return}function fD(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;if((e|0)<=0){return}f=c[a+12>>2]|0;a=d;d=e;while(1){e=d-1|0;h=a+2|0;b[a>>1]=((c[f>>2]|0)>>>12&4093)+13314&65535;i=c[f>>2]&16383;if(i>>>0>16288){j=15521;k=6898}else{l=0;m=163;L139:while(1){n=l;while(1){if((m-n|0)<=1){o=108;break L139}p=n+m>>1;q=b[398+(p<<3)>>1]|0;r=i-(q<<16>>16)|0;if((r|0)>0){n=p}else{break}}if((r|0)<0){l=n;m=p}else{s=p;t=q;break}}if((o|0)==108){o=0;s=n;t=b[398+(n<<3)>>1]|0}j=~~(((+(s|0)+.5)*.0035000001080334187+.016939999535679817)*32768.0);k=~~((+g[392+(s<<3)>>2]+(+(i-(t<<16>>16)|0)+.5)*.0035000001080334187)*32768.0)}b[h>>1]=k;b[a+4>>1]=j;if((e|0)>0){f=f+4|0;a=a+6|0;d=e}else{break}}return}function fE(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0,v=0;f=i;i=i+16|0;h=f|0;if((e|0)<=0){i=f;return}j=h|0;k=h+4|0;l=h+8|0;h=e;e=c[b+12>>2]|0;b=d;while(1){d=h-1|0;m=e+4|0;fa(c[e>>2]|0,j);n=+g[j>>2];o=+g[k>>2];p=+g[l>>2];q=n*2.69+o*-1.276+p*-.414;r=n*-1.022+o*1.978+p*.044;s=n*.061+o*-.224+p*1.163;do{if(q>0.0){if(q>=1.0){t=-1;break}t=~~(+Q(+q)*256.0)&255}else{t=0}}while(0);a[b]=t;do{if(r>0.0){if(r>=1.0){u=-1;break}u=~~(+Q(+r)*256.0)&255}else{u=0}}while(0);a[b+1|0]=u;do{if(s>0.0){if(s>=1.0){v=-1;break}v=~~(+Q(+s)*256.0)&255}else{v=0}}while(0);a[b+2|0]=v;if((d|0)>0){h=d;e=m;b=b+3|0}else{break}}i=f;return}function fF(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;h=i;if(g<<16>>16!=0){aD(39968,37520,319,44696);return 0}g=c[b+576>>2]|0;j=g;if((g|0)==0){aD(39344,37520,321,44696);return 0}k=(f|0)/(c[g+8>>2]|0)|0;do{if((c[g>>2]|0)==2){l=e}else{if((c[g+16>>2]|0)<(k|0)){aD(38488,37520,328,44696);return 0}else{l=c[g+12>>2]|0;break}}}while(0);f=l;dW(l,0,k<<2);l=b+604|0;m=c[l>>2]|0;n=b+608|0;o=c[n>>2]|0;L182:do{if((k|0)>0){p=o;q=m;r=32;while(1){s=r-8|0;if((s|0)<=-1){t=q;u=p;v=153;break L182}L186:do{if((p|0)>0){w=0;x=q;y=p;while(1){z=a[x]|0;A=z&255;B=x+1|0;L189:do{if(z<<24>>24<0){C=A-126|0;D=x+2|0;E=(d[B]|0)<<s;F=y-2|0;if(!((C|0)!=0&(w|0)<(k|0))){G=F;H=D;I=w;break}J=w-k|0;K=126-A|0;L=J>>>0>K>>>0?J:K;K=w;J=C;while(1){C=J-1|0;M=K+1|0;N=f+(K<<2)|0;c[N>>2]=c[N>>2]|E;if((C|0)!=0&(M|0)<(k|0)){K=M;J=C}else{break}}G=F;H=D;I=w-L|0}else{J=y-1|0;if((J|0)==0){O=w;P=B;Q=0;break L186}else{R=w;S=B;T=A;U=J}while(1){if(!((T|0)!=0&(R|0)<(k|0))){G=U;H=S;I=R;break L189}J=S+1|0;K=R+1|0;E=f+(R<<2)|0;c[E>>2]=(d[S]|0)<<s|c[E>>2];E=U-1|0;if((E|0)==0){O=K;P=J;Q=0;break L186}else{R=K;S=J;T=T-1|0;U=E}}}}while(0);if((I|0)<(k|0)&(G|0)>0){w=I;x=H;y=G}else{O=I;P=H;Q=G;break}}}else{O=0;P=q;Q=p}}while(0);if((O|0)==(k|0)){p=Q;q=P;r=s}else{V=Q;W=P;X=O;v=152;break}}}else{r=32;while(1){q=r-8|0;if((q|0)<=-1){t=m;u=o;v=153;break L182}if((k|0)==0){r=q}else{V=o;W=m;X=0;v=152;break}}}}while(0);if((v|0)==152){m=k-X|0;cg(c[b+628>>2]|0,44696,34e3,(X=i,i=i+24|0,c[X>>2]=c[b+444>>2],c[X+8>>2]=m,c[X+16>>2]=(m|0)<0|0?-1:0,X)|0);i=X;Y=0;Z=V;_=W;c[l>>2]=_;c[n>>2]=Z;i=h;return Y|0}else if((v|0)==153){bg[c[g+20>>2]&127](j,e,k);Y=1;Z=u;_=t;c[l>>2]=_;c[n>>2]=Z;i=h;return Y|0}return 0}function fG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((d|0)<=0){return}e=d;d=c[a+12>>2]|0;a=b;while(1){b=e-1|0;fc(c[d>>2]|0,a);if((b|0)>0){e=b;d=d+4|0;a=a+12|0}else{break}}return}function fH(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0;if((e|0)<=0){return}f=d;d=c[a+12>>2]|0;a=e;while(1){e=a-1|0;b[f>>1]=(c[d>>2]|0)>>>16&65535;g=c[d>>2]|0;b[f+2>>1]=~~((+((g>>>8&255)>>>0>>>0)+.5)*.0024390243902439024*32768.0);b[f+4>>1]=~~((+((g&255)>>>0>>>0)+.5)*.0024390243902439024*32768.0);if((e|0)>0){f=f+6|0;d=d+4|0;a=e}else{break}}return}function fI(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0,v=0;f=i;i=i+16|0;h=f|0;if((e|0)<=0){i=f;return}j=h|0;k=h+4|0;l=h+8|0;h=e;e=c[b+12>>2]|0;b=d;while(1){d=h-1|0;m=e+4|0;fc(c[e>>2]|0,j);n=+g[j>>2];o=+g[k>>2];p=+g[l>>2];q=n*2.69+o*-1.276+p*-.414;r=n*-1.022+o*1.978+p*.044;s=n*.061+o*-.224+p*1.163;do{if(q>0.0){if(q>=1.0){t=-1;break}t=~~(+Q(+q)*256.0)&255}else{t=0}}while(0);a[b]=t;do{if(r>0.0){if(r>=1.0){u=-1;break}u=~~(+Q(+r)*256.0)&255}else{u=0}}while(0);a[b+1|0]=u;do{if(s>0.0){if(s>=1.0){v=-1;break}v=~~(+Q(+s)*256.0)&255}else{v=0}}while(0);a[b+2|0]=v;if((d|0)>0){h=d;e=m;b=b+3|0}else{break}}i=f;return}function fJ(f,g,h,j){f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;k=i;l=c[f+576>>2]|0;m=l;if(j<<16>>16!=0){aD(39968,37520,197,44776);return 0}if((l|0)==0){aD(39344,37520,198,44776);return 0}j=(h|0)/(c[l+8>>2]|0)|0;do{if((c[l>>2]|0)==1){n=g}else{if((c[l+16>>2]|0)<(j|0)){aD(38488,37520,205,44776);return 0}else{n=c[l+12>>2]|0;break}}}while(0);h=n;dW(n,0,j<<1);n=f+604|0;o=f+608|0;p=(j|0)>0;q=c[o>>2]|0;r=c[n>>2]|0;s=16;while(1){t=s-8|0;if((t|0)<=-1){u=206;break}L258:do{if(p&(q|0)>0){v=0;w=r;x=q;while(1){y=a[w]|0;z=y&255;A=w+1|0;L261:do{if(y<<24>>24<0){B=z-126|0;C=w+2|0;D=(d[A]|0)<<t;E=x-2|0;if(!((B|0)!=0&(v|0)<(j|0))){F=E;G=C;H=v;break}I=v-j|0;J=126-z|0;K=I>>>0>J>>>0?I:J;J=v;I=B;while(1){B=I-1|0;L=J+1|0;M=h+(J<<1)|0;b[M>>1]=(e[M>>1]|0|D)&65535;if((B|0)!=0&(L|0)<(j|0)){J=L;I=B}else{break}}F=E;G=C;H=v-K|0}else{I=x-1|0;if((I|0)==0){N=v;O=A;P=0;break L258}else{Q=v;R=A;S=z;T=I}while(1){if(!((S|0)!=0&(Q|0)<(j|0))){F=T;G=R;H=Q;break L261}I=R+1|0;J=Q+1|0;D=h+(Q<<1)|0;b[D>>1]=(e[D>>1]|0|(d[R]|0)<<t)&65535;D=T-1|0;if((D|0)==0){N=J;O=I;P=0;break L258}else{Q=J;R=I;S=S-1|0;T=D}}}}while(0);if((H|0)<(j|0)&(F|0)>0){v=H;w=G;x=F}else{N=H;O=G;P=F;break}}}else{N=0;O=r;P=q}}while(0);if((N|0)==(j|0)){q=P;r=O;s=t}else{u=205;break}}if((u|0)==205){s=j-N|0;cg(c[f+628>>2]|0,44776,34e3,(N=i,i=i+24|0,c[N>>2]=c[f+444>>2],c[N+8>>2]=s,c[N+16>>2]=(s|0)<0|0?-1:0,N)|0);i=N;U=0;V=P;W=O;c[n>>2]=W;c[o>>2]=V;i=k;return U|0}else if((u|0)==206){bg[c[l+20>>2]&127](m,g,j);U=1;V=q;W=r;c[n>>2]=W;c[o>>2]=V;i=k;return U|0}return 0}function fK(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0.0,l=0.0;if((e|0)<=0){return}f=e;e=c[a+12>>2]|0;a=d;while(1){d=f-1|0;h=e+2|0;i=b[e>>1]|0;j=i&32767;do{if((j|0)==0){k=0.0}else{l=+Z(+((+(j|0)+.5)*.0027076061740622863+ -44.3614195558365));if((i&32768|0)==0){k=l;break}k=-0.0-l}}while(0);g[a>>2]=k;if((d|0)>0){f=d;e=h;a=a+4|0}else{break}}return}function fL(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0.0,m=0.0;if((f|0)<=0){return}g=c[d+12>>2]|0;d=e;e=f;while(1){f=e-1|0;h=g+2|0;i=b[g>>1]|0;j=i&32767;do{if((j|0)==0){k=0}else{l=+Z(+((+(j|0)+.5)*.0027076061740622863+ -44.3614195558365));if((i&32768|0)==0){m=l}else{m=-0.0-l}if(m<=0.0){k=0;break}if(m>=1.0){k=-1;break}k=~~(+Q(+m)*256.0)&255}}while(0);a[d]=k;if((f|0)>0){g=h;d=d+1|0;e=f}else{break}}return}function fM(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;if((b|0)!=5){aD(25648,37424,1099,44200);return 0}b=dT(160)|0;e=a+576|0;c[e>>2]=b;if((b|0)==0){cg(c[a+628>>2]|0,44200,32456,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f;g=0;i=d;return g|0}else{c[b+124>>2]=0;c[(c[e>>2]|0)+104>>2]=0;c[(c[e>>2]|0)+152>>2]=0;c[(c[e>>2]|0)+80>>2]=c[a+8>>2];c[a+504>>2]=50;c[a+508>>2]=6;c[a+512>>2]=30;c[a+532>>2]=24;c[a+540>>2]=24;c[a+548>>2]=24;c[a+516>>2]=4;c[a+524>>2]=20;c[a+528>>2]=14;c[a+536>>2]=52;c[a+544>>2]=52;c[a+552>>2]=52;c[a+564>>2]=14;gg(a)|0;g=1;i=d;return g|0}return 0}function fN(a){a=a|0;return 1}function fO(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;f=d+576|0;g=c[f>>2]|0;do{if((g|0)==0){h=dT(160)|0;c[f>>2]=h;if((h|0)==0){cg(c[d+628>>2]|0,44808,32456,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j;k=0;i=e;return k|0}else{c[h+124>>2]=0;c[(c[f>>2]|0)+104>>2]=0;gg(d)|0;h=c[f>>2]|0;if((h|0)!=0){l=h;break}aD(26200,37424,229,44808);return 0}}else{l=g}}while(0);g=l+124|0;if((c[g>>2]|0)!=0){k=1;i=e;return k|0}l=dT(40952)|0;f=l;c[g>>2]=f;if((l|0)==0){cg(c[d+628>>2]|0,44808,36064,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j;k=0;i=e;return k|0}else{m=255;n=f}while(1){f=m&255;a[n+(m<<3)+6|0]=f;a[(c[g>>2]|0)+(m<<3)+7|0]=f;b[(c[g>>2]|0)+(m<<3)+4>>1]=1;c[(c[g>>2]|0)+(m<<3)>>2]=0;if((m|0)==0){break}m=m-1|0;n=c[g>>2]|0}dW((c[g>>2]|0)+2048|0,0,16);k=1;i=e;return k|0}function fP(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;e=i;f=c[d+576>>2]|0;if((f|0)==0){aD(26200,37424,267,44840);return 0}g=f+124|0;if((c[g>>2]|0)==0){h=c[d+508>>2]|0;bf[h&63](d)|0}h=c[d+588>>2]|0;do{if((a[h]|0)==0){if((a[h+1|0]&1)==0){j=265;break}k=f+104|0;if((c[k>>2]|0)==0){d$(c[d+628>>2]|0,44840,37680,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0);i=l;c[d+532>>2]=6;c[d+540>>2]=6;c[d+548>>2]=6;l=c[d+508>>2]|0;bf[l&63](d)|0;c[k>>2]=6}b[f+66>>1]=511}else{j=265}}while(0);if((j|0)==265){b[f+66>>1]=510;c[f+104>>2]=24}b[f+64>>1]=9;c[f+76>>2]=0;c[f+72>>2]=0;c[f+88>>2]=0;j=f+84|0;c[j>>2]=511;h=c[d+608>>2]|0;d=h;k=f+96|0;c[k>>2]=d<<3|0>>>29;c[k+4>>2]=((h|0)<0|0?-1:0)<<3|d>>>29;d=(c[g>>2]|0)+2064|0;c[f+116>>2]=d;dW(d,0,38888);d=c[g>>2]|0;c[f+112>>2]=d-8;c[f+120>>2]=d+((c[j>>2]|0)-1<<3);i=e;return 1}function fQ(f,g,h,j){f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0;j=i;k=c[f+576>>2]|0;if((k|0)==0){aD(26200,37424,372,44888);return 0}l=k+124|0;if((c[l>>2]|0)==0){aD(23672,37424,373,44888);return 0}m=k+88|0;n=c[m>>2]|0;do{if((n|0)==0){o=g;p=h}else{q=c[k+108>>2]|0;r=(e[q+4>>1]|0)-n|0;if((r|0)<=(h|0)){s=g+r|0;t=r;u=q;v=s;while(1){w=v-1|0;x=c[u>>2]|0;a[w]=a[u+6|0]|0;y=t-1|0;if((y|0)==0|(x|0)==0){break}else{t=y;u=x;v=w}}c[m>>2]=0;o=s;p=h-r|0;break}c[m>>2]=n+h;v=r;u=q;do{u=c[u>>2]|0;v=v-1|0;z=(u|0)==0;}while(!((v|0)<=(h|0)|z));if(z){A=1;i=j;return A|0}v=u;q=h;r=g+h|0;while(1){s=r-1|0;a[s]=a[v+6|0]|0;t=c[v>>2]|0;w=q-1|0;if((w|0)==0|(t|0)==0){A=1;break}else{v=t;q=w;r=s}}i=j;return A|0}}while(0);h=f+604|0;g=c[h>>2]|0;z=k+64|0;n=b[z>>1]|0;r=k+72|0;q=c[r>>2]|0;v=k+76|0;u=c[v>>2]|0;s=k+84|0;w=c[s>>2]|0;t=k+112|0;x=c[t>>2]|0;y=k+116|0;B=c[y>>2]|0;C=k+120|0;D=c[C>>2]|0;L375:do{if((p|0)>0){F=k+96|0;G=g;H=p;I=n&65535;J=u;K=q;L=w;M=B;N=D;O=x;P=o;Q=n;L377:while(1){R=c[F>>2]|0;S=c[F+4>>2]|0;T=I;U=(I|0)<0|0?-1:0;if(S>>>0<U>>>0|S>>>0==U>>>0&R>>>0<T>>>0){V=284;break}W=G+1|0;X=d[G]|0|K<<8;Y=J+8|0;if((Y|0)<(I|0)){Z=d[W]|0|X<<8;_=J+16|0;$=G+2|0}else{Z=X;_=Y;$=W}aa=_-I|0;W=Z>>aa&L;Y=W&65535;X=hz(R,S,T,U)|0;c[F>>2]=X;c[F+4>>2]=E;X=W&65535;if(Y<<16>>16==257){ab=O;ac=N;ad=M;ae=L;af=Z;ag=aa;ah=Q;ai=H;aj=$;break L375}U=c[l>>2]|0;do{if(Y<<16>>16==256){ak=U+2064|0;dW(ak,0,38888);al=(c[l>>2]|0)+4080|0;T=c[F>>2]|0;S=c[F+4>>2]|0;R=0;if(S>>>0<R>>>0|S>>>0==R>>>0&T>>>0<9>>>0){V=290;break L377}R=$+1|0;am=d[$]|0|Z<<8;an=aa+8|0;if((an|0)<9){ao=d[R]|0|am<<8;ap=aa+16|0;aq=$+2|0}else{ao=am;ap=an;aq=R}R=ap-9|0;an=ao>>R;am=an&511;ar=hy(T,S,-9,-1)|0;c[F>>2]=ar;c[F+4>>2]=E;if(am<<16>>16==257){ab=O;ac=al;ad=ak;ae=511;af=ao;ag=R;ah=9;ai=H;aj=aq;break L375}if((am&65535)>255){V=295;break L377}a[P]=an&255;as=P+1|0;at=(c[l>>2]|0)+((am&65535)<<3)|0;au=al;av=ak;aw=511;ax=ao;ay=R;az=9;aA=H-1|0;aB=aq}else{aC=U+(X<<3)|0;if(!(M>>>0>=U>>>0&M>>>0<(U+40952|0)>>>0)){V=299;break L377}c[M>>2]=O;R=c[l>>2]|0;if(!(O>>>0>=R>>>0&O>>>0<(R+40952|0)>>>0)){V=301;break L377}R=a[O+7|0]|0;a[M+7|0]=R;b[M+4>>1]=(b[O+4>>1]|0)+1&65535;if(aC>>>0<M>>>0){aE=a[U+(X<<3)+7|0]|0}else{aE=R}a[M+6|0]=aE;aF=M+8|0;if(aF>>>0>N>>>0){R=I+1|0;am=(R|0)>12?12:R;R=1<<am;aG=(c[l>>2]|0)+(R-2<<3)|0;aH=R-1|0;aI=am}else{aG=N;aH=L;aI=I}if((Y&65535)<=255){a[P]=W&255;as=P+1|0;at=aC;au=aG;av=aF;aw=aH;ax=Z;ay=aa;az=aI;aA=H-1|0;aB=$;break}am=b[U+(X<<3)+4>>1]|0;R=am&65535;if(am<<16>>16==0){V=308;break L377}if((R|0)>(H|0)){V=310;break L377}am=P+R|0;an=aC;ar=am;while(1){S=ar-1|0;T=c[an>>2]|0;a[S]=a[an+6|0]|0;aJ=(T|0)!=0;if(aJ&S>>>0>P>>>0){an=T;ar=S}else{break}}if(aJ){V=321;break L377}as=am;at=aC;au=aG;av=aF;aw=aH;ax=Z;ay=aa;az=aI;aA=H-R|0;aB=$}}while(0);X=az&65535;if((aA|0)>0){G=aB;H=aA;I=az;J=ay;K=ax;L=aw;M=av;N=au;O=at;P=as;Q=X}else{ab=at;ac=au;ad=av;ae=aw;af=ax;ag=ay;ah=X;ai=aA;aj=aB;break L375}}if((V|0)==299){cg(c[f+628>>2]|0,44888,41112,(aK=i,i=i+8|0,c[aK>>2]=c[f+444>>2],aK)|0);i=aK;A=0;i=j;return A|0}else if((V|0)==301){cg(c[f+628>>2]|0,44888,41112,(aK=i,i=i+8|0,c[aK>>2]=c[f+444>>2],aK)|0);i=aK;A=0;i=j;return A|0}else if((V|0)==308){cg(c[f+628>>2]|0,44888,40544,(aK=i,i=i+8|0,c[aK>>2]=c[f+444>>2],aK)|0);i=aK;A=0;i=j;return A|0}else if((V|0)==310){c[k+108>>2]=aC;I=aC;do{I=c[I>>2]|0;if((I|0)==0){V=313;break}}while((e[I+4>>1]|0|0)>(H|0));if((V|0)==313){ab=aC;ac=aG;ad=aF;ae=aH;af=Z;ag=aa;ah=aI&65535;ai=H;aj=$;break}c[m>>2]=H;F=I;X=H;U=P+H|0;do{U=U-1|0;a[U]=a[F+6|0]|0;F=c[F>>2]|0;X=X-1|0;aL=(F|0)==0;}while(!((X|0)==0|aL));F=aI&65535;if(aL){ab=aC;ac=aG;ad=aF;ae=aH;af=Z;ag=aa;ah=F;ai=X;aj=$;break}cg(c[f+628>>2]|0,44888,38432,(aK=i,i=i+8|0,c[aK>>2]=c[f+444>>2],aK)|0);i=aK;ab=aC;ac=aG;ad=aF;ae=aH;af=Z;ag=aa;ah=F;ai=X;aj=$;break}else if((V|0)==284){d$(c[f+628>>2]|0,44888,22880,(aK=i,i=i+8|0,c[aK>>2]=c[f+452>>2],aK)|0);i=aK;ab=O;ac=N;ad=M;ae=L;af=K;ag=J;ah=Q;ai=H;aj=G;break}else if((V|0)==290){d$(c[f+628>>2]|0,44888,22880,(aK=i,i=i+8|0,c[aK>>2]=c[f+452>>2],aK)|0);i=aK;ab=O;ac=al;ad=ak;ae=511;af=Z;ag=aa;ah=9;ai=H;aj=$;break}else if((V|0)==295){cg(c[f+628>>2]|0,c[f>>2]|0,41712,(aK=i,i=i+8|0,c[aK>>2]=c[f+444>>2],aK)|0);i=aK;A=0;i=j;return A|0}else if((V|0)==321){cg(c[f+628>>2]|0,44888,38432,(aK=i,i=i+8|0,c[aK>>2]=c[f+444>>2],aK)|0);i=aK;ab=aC;ac=aG;ad=aF;ae=aH;af=Z;ag=aa;ah=aI&65535;ai=H;aj=$;break}}else{ab=x;ac=D;ad=B;ae=w;af=q;ag=u;ah=n;ai=p;aj=g}}while(0);c[h>>2]=aj;b[z>>1]=ah;c[r>>2]=af;c[v>>2]=ag;c[s>>2]=ae;c[t>>2]=ab;c[y>>2]=ad;c[C>>2]=ac;if((ai|0)<=0){A=1;i=j;return A|0}cg(c[f+628>>2]|0,44888,39288,(aK=i,i=i+24|0,c[aK>>2]=c[f+444>>2],c[aK+8>>2]=ai,c[aK+16>>2]=(ai|0)<0|0?-1:0,aK)|0);i=aK;A=0;i=j;return A|0}function fR(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=c[a+576>>2]|0;if((d|0)==0){aD(26200,37424,781,44792);return 0}e=dT(72008)|0;c[d+152>>2]=e;if((e|0)!=0){f=1;i=b;return f|0}cg(c[a+628>>2]|0,44792,24816,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;f=0;i=b;return f|0}function fS(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0;d=c[a+576>>2]|0;if((d|0)==0){aD(26200,37424,800,44824);return 0}e=d+152|0;f=c[e>>2]|0;if((f|0)==0){g=c[a+516>>2]|0;bf[g&63](a)|0;h=c[e>>2]|0}else{h=f}b[d+64>>1]=9;b[d+66>>1]=511;b[d+68>>1]=258;c[d+76>>2]=0;c[d+72>>2]=0;c[d+132>>2]=1e4;c[d+136>>2]=0;c[d+140>>2]=0;c[d+144>>2]=0;c[d+148>>2]=(c[a+588>>2]|0)+((c[a+592>>2]|0)-5);a=8993;f=h+72e3|0;while(1){e=a-8|0;c[f-56>>2]=-1;c[f-48>>2]=-1;c[f-40>>2]=-1;c[f-32>>2]=-1;c[f-24>>2]=-1;c[f-16>>2]=-1;c[f-8>>2]=-1;c[f>>2]=-1;if((e|0)>-1){a=e;f=f-64|0}else{break}}c[h>>2]=-1;c[d+128>>2]=65535;return 1}function fT(b){b=b|0;var d=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;d=c[b+576>>2]|0;f=c[b+604>>2]|0;g=c[d+76>>2]|0;h=c[d+72>>2]|0;i=e[d+64>>1]|0;if(f>>>0>(c[d+148>>2]|0)>>>0){j=b+588|0;c[b+608>>2]=f-(c[j>>2]|0);d1(b)|0;k=c[j>>2]|0}else{k=f}f=d+128|0;d=c[f>>2]|0;if((d|0)==65535){l=k;m=h;n=g}else{j=d|h<<i;h=i+g|0;g=h-8|0;d=k+1|0;a[k]=j>>g&255;if((g|0)>7){o=h-16|0;a[d]=j>>o&255;p=k+2|0;q=o}else{p=d;q=g}c[f>>2]=65535;l=p;m=j;n=q}q=m<<i|257;m=n+i|0;i=m-8|0;n=l+1|0;a[l]=q>>i&255;if((i|0)>7){j=m-16|0;a[n]=q>>j&255;r=l+2|0;s=j}else{r=n;s=i}if((s|0)<=0){t=r;u=b+588|0;v=c[u>>2]|0;w=t;x=v;y=w-x|0;z=b+608|0;c[z>>2]=y;return 1}a[r]=q<<8-s&255;t=r+1|0;u=b+588|0;v=c[u>>2]|0;w=t;x=v;y=w-x|0;z=b+608|0;c[z>>2]=y;return 1}function fU(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0;h=c[e+576>>2]|0;if((h|0)==0){i=0;return i|0}j=h+152|0;if((c[j>>2]|0)==0){aD(28488,37424,878,44856);return 0}k=h+140|0;l=c[k>>2]|0;m=h+144|0;n=c[m>>2]|0;o=h+132|0;p=c[o>>2]|0;q=h+72|0;r=c[q>>2]|0;s=h+76|0;t=c[s>>2]|0;u=h+68|0;v=b[u>>1]|0;w=v&65535;x=h+66|0;y=b[x>>1]|0;z=y&65535;A=h+64|0;B=b[A>>1]|0;C=B&65535;D=e+604|0;E=c[D>>2]|0;F=c[h+148>>2]|0;G=h+128|0;H=c[G>>2]|0;I=H&65535;if((H&65535|0)==65535&(g|0)>0){H=r<<C|256;J=C+t|0;K=J-8|0;L=E+1|0;a[E]=H>>K&255;if((K|0)>7){M=J-16|0;a[L]=H>>M&255;N=E+2|0;O=M}else{N=L;O=K}P=N;Q=O;R=H;S=C+n|0;T=l+1|0;U=d[f]|0;V=f+1|0;W=g-1|0}else{P=E;Q=t;R=r;S=n;T=l;U=I;V=f;W=g}do{if((W|0)>0){g=e+588|0;f=e+608|0;I=h+136|0;l=W;n=V;r=U;t=T;E=S;H=p;O=R;N=Q;K=w;L=z;M=C;J=P;L489:while(1){X=n+1|0;Y=a[n]|0;Z=Y&255;_=l-1|0;$=t+1|0;aa=r&65535;ab=(Z<<12)+aa|0;ac=Z<<5;Z=ac^aa;ad=c[j>>2]|0;ae=ad+(Z<<3)|0;af=c[ae>>2]|0;L491:do{if((af|0)==(ab|0)){ag=J;ah=M;ai=L;aj=K;ak=N;al=O;am=H;an=E;ao=$;ap=b[ad+(Z<<3)+4>>1]|0}else{L494:do{if((af|0)>-1){aq=(ac|0)==(aa|0)?1:9001-Z|0;ar=Z;while(1){as=ar-aq|0;at=(as|0)<0?as+9001|0:as;as=ad+(at<<3)|0;au=c[as>>2]|0;if((au|0)==(ab|0)){break}if((au|0)>-1){ar=at}else{av=as;break L494}}ag=J;ah=M;ai=L;aj=K;ak=N;al=O;am=H;an=E;ao=$;ap=b[ad+(at<<3)+4>>1]|0;break L491}else{av=ae}}while(0);if(J>>>0>F>>>0){c[f>>2]=J-(c[g>>2]|0);d1(e)|0;aw=c[g>>2]|0}else{aw=J}ar=O<<M|aa;aq=M+N|0;as=aq-8|0;au=aw+1|0;a[aw]=ar>>as&255;if((as|0)>7){ax=aq-16|0;a[au]=ar>>ax&255;ay=aw+2|0;az=ax}else{ay=au;az=as}as=M+E|0;au=Y&255;ax=K+1|0;b[av+4>>1]=K&65535;c[av>>2]=ab;if((ax|0)==4094){aq=c[j>>2]|0;aA=8993;aB=aq+72e3|0;while(1){aC=aA-8|0;c[aB-56>>2]=-1;c[aB-48>>2]=-1;c[aB-40>>2]=-1;c[aB-32>>2]=-1;c[aB-24>>2]=-1;c[aB-16>>2]=-1;c[aB-8>>2]=-1;c[aB>>2]=-1;if((aC|0)>-1){aA=aC;aB=aB-64|0}else{break}}c[aq>>2]=-1;c[I>>2]=0;aB=ar<<M|256;aA=az+M|0;aC=aA-8|0;aE=ay+1|0;a[ay]=aB>>aC&255;if((aC|0)<=7){ag=aE;ah=9;ai=511;aj=258;ak=aC;al=aB;am=H;an=M;ao=0;ap=au;break}aC=aA-16|0;a[aE]=aB>>aC&255;ag=ay+2|0;ah=9;ai=511;aj=258;ak=aC;al=aB;am=H;an=M;ao=0;ap=au;break}if((ax|0)>(L|0)){aB=M+1|0;if((aB|0)>=13){aF=390;break L489}ag=ay;ah=aB;ai=(1<<aB)-1|0;aj=ax;ak=az;al=ar;am=H;an=as;ao=$;ap=au;break}if(($|0)<(H|0)){ag=ay;ah=M;ai=L;aj=ax;ak=az;al=ar;am=H;an=as;ao=$;ap=au;break}aB=t+10001|0;do{if(($|0)>8388607){aC=as>>8;if((aC|0)==0){aG=2147483647;break}aG=($|0)/(aC|0)|0}else{aG=($<<8|0)/(as|0)|0}}while(0);if((aG|0)>(c[I>>2]|0)){c[I>>2]=aG;ag=ay;ah=M;ai=L;aj=ax;ak=az;al=ar;am=aB;an=as;ao=$;ap=au;break}aq=c[j>>2]|0;aC=8993;aE=aq+72e3|0;while(1){aA=aC-8|0;c[aE-56>>2]=-1;c[aE-48>>2]=-1;c[aE-40>>2]=-1;c[aE-32>>2]=-1;c[aE-24>>2]=-1;c[aE-16>>2]=-1;c[aE-8>>2]=-1;c[aE>>2]=-1;if((aA|0)>-1){aC=aA;aE=aE-64|0}else{break}}c[aq>>2]=-1;c[I>>2]=0;aE=ar<<M|256;aC=az+M|0;as=aC-8|0;ax=ay+1|0;a[ay]=aE>>as&255;if((as|0)<=7){ag=ax;ah=9;ai=511;aj=258;ak=as;al=aE;am=aB;an=M;ao=0;ap=au;break}as=aC-16|0;a[ax]=aE>>as&255;ag=ay+2|0;ah=9;ai=511;aj=258;ak=as;al=aE;am=aB;an=M;ao=0;ap=au}}while(0);if((_|0)>0){l=_;n=X;r=ap;t=ao;E=an;H=am;O=al;N=ak;K=aj;L=ai;M=ah;J=ag}else{aF=403;break}}if((aF|0)==390){aD(27248,37424,976,44856);return 0}else if((aF|0)==403){aH=ap;aI=ao;aJ=an;aK=am;aL=al;aM=ak;aN=aj&65535;aO=ai&65535;aP=ah&65535;aQ=ag;break}}else{aH=U;aI=T;aJ=S;aK=p;aL=R;aM=Q;aN=v;aO=y;aP=B;aQ=P}}while(0);c[k>>2]=aI;c[m>>2]=aJ;c[o>>2]=aK;c[G>>2]=aH&65535;c[q>>2]=aL;c[s>>2]=aM;b[u>>1]=aN;b[x>>1]=aO;b[A>>1]=aP;c[D>>2]=aQ;i=1;return i|0}function fV(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;gm(a)|0;b=a+576|0;d=c[b>>2]|0;if((d|0)==0){aD(30248,37424,1081,44904)}e=c[d+124>>2]|0;if((e|0)==0){f=d}else{dU(e);f=c[b>>2]|0}e=c[f+152>>2]|0;if((e|0)==0){g=f;dU(g);c[b>>2]=0;em(a);return}dU(e);g=c[b>>2]|0;dU(g);c[b>>2]=0;em(a);return}function fW(f,g,h,j){f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0;j=i;k=c[f+576>>2]|0;if((k|0)==0){aD(26200,37424,596,44872);return 0}l=k+88|0;m=c[l>>2]|0;do{if((m|0)==0){n=h;o=g}else{p=c[k+108>>2]|0;q=(e[p+4>>1]|0)-m|0;if((q|0)<=(h|0)){r=g+q|0;s=q;t=p;u=r;while(1){v=u-1|0;a[v]=a[t+6|0]|0;w=s-1|0;if((w|0)==0){break}else{s=w;t=c[t>>2]|0;u=v}}c[l>>2]=0;n=h-q|0;o=r;break}c[l>>2]=m+h;u=q;t=p;do{t=c[t>>2]|0;u=u-1|0;}while((u|0)>(h|0));u=t;p=g+h|0;q=h;while(1){r=p-1|0;a[r]=a[u+6|0]|0;s=q-1|0;if((s|0)==0){x=1;break}else{u=c[u>>2]|0;p=r;q=s}}i=j;return x|0}}while(0);h=f+604|0;g=c[h>>2]|0;m=k+64|0;q=b[m>>1]|0;p=k+72|0;u=c[p>>2]|0;t=k+76|0;s=c[t>>2]|0;r=k+84|0;v=c[r>>2]|0;w=k+112|0;y=c[w>>2]|0;z=k+116|0;A=c[z>>2]|0;B=k+120|0;C=c[B>>2]|0;L567:do{if((n|0)>0){D=k+96|0;F=k+124|0;G=o;H=n;I=g;J=q&65535;K=s;L=u;M=v;N=A;O=C;P=y;Q=q;L569:while(1){R=c[D>>2]|0;S=c[D+4>>2]|0;T=J;U=(J|0)<0|0?-1:0;if(S>>>0<U>>>0|S>>>0==U>>>0&R>>>0<T>>>0){V=432;break}W=I+1|0;X=(d[I]|0)<<K|L;Y=K+8|0;if((Y|0)<(J|0)){Z=(d[W]|0)<<Y|X;_=K+16|0;$=I+2|0}else{Z=X;_=Y;$=W}W=Z&M;Y=W&65535;aa=Z>>J;ab=_-J|0;X=hz(R,S,T,U)|0;c[D>>2]=X;c[D+4>>2]=E;if((Y|0)==257){ac=P;ad=O;ae=N;af=M;ag=aa;ah=ab;ai=Q;aj=$;ak=H;break L567}X=c[F>>2]|0;do{if((Y|0)==256){al=X+2064|0;dW(al,0,38888);am=(c[F>>2]|0)+4088|0;U=c[D>>2]|0;T=c[D+4>>2]|0;S=0;if(T>>>0<S>>>0|T>>>0==S>>>0&U>>>0<9>>>0){V=438;break L569}S=$+1|0;R=(d[$]|0)<<ab|aa;an=ab+8|0;if((an|0)<9){ao=(d[S]|0)<<an|R;ap=ab+16|0;aq=$+2|0}else{ao=R;ap=an;aq=S}S=ao&511;an=ao>>9;R=ap-9|0;ar=hy(U,T,-9,-1)|0;c[D>>2]=ar;c[D+4>>2]=E;if((S|0)==257){ac=P;ad=am;ae=al;af=511;ag=an;ah=R;ai=9;aj=aq;ak=H;break L567}if(S>>>0>255){V=443;break L569}a[G]=ao&255;as=(c[F>>2]|0)+(S<<3)|0;at=am;au=al;av=511;aw=an;ax=R;ay=9;az=aq;aA=H-1|0;aB=G+1|0}else{aC=X+(Y<<3)|0;if(!(N>>>0>=X>>>0&N>>>0<(X+40952|0)>>>0)){V=447;break L569}c[N>>2]=P;R=c[F>>2]|0;if(!(P>>>0>=R>>>0&P>>>0<(R+40952|0)>>>0)){V=449;break L569}R=a[P+7|0]|0;a[N+7|0]=R;b[N+4>>1]=(b[P+4>>1]|0)+1&65535;if(aC>>>0<N>>>0){aE=a[X+(Y<<3)+7|0]|0}else{aE=R}a[N+6|0]=aE;aF=N+8|0;if(aF>>>0>O>>>0){R=J+1|0;an=(R|0)>12?12:R;R=(1<<an)-1|0;aG=(c[F>>2]|0)+(R<<3)|0;aH=R;aI=an}else{aG=O;aH=M;aI=J}if(Y>>>0<=255){a[G]=W&255;as=aC;at=aG;au=aF;av=aH;aw=aa;ax=ab;ay=aI;az=$;aA=H-1|0;aB=G+1|0;break}an=b[X+(Y<<3)+4>>1]|0;R=an&65535;if(an<<16>>16==0){V=456;break L569}if((R|0)>(H|0)){V=458;break L569}an=G+R|0;S=aC;ar=an;do{ar=ar-1|0;a[ar]=a[S+6|0]|0;S=c[S>>2]|0;}while((S|0)!=0);as=aC;at=aG;au=aF;av=aH;aw=aa;ax=ab;ay=aI;az=$;aA=H-R|0;aB=an}}while(0);Y=ay&65535;if((aA|0)>0){G=aB;H=aA;I=az;J=ay;K=ax;L=aw;M=av;N=au;O=at;P=as;Q=Y}else{ac=as;ad=at;ae=au;af=av;ag=aw;ah=ax;ai=Y;aj=az;ak=aA;break L567}}if((V|0)==456){cg(c[f+628>>2]|0,44872,40544,(aJ=i,i=i+8|0,c[aJ>>2]=c[f+444>>2],aJ)|0);i=aJ;x=0;i=j;return x|0}else if((V|0)==432){d$(c[f+628>>2]|0,44872,22880,(aJ=i,i=i+8|0,c[aJ>>2]=c[f+452>>2],aJ)|0);i=aJ;ac=P;ad=O;ae=N;af=M;ag=L;ah=K;ai=Q;aj=I;ak=H;break}else if((V|0)==443){cg(c[f+628>>2]|0,c[f>>2]|0,41712,(aJ=i,i=i+8|0,c[aJ>>2]=c[f+444>>2],aJ)|0);i=aJ;x=0;i=j;return x|0}else if((V|0)==458){c[k+108>>2]=aC;J=aC;do{J=c[J>>2]|0;}while((e[J+4>>1]|0|0)>(H|0));c[l>>2]=H;I=J;Q=G+H|0;K=H;while(1){L=Q-1|0;a[L]=a[I+6|0]|0;M=K-1|0;if((M|0)==0){break}else{I=c[I>>2]|0;Q=L;K=M}}ac=aC;ad=aG;ae=aF;af=aH;ag=aa;ah=ab;ai=aI&65535;aj=$;ak=0;break}else if((V|0)==438){d$(c[f+628>>2]|0,44872,22880,(aJ=i,i=i+8|0,c[aJ>>2]=c[f+452>>2],aJ)|0);i=aJ;ac=P;ad=am;ae=al;af=511;ag=aa;ah=ab;ai=9;aj=$;ak=H;break}else if((V|0)==447){cg(c[f+628>>2]|0,44872,41112,(aJ=i,i=i+8|0,c[aJ>>2]=c[f+444>>2],aJ)|0);i=aJ;x=0;i=j;return x|0}else if((V|0)==449){cg(c[f+628>>2]|0,44872,41112,(aJ=i,i=i+8|0,c[aJ>>2]=c[f+444>>2],aJ)|0);i=aJ;x=0;i=j;return x|0}}else{ac=y;ad=C;ae=A;af=v;ag=u;ah=s;ai=q;aj=g;ak=n}}while(0);c[h>>2]=aj;b[m>>1]=ai;c[p>>2]=ag;c[t>>2]=ah;c[r>>2]=af;c[w>>2]=ac;c[z>>2]=ae;c[B>>2]=ad;if((ak|0)<=0){x=1;i=j;return x|0}cg(c[f+628>>2]|0,44872,39288,(aJ=i,i=i+24|0,c[aJ>>2]=c[f+444>>2],c[aJ+8>>2]=ak,c[aJ+16>>2]=(ak|0)<0|0?-1:0,aJ)|0);i=aJ;x=0;i=j;return x|0}function fX(a,b){a=a|0;b=b|0;c[a+532>>2]=32;c[a+540>>2]=32;c[a+548>>2]=32;return 1}function fY(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;g=i;h=(f|0)>0;if(h){hv(e|0,-1|0,f|0)}j=b+604|0;k=b+608|0;l=c[b+580>>2]|0;if(((f|0)%(l|0)|0|0)!=0){cg(c[b+628>>2]|0,147504,25328,(m=i,i=i+1|0,i=i+7&-8,c[m>>2]=0,m)|0);i=m;n=0;i=g;return n|0}o=c[k>>2]|0;p=c[j>>2]|0;L634:do{if(h){q=b+56|0;r=l+1|0;s=o;t=e;u=p;v=f;L636:while(1){w=u+1|0;x=d[u]|0;y=s-1|0;L638:do{if((x|0)==0){if((y|0)<(l|0)){break L636}dX(t,w,l);z=u+r|0;A=y-l|0}else if((x|0)==64){B=(d[w]|0)<<8|(d[u+2|0]|0);C=(d[u+3|0]|0)<<8|(d[u+4|0]|0);D=C+4|0;if((y|0)<(D|0)){break L636}if((C+B|0)>(l|0)){break L636}dX(t+B|0,u+5|0,C);z=u+(C+5)|0;A=y-D|0}else{D=c[q>>2]|0;C=0;B=w;E=x;F=t;G=y;while(1){H=E>>>6;I=E&63;J=C>>>0<D>>>0;L644:do{if((I|0)!=0&J){K=H<<6&255;L=H<<4;M=H<<2;N=F;O=C;P=I;while(1){Q=O;R=P;while(1){S=R-1|0;T=Q+1|0;U=Q&3;if((U|0)==0){a[N]=K}else if((U|0)==1){a[N]=(d[N]|0|L)&255}else if((U|0)==2){a[N]=(d[N]|0|M)&255}else if((U|0)==3){break}U=T>>>0<D>>>0;if((S|0)>0&U){Q=T;R=S}else{V=T;W=U;X=N;break L644}}R=N+1|0;a[N]=(d[N]|0|H)&255;Q=T>>>0<D>>>0;if((S|0)>0&Q){N=R;O=T;P=S}else{V=T;W=Q;X=R;break}}}else{V=C;W=J;X=F}}while(0);if(!W){z=B;A=G;break L638}if((G|0)==0){break L636}J=d[B]|0;C=V;B=B+1|0;E=J;F=X;G=G-1|0}}}while(0);y=v-l|0;if((y|0)>0){s=A;t=t+l|0;u=z;v=y}else{Y=A;Z=z;break L634}}cg(c[b+628>>2]|0,147504,37200,(m=i,i=i+8|0,c[m>>2]=c[b+444>>2],m)|0);i=m;n=0;i=g;return n|0}else{Y=o;Z=p}}while(0);c[j>>2]=Z;c[k>>2]=Y;n=1;i=g;return n|0}function fZ(a,b){a=a|0;b=b|0;c[a+532>>2]=18;c[a+540>>2]=18;c[a+548>>2]=18;c[a+524>>2]=12;c[a+528>>2]=32;c[a+536>>2]=12;c[a+544>>2]=56;c[a+552>>2]=56;return 1}function f_(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;g=b+604|0;h=b+608|0;j=b+628|0;k=c[h>>2]|0;l=c[g>>2]|0;m=d;d=e;L669:while(1){if((d|0)>0){n=k;o=l}else{p=525;break}while(1){if((n|0)<=0){q=n;r=o;break L669}s=o+1|0;e=a[o]|0;t=e<<24>>24;u=n-1|0;if(e<<24>>24>=0){p=519;break}if(e<<24>>24==-128){n=u;o=s}else{p=515;break}}do{if((p|0)==515){p=0;e=1-t|0;if((d|0)<(e|0)){d$(c[j>>2]|0,147488,25232,(v=i,i=i+8|0,c[v>>2]=e-d,v)|0);i=v;w=d}else{w=e}e=o+2|0;x=n-2|0;if((w|0)<=0){y=x;z=e;A=m;B=w;break}hv(m|0,a[s]|0,w|0);y=x;z=e;A=m+w|0;B=w}else if((p|0)==519){p=0;if((d|0)<(t+1|0)){d$(c[j>>2]|0,147488,25232,(v=i,i=i+8|0,c[v>>2]=1-d+t,v)|0);i=v;C=d-1|0}else{C=t}e=C+1|0;if((u|0)<(e|0)){p=522;break L669}dX(m,s,e);y=u-e|0;z=o+(C+2)|0;A=m+e|0;B=e}}while(0);k=y;l=z;m=A;d=d-B|0}if((p|0)==522){d$(c[j>>2]|0,147488,37136,(v=i,i=i+1|0,i=i+7&-8,c[v>>2]=0,v)|0);i=v;q=u;r=s}else if((p|0)==525){c[g>>2]=l;c[h>>2]=k;D=1;i=f;return D|0}c[g>>2]=r;c[h>>2]=q;cg(c[j>>2]|0,147488,32400,(v=i,i=i+8|0,c[v>>2]=c[b+444>>2],v)|0);i=v;D=0;i=f;return D|0}function f$(a,b){a=a|0;b=b|0;var d=0,e=0;b=dT(4)|0;d=a+576|0;c[d>>2]=b;if((b|0)==0){e=0;return e|0}if((c[a+12>>2]&1024|0)==0){b=dr(a)|0;c[c[d>>2]>>2]=b;e=1;return e|0}else{b=dG(a)|0;c[c[d>>2]>>2]=b;e=1;return e|0}return 0}function f0(a){a=a|0;var b=0;b=c[a+576>>2]|0;if((b|0)==0){return 1}dU(b);return 1}function f1(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;f=b+604|0;g=c[f>>2]|0;h=(c[b+588>>2]|0)+(c[b+592>>2]|0)|0;i=b+608|0;do{if((e|0)>0){j=d;k=g;l=e;m=0;n=0;L709:while(1){o=a[j]|0;p=1;q=l;r=j;while(1){s=q-1|0;t=r+1|0;u=(s|0)>0;if(!u){v=n;w=p;x=m;y=k;break}if(o<<24>>24==(a[t]|0)){p=p+1|0;q=s;r=t}else{v=n;w=p;x=m;y=k;break}}L714:while(1){do{if((w|0)==1){do{if((y+2|0)>>>0<h>>>0){z=x;A=y}else{if(!((v|0)==3|(v|0)==1)){c[i>>2]=y-(c[f>>2]|0)+(c[i>>2]|0);if((d1(b)|0)==0){B=-1;C=590;break L709}z=x;A=c[f>>2]|0;break}p=x;c[i>>2]=p-(c[f>>2]|0)+(c[i>>2]|0);if((d1(b)|0)==0){B=-1;C=588;break L709}r=y-p|0;p=c[f>>2]|0;if((r|0)>0){D=p;E=x;F=r}else{z=p;A=p;break}while(1){q=F-1|0;a[D]=a[E]|0;if((q|0)>0){D=D+1|0;E=E+1|0;F=q}else{break}}z=c[f>>2]|0;A=p+r|0}}while(0);if((v|0)==1){G=A;H=z;C=571;break}else if((v|0)==0){I=A;J=z;C=566;break}else if((v|0)==2){K=A;L=z;C=576;break}else if((v|0)!=3){M=v;N=z;O=A;break L714}q=A-2|0;if((a[q]|0)!=-1){v=2;w=1;x=z;y=A;continue L714}P=a[z]|0;if((P&255)>=126){v=2;w=1;x=z;y=A;continue L714}Q=P+2&255;a[z]=Q;a[q]=a[A-1|0]|0;v=Q<<24>>24!=127|0;w=1;x=z;y=A;continue L714}else{Q=v;q=x;P=y;while(1){do{if((P+2|0)>>>0<h>>>0){R=q;S=P}else{if(!((Q|0)==3|(Q|0)==1)){c[i>>2]=P-(c[f>>2]|0)+(c[i>>2]|0);if((d1(b)|0)==0){B=-1;C=589;break L709}R=q;S=c[f>>2]|0;break}T=q;c[i>>2]=T-(c[f>>2]|0)+(c[i>>2]|0);if((d1(b)|0)==0){B=-1;C=591;break L709}U=P-T|0;T=c[f>>2]|0;if((U|0)>0){V=T;W=q;X=U}else{R=T;S=T;break}while(1){Y=X-1|0;a[V]=a[W]|0;if((Y|0)>0){V=V+1|0;W=W+1|0;X=Y}else{break}}R=c[f>>2]|0;S=T+U|0}}while(0);if((Q|0)==1){G=S;H=R;C=571;break}else if((Q|0)==3){Q=2;q=R;P=S}else if((Q|0)==0){I=S;J=R;C=566;break}else if((Q|0)==2){K=S;L=R;C=576;break}else{M=Q;N=R;O=S;break L714}}}}while(0);if((C|0)==571){C=0;if((w|0)<=1){C=575;break}if((w|0)<=128){C=574;break}a[G]=-127;a[G+1|0]=o;v=3;w=w-128|0;x=H;y=G+2|0;continue}else if((C|0)==566){C=0;if((w|0)<=1){C=570;break}if((w|0)<=128){C=569;break}a[I]=-127;a[I+1|0]=o;v=2;w=w-128|0;x=J;y=I+2|0;continue}else if((C|0)==576){C=0;if((w|0)<=1){C=581;break}if((w|0)<=128){C=579;break}a[K]=-127;a[K+1|0]=o;v=2;w=w-128|0;x=L;y=K+2|0;continue}}if((C|0)==569){C=0;a[I]=1-w&255;a[I+1|0]=o;M=2;N=J;O=I+2|0}else if((C|0)==570){C=0;a[I]=0;a[I+1|0]=o;M=1;N=I;O=I+2|0}else if((C|0)==579){C=0;a[K]=1-w&255;a[K+1|0]=o;M=2;N=L;O=K+2|0}else if((C|0)==574){C=0;a[G]=1-w&255;a[G+1|0]=o;M=3;N=H;O=G+2|0}else if((C|0)==575){C=0;Q=(a[H]|0)+1&255;a[H]=Q;a[G]=o;M=Q<<24>>24!=127|0;N=H;O=G+1|0}else if((C|0)==581){C=0;a[K]=0;a[K+1|0]=o;M=1;N=K;O=K+2|0}if(u){j=t;k=O;l=s;m=N;n=M}else{C=585;break}}if((C|0)==591){return B|0}else if((C|0)==588){return B|0}else if((C|0)==589){return B|0}else if((C|0)==590){return B|0}else if((C|0)==585){Z=O;_=c[f>>2]|0;break}}else{Z=g;_=g}}while(0);c[i>>2]=Z-_+(c[i>>2]|0);c[f>>2]=Z;B=1;return B|0}function f2(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=c[c[a+576>>2]>>2]|0;if((d|0)>0){g=d;h=b}else{i=1;return i|0}while(1){b=(g|0)<(f|0)?g:f;if((f1(a,h,b,e)|0)<0){i=-1;j=597;break}d=g-b|0;if((d|0)>0){g=d;h=h+b|0}else{i=1;j=599;break}}if((j|0)==597){return i|0}else if((j|0)==599){return i|0}return 0}function f3(d,e){d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0,L=0;f=i;if((e|0)!=32909){aD(25112,37104,1350,44176);return 0}if((bS(d,8584,2)|0)==0){cg(c[d+628>>2]|0,44176,32352,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h;j=0;i=f;return j|0}e=dT(172)|0;c[d+576>>2]=e;if((e|0)==0){cg(c[d+628>>2]|0,44176,30144,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h;j=0;i=f;return j|0}dW(e,0,172);c[e+108>>2]=0;c[e+132>>2]=-1;c[d+504>>2]=20;c[d+508>>2]=38;c[d+512>>2]=26;c[d+532>>2]=88;c[d+540>>2]=88;c[d+548>>2]=88;c[d+516>>2]=28;c[d+524>>2]=50;c[d+528>>2]=54;c[d+536>>2]=36;c[d+544>>2]=36;c[d+552>>2]=36;c[d+556>>2]=2;c[d+564>>2]=4;h=d+672|0;c[e+140>>2]=c[h>>2];c[h>>2]=14;h=d+668|0;c[e+144>>2]=c[h>>2];c[h>>2]=12;c[e+136>>2]=-1;c[e+128>>2]=0;gg(d)|0;g[36920]=250.0;g[36918]=148.4131622314453;d=dT(54600)|0;h=d;k=dT(32768)|0;l=k;m=dT(512)|0;n=m;o=dT(8196)|0;p=o;q=dT(4098)|0;r=q;s=dT(2049)|0;t=(d|0)==0;u=(k|0)==0;v=(m|0)==0;w=(o|0)==0;x=(q|0)==0;y=(s|0)==0;if(t|u|v|w|x|y){if(!t){dU(d)}if(!u){dU(k)}if(!v){dU(m)}if(!w){dU(o)}if(!x){dU(q)}if(!y){dU(s)}hv(e+148|0,0,24);j=1;i=f;return j|0}else{z=0}while(1){y=z+1|0;g[p+(z<<2)>>2]=+(z|0)*7326255555493672.0e-20;if((y|0)<250){z=y}else{A=250;break}}while(1){z=A+1|0;g[p+(A<<2)>>2]=+Z(+(+(A|0)*.004))*.006737946999085467;if((z|0)<2048){A=z}else{break}}g[o+8192>>2]=+g[o+8188>>2];o=0;while(1){A=p+(o<<2)|0;B=+g[A>>2]*65535.0+.5;if(B>65535.0){C=-1}else{C=~~B}b[r+(o<<1)>>1]=C;B=+g[A>>2]*255.0+.5;if(B>255.0){D=-1}else{D=~~B}a[s+o|0]=D;A=o+1|0;if((A|0)<2049){o=A}else{E=0;F=0;break}}while(1){B=+(F|0)*7326255555493672.0e-20;o=E+1|0;D=B*B>+g[p+(E<<2)>>2]*+g[p+(o<<2)>>2]?o:E;b[h+(F<<1)>>1]=D&65535;o=F+1|0;if((o|0)<27300){E=D;F=o}else{G=0;H=0;break}}while(1){B=+(H|0)/16383.0;I=B*B;F=G;B=+g[p+(G<<2)>>2];while(1){E=F+1|0;J=+g[p+(E<<2)>>2];if(I>B*J){F=E;B=J}else{break}}b[l+(H<<1)>>1]=F&65535;E=H+1|0;if((E|0)<16384){G=F;H=E}else{K=0;L=0;break}}while(1){B=+(L|0)/255.0;I=B*B;H=K;B=+g[p+(K<<2)>>2];while(1){G=H+1|0;J=+g[p+(G<<2)>>2];if(I>B*J){H=G;B=J}else{break}}b[n+(L<<1)>>1]=H&65535;F=L+1|0;if((F|0)<256){K=H;L=F}else{break}}g[36922]=13650.0;c[e+148>>2]=p;c[e+152>>2]=r;c[e+156>>2]=s;c[e+160>>2]=h;c[e+164>>2]=l;c[e+168>>2]=n;j=1;i=f;return j|0}function f4(a){a=a|0;return 1}function f5(a){a=a|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;f=c[a+576>>2]|0;if((f|0)==0){aD(22864,37104,662,44448);return 0}c[a+652>>2]=66;if((b[a+126>>1]|0)==1){g=b[a+98>>1]|0}else{g=1}b[f+124>>1]=g;h=c[a+100>>2]|0;j=(g&65535)<<1;g=aa(aa(j,c[a+56>>2]|0)|0,h)|0;if((g|0)==0){k=0;i=d;return k|0}h=dT(g+j|0)|0;c[f+120>>2]=h;if((h|0)==0){k=0;i=d;return k|0}h=f+132|0;L854:do{if((c[h>>2]|0)==-1){j=a+84|0;g=b[a+86>>1]|0;switch(e[j>>1]|0){case 16:{if((g<<16>>16|0)==4|(g<<16>>16|0)==1){l=4;m=655}else{m=654}break};case 12:{if((g<<16>>16|0)==4|(g<<16>>16|0)==2){l=3;m=655}else{m=654}break};case 32:{n=g<<16>>16==3;c[h>>2]=n?5:-1;if(n){break L854}break};case 11:{if((g<<16>>16|0)==4|(g<<16>>16|0)==1){l=2;m=655}else{m=654}break};case 8:{if((g<<16>>16|0)==4|(g<<16>>16|0)==1){l=0;m=655}else{m=654}break};default:{m=654}}if((m|0)==654){c[h>>2]=-1}else if((m|0)==655){c[h>>2]=l;break}cg(c[a+628>>2]|0,44448,36760,(o=i,i=i+8|0,c[o>>2]=e[j>>1]|0,o)|0);i=o;k=0;i=d;return k|0}}while(0);if((g3(f+64|0,41104,56)|0)==0){l=f+128|0;c[l>>2]=c[l>>2]|1;k=1;i=d;return k|0}else{cg(c[a+628>>2]|0,44448,40536,(o=i,i=i+8|0,c[o>>2]=c[f+88>>2],o)|0);i=o;k=0;i=d;return k|0}return 0}function f6(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;b=i;d=c[a+576>>2]|0;if((d|0)==0){aD(22864,37104,707,44496);return 0}e=d+64|0;c[e>>2]=c[a+588>>2];f=a+608|0;g=c[f>>2]|0;c[d+68>>2]=g;if((g|0)==(c[f>>2]|0)){h=(g1(e)|0)==0|0;i=b;return h|0}else{cg(c[a+628>>2]|0,44496,24736,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;h=0;i=b;return h|0}return 0}function f7(d,f,h,j){d=d|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0,J=0.0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0.0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0.0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0;j=i;k=c[d+576>>2]|0;l=k+132|0;switch(c[l>>2]|0){case 5:{m=h>>>2;break};case 4:case 3:case 2:{m=h>>>1;break};case 0:case 1:{m=h;break};default:{cg(c[d+628>>2]|0,44520,26112,(n=i,i=i+8|0,c[n>>2]=e[d+84>>1]|0,n)|0);i=n;o=0;i=j;return o|0}}h=k+124|0;p=aa(e[h>>1]|0,c[d+56>>2]|0)|0;if((k|0)==0){aD(22864,37104,756,44520);return 0}q=k+120|0;r=k+64|0;c[k+76>>2]=c[q>>2];s=k+80|0;c[s>>2]=m<<1;t=d+628|0;u=d+444|0;v=k+88|0;do{w=g4(r,1)|0;if((w|0)==1){x=686;break}else if((w|0)==(-3|0)){y=c[v>>2]|0;cg(c[t>>2]|0,44520,39928,(n=i,i=i+16|0,c[n>>2]=c[u>>2],c[n+8>>2]=y,n)|0);i=n;if((g7(r)|0)!=0){o=0;x=813;break}}else if((w|0)!=0){x=684;break}}while((c[s>>2]|0)!=0);do{if((x|0)==686){r=c[s>>2]|0;if((r|0)==0){break}cg(c[t>>2]|0,44520,39232,(n=i,i=i+16|0,c[n>>2]=c[u>>2],c[n+8>>2]=r,n)|0);i=n;o=0;i=j;return o|0}else if((x|0)==684){cg(c[t>>2]|0,44520,28448,(n=i,i=i+8|0,c[n>>2]=c[v>>2],n)|0);i=n;o=0;i=j;return o|0}else if((x|0)==813){i=j;return o|0}}while(0);v=c[q>>2]|0;if((c[d+12>>2]&128|0)!=0){dv(v,m)}q=(m|0)%(p|0)|0;if((q|0)==0){z=m}else{d$(c[t>>2]|0,44520,38360,(n=i,i=i+16|0,c[n>>2]=p,c[n+8>>2]=m,n)|0);i=n;z=m-q|0}if((z|0)<=0){o=1;i=j;return o|0}q=k+148|0;m=p<<2;u=p-3|0;s=(u|0)>0;r=p-4|0;w=(r|0)>0;y=k+152|0;A=p<<1;B=k+156|0;k=0;C=f;f=v;L914:while(1){switch(c[l>>2]|0){case 5:{v=e[h>>1]|0;D=C;E=c[q>>2]|0;do{if((p|0)>=(v|0)){if((v|0)==3){F=b[f>>1]&2047;G=b[f+2>>1]&2047;H=+g[E+(G<<2)>>2];I=b[f+4>>1]&2047;J=+g[E+(I<<2)>>2];g[D>>2]=+g[E+(F<<2)>>2];g[C+4>>2]=H;g[C+8>>2]=J;if(s){K=D;L=F;M=G;N=I;O=f;P=u}else{break}while(1){I=O+6|0;G=K+12|0;F=(e[I>>1]|0)+L|0;Q=(e[O+8>>1]|0)+M|0;J=+g[E+((Q&2047)<<2)>>2];R=(e[O+10>>1]|0)+N|0;H=+g[E+((R&2047)<<2)>>2];g[G>>2]=+g[E+((F&2047)<<2)>>2];g[K+16>>2]=J;g[K+20>>2]=H;S=P-3|0;if((S|0)>0){K=G;L=F;M=Q;N=R;O=I;P=S}else{break}}}else if((v|0)==4){S=b[f>>1]&2047;I=b[f+2>>1]&2047;H=+g[E+(I<<2)>>2];R=b[f+4>>1]&2047;J=+g[E+(R<<2)>>2];Q=b[f+6>>1]&2047;T=+g[E+(Q<<2)>>2];g[D>>2]=+g[E+(S<<2)>>2];g[C+4>>2]=H;g[C+8>>2]=J;g[C+12>>2]=T;if(w){U=D;V=S;W=I;X=R;Y=Q;Z=f;_=r}else{break}while(1){Q=Z+8|0;R=U+16|0;I=(e[Q>>1]|0)+V|0;S=(e[Z+10>>1]|0)+W|0;T=+g[E+((S&2047)<<2)>>2];F=(e[Z+12>>1]|0)+X|0;J=+g[E+((F&2047)<<2)>>2];G=(e[Z+14>>1]|0)+Y|0;H=+g[E+((G&2047)<<2)>>2];g[R>>2]=+g[E+((I&2047)<<2)>>2];g[U+20>>2]=T;g[U+24>>2]=J;g[U+28>>2]=H;$=_-4|0;if(($|0)>0){U=R;V=I;W=S;X=F;Y=G;Z=Q;_=$}else{break}}}else{$=-v|0;Q=($|0)>-1;G=v+1|0;F=v;S=f;I=D;while(1){R=F-1|0;g[I>>2]=+g[E+((b[S>>1]&2047)<<2)>>2];if((R|0)>0){F=R;S=S+2|0;I=I+4|0}else{break}}I=G+(Q?$:-1)|0;S=p-v|0;if((S|0)>0){ab=D;ac=f;ad=S}else{break}do{ab=ab+(I<<2)|0;ac=ac+(I<<1)|0;S=v;F=ac;R=ab;while(1){ae=S-1|0;af=F+(v<<1)|0;b[af>>1]=(b[af>>1]|0)+(b[F>>1]|0)&65535;g[R>>2]=+g[E+((b[F>>1]&2047)<<2)>>2];if((ae|0)>0){S=ae;F=F+2|0;R=R+4|0}else{break}}ad=ad-v|0;}while((ad|0)>0)}}}while(0);ag=C+m|0;break};case 4:{v=e[h>>1]|0;E=C;D=c[y>>2]|0;do{if((p|0)>=(v|0)){if((v|0)==3){I=b[f>>1]&2047;b[E>>1]=b[D+(I<<1)>>1]|0;$=b[f+2>>1]&2047;b[C+2>>1]=b[D+($<<1)>>1]|0;Q=b[f+4>>1]&2047;b[C+4>>1]=b[D+(Q<<1)>>1]|0;if(s){ah=E;ai=I;aj=$;ak=Q;al=f;am=u}else{break}while(1){Q=al+6|0;$=ah+6|0;I=(e[Q>>1]|0)+ai|0;b[$>>1]=b[D+((I&2047)<<1)>>1]|0;G=(e[al+8>>1]|0)+aj|0;b[ah+8>>1]=b[D+((G&2047)<<1)>>1]|0;R=(e[al+10>>1]|0)+ak|0;b[ah+10>>1]=b[D+((R&2047)<<1)>>1]|0;F=am-3|0;if((F|0)>0){ah=$;ai=I;aj=G;ak=R;al=Q;am=F}else{break}}}else if((v|0)==4){F=b[f>>1]&2047;b[E>>1]=b[D+(F<<1)>>1]|0;Q=b[f+2>>1]&2047;b[C+2>>1]=b[D+(Q<<1)>>1]|0;R=b[f+4>>1]&2047;b[C+4>>1]=b[D+(R<<1)>>1]|0;G=b[f+6>>1]&2047;b[C+6>>1]=b[D+(G<<1)>>1]|0;if(w){an=E;ao=F;ap=Q;aq=R;ar=G;as=f;at=r}else{break}while(1){G=as+8|0;R=an+8|0;Q=(e[G>>1]|0)+ao|0;b[R>>1]=b[D+((Q&2047)<<1)>>1]|0;F=(e[as+10>>1]|0)+ap|0;b[an+10>>1]=b[D+((F&2047)<<1)>>1]|0;I=(e[as+12>>1]|0)+aq|0;b[an+12>>1]=b[D+((I&2047)<<1)>>1]|0;$=(e[as+14>>1]|0)+ar|0;b[an+14>>1]=b[D+(($&2047)<<1)>>1]|0;S=at-4|0;if((S|0)>0){an=R;ao=Q;ap=F;aq=I;ar=$;as=G;at=S}else{break}}}else{S=-v|0;G=(S|0)>-1;$=v+1|0;I=v;F=f;Q=E;while(1){R=I-1|0;b[Q>>1]=b[D+((b[F>>1]&2047)<<1)>>1]|0;if((R|0)>0){I=R;F=F+2|0;Q=Q+2|0}else{break}}Q=$+(G?S:-1)|0;F=p-v|0;if((F|0)>0){au=E;av=f;aw=F}else{break}do{au=au+(Q<<1)|0;av=av+(Q<<1)|0;F=v;I=av;R=au;while(1){ae=F-1|0;af=I+(v<<1)|0;b[af>>1]=(b[af>>1]|0)+(b[I>>1]|0)&65535;b[R>>1]=b[D+((b[I>>1]&2047)<<1)>>1]|0;if((ae|0)>0){F=ae;I=I+2|0;R=R+2|0}else{break}}aw=aw-v|0;}while((aw|0)>0)}}}while(0);ag=C+A|0;break};case 3:{v=e[h>>1]|0;D=C;E=c[q>>2]|0;do{if((p|0)>=(v|0)){if((v|0)==3){Q=b[f>>1]&2047;H=+g[E+(Q<<2)>>2]*2048.0;S=b[f+2>>1]&2047;J=+g[E+(S<<2)>>2]*2048.0;G=b[f+4>>1]&2047;T=+g[E+(G<<2)>>2]*2048.0;if(H<3071.0){ax=~~H}else{ax=3071}b[D>>1]=ax;if(J<3071.0){ay=~~J}else{ay=3071}b[C+2>>1]=ay;if(T<3071.0){az=~~T}else{az=3071}b[C+4>>1]=az;if(s){aA=D;aB=Q;aC=S;aE=G;aF=f;aG=u}else{break}while(1){G=aF+6|0;S=aA+6|0;Q=(e[G>>1]|0)+aB|0;T=+g[E+((Q&2047)<<2)>>2]*2048.0;$=(e[aF+8>>1]|0)+aC|0;J=+g[E+(($&2047)<<2)>>2]*2048.0;R=(e[aF+10>>1]|0)+aE|0;H=+g[E+((R&2047)<<2)>>2]*2048.0;if(T<3071.0){aH=~~T}else{aH=3071}b[S>>1]=aH;if(J<3071.0){aI=~~J}else{aI=3071}b[aA+8>>1]=aI;if(H<3071.0){aJ=~~H}else{aJ=3071}b[aA+10>>1]=aJ;I=aG-3|0;if((I|0)>0){aA=S;aB=Q;aC=$;aE=R;aF=G;aG=I}else{break}}}else if((v|0)==4){I=b[f>>1]&2047;H=+g[E+(I<<2)>>2]*2048.0;G=b[f+2>>1]&2047;J=+g[E+(G<<2)>>2]*2048.0;R=b[f+4>>1]&2047;T=+g[E+(R<<2)>>2]*2048.0;$=b[f+6>>1]&2047;aK=+g[E+($<<2)>>2]*2048.0;if(H<3071.0){aL=~~H}else{aL=3071}b[D>>1]=aL;if(J<3071.0){aM=~~J}else{aM=3071}b[C+2>>1]=aM;if(T<3071.0){aN=~~T}else{aN=3071}b[C+4>>1]=aN;if(aK<3071.0){aO=~~aK}else{aO=3071}b[C+6>>1]=aO;if(w){aP=D;aQ=I;aR=G;aS=R;aT=$;aU=f;aV=r}else{break}while(1){$=aU+8|0;R=aP+8|0;G=(e[$>>1]|0)+aQ|0;aK=+g[E+((G&2047)<<2)>>2]*2048.0;I=(e[aU+10>>1]|0)+aR|0;T=+g[E+((I&2047)<<2)>>2]*2048.0;Q=(e[aU+12>>1]|0)+aS|0;J=+g[E+((Q&2047)<<2)>>2]*2048.0;S=(e[aU+14>>1]|0)+aT|0;H=+g[E+((S&2047)<<2)>>2]*2048.0;if(aK<3071.0){aW=~~aK}else{aW=3071}b[R>>1]=aW;if(T<3071.0){aX=~~T}else{aX=3071}b[aP+10>>1]=aX;if(J<3071.0){aY=~~J}else{aY=3071}b[aP+12>>1]=aY;if(H<3071.0){aZ=~~H}else{aZ=3071}b[aP+14>>1]=aZ;F=aV-4|0;if((F|0)>0){aP=R;aQ=G;aR=I;aS=Q;aT=S;aU=$;aV=F}else{break}}}else{F=-v|0;$=(F|0)>-1;S=v+1|0;Q=v;I=f;G=D;while(1){R=Q-1|0;H=+g[E+((b[I>>1]&2047)<<2)>>2]*2048.0;if(H<3071.0){a_=~~H}else{a_=3071}b[G>>1]=a_;if((R|0)>0){Q=R;I=I+2|0;G=G+2|0}else{break}}G=S+($?F:-1)|0;I=p-v|0;if((I|0)>0){a$=D;a0=f;a1=I}else{break}do{a$=a$+(G<<1)|0;a0=a0+(G<<1)|0;I=v;Q=a0;R=a$;while(1){ae=I-1|0;af=Q+(v<<1)|0;a2=(b[af>>1]|0)+(b[Q>>1]|0)&65535;b[af>>1]=a2;H=+g[E+((a2&2047)<<2)>>2]*2048.0;if(H<3071.0){a3=~~H}else{a3=3071}b[R>>1]=a3;if((ae|0)>0){I=ae;Q=Q+2|0;R=R+2|0}else{break}}a1=a1-v|0;}while((a1|0)>0)}}}while(0);ag=C+A|0;break};case 2:{v=e[h>>1]|0;E=C;do{if((p|0)>=(v|0)){if((v|0)==3){D=b[f>>1]|0;b[E>>1]=D;G=b[f+2>>1]|0;b[C+2>>1]=G;F=b[f+4>>1]|0;b[C+4>>1]=F;if(!s){break}$=E;S=D&65535;D=G&65535;G=F&65535;F=f;R=u;while(1){Q=F+6|0;I=$+6|0;ae=(e[Q>>1]|0)+S|0;b[I>>1]=ae&2047;a2=(e[F+8>>1]|0)+D|0;b[$+8>>1]=a2&2047;af=(e[F+10>>1]|0)+G|0;b[$+10>>1]=af&2047;a4=R-3|0;if((a4|0)>0){$=I;S=ae;D=a2;G=af;F=Q;R=a4}else{break}}}else if((v|0)==4){R=b[f>>1]|0;b[E>>1]=R;F=b[f+2>>1]|0;b[C+2>>1]=F;G=b[f+4>>1]|0;b[C+4>>1]=G;D=b[f+6>>1]|0;b[C+6>>1]=D;if(!w){break}S=E;$=R&65535;R=F&65535;F=G&65535;G=D&65535;D=f;a4=r;while(1){Q=D+8|0;af=S+8|0;a2=(e[Q>>1]|0)+$|0;b[af>>1]=a2&2047;ae=(e[D+10>>1]|0)+R|0;b[S+10>>1]=ae&2047;I=(e[D+12>>1]|0)+F|0;b[S+12>>1]=I&2047;a5=(e[D+14>>1]|0)+G|0;b[S+14>>1]=a5&2047;a6=a4-4|0;if((a6|0)>0){S=af;$=a2;R=ae;F=I;G=a5;D=Q;a4=a6}else{break}}}else{a4=-v|0;D=(a4|0)>-1;G=v+1|0;F=v;R=f;$=E;while(1){S=F-1|0;b[$>>1]=b[R>>1]&2047;if((S|0)>0){F=S;R=R+2|0;$=$+2|0}else{break}}$=G+(D?a4:-1)|0;R=p-v|0;if((R|0)>0){a7=E;a8=f;a9=R}else{break}do{a7=a7+($<<1)|0;a8=a8+($<<1)|0;R=v;F=a8;S=a7;while(1){a6=R-1|0;Q=F+(v<<1)|0;b[Q>>1]=(b[Q>>1]|0)+(b[F>>1]|0)&65535;b[S>>1]=b[F>>1]&2047;if((a6|0)>0){R=a6;F=F+2|0;S=S+2|0}else{break}}a9=a9-v|0;}while((a9|0)>0)}}}while(0);ag=C+A|0;break};case 0:{v=e[h>>1]|0;E=c[B>>2]|0;do{if((p|0)>=(v|0)){if((v|0)==3){$=b[f>>1]&2047;a[C]=a[E+$|0]|0;a4=b[f+2>>1]&2047;a[C+1|0]=a[E+a4|0]|0;D=b[f+4>>1]&2047;a[C+2|0]=a[E+D|0]|0;if(s){ba=C;bb=$;bc=a4;bd=D;be=f;bf=u}else{break}while(1){D=be+6|0;a4=ba+3|0;$=(e[D>>1]|0)+bb|0;a[a4]=a[E+($&2047)|0]|0;G=(e[be+8>>1]|0)+bc|0;a[ba+4|0]=a[E+(G&2047)|0]|0;S=(e[be+10>>1]|0)+bd|0;a[ba+5|0]=a[E+(S&2047)|0]|0;F=bf-3|0;if((F|0)>0){ba=a4;bb=$;bc=G;bd=S;be=D;bf=F}else{break}}}else if((v|0)==4){F=b[f>>1]&2047;a[C]=a[E+F|0]|0;D=b[f+2>>1]&2047;a[C+1|0]=a[E+D|0]|0;S=b[f+4>>1]&2047;a[C+2|0]=a[E+S|0]|0;G=b[f+6>>1]&2047;a[C+3|0]=a[E+G|0]|0;if(w){bg=C;bh=F;bi=D;bj=S;bk=G;bl=f;bm=r}else{break}while(1){G=bl+8|0;S=bg+4|0;D=(e[G>>1]|0)+bh|0;a[S]=a[E+(D&2047)|0]|0;F=(e[bl+10>>1]|0)+bi|0;a[bg+5|0]=a[E+(F&2047)|0]|0;$=(e[bl+12>>1]|0)+bj|0;a[bg+6|0]=a[E+($&2047)|0]|0;a4=(e[bl+14>>1]|0)+bk|0;a[bg+7|0]=a[E+(a4&2047)|0]|0;R=bm-4|0;if((R|0)>0){bg=S;bh=D;bi=F;bj=$;bk=a4;bl=G;bm=R}else{break}}}else{R=-v|0;G=(R|0)>-1;a4=v+1|0;$=v;F=f;D=C;while(1){S=$-1|0;a[D]=a[E+(b[F>>1]&2047)|0]|0;if((S|0)>0){$=S;F=F+2|0;D=D+1|0}else{break}}D=a4+(G?R:-1)|0;F=p-v|0;if((F|0)>0){bn=C;bo=f;bp=F}else{break}do{bn=bn+D|0;bo=bo+(D<<1)|0;F=v;$=bo;S=bn;while(1){a6=F-1|0;Q=$+(v<<1)|0;b[Q>>1]=(b[Q>>1]|0)+(b[$>>1]|0)&65535;a[S]=a[E+(b[$>>1]&2047)|0]|0;if((a6|0)>0){F=a6;$=$+2|0;S=S+1|0}else{break}}bp=bp-v|0;}while((bp|0)>0)}}}while(0);ag=C+p|0;break};case 1:{v=e[h>>1]|0;E=c[B>>2]|0;do{if((p|0)>=(v|0)){if((v|0)==3){a[C]=0;D=b[f+4>>1]&2047;R=b[f+2>>1]&2047;G=a[E+R|0]|0;a4=b[f>>1]&2047;S=a[E+a4|0]|0;a[C+1|0]=a[E+D|0]|0;a[C+2|0]=G;a[C+3|0]=S;if(s){bq=C;br=a4;bs=R;bt=D;bu=f;bv=u}else{break}while(1){D=bu+6|0;R=bq+4|0;a[R]=0;a4=(e[bu+10>>1]|0)+bt|0;S=(e[bu+8>>1]|0)+bs|0;G=a[E+(S&2047)|0]|0;$=(e[D>>1]|0)+br|0;F=a[E+($&2047)|0]|0;a[bq+5|0]=a[E+(a4&2047)|0]|0;a[bq+6|0]=G;a[bq+7|0]=F;F=bv-3|0;if((F|0)>0){bq=R;br=$;bs=S;bt=a4;bu=D;bv=F}else{break}}}else if((v|0)==4){F=b[f+6>>1]&2047;D=b[f+4>>1]&2047;a4=a[E+D|0]|0;S=b[f+2>>1]&2047;$=a[E+S|0]|0;R=b[f>>1]&2047;G=a[E+R|0]|0;a[C]=a[E+F|0]|0;a[C+1|0]=a4;a[C+2|0]=$;a[C+3|0]=G;if(w){bw=C;bx=R;by=S;bz=D;bA=F;bB=f;bC=r}else{break}while(1){F=bB+8|0;D=bw+4|0;S=(e[bB+14>>1]|0)+bA|0;R=(e[bB+12>>1]|0)+bz|0;G=a[E+(R&2047)|0]|0;$=(e[bB+10>>1]|0)+by|0;a4=a[E+($&2047)|0]|0;a6=(e[F>>1]|0)+bx|0;Q=a[E+(a6&2047)|0]|0;a[D]=a[E+(S&2047)|0]|0;a[bw+5|0]=G;a[bw+6|0]=a4;a[bw+7|0]=Q;Q=bC-4|0;if((Q|0)>0){bw=D;bx=a6;by=$;bz=R;bA=S;bB=F;bC=Q}else{break}}}else{Q=-v|0;F=(Q|0)>-1;S=v+1|0;R=v;$=f;a6=C;while(1){D=R-1|0;a[a6]=a[E+(b[$>>1]&2047)|0]|0;if((D|0)>0){R=D;$=$+2|0;a6=a6+1|0}else{break}}a6=S+(F?Q:-1)|0;$=p-v|0;if(($|0)>0){bD=C;bE=f;bF=$}else{break}do{bD=bD+a6|0;bE=bE+(a6<<1)|0;$=v;R=bE;D=bD;while(1){a4=$-1|0;G=R+(v<<1)|0;b[G>>1]=(b[G>>1]|0)+(b[R>>1]|0)&65535;a[D]=a[E+(b[R>>1]&2047)|0]|0;if((a4|0)>0){$=a4;R=R+2|0;D=D+1|0}else{break}}bF=bF-v|0;}while((bF|0)>0)}}}while(0);ag=C+p|0;break};default:{break L914}}v=k+p|0;if((v|0)>=(z|0)){o=1;x=817;break}k=v;C=ag;f=f+(p<<1)|0}if((x|0)==817){i=j;return o|0}cg(c[t>>2]|0,44520,37648,(n=i,i=i+8|0,c[n>>2]=e[d+84>>1]|0,n)|0);i=n;o=0;i=j;return o|0}function f8(a){a=a|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;f=c[a+576>>2]|0;if((f|0)==0){aD(22864,37104,864,44424);return 0}if((b[a+126>>1]|0)==1){g=b[a+98>>1]|0}else{g=1}b[f+124>>1]=g;h=c[a+100>>2]|0;j=aa(aa((g&65535)<<1,c[a+56>>2]|0)|0,h)|0;if((j|0)==0){k=0;i=d;return k|0}h=dT(j)|0;c[f+120>>2]=h;if((h|0)==0){k=0;i=d;return k|0}h=f+132|0;L1106:do{if((c[h>>2]|0)==-1){j=a+84|0;g=b[a+86>>1]|0;switch(e[j>>1]|0){case 12:{if((g<<16>>16|0)==4|(g<<16>>16|0)==2){l=3;m=831}else{m=830}break};case 11:{if((g<<16>>16|0)==4|(g<<16>>16|0)==1){l=2;m=831}else{m=830}break};case 32:{n=g<<16>>16==3;c[h>>2]=n?5:-1;if(n){break L1106}break};case 8:{if((g<<16>>16|0)==4|(g<<16>>16|0)==1){l=0;m=831}else{m=830}break};case 16:{if((g<<16>>16|0)==4|(g<<16>>16|0)==1){l=4;m=831}else{m=830}break};default:{m=830}}if((m|0)==830){c[h>>2]=-1}else if((m|0)==831){c[h>>2]=l;break}cg(c[a+628>>2]|0,44424,41648,(o=i,i=i+8|0,c[o>>2]=e[j>>1]|0,o)|0);i=o;k=0;i=d;return k|0}}while(0);if((gR(f+64|0,c[f+136>>2]|0,41104,56)|0)==0){l=f+128|0;c[l>>2]=c[l>>2]|1;k=1;i=d;return k|0}else{cg(c[a+628>>2]|0,44424,40536,(o=i,i=i+8|0,c[o>>2]=c[f+88>>2],o)|0);i=o;k=0;i=d;return k|0}return 0}function f9(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;b=i;d=c[a+576>>2]|0;if((d|0)==0){aD(22864,37104,903,44472);return 0}c[d+76>>2]=c[a+588>>2];e=a+592|0;f=c[e>>2]|0;c[d+80>>2]=f;if((f|0)==(c[e>>2]|0)){g=(gU(d+64|0)|0)==0|0;i=b;return g|0}else{cg(c[a+628>>2]|0,44472,24736,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;g=0;i=b;return g|0}return 0}function ga(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=i;d=c[a+576>>2]|0;e=d+64|0;c[d+68>>2]=0;f=d+80|0;g=a+592|0;h=a+608|0;j=a+588|0;k=d+76|0;while(1){l=gY(e,4)|0;if(l>>>0>=2){break}m=c[f>>2]|0;n=c[g>>2]|0;if((m|0)!=(n|0)){c[h>>2]=n-m;d1(a)|0;c[k>>2]=c[j>>2];c[f>>2]=c[g>>2]}if((l|0)==1){o=1;p=859;break}}if((p|0)==859){i=b;return o|0}cg(c[a+628>>2]|0,147448,28448,(a=i,i=i+8|0,c[a>>2]=c[d+88>>2],a)|0);i=a;o=0;i=b;return o|0}function gb(a,f,h,j){a=a|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0.0,at=0.0,au=0.0,av=0,aw=0,ax=0.0,ay=0.0,az=0.0,aA=0.0,aB=0,aC=0,aD=0.0,aE=0.0,aF=0.0,aG=0.0,aH=0,aI=0.0,aJ=0,aK=0,aL=0,aM=0.0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0;j=i;k=c[a+576>>2]|0;l=k+132|0;m=c[l>>2]|0;switch(m|0){case 5:{n=h>>>2;break};case 4:case 3:case 2:{n=h>>>1;break};case 0:case 1:{n=h;break};default:{cg(c[a+628>>2]|0,147472,26112,(o=i,i=i+8|0,c[o>>2]=e[a+84>>1]|0,o)|0);i=o;p=0;i=j;return p|0}}h=k+124|0;q=aa(e[h>>1]|0,c[a+56>>2]|0)|0;r=k+120|0;L1152:do{if((n|0)>0){s=k+160|0;t=q<<2;u=q-1|0;v=q-3|0;w=(v|0)>0;x=q-4|0;y=(x|0)>0;z=k+164|0;A=q<<1;B=k+168|0;C=f;D=0;E=c[r>>2]|0;F=m;while(1){if((F|0)==4){G=C;H=e[h>>1]|0;I=c[z>>2]|0;do{if((q|0)>=(H|0)){if((H|0)==3){J=b[I+((e[G>>1]|0)>>>2<<1)>>1]|0;b[E>>1]=J;K=b[I+((e[C+2>>1]|0)>>>2<<1)>>1]|0;b[E+2>>1]=K;L=b[I+((e[C+4>>1]|0)>>>2<<1)>>1]|0;b[E+4>>1]=L;if(w){M=E;N=J;O=K;P=L;Q=G;R=v}else{break}while(1){L=M+6|0;K=Q+6|0;J=b[I+((e[K>>1]|0)>>>2<<1)>>1]|0;b[L>>1]=J-N&2047;S=b[I+((e[Q+8>>1]|0)>>>2<<1)>>1]|0;b[M+8>>1]=S-O&2047;T=b[I+((e[Q+10>>1]|0)>>>2<<1)>>1]|0;b[M+10>>1]=T-P&2047;U=R-3|0;if((U|0)>0){M=L;N=J;O=S;P=T;Q=K;R=U}else{break}}}else if((H|0)==4){U=b[I+((e[G>>1]|0)>>>2<<1)>>1]|0;b[E>>1]=U;K=b[I+((e[C+2>>1]|0)>>>2<<1)>>1]|0;b[E+2>>1]=K;T=b[I+((e[C+4>>1]|0)>>>2<<1)>>1]|0;b[E+4>>1]=T;S=b[I+((e[C+6>>1]|0)>>>2<<1)>>1]|0;b[E+6>>1]=S;if(y){V=E;W=U;X=K;Y=T;Z=S;$=G;ab=x}else{break}while(1){S=V+8|0;T=$+8|0;K=b[I+((e[T>>1]|0)>>>2<<1)>>1]|0;b[S>>1]=K-W&2047;U=b[I+((e[$+10>>1]|0)>>>2<<1)>>1]|0;b[V+10>>1]=U-X&2047;J=b[I+((e[$+12>>1]|0)>>>2<<1)>>1]|0;b[V+12>>1]=J-Y&2047;L=b[I+((e[$+14>>1]|0)>>>2<<1)>>1]|0;b[V+14>>1]=L-Z&2047;ac=ab-4|0;if((ac|0)>0){V=S;W=K;X=U;Y=J;Z=L;$=T;ab=ac}else{break}}}else{ac=G+(u<<1)|0;T=E+(u<<1)|0;L=q-H|0;if((L|0)>0){J=-H|0;U=~(((J|0)>-1?J:-1)+H);J=T;K=ac;S=L;while(1){L=H;ad=K;ae=J;while(1){af=L-1|0;ag=b[I+((e[ad>>1]|0)>>>2<<1)>>1]|0;b[ae>>1]=ag;ah=ae+(H<<1)|0;b[ah>>1]=(b[ah>>1]|0)-ag&2047;if((af|0)>0){L=af;ad=ad-2|0;ae=ae-2|0}else{break}}ae=K+(U<<1)|0;ad=J+(U<<1)|0;L=S-H|0;if((L|0)>0){J=ad;K=ae;S=L}else{ai=H;aj=ae;ak=ad;break}}}else{ai=H;aj=ac;ak=T}while(1){S=ai-1|0;b[ak>>1]=b[I+((e[aj>>1]|0)>>>2<<1)>>1]|0;if((S|0)>0){ai=S;aj=aj-2|0;ak=ak-2|0}else{break}}}}}while(0);al=C+A|0}else if((F|0)==5){I=C;H=e[h>>1]|0;G=c[s>>2]|0;am=+g[36922];do{if((q|0)>=(H|0)){if((H|0)==3){an=+g[I>>2];do{if(an<0.0){ao=0.0}else{if(an<2.0){ao=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){ao=2047.0;break}ap=+g[36920];ao=ap*+_(+(an*+g[36918]))+.5}}while(0);T=~~ao;b[E>>1]=T;ac=T&65535;an=+g[C+4>>2];do{if(an<0.0){aq=0.0}else{if(an<2.0){aq=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){aq=2047.0;break}ap=+g[36920];aq=ap*+_(+(an*+g[36918]))+.5}}while(0);T=~~aq;b[E+2>>1]=T;S=T&65535;an=+g[C+8>>2];do{if(an<0.0){ar=0.0}else{if(an<2.0){ar=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){ar=2047.0;break}ap=+g[36920];ar=ap*+_(+(an*+g[36918]))+.5}}while(0);T=~~ar;b[E+4>>1]=T;if(!w){break}K=E;J=ac;U=S;ad=T&65535;T=I;ae=v;while(1){L=K+6|0;af=T+12|0;an=+g[af>>2];do{if(an<0.0){as=0.0}else{if(an<2.0){as=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){as=2047.0;break}ap=+g[36920];as=ap*+_(+(an*+g[36918]))+.5}}while(0);ag=~~as;b[L>>1]=ag-J&2047;an=+g[T+16>>2];do{if(an<0.0){at=0.0}else{if(an<2.0){at=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){at=2047.0;break}ap=+g[36920];at=ap*+_(+(an*+g[36918]))+.5}}while(0);ah=~~at;b[K+8>>1]=ah-U&2047;an=+g[T+20>>2];do{if(an<0.0){au=0.0}else{if(an<2.0){au=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){au=2047.0;break}ap=+g[36920];au=ap*+_(+(an*+g[36918]))+.5}}while(0);av=~~au;b[K+10>>1]=av-ad&2047;aw=ae-3|0;if((aw|0)>0){K=L;J=ag;U=ah;ad=av;T=af;ae=aw}else{break}}}else if((H|0)==4){an=+g[I>>2];do{if(an<0.0){ax=0.0}else{if(an<2.0){ax=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){ax=2047.0;break}ap=+g[36920];ax=ap*+_(+(an*+g[36918]))+.5}}while(0);ae=~~ax;b[E>>1]=ae;T=ae&65535;an=+g[C+4>>2];do{if(an<0.0){ay=0.0}else{if(an<2.0){ay=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){ay=2047.0;break}ap=+g[36920];ay=ap*+_(+(an*+g[36918]))+.5}}while(0);ae=~~ay;b[E+2>>1]=ae;ad=ae&65535;an=+g[C+8>>2];do{if(an<0.0){az=0.0}else{if(an<2.0){az=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){az=2047.0;break}ap=+g[36920];az=ap*+_(+(an*+g[36918]))+.5}}while(0);ae=~~az;b[E+4>>1]=ae;U=ae&65535;an=+g[C+12>>2];do{if(an<0.0){aA=0.0}else{if(an<2.0){aA=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){aA=2047.0;break}ap=+g[36920];aA=ap*+_(+(an*+g[36918]))+.5}}while(0);ae=~~aA;b[E+6>>1]=ae;if(!y){break}J=E;K=T;S=ad;ac=U;aw=ae&65535;ae=I;av=x;while(1){aB=J+8|0;aC=ae+16|0;an=+g[aC>>2];do{if(an<0.0){aD=0.0}else{if(an<2.0){aD=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){aD=2047.0;break}ap=+g[36920];aD=ap*+_(+(an*+g[36918]))+.5}}while(0);af=~~aD;b[aB>>1]=af-K&2047;an=+g[ae+20>>2];do{if(an<0.0){aE=0.0}else{if(an<2.0){aE=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){aE=2047.0;break}ap=+g[36920];aE=ap*+_(+(an*+g[36918]))+.5}}while(0);ah=~~aE;b[J+10>>1]=ah-S&2047;an=+g[ae+24>>2];do{if(an<0.0){aF=0.0}else{if(an<2.0){aF=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){aF=2047.0;break}ap=+g[36920];aF=ap*+_(+(an*+g[36918]))+.5}}while(0);ag=~~aF;b[J+12>>1]=ag-ac&2047;an=+g[ae+28>>2];do{if(an<0.0){aG=0.0}else{if(an<2.0){aG=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){aG=2047.0;break}ap=+g[36920];aG=ap*+_(+(an*+g[36918]))+.5}}while(0);L=~~aG;b[J+14>>1]=L-aw&2047;aH=av-4|0;if((aH|0)>0){J=aB;K=af;S=ah;ac=ag;aw=L;ae=aC;av=aH}else{break}}}else{av=I+(u<<2)|0;ae=E+(u<<1)|0;aw=q-H|0;if((aw|0)>0){ac=-H|0;S=~(((ac|0)>-1?ac:-1)+H);ac=ae;K=av;J=aw;while(1){aw=H;U=K;ad=ac;while(1){T=aw-1|0;an=+g[U>>2];do{if(an<0.0){aI=0.0}else{if(an<2.0){aI=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){aI=2047.0;break}ap=+g[36920];aI=ap*+_(+(an*+g[36918]))+.5}}while(0);aH=~~aI;b[ad>>1]=aH;L=ad+(H<<1)|0;b[L>>1]=(b[L>>1]|0)-aH&2047;if((T|0)>0){aw=T;U=U-4|0;ad=ad-2|0}else{break}}ad=K+(S<<2)|0;U=ac+(S<<1)|0;aw=J-H|0;if((aw|0)>0){ac=U;K=ad;J=aw}else{aJ=H;aK=ad;aL=U;break}}}else{aJ=H;aK=av;aL=ae}while(1){J=aJ-1|0;an=+g[aK>>2];do{if(an<0.0){aM=0.0}else{if(an<2.0){aM=+(e[G+(~~(am*an)<<1)>>1]|0|0);break}if(an>24.200000762939453){aM=2047.0;break}ap=+g[36920];aM=ap*+_(+(an*+g[36918]))+.5}}while(0);b[aL>>1]=~~aM;if((J|0)>0){aJ=J;aK=aK-4|0;aL=aL-2|0}else{break}}}}}while(0);al=C+t|0}else if((F|0)==0){G=e[h>>1]|0;H=c[B>>2]|0;do{if((q|0)>=(G|0)){if((G|0)==3){I=b[H+((d[C]|0)<<1)>>1]|0;b[E>>1]=I;ae=b[H+((d[C+1|0]|0)<<1)>>1]|0;b[E+2>>1]=ae;av=b[H+((d[C+2|0]|0)<<1)>>1]|0;b[E+4>>1]=av;if(w){aN=E;aO=I;aP=ae;aQ=av;aR=C;aS=v}else{break}while(1){av=aR+3|0;ae=b[H+((d[av]|0)<<1)>>1]|0;I=aN+6|0;b[I>>1]=ae-aO&2047;K=b[H+((d[aR+4|0]|0)<<1)>>1]|0;b[aN+8>>1]=K-aP&2047;ac=b[H+((d[aR+5|0]|0)<<1)>>1]|0;b[aN+10>>1]=ac-aQ&2047;S=aS-3|0;if((S|0)>0){aN=I;aO=ae;aP=K;aQ=ac;aR=av;aS=S}else{break}}}else if((G|0)==4){S=b[H+((d[C]|0)<<1)>>1]|0;b[E>>1]=S;av=b[H+((d[C+1|0]|0)<<1)>>1]|0;b[E+2>>1]=av;ac=b[H+((d[C+2|0]|0)<<1)>>1]|0;b[E+4>>1]=ac;K=b[H+((d[C+3|0]|0)<<1)>>1]|0;b[E+6>>1]=K;if(y){aT=E;aU=S;aV=av;aW=ac;aX=K;aY=C;aZ=x}else{break}while(1){K=aY+4|0;ac=b[H+((d[K]|0)<<1)>>1]|0;av=aT+8|0;b[av>>1]=ac-aU&2047;S=b[H+((d[aY+5|0]|0)<<1)>>1]|0;b[aT+10>>1]=S-aV&2047;ae=b[H+((d[aY+6|0]|0)<<1)>>1]|0;b[aT+12>>1]=ae-aW&2047;I=b[H+((d[aY+7|0]|0)<<1)>>1]|0;b[aT+14>>1]=I-aX&2047;U=aZ-4|0;if((U|0)>0){aT=av;aU=ac;aV=S;aW=ae;aX=I;aY=K;aZ=U}else{break}}}else{U=u+G|0;K=E+(U<<1)|0;I=C+U|0;U=q-G|0;if((U|0)>0){ae=-G|0;S=~(((ae|0)>-1?ae:-1)+G);ae=K;ac=I;av=U;while(1){U=G;ad=ac;aw=ae;while(1){aC=U-1|0;ag=b[H+((d[ad]|0)<<1)>>1]|0;b[aw>>1]=ag;ah=aw+(G<<1)|0;b[ah>>1]=(b[ah>>1]|0)-ag&2047;if((aC|0)>0){U=aC;ad=ad-1|0;aw=aw-2|0}else{break}}aw=ac+S|0;ad=ae+(S<<1)|0;U=av-G|0;if((U|0)>0){ae=ad;ac=aw;av=U}else{a_=G;a$=aw;a0=ad;break}}}else{a_=G;a$=I;a0=K}while(1){av=a_-1|0;b[a0>>1]=b[H+((d[a$]|0)<<1)>>1]|0;if((av|0)>0){a_=av;a$=a$-1|0;a0=a0-2|0}else{break}}}}}while(0);al=C+q|0}else{break}H=D+q|0;if((H|0)>=(n|0)){break L1152}C=al;D=H;E=E+(q<<1)|0;F=c[l>>2]|0}cg(c[a+628>>2]|0,147472,26112,(o=i,i=i+8|0,c[o>>2]=e[a+84>>1]|0,o)|0);i=o;p=0;i=j;return p|0}}while(0);l=k+64|0;q=l;c[l>>2]=c[r>>2];r=k+68|0;c[r>>2]=n<<1;if((n&2147483647|0)!=(n|0)){cg(c[a+628>>2]|0,147472,24736,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o;p=0;i=j;return p|0}n=k+80|0;l=a+592|0;al=a+608|0;a0=a+588|0;a$=k+76|0;while(1){if((gY(q,0)|0)!=0){break}if((c[n>>2]|0)==0){c[al>>2]=c[l>>2];d1(a)|0;c[a$>>2]=c[a0>>2];c[n>>2]=c[l>>2]}if((c[r>>2]|0)==0){p=1;a1=1004;break}}if((a1|0)==1004){i=j;return p|0}cg(c[a+628>>2]|0,147472,23648,(o=i,i=i+8|0,c[o>>2]=c[k+88>>2],o)|0);i=o;p=0;i=j;return p|0}function gc(a){a=a|0;b[a+84>>1]=8;b[a+86>>1]=1;return}function gd(a){a=a|0;var b=0,d=0,e=0;b=a+576|0;d=c[b>>2]|0;if((d|0)==0){aD(27216,37104,1231,44536)}gm(a)|0;c[a+672>>2]=c[d+140>>2];c[a+668>>2]=c[d+144>>2];e=c[d+160>>2]|0;if((e|0)!=0){dU(e)}e=c[d+164>>2]|0;if((e|0)!=0){dU(e)}e=c[d+168>>2]|0;if((e|0)!=0){dU(e)}e=c[d+148>>2]|0;if((e|0)!=0){dU(e)}e=c[d+152>>2]|0;if((e|0)!=0){dU(e)}e=c[d+156>>2]|0;if((e|0)!=0){dU(e)}do{if((c[d+128>>2]&1|0)!=0){e=d+64|0;if((c[a+8>>2]|0)==0){g6(e)|0;break}else{gT(e)|0;break}}}while(0);e=c[d+120>>2]|0;if((e|0)==0){dU(d);c[b>>2]=0;em(a);return}dU(e);dU(d);c[b>>2]=0;em(a);return}function ge(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a+576>>2]|0;if((b|0)==65558){f=c[e+136>>2]|0;c[(v=c[d+4>>2]|0,c[d+4>>2]=v+8,c[(c[d>>2]|0)+v>>2]|0)>>2]=f;g=1;return g|0}else if((b|0)==65549){f=c[e+132>>2]|0;c[(v=c[d+4>>2]|0,c[d+4>>2]=v+8,c[(c[d>>2]|0)+v>>2]|0)>>2]=f;g=1;return g|0}else{g=be[c[e+140>>2]&63](a,b,d)|0;return g|0}return 0}function gf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=c[a+576>>2]|0;if((b|0)==65558){g=(v=c[d+4>>2]|0,c[d+4>>2]=v+8,c[(c[d>>2]|0)+v>>2]|0);c[f+136>>2]=g;if((c[a+8>>2]|0)==0){h=1;i=e;return h|0}if((c[f+128>>2]&1|0)==0){h=1;i=e;return h|0}if((gX(f+64|0,g,0)|0)==0){h=1;i=e;return h|0}cg(c[a+628>>2]|0,147424,28448,(j=i,i=i+8|0,c[j>>2]=c[f+88>>2],j)|0);i=j;h=0;i=e;return h|0}else if((b|0)==65549){g=(v=c[d+4>>2]|0,c[d+4>>2]=v+8,c[(c[d>>2]|0)+v>>2]|0);c[f+132>>2]=g;switch(g|0){case 2:{bF(a,258,(j=i,i=i+8|0,c[j>>2]=16,j)|0)|0;i=j;bF(a,339,(j=i,i=i+8|0,c[j>>2]=1,j)|0)|0;i=j;break};case 4:{bF(a,258,(j=i,i=i+8|0,c[j>>2]=16,j)|0)|0;i=j;bF(a,339,(j=i,i=i+8|0,c[j>>2]=1,j)|0)|0;i=j;break};case 0:case 1:{bF(a,258,(j=i,i=i+8|0,c[j>>2]=8,j)|0)|0;i=j;bF(a,339,(j=i,i=i+8|0,c[j>>2]=1,j)|0)|0;i=j;break};case 3:{bF(a,258,(j=i,i=i+8|0,c[j>>2]=16,j)|0)|0;i=j;bF(a,339,(j=i,i=i+8|0,c[j>>2]=2,j)|0)|0;i=j;break};case 5:{bF(a,258,(j=i,i=i+8|0,c[j>>2]=32,j)|0)|0;i=j;bF(a,339,(j=i,i=i+8|0,c[j>>2]=3,j)|0)|0;i=j;break};default:{}}if((c[a+12>>2]&1024|0)==0){k=-1}else{k=dJ(a)|0}c[a+496>>2]=k;c[a+580>>2]=dr(a)|0;h=1;i=e;return h|0}else{h=be[c[f+144>>2]&63](a,b,d)|0;i=e;return h|0}return 0}
function bl(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function bm(){return i|0}function bn(a){a=a|0;i=a}function bo(a,b){a=a|0;b=b|0;if((r|0)==0){r=a;s=b}}function bp(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function bq(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function br(a){a=a|0;E=a}function bs(a){a=a|0;F=a}function bt(a){a=a|0;G=a}function bu(a){a=a|0;H=a}function bv(a){a=a|0;I=a}function bw(a){a=a|0;J=a}function bx(a){a=a|0;K=a}function by(a){a=a|0;L=a}function bz(a){a=a|0;M=a}function bA(a){a=a|0;N=a}function bB(){}function bC(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+8|0;e=d|0;c[e>>2]=0;bH(a,b,(b=i,i=i+8|0,c[b>>2]=e,b)|0)|0;i=b;i=d;return c[e>>2]|0}function bD(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if((c[a+8>>2]|0)!=0){ch(a)|0}bb[c[a+564>>2]&31](a);bJ(a);d=c[a+32>>2]|0;if((d|0)!=0){dU(d)}d=a+680|0;e=c[d>>2]|0;if((e|0)!=0){f=e;do{c[d>>2]=c[f>>2];dU(c[f+8>>2]|0);dU(f);f=c[d>>2]|0;}while((f|0)!=0)}f=c[a+588>>2]|0;d=a+12|0;do{if((f|0)!=0){if((c[d>>2]&512|0)==0){break}dU(f)}}while(0);if((c[d>>2]&2048|0)!=0){d=c[a+616>>2]|0;bk[c[a+624>>2]&7](c[a+628>>2]|0,c[a+612>>2]|0,d,(d|0)<0|0?-1:0)}d=a+656|0;f=c[d>>2]|0;do{if((f|0)!=0){e=a+660|0;g=c[e>>2]|0;if((g|0)==0){break}else{h=0;i=f;j=g}while(1){g=c[i+(h<<2)>>2]|0;do{if((b[g+24>>1]|0)==65){k=c[g+28>>2]|0;if((ar(42184,k|0,4)|0)!=0){l=j;m=i;break}dU(k);dU(g);l=c[e>>2]|0;m=c[d>>2]|0}else{l=j;m=i}}while(0);g=h+1|0;if(g>>>0<l>>>0){h=g;i=m;j=l}else{break}}dU(m)}}while(0);m=a+688|0;l=c[m>>2]|0;if((l|0)==0){n=a;dU(n);return}j=a+684|0;i=0;h=c[j>>2]|0;d=l;while(1){if((c[h+(i<<4)+4>>2]|0)==0){o=d;p=h}else{dU(c[h+(i<<4)+12>>2]|0);o=c[m>>2]|0;p=c[j>>2]|0}l=i+1|0;if(l>>>0<o>>>0){i=l;h=p;d=o}else{break}}dU(p);n=a;dU(n);return}function bE(a){a=a|0;var b=0,d=0;b=c[a+644>>2]|0;d=c[a+628>>2]|0;bD(a);bf[b&63](d)|0;return}function bF(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e|0;g=f;c[g>>2]=d;c[g+4>>2]=0;g=bG(a,b,f|0)|0;i=e;return g|0}function bG(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=bT(b,d,0)|0;if((g|0)==0){cg(c[b+628>>2]|0,32904,32168,(h=i,i=i+24|0,c[h>>2]=c[b>>2],c[h+8>>2]=d>>>0>65535?40920:148304,c[h+16>>2]=d,h)|0);i=h;j=0;i=f;return j|0}do{if((d|0)!=257){if((c[b+12>>2]&64|0)==0){break}if((a[g+26|0]|0)!=0){break}k=c[g+28>>2]|0;cg(c[b+628>>2]|0,32904,31904,(h=i,i=i+16|0,c[h>>2]=c[b>>2],c[h+8>>2]=k,h)|0);i=h;j=0;i=f;return j|0}}while(0);j=be[c[b+668>>2]&63](b,d,e)|0;i=f;return j|0}function bH(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f|0;h=g|0;j=g;c[j>>2]=d;c[j+4>>2]=0;j=bT(a,b,0)|0;if((j|0)==0){k=0;i=f;return k|0}do{if(b>>>0<=65535){d=e[j+24>>1]|0;if((1<<(d&31)&c[a+40+(d>>>5<<2)>>2]|0)==0){k=0}else{break}i=f;return k|0}}while(0);k=be[c[a+672>>2]&63](a,b,h)|0;i=f;return k|0}function bI(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,g=0,h=0;f=bT(a,b,0)|0;if((f|0)==0){g=0;return g|0}do{if(b>>>0<=65535){h=e[f+24>>1]|0;if((1<<(h&31)&c[a+40+(h>>>5<<2)>>2]|0)==0){g=0}else{break}return g|0}}while(0);g=be[c[a+672>>2]&63](a,b,d)|0;return g|0}function bJ(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;dW(a+40|0,0,4);b=a+108|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+112|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+140|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+144|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+148|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+160|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+188|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+220|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+212|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+200|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+204|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+208|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+172|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+176|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+44|0;c[b>>2]=c[b>>2]&-385;b=a+224|0;d=c[b>>2]|0;e=a+228|0;if((d|0)>0){a=0;f=d;while(1){d=c[(c[e>>2]|0)+(a*12|0)+8>>2]|0;if((d|0)==0){g=f}else{dU(d);g=c[b>>2]|0}d=a+1|0;if((d|0)<(g|0)){a=d;f=g}else{break}}}c[b>>2]=0;b=c[e>>2]|0;if((b|0)==0){return}dU(b);c[e>>2]=0;return}function bK(a){a=a|0;var b=0;bL(a)|0;b=a+456|0;c[b>>2]=0;c[b+4>>2]=0;hv(a+16|0,0,16);c[a+444>>2]=-1;c[a+452>>2]=-1;return 0}function bL(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;bR(a,bQ()|0);dW(a+40|0,0,192);b[a+94>>1]=1;b[a+84>>1]=1;b[a+92>>1]=1;b[a+96>>1]=1;b[a+98>>1]=1;c[a+100>>2]=-1;c[a+68>>2]=0;c[a+72>>2]=0;c[a+76>>2]=1;c[a+180>>2]=1;b[a+124>>1]=2;b[a+86>>1]=1;c[a+64>>2]=1;b[a+192>>1]=2;b[a+194>>1]=2;b[a+196>>1]=1;c[a+652>>2]=66;c[a+664>>2]=0;c[a+668>>2]=16;c[a+672>>2]=32;c[a+676>>2]=0;e=c[37198]|0;if((e|0)==0){f=bF(a,259,(g=i,i=i+8|0,c[g>>2]=1,g)|0)|0;i=g;h=a+12|0;j=c[h>>2]|0;k=j&-1033;c[h>>2]=k;i=d;return 1}bb[e&31](a);f=bF(a,259,(g=i,i=i+8|0,c[g>>2]=1,g)|0)|0;i=g;h=a+12|0;j=c[h>>2]|0;k=j&-1033;c[h>>2]=k;i=d;return 1}function bM(f,j,k){f=f|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0.0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0;l=i;i=i+96|0;m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;w=l+72|0;x=l+80|0;y=l+88|0;z=f+40|0;A=bT(f,j,0)|0;B=(b[A+24>>1]|0)==65;C=B?0:j;L132:do{if((C|0)==254){c[f+80>>2]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);D=1;E=320}else if((C|0)==256){c[f+56>>2]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);D=1;E=320}else if((C|0)==258){F=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);b[f+84>>1]=F&65535;if((c[f+12>>2]&128|0)==0){D=1;E=320;break}switch(F&65535|0){case 8:{c[f+652>>2]=66;D=1;E=320;break L132;break};case 16:{c[f+652>>2]=50;D=1;E=320;break L132;break};case 24:{c[f+652>>2]=8;D=1;E=320;break L132;break};case 32:{c[f+652>>2]=12;D=1;E=320;break L132;break};case 64:{c[f+652>>2]=14;D=1;E=320;break L132;break};case 128:{c[f+652>>2]=14;D=1;E=320;break L132;break};default:{D=1;E=320;break L132}}}else if((C|0)==262){b[f+90>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;D=1;E=320}else if((C|0)==263){b[f+92>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;D=1;E=320}else if((C|0)==266){F=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);G=F&65535;if((G-1|0)>>>0>1){H=G;E=324;break}b[f+94>>1]=F&65535;D=1;E=320}else if((C|0)==274){F=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);G=F&65535;if((G|0)==0|G>>>0>8){H=G;E=324;break}b[f+96>>1]=F&65535;D=1;E=320}else if((C|0)==277){F=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);if((F&65535|0)==0){H=0;E=324;break}b[f+98>>1]=F&65535;D=1;E=320}else if((C|0)==278){F=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);if((F|0)==0){I=0;E=327;break}c[f+100>>2]=F;if((c[z>>2]&4|0)!=0){D=1;E=320;break}c[f+72>>2]=F;c[f+68>>2]=c[f+56>>2];D=1;E=320}else if((C|0)==280){b[f+104>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;D=1;E=320}else if((C|0)==281){b[f+106>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;D=1;E=320}else if((C|0)==340){F=f+108|0;if((c[f+12>>2]&4194304|0)==0){J=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,+h[(c[k>>2]|0)+v>>3]);G=b[f+98>>1]|0;K=G&65535;L=c[F>>2]|0;if((L|0)!=0){dU(L)}L=dT(K<<3)|0;M=L;c[F>>2]=M;if((L|0)==0|G<<16>>16==0){D=1;E=320;break}G=K-1|0;h[M+(G<<3)>>3]=J;if((G|0)==0){D=1;E=320;break}else{N=G}while(1){G=N-1|0;h[(c[F>>2]|0)+(G<<3)>>3]=J;if((G|0)==0){D=1;E=320;break}else{N=G}}}else{G=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);M=e[f+98>>1]|0;K=c[F>>2]|0;if((K|0)!=0){dU(K);c[F>>2]=0}if((G|0)==0){D=1;E=320;break}K=M<<3;M=dT(K)|0;c[F>>2]=M;if((M|0)==0){D=1;E=320;break}dX(M,G,K);D=1;E=320;break}}else if((C|0)==257){c[f+60>>2]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);D=1;E=320}else if((C|0)==259){K=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);G=K&65535;if((c[z>>2]&128|0)!=0){if((b[f+88>>1]|0)==(K&65535)<<16>>16){D=1;E=320;break}bb[c[f+564>>2]&31](f);M=f+12|0;c[M>>2]=c[M>>2]&-33}M=ep(f,G)|0;if((M|0)==0){O=0;break}b[f+88>>1]=K&65535;D=M;E=320}else if((C|0)==341){M=f+112|0;if((c[f+12>>2]&4194304|0)==0){J=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,+h[(c[k>>2]|0)+v>>3]);K=b[f+98>>1]|0;G=K&65535;L=c[M>>2]|0;if((L|0)!=0){dU(L)}L=dT(G<<3)|0;P=L;c[M>>2]=P;if((L|0)==0|K<<16>>16==0){D=1;E=320;break}K=G-1|0;h[P+(K<<3)>>3]=J;if((K|0)==0){D=1;E=320;break}else{Q=K}while(1){K=Q-1|0;h[(c[M>>2]|0)+(K<<3)>>3]=J;if((K|0)==0){D=1;E=320;break}else{Q=K}}}else{F=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);K=e[f+98>>1]|0;P=c[M>>2]|0;if((P|0)!=0){dU(P);c[M>>2]=0}if((F|0)==0){D=1;E=320;break}P=K<<3;K=dT(P)|0;c[M>>2]=K;if((K|0)==0){D=1;E=320;break}dX(K,F,P);D=1;E=320;break}}else if((C|0)==282){g[f+116>>2]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,+h[(c[k>>2]|0)+v>>3]);D=1;E=320}else if((C|0)==283){g[f+120>>2]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,+h[(c[k>>2]|0)+v>>3]);D=1;E=320}else if((C|0)==284){P=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);F=P&65535;if((F-1|0)>>>0>1){H=F;E=324;break}b[f+126>>1]=P&65535;D=1;E=320}else if((C|0)==286){g[f+128>>2]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,+h[(c[k>>2]|0)+v>>3]);D=1;E=320}else if((C|0)==287){g[f+132>>2]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,+h[(c[k>>2]|0)+v>>3]);D=1;E=320}else if((C|0)==296){P=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);F=P&65535;if((F|0)==0|F>>>0>3){H=F;E=324;break}b[f+124>>1]=P&65535;D=1;E=320}else if((C|0)==297){b[f+136>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;b[f+138>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;D=1;E=320}else if((C|0)==321){b[f+152>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;b[f+154>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;D=1;E=320}else if((C|0)==320){P=1<<e[f+84>>1];F=f+140|0;K=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);G=K;L=c[F>>2]|0;if((L|0)!=0){dU(L);c[F>>2]=0}do{if((K|0)!=0){L=P<<1;if((P&2147483647|0)!=(P|0)){break}R=dT(L)|0;c[F>>2]=R;if((R|0)==0){break}dX(R,G,L)}}while(0);G=f+144|0;F=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);K=F;M=c[G>>2]|0;if((M|0)!=0){dU(M);c[G>>2]=0}do{if((F|0)!=0){M=P<<1;if((P&2147483647|0)!=(P|0)){break}L=dT(M)|0;c[G>>2]=L;if((L|0)==0){break}dX(L,K,M)}}while(0);K=f+148|0;G=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);F=c[K>>2]|0;if((F|0)!=0){dU(F);c[K>>2]=0}if((G|0)==0){D=1;E=320;break}F=P<<1;if((P&2147483647|0)!=(P|0)){D=1;E=320;break}M=dT(F)|0;c[K>>2]=M;if((M|0)==0){D=1;E=320;break}dX(M,G,F);D=1;E=320}else if((C|0)==338){F=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;if(F>>>0>(e[f+98>>1]|0)>>>0){H=F;E=324;break}G=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);M=(G|0)==0;if((F|0)!=0&M){H=F;E=324;break}if((F|0)==0){S=0}else{K=0;while(1){L=G+(K<<1)|0;R=b[L>>1]|0;if((R&65535)>2){if(R<<16>>16!=999){H=F;E=324;break L132}b[L>>1]=2}L=K+1|0;if(L>>>0<F>>>0){K=L}else{S=F;break}}}b[f+156>>1]=S&65535;F=f+160|0;K=c[F>>2]|0;if((K|0)!=0){dU(K);c[F>>2]=0}if(M){D=1;E=320;break}K=S<<1;P=dT(K)|0;c[F>>2]=P;if((P|0)==0){D=1;E=320;break}dX(P,G,K);D=1;E=320}else if((C|0)==32995){K=((v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535|0)!=0;b[f+156>>1]=K&1;if(!K){D=1;E=320;break}b[m>>1]=1;K=f+160|0;P=c[K>>2]|0;if((P|0)!=0){dU(P);c[K>>2]=0}P=dT(2)|0;c[K>>2]=P;if((P|0)==0){D=1;E=320;break}dX(P,m,2);D=1;E=320}else if((C|0)==322){P=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);if((P&15|0)!=0){if((c[f+8>>2]|0)!=0){I=P;E=327;break}d$(c[f+628>>2]|0,c[f>>2]|0,37480,(T=i,i=i+8|0,c[T>>2]=P,T)|0);i=T}c[f+68>>2]=P;P=f+12|0;c[P>>2]=c[P>>2]|1024;D=1;E=320}else if((C|0)==323){P=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);if((P&15|0)!=0){if((c[f+8>>2]|0)!=0){I=P;E=327;break}d$(c[f+628>>2]|0,c[f>>2]|0,36616,(T=i,i=i+8|0,c[T>>2]=P,T)|0);i=T}c[f+72>>2]=P;P=f+12|0;c[P>>2]=c[P>>2]|1024;D=1;E=320}else if((C|0)==32998){P=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);if((P|0)==0){I=0;E=327;break}c[f+76>>2]=P;D=1;E=320}else if((C|0)==32996){P=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;if((P|0)==1){U=2}else if((P|0)==2){U=1}else if((P|0)==3){U=3}else if((P|0)==0){U=4}else{H=P;E=324;break}b[f+86>>1]=U;D=1;E=320}else if((C|0)==339){P=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);K=P&65535;if((K|0)==0|K>>>0>6){H=K;E=324;break}F=P&65535;b[f+86>>1]=F;do{if((K|0)==5){if((b[f+84>>1]|0)!=32){break}P=f+652|0;if((c[P>>2]|0)!=12){break}c[P>>2]=50;D=1;E=320;break L132}}while(0);if((F-5&65535)>=2){D=1;E=320;break}if((b[f+84>>1]|0)!=64){D=1;E=320;break}K=f+652|0;if((c[K>>2]|0)!=14){D=1;E=320;break}c[K>>2]=12;D=1;E=320}else if((C|0)==32997){c[f+64>>2]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);D=1;E=320}else if((C|0)==330){if((c[f+12>>2]&8192|0)!=0){cg(c[f+628>>2]|0,43144,35928,(T=i,i=i+8|0,c[T>>2]=c[f>>2],T)|0);i=T;O=0;break}K=f+184|0;b[K>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;G=f+188|0;M=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);P=e[K>>1]|0;K=c[G>>2]|0;if((K|0)!=0){dU(K);c[G>>2]=0}if((M|0)==0){D=1;E=320;break}K=P<<3;P=dT(K)|0;c[G>>2]=P;if((P|0)==0){D=1;E=320;break}dX(P,M,K);D=1;E=320}else if((C|0)==531){b[f+196>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;D=1;E=320}else if((C|0)==530){b[f+192>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;b[f+194>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;D=1;E=320}else if((C|0)==301){K=((e[f+98>>1]|0)-(e[f+156>>1]|0)|0)>1?3:1;M=f+84|0;P=0;while(1){G=f+200+(P<<2)|0;L=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);R=1<<e[M>>1];V=L;W=c[G>>2]|0;if((W|0)!=0){dU(W);c[G>>2]=0}do{if((L|0)!=0){W=R<<1;if((R&2147483647|0)!=(R|0)){break}X=dT(W)|0;c[G>>2]=X;if((X|0)==0){break}dX(X,V,W)}}while(0);V=P+1|0;if(V>>>0<K>>>0){P=V}else{D=1;E=320;break}}}else if((C|0)==532){P=f+212|0;K=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);M=c[P>>2]|0;if((M|0)!=0){dU(M);c[P>>2]=0}if((K|0)==0){D=1;E=320;break}M=dT(24)|0;c[P>>2]=M;if((M|0)==0){D=1;E=320;break}dX(M,K,24);D=1;E=320}else if((C|0)==333){K=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;M=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);P=b[f+98>>1]|0;L307:do{if((K|0)==0){Y=P}else{F=M+K|0;if(P<<16>>16==0){O=0;break L132}else{Z=P;_=M}while(1){V=_;while(1){if(V>>>0>=F>>>0){Y=Z;break L307}$=V+1|0;if((a[V]|0)==0){break}else{V=$}}V=Z-1&65535;if(V<<16>>16==0){break}else{Z=V;_=$}}F=$-M|0;V=($|0)!=(M|0);G=V&1;if(!V){O=0;break L132}V=f+220|0;R=c[V>>2]|0;if((R|0)!=0){dU(R);c[V>>2]=0}do{if((M|0)!=0){R=dT(F)|0;c[V>>2]=R;if((R|0)==0){break}dX(R,M,F)}}while(0);c[f+216>>2]=F;D=G;E=320;break L132}}while(0);M=P&65535;cg(c[f+628>>2]|0,32904,32488,(T=i,i=i+24|0,c[T>>2]=c[f>>2],c[T+8>>2]=M,c[T+16>>2]=M-(Y&65535),T)|0);i=T;O=0}else if((C|0)==65563){M=f+12|0;K=c[M>>2]|0;if(((v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535|0)==1){c[M>>2]=K|4194304;D=1;E=320;break}else{c[M>>2]=K&-4194305;D=1;E=320;break}}else{do{if((A|0)==0){ab=39808;ac=j>>>0>65535?40920:148304}else{if(!B){ab=c[A+28>>2]|0;ac=j>>>0>65535?40920:148304;break}K=f+224|0;M=c[K>>2]|0;V=f+228|0;R=0;while(1){if((R|0)>=(M|0)){ad=M;E=274;break}ae=c[V>>2]|0;af=ae+(R*12|0)|0;if((c[c[af>>2]>>2]|0)==(j|0)){E=270;break}else{R=R+1|0}}do{if((E|0)==270){M=ae+(R*12|0)+8|0;G=c[M>>2]|0;if((G|0)!=0){dU(G);c[M>>2]=0;ag=af;break}if((af|0)!=0){ag=af;break}ad=c[K>>2]|0;E=274}}while(0);do{if((E|0)==274){R=ad+1|0;c[K>>2]=R;M=dV(c[V>>2]|0,R*12|0)|0;R=M;if((M|0)==0){cg(c[f+628>>2]|0,43144,35336,(T=i,i=i+8|0,c[T>>2]=c[f>>2],T)|0);i=T;O=0;break L132}else{c[V>>2]=R;M=(c[K>>2]|0)-1|0;G=R+(M*12|0)|0;c[G>>2]=A;c[R+(M*12|0)+8>>2]=0;c[R+(M*12|0)+4>>2]=0;ag=G;break}}}while(0);K=A+8|0;V=bW(c[K>>2]|0)|0;if((V|0)==0){G=c[K>>2]|0;M=c[A+28>>2]|0;cg(c[f+628>>2]|0,43144,34888,(T=i,i=i+24|0,c[T>>2]=c[f>>2],c[T+8>>2]=G,c[T+16>>2]=M,T)|0);i=T;O=0;break L132}M=A+27|0;G=(a[M]|0)!=0;if((c[K>>2]|0)==2){do{if(G){if((b[A+6>>1]|0)==-3){R=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);ah=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);ai=R;break}else{aD(34336,31768,521,43144);return 0}}else{R=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);ah=R;ai=(ht(R|0)|0)+1|0}}while(0);c[ag+4>>2]=ai;R=ag+8|0;F=c[R>>2]|0;if((F|0)!=0){dU(F);c[R>>2]=0}if((ah|0)==0){D=1;E=320;break L132}F=dT(ai)|0;c[R>>2]=F;if((F|0)==0){D=1;E=320;break L132}dX(F,ah,ai);D=1;E=320;break L132}F=A+6|0;R=b[F>>1]|0;L=R<<16>>16;do{if(G){W=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);c[ag+4>>2]=W;aj=W;E=296}else{if((R<<16>>16|0)==(-1|0)|(R<<16>>16|0)==(-3|0)){c[ag+4>>2]=1;ak=1;break}else if((R<<16>>16|0)==(-2|0)){W=e[f+98>>1]|0;c[ag+4>>2]=W;aj=W;E=296;break}else{c[ag+4>>2]=L;aj=L;E=296;break}}}while(0);do{if((E|0)==296){if((aj|0)!=0){ak=aj;break}L=c[A+28>>2]|0;R=c[K>>2]|0;G=b[F>>1]|0;W=d[M]|0;cg(c[f+628>>2]|0,43144,33928,(T=i,i=i+40|0,c[T>>2]=c[f>>2],c[T+8>>2]=L,c[T+16>>2]=R,c[T+24>>2]=G,c[T+32>>2]=W,T)|0);i=T;O=0;break L132}}while(0);W=ag+4|0;G=d5(f,ak,V,33592)|0;R=ag+8|0;c[R>>2]=G;if((G|0)==0){O=0;break L132}do{if((c[A>>2]|0)==336){if((a9(c[A+28>>2]|0,39024)|0)!=0){break}b[n>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;b[n+2>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;dX(c[R>>2]|0,n,4);D=1;E=320;break L132}}while(0);do{if((a[M]|0)==0){if((e[F>>1]|0)>65532){break}R=c[W>>2]|0;if((R|0)>1){break}if((R|0)!=1){aD(38208,31768,589,43144);return 0}switch(c[K>>2]|0){case 1:case 7:{a[o]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&255;dX(G,o,V);D=1;E=320;break L132;break};case 6:{a[p]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&255;dX(G,p,V);D=1;E=320;break L132;break};case 3:{b[q>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;dX(G,q,V);D=1;E=320;break L132;break};case 8:{b[r>>1]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0)&65535;dX(G,r,V);D=1;E=320;break L132;break};case 4:case 13:{c[s>>2]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);dX(G,s,V);D=1;E=320;break L132;break};case 9:{c[t>>2]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);dX(G,t,V);D=1;E=320;break L132;break};case 16:case 18:{R=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);L=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);c[u>>2]=R;c[u+4>>2]=L;dX(G,u,V);D=1;E=320;break L132;break};case 17:{L=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);R=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);c[w>>2]=L;c[w+4>>2]=R;dX(G,w,V);D=1;E=320;break L132;break};case 5:case 10:case 11:{g[x>>2]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,+h[(c[k>>2]|0)+v>>3]);dX(G,x,V);D=1;E=320;break L132;break};case 12:{h[y>>3]=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,+h[(c[k>>2]|0)+v>>3]);dX(G,y,V);D=1;E=320;break L132;break};default:{dW(G,0,V);O=0;break L132}}}}while(0);K=(v=c[k+4>>2]|0,c[k+4>>2]=v+8,c[(c[k>>2]|0)+v>>2]|0);dX(G,K,aa(c[W>>2]|0,V)|0);D=1;E=320;break L132}}while(0);cg(c[f+628>>2]|0,43144,41504,(T=i,i=i+24|0,c[T>>2]=c[f>>2],c[T+8>>2]=ac,c[T+16>>2]=ab,T)|0);i=T;O=0}}while(0);if((E|0)==320){ab=bX(f,j)|0;if((ab|0)!=0){ac=e[ab+24>>1]|0;ab=f+40+(ac>>>5<<2)|0;c[ab>>2]=1<<(ac&31)|c[ab>>2]}ab=f+12|0;c[ab>>2]=c[ab>>2]|8;O=D}else if((E|0)==324){D=bX(f,j)|0;if((D|0)==0){al=39808}else{al=c[D+28>>2]|0}cg(c[f+628>>2]|0,43144,33240,(T=i,i=i+24|0,c[T>>2]=c[f>>2],c[T+8>>2]=H,c[T+16>>2]=al,T)|0);i=T;am=0;i=l;return am|0}else if((E|0)==327){E=bX(f,j)|0;if((E|0)==0){an=39808}else{an=c[E+28>>2]|0}cg(c[f+628>>2]|0,43144,33240,(T=i,i=i+24|0,c[T>>2]=c[f>>2],c[T+8>>2]=I,c[T+16>>2]=an,T)|0);i=T;am=0;i=l;return am|0}am=O;i=l;return am|0}function bN(d,f,j){d=d|0;f=f|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0.0,u=0.0,w=0.0,x=0,y=0.0,z=0.0,A=0,B=0,C=0,D=0,E=0;k=i;l=bT(d,f,0)|0;m=(b[l+24>>1]|0)==65;n=m?0:f;if((n|0)==262){o=b[d+90>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=o;p=1;i=k;return p|0}else if((n|0)==263){o=b[d+92>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=o;p=1;i=k;return p|0}else if((n|0)==254){o=c[d+80>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=o;p=1;i=k;return p|0}else if((n|0)==257){o=c[d+60>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=o;p=1;i=k;return p|0}else if((n|0)==258){o=b[d+84>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=o;p=1;i=k;return p|0}else if((n|0)==259){o=b[d+88>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=o;p=1;i=k;return p|0}else if((n|0)==341){o=c[d+112>>2]|0;if((c[d+12>>2]&4194304|0)!=0){c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=o;p=1;i=k;return p|0}q=+h[o>>3];r=b[d+98>>1]|0;if((r&65535)>1){s=1;t=q;while(1){u=+h[o+((s&65535)<<3)>>3];w=u>t?u:t;x=s+1&65535;if((x&65535)<(r&65535)){s=x;t=w}else{y=w;break}}}else{y=q}h[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>3]=y;p=1;i=k;return p|0}else if((n|0)==282){y=+g[d+116>>2];g[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=y;p=1;i=k;return p|0}else if((n|0)==283){y=+g[d+120>>2];g[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=y;p=1;i=k;return p|0}else if((n|0)==284){s=b[d+126>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=s;p=1;i=k;return p|0}else if((n|0)==286){y=+g[d+128>>2];g[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=y;p=1;i=k;return p|0}else if((n|0)==287){y=+g[d+132>>2];g[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=y;p=1;i=k;return p|0}else if((n|0)==296){s=b[d+124>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=s;p=1;i=k;return p|0}else if((n|0)==297){s=b[d+136>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=s;s=b[d+138>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=s;p=1;i=k;return p|0}else if((n|0)==321){s=b[d+152>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=s;s=b[d+154>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=s;p=1;i=k;return p|0}else if((n|0)==320){s=c[d+140>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=s;s=c[d+144>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=s;s=c[d+148>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=s;p=1;i=k;return p|0}else if((n|0)==256){s=c[d+56>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=s;p=1;i=k;return p|0}else if((n|0)==266){s=b[d+94>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=s;p=1;i=k;return p|0}else if((n|0)==274){s=b[d+96>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=s;p=1;i=k;return p|0}else if((n|0)==277){s=b[d+98>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=s;p=1;i=k;return p|0}else if((n|0)==278){s=c[d+100>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=s;p=1;i=k;return p|0}else if((n|0)==280){s=b[d+104>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=s;p=1;i=k;return p|0}else if((n|0)==281){s=b[d+106>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=s;p=1;i=k;return p|0}else if((n|0)==340){s=c[d+108>>2]|0;if((c[d+12>>2]&4194304|0)!=0){c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=s;p=1;i=k;return p|0}y=+h[s>>3];r=b[d+98>>1]|0;if((r&65535)>1){o=1;q=y;while(1){t=+h[s+((o&65535)<<3)>>3];w=t<q?t:q;x=o+1&65535;if((x&65535)<(r&65535)){o=x;q=w}else{z=w;break}}}else{z=y}h[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>3]=z;p=1;i=k;return p|0}else if((n|0)==273|(n|0)==324){b2(d)|0;o=c[d+172>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=o;p=1;i=k;return p|0}else if((n|0)==279|(n|0)==325){b2(d)|0;o=c[d+176>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=o;p=1;i=k;return p|0}else if((n|0)==32995){if((b[d+156>>1]|0)==1){A=(b[c[d+160>>2]>>1]|0)==1|0}else{A=0}b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=A;p=1;i=k;return p|0}else if((n|0)==338){A=b[d+156>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=A;A=c[d+160>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A;p=1;i=k;return p|0}else if((n|0)==322){A=c[d+68>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A;p=1;i=k;return p|0}else if((n|0)==323){A=c[d+72>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A;p=1;i=k;return p|0}else if((n|0)==32998){A=c[d+76>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A;p=1;i=k;return p|0}else if((n|0)==32996){A=e[d+86>>1]|0;if((A|0)==1){b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=2;p=1;i=k;return p|0}else if((A|0)==2){b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=1;p=1;i=k;return p|0}else if((A|0)==3){b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=3;p=1;i=k;return p|0}else if((A|0)==4){b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=0;p=1;i=k;return p|0}else{p=1;i=k;return p|0}}else if((n|0)==339){A=b[d+86>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=A;p=1;i=k;return p|0}else if((n|0)==32997){A=c[d+64>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A;p=1;i=k;return p|0}else if((n|0)==330){A=b[d+184>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=A;A=c[d+188>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A;p=1;i=k;return p|0}else if((n|0)==531){A=b[d+196>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=A;p=1;i=k;return p|0}else if((n|0)==530){A=b[d+192>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=A;A=b[d+194>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=A;p=1;i=k;return p|0}else if((n|0)==301){A=c[d+200>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A;if(((e[d+98>>1]|0)-(e[d+156>>1]|0)|0)<=1){p=1;i=k;return p|0}A=c[d+204>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A;A=c[d+208>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A;p=1;i=k;return p|0}else if((n|0)==532){A=c[d+212>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A;p=1;i=k;return p|0}else if((n|0)==333){n=c[d+220>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=n;p=1;i=k;return p|0}else{do{if((l|0)==0){B=39808;C=f>>>0>65535?40920:148304}else{if(!m){B=c[l+28>>2]|0;C=f>>>0>65535?40920:148304;break}n=c[d+224>>2]|0;A=d+228|0;o=0;while(1){if((o|0)>=(n|0)){p=0;D=472;break}E=c[A>>2]|0;if((c[c[E+(o*12|0)>>2]>>2]|0)==(f|0)){break}else{o=o+1|0}}if((D|0)==472){i=k;return p|0}if((a[l+27|0]|0)!=0){A=c[E+(o*12|0)+4>>2]|0;if((b[l+4>>1]|0)==-3){c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A}else{b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=A&65535}A=c[E+(o*12|0)+8>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A;p=1;i=k;return p|0}do{if((c[l>>2]|0)==336){if((a9(c[l+28>>2]|0,39024)|0)!=0){break}A=E+(o*12|0)+8|0;n=b[c[A>>2]>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=n;n=b[(c[A>>2]|0)+2>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=n;p=1;i=k;return p|0}}while(0);n=c[l+8>>2]|0;do{if((n|0)!=2){if((e[l+4>>1]|0)>65532){break}A=c[E+(o*12|0)+4>>2]|0;if((A|0)>1){break}r=c[E+(o*12|0)+8>>2]|0;if((A|0)!=1){aD(38208,31768,1057,42168);return 0}switch(n|0){case 1:case 7:{A=a[r]|0;a[v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0]=A;p=1;i=k;return p|0};case 6:{A=a[r]|0;a[v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0]=A;p=1;i=k;return p|0};case 3:{A=b[r>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=A;p=1;i=k;return p|0};case 8:{A=b[r>>1]|0;b[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>1]=A;p=1;i=k;return p|0};case 4:case 13:{A=c[r>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A;p=1;i=k;return p|0};case 9:{A=c[r>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=A;p=1;i=k;return p|0};case 16:case 18:{A=r;s=c[A>>2]|0;x=c[A+4>>2]|0;A=(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0);c[A>>2]=s;c[A+4>>2]=x;p=1;i=k;return p|0};case 17:{x=r;A=c[x>>2]|0;s=c[x+4>>2]|0;x=(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0);c[x>>2]=A;c[x+4>>2]=s;p=1;i=k;return p|0};case 5:case 10:case 11:{z=+g[r>>2];g[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=z;p=1;i=k;return p|0};case 12:{z=+h[r>>3];h[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>3]=z;p=1;i=k;return p|0};default:{p=0;i=k;return p|0}}}}while(0);n=c[E+(o*12|0)+8>>2]|0;c[(v=c[j+4>>2]|0,c[j+4>>2]=v+8,c[(c[j>>2]|0)+v>>2]|0)>>2]=n;p=1;i=k;return p|0}}while(0);cg(c[d+628>>2]|0,42168,41504,(j=i,i=i+24|0,c[j>>2]=c[d>>2],c[j+8>>2]=C,c[j+16>>2]=B,j)|0);i=j;p=0;i=k;return p|0}return 0}function bO(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=i;i=i+48|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=f+32|0;m=f+40|0;n=a+12|0;o=c[n>>2]|0;if((o&2048|0)==0){p=a+640|0;q=a+628|0;r=ba[c[p>>2]&127](c[q>>2]|0,c[b>>2]|0,c[b+4>>2]|0,0)|0;s=(r|0)==(c[b>>2]|0)&(E|0)==(c[b+4>>2]|0);if((o&524288|0)==0){do{if(s){r=a+632|0;if((be[c[r>>2]&63](c[q>>2]|0,k,2)|0)!=2){break}if((c[n>>2]&128|0)!=0){ds(k)}t=ba[c[p>>2]&127](c[q>>2]|0,(e[k>>1]|0)*12|0,0,1)|0;if((d|0)!=0){c[d>>2]=t;c[d+4>>2]=E}if((be[c[r>>2]&63](c[q>>2]|0,l,4)|0)!=4){cg(c[q>>2]|0,147384,23456,(u=i,i=i+8|0,c[u>>2]=c[a>>2],u)|0);i=u;v=0;i=f;return v|0}if((c[n>>2]&128|0)!=0){dt(l)}c[b>>2]=c[l>>2];c[b+4>>2]=0;v=1;i=f;return v|0}}while(0);cg(c[q>>2]|0,147384,24440,(u=i,i=i+8|0,c[u>>2]=c[a>>2],u)|0);i=u;v=0;i=f;return v|0}do{if(s){l=a+632|0;if((be[c[l>>2]&63](c[q>>2]|0,m,8)|0)!=8){break}if((c[n>>2]&128|0)!=0){du(m)}k=c[m>>2]|0;r=c[m+4>>2]|0;t=0;if(r>>>0>t>>>0|r>>>0==t>>>0&k>>>0>65535>>>0){cg(c[q>>2]|0,147384,28064,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=f;return v|0}t=ba[c[p>>2]&127](c[q>>2]|0,(k&65535)*20|0,0,1)|0;if((d|0)!=0){c[d>>2]=t;c[d+4>>2]=E}if((be[c[l>>2]&63](c[q>>2]|0,b,8)|0)!=8){cg(c[q>>2]|0,147384,23456,(u=i,i=i+8|0,c[u>>2]=c[a>>2],u)|0);i=u;v=0;i=f;return v|0}if((c[n>>2]&128|0)==0){v=1;i=f;return v|0}du(b);v=1;i=f;return v|0}}while(0);cg(c[q>>2]|0,147384,24440,(u=i,i=i+8|0,c[u>>2]=c[a>>2],u)|0);i=u;v=0;i=f;return v|0}q=c[b>>2]|0;p=c[b+4>>2]|0;m=q;if((o&524288|0)==0){o=m+2|0;do{if((m|0)==(q|0)&(((m|0)<0|0?-1:0)|0)==(p|0)){if((m|0)>2147483645|(o|0)<2){break}s=a+616|0;if((o|0)>(c[s>>2]|0)){break}l=a+612|0;dX(g,(c[l>>2]|0)+m|0,2);if((c[n>>2]&128|0)!=0){ds(g)}t=((e[g>>1]|0)*12|0)+o|0;k=t+4|0;do{if((o|0)>=0){if((t|0)>2147483643|(k|0)<4){break}if((k|0)>(c[s>>2]|0)){break}if((d|0)!=0){c[d>>2]=t;c[d+4>>2]=(t|0)<0|0?-1:0}dX(h,(c[l>>2]|0)+t|0,4);if((c[n>>2]&128|0)!=0){dt(h)}c[b>>2]=c[h>>2];c[b+4>>2]=0;v=1;i=f;return v|0}}while(0);cg(c[a+628>>2]|0,147384,26976,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=f;return v|0}}while(0);cg(c[a+628>>2]|0,147384,28064,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=f;return v|0}h=m+8|0;do{if((m|0)==(q|0)&(((m|0)<0|0?-1:0)|0)==(p|0)){if((m|0)>2147483639|(h|0)<8){break}o=a+616|0;if((h|0)>(c[o>>2]|0)){break}g=a+612|0;dX(j,(c[g>>2]|0)+m|0,8);if((c[n>>2]&128|0)!=0){du(j)}t=c[j>>2]|0;l=c[j+4>>2]|0;s=0;if(l>>>0>s>>>0|l>>>0==s>>>0&t>>>0>65535>>>0){cg(c[a+628>>2]|0,147384,25776,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=f;return v|0}s=((t&65535)*20|0)+h|0;t=s+8|0;do{if((h|0)>=0){if((s|0)>2147483639|(t|0)<8){break}if((t|0)>(c[o>>2]|0)){break}if((d|0)!=0){c[d>>2]=s;c[d+4>>2]=(s|0)<0|0?-1:0}dX(b,(c[g>>2]|0)+s|0,8);if((c[n>>2]&128|0)==0){v=1;i=f;return v|0}du(b);v=1;i=f;return v|0}}while(0);cg(c[a+628>>2]|0,147384,26976,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=f;return v|0}}while(0);cg(c[a+628>>2]|0,147384,28064,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=f;return v|0}function bP(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+8|0;f=e|0;if((c[a+12>>2]&524288|0)==0){g=0;h=c[a+428>>2]|0}else{j=a+432|0;g=c[j+4>>2]|0;h=c[j>>2]|0}c[f>>2]=h;c[f+4>>2]=g;g=d;while(1){h=c[f>>2]|0;j=c[f+4>>2]|0;if(g<<16>>16==0){k=0;l=j;m=h;break}if((h|0)==0&(j|0)==0){k=g;l=0;m=0;break}if((bO(a,f,0)|0)==0){n=0;o=572;break}else{g=g-1&65535}}if((o|0)==572){i=e;return n|0}o=a+24|0;c[o>>2]=m;c[o+4>>2]=l;b[a+448>>1]=(d-1&65535)-k&65535;b[a+38>>1]=0;n=bZ(a)|0;i=e;return n|0}function bQ(){return 7152}function bR(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;f=a+656|0;g=c[f>>2]|0;do{if((g|0)!=0){h=a+660|0;j=c[h>>2]|0;if((j|0)==0){break}else{k=0;l=g;m=j}while(1){j=c[l+(k<<2)>>2]|0;do{if((b[j+24>>1]|0)==65){n=c[j+28>>2]|0;if((ar(31760,n|0,4)|0)!=0){o=m;p=l;break}dU(n);dU(j);o=c[h>>2]|0;p=c[f>>2]|0}else{o=m;p=l}}while(0);j=k+1|0;if(j>>>0<o>>>0){k=j;l=p;m=o}else{break}}dU(p);c[f>>2]=0;c[h>>2]=0}}while(0);if((bS(a,c[d+12>>2]|0,c[d+8>>2]|0)|0)!=0){i=e;return}cg(c[a+628>>2]|0,40368,33872,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;i=e;return}function bS(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+48|0;f=e|0;g=e+40|0;h=a+664|0;c[h>>2]=0;j=a+656|0;k=c[j>>2]|0;do{if((k|0)==0){l=590}else{m=c[a+660>>2]|0;if((m|0)==0){l=590;break}n=d4(a,k,m+d|0,4,45136)|0}}while(0);if((l|0)==590){n=d5(a,d,4,45136)|0}k=n;c[j>>2]=k;if((n|0)==0){cg(c[a+628>>2]|0,45160,31160,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n;o=0;i=e;return o|0}if((d|0)==0){p=k;q=a+660|0}else{k=f;n=g;m=a+660|0;a=f|0;r=f+8|0;s=0;do{t=b+(s*36|0)|0;u=c[t>>2]|0;hv(k|0,0,36);c[g>>2]=f;v=c[h>>2]|0;if((v|0)==0){l=598}else{if((c[v>>2]|0)!=(u|0)){l=598}}L742:do{if((l|0)==598){l=0;v=c[j>>2]|0;do{if((v|0)!=0){c[a>>2]=u;c[r>>2]=0;w=a6(n|0,v|0,c[m>>2]|0,4,60)|0;if((w|0)==0){c[h>>2]=0;break}else{x=c[w>>2]|0;c[h>>2]=x;if((x|0)==0){break}else{break L742}}}}while(0);c[(c[j>>2]|0)+(c[m>>2]<<2)>>2]=t;c[m>>2]=(c[m>>2]|0)+1}}while(0);s=s+1|0;}while(s>>>0<d>>>0);p=c[j>>2]|0;q=m}aI(p|0,c[q>>2]|0,4,60);o=d;i=e;return o|0}function bT(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+48|0;f=e|0;g=e+40|0;hv(f|0,0,36);c[g>>2]=f;h=a+664|0;j=c[h>>2]|0;do{if((j|0)!=0){if((c[j>>2]|0)!=(b|0)){break}if((d|0)==0){k=j;i=e;return k|0}if((c[j+8>>2]|0)==(d|0)){k=j}else{break}i=e;return k|0}}while(0);j=c[a+656>>2]|0;if((j|0)==0){k=0;i=e;return k|0}c[f>>2]=b;c[f+8>>2]=d;d=a6(g|0,j|0,c[a+660>>2]|0,4,60)|0;if((d|0)==0){l=0}else{l=c[d>>2]|0}c[h>>2]=l;k=l;i=e;return k|0}function bU(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a>>2]|0;a=c[b>>2]|0;b=c[d>>2]|0;e=c[a>>2]|0;if((b|0)!=(e|0)){f=b-e|0;return f|0}e=c[d+8>>2]|0;if((e|0)==0){f=0;return f|0}f=(c[a+8>>2]|0)-e|0;return f|0}function bV(a){a=a|0;var b=0;switch(a|0){case 3:case 8:{b=2;break};case 4:case 9:case 11:case 13:{b=4;break};case 5:case 10:case 12:case 16:case 17:case 18:{b=8;break};case 0:case 1:case 2:case 6:case 7:{b=1;break};default:{b=0}}return b|0}function bW(a){a=a|0;var b=0;switch(a|0){case 3:case 8:{b=2;break};case 4:case 9:case 11:case 13:case 5:case 10:{b=4;break};case 12:case 16:case 17:case 18:{b=8;break};case 1:case 6:case 2:case 7:{b=1;break};default:{b=0}}return b|0}function bX(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+48|0;e=d|0;f=d+40|0;g=f;hv(e|0,0,36);c[f>>2]=e;f=a+664|0;h=c[f>>2]|0;do{if((h|0)!=0){if((c[h>>2]|0)==(b|0)){j=h}else{break}i=d;return j|0}}while(0);h=c[a+656>>2]|0;do{if((h|0)!=0){c[e>>2]=b;c[e+8>>2]=0;k=a6(g|0,h|0,c[a+660>>2]|0,4,60)|0;if((k|0)==0){c[f>>2]=0;break}l=c[k>>2]|0;c[f>>2]=l;if((l|0)==0){break}else{j=l}i=d;return j|0}}while(0);cg(c[a+628>>2]|0,23944,23168,(a=i,i=i+8|0,c[a>>2]=b,a)|0);i=a;j=0;i=d;return j|0}function bY(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0;d=i;g=dT(36)|0;if((g|0)==0){h=0;i=d;return h|0}dW(g,0,36);c[g>>2]=e;b[g+4>>1]=-3;b[g+6>>1]=-3;c[g+8>>2]=f;c[g+12>>2]=0;switch(f|0){case 1:case 7:{c[g+16>>2]=40;c[g+20>>2]=40;break};case 2:{c[g+16>>2]=39;c[g+20>>2]=39;break};case 3:{c[g+16>>2]=42;c[g+20>>2]=42;break};case 4:{c[g+16>>2]=44;c[g+20>>2]=44;break};case 5:case 10:case 11:{c[g+16>>2]=48;c[g+20>>2]=48;break};case 6:{c[g+16>>2]=41;c[g+20>>2]=41;break};case 8:{c[g+16>>2]=43;c[g+20>>2]=43;break};case 9:{c[g+16>>2]=45;c[g+20>>2]=45;break};case 12:{c[g+16>>2]=49;c[g+20>>2]=49;break};case 13:case 18:{c[g+16>>2]=50;c[g+20>>2]=50;break};case 16:{c[g+16>>2]=46;c[g+20>>2]=46;break};case 17:{c[g+16>>2]=47;c[g+20>>2]=47;break};default:{c[g+16>>2]=0;c[g+20>>2]=0}}b[g+24>>1]=65;a[g+26|0]=1;a[g+27|0]=1;f=dT(32)|0;c[g+28>>2]=f;if((f|0)==0){dU(g);h=0;i=d;return h|0}else{c[g+32>>2]=0;aL(f|0,40784,(f=i,i=i+8|0,c[f>>2]=e,f)|0)|0;i=f;h=g;i=d;return h|0}return 0}function bZ(a){a=a|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0;d=i;i=i+64|0;f=d|0;g=d+8|0;h=d+16|0;j=d+24|0;k=d+32|0;l=d+40|0;m=d+48|0;n=d+56|0;o=a+24|0;p=c[o>>2]|0;q=c[o+4>>2]|0;r=a+16|0;c[r>>2]=p;c[r+4>>2]=q;if((p|0)==0&(q|0)==0){s=0;i=d;return s|0}r=a+38|0;t=b[r>>1]|0;u=a+32|0;v=0;while(1){if((v&65535)>=(t&65535)){break}w=c[u>>2]|0;if((w|0)==0){break}x=w+((v&65535)<<3)|0;if((c[x>>2]|0)==(p|0)&(c[x+4>>2]|0)==(q|0)){s=0;y=908;break}else{v=v+1&65535}}if((y|0)==908){i=d;return s|0}v=t+1&65535;b[r>>1]=v;t=a+36|0;do{if((v&65535)>(e[t>>1]|0)){x=d4(a,c[u>>2]|0,v&65535,16,26520)|0;if((x|0)==0){s=0;i=d;return s|0}else{w=x;x=b[r>>1]|0;b[t>>1]=x<<1;c[u>>2]=w;z=x;A=w;break}}else{z=v;A=c[u>>2]|0}}while(0);u=A+((z&65535)-1<<3)|0;c[u>>2]=p;c[u+4>>2]=q;bb[c[a+564>>2]&31](a);q=a+448|0;b[q>>1]=(b[q>>1]|0)+1&65535;q=c[o>>2]|0;u=c[o+4>>2]|0;p=b_(a,q,u,h,o)|0;if(p<<16>>16==0){cg(c[a+628>>2]|0,43968,34376,(B=i,i=i+16|0,c[B>>2]=q,c[B+8>>2]=u,B)|0);i=B;s=0;i=d;return s|0}u=0;q=0;o=c[h>>2]|0;while(1){z=e[o>>1]|0;if(z>>>0<u>>>0){y=688;break}A=q+1&65535;if((A&65535)<(p&65535)){u=z+1&65535;q=A;o=o+24|0}else{break}}if((y|0)==688){d$(c[a+628>>2]|0,46080,25976,(B=i,i=i+1|0,i=i+7&-8,c[B>>2]=0,B)|0);i=B}o=c[h>>2]|0;q=0;while(1){u=o+24|0;A=q+1&65535;z=(A&65535)<(p&65535);if(!z){break}v=o|0;t=u;r=A;while(1){w=t|0;if((b[v>>1]|0)==(b[w>>1]|0)){b[w>>1]=0}w=r+1&65535;if((w&65535)>=(p&65535)){break}t=t+24|0;r=w}if(z){o=u;q=A}else{break}}q=a+12|0;c[q>>2]=c[q>>2]&-1048641;bJ(a);bL(a)|0;bF(a,284,(B=i,i=i+8|0,c[B>>2]=1,B)|0)|0;i=B;o=c[h>>2]|0;r=0;while(1){C=o|0;if((b[C>>1]|0)==277){y=701;break}t=r+1&65535;if((t&65535)<(p&65535)){o=o+24|0;r=t}else{y=704;break}}do{if((y|0)==701){if((o|0)==0){y=704;break}if((b$(a,o,0)|0)==0){break}b[C>>1]=0;y=704}}while(0);L876:do{if((y|0)==704){C=c[h>>2]|0;o=0;while(1){D=C|0;if((b[D>>1]|0)==259){y=707;break}r=o+1&65535;if((r&65535)<(p&65535)){C=C+24|0;o=r}else{y=719;break}}L881:do{if((y|0)==707){if((C|0)==0){y=719;break}o=b0(a,C,j)|0;do{if((o|0)==1){A=C+8|0;u=c[A+4>>2]|0;z=a+98|0;r=0;if(u>>>0<r>>>0|u>>>0==r>>>0&(c[A>>2]|0)>>>0<(e[z>>1]|0)>>>0){F=1;break}A=b5(a,C,g)|0;if((A|0)!=0){F=A;break}A=c[g>>2]|0;r=b[z>>1]|0;z=b[A>>1]|0;b[j>>1]=z;u=r;r=A;while(1){t=u-1&65535;v=r+2|0;if(t<<16>>16==0){G=0;break}if((b[v>>1]|0)==z<<16>>16){u=t;r=v}else{G=5;break}}dU(A);H=G;y=715}else{H=o;y=715}}while(0);do{if((y|0)==715){if((H|0)!=0){F=H;break}o=bF(a,259,(B=i,i=i+8|0,c[B>>2]=e[j>>1]|0,B)|0)|0;i=B;if((o|0)==0){break L876}b[D>>1]=0;break L881}}while(0);b1(a,F,43968,40944,0);break L876}}while(0);if((y|0)==719){C=bF(a,259,(B=i,i=i+8|0,c[B>>2]=1,B)|0)|0;i=B;if((C|0)==0){break}}C=a+660|0;o=a+628|0;r=a+656|0;u=0;z=c[h>>2]|0;L900:while(1){v=z|0;t=b[v>>1]|0;L902:do{if(t<<16>>16!=0){w=c[C>>2]|0;L904:do{if((w|0)==0){I=t&65535;y=730}else{x=c[r>>2]|0;J=t&65535;K=-1;L=w;while(1){M=(K+L|0)/2|0;N=c[c[x+(M<<2)>>2]>>2]|0;if((N|0)==(J|0)){O=M;break}P=N>>>0<J>>>0;N=P?M:K;Q=P?L:M;if((N+1|0)==(Q|0)){I=J;y=730;break L904}else{K=N;L=Q}}while(1){if((O|0)==0){R=0;S=t;T=x;break L904}L=O-1|0;if((c[c[x+(L<<2)>>2]>>2]|0)==(J|0)){O=L}else{break}}if((O|0)==-1){I=J;y=730}else{R=O;S=t;T=x}}}while(0);L914:do{if((y|0)==730){y=0;d$(c[o>>2]|0,43968,34288,(B=i,i=i+16|0,c[B>>2]=I,c[B+8>>2]=I,B)|0);i=B;if((bS(a,bY(a,e[v>>1]|0,e[z+2>>1]|0)|0,1)|0)==0){w=e[v>>1]|0;d$(c[o>>2]|0,43968,31384,(B=i,i=i+16|0,c[B>>2]=w,c[B+8>>2]=w,B)|0);i=B;b[v>>1]=0;break L902}w=c[C>>2]|0;if((w|0)==0){y=911;break L900}A=b[v>>1]|0;L=c[r>>2]|0;K=A&65535;Q=-1;N=w;while(1){w=(Q+N|0)/2|0;M=c[c[L+(w<<2)>>2]>>2]|0;if((M|0)==(K|0)){U=w;break}P=M>>>0<K>>>0;M=P?w:Q;V=P?N:w;if((M+1|0)==(V|0)){y=912;break L900}else{Q=M;N=V}}while(1){if((U|0)==0){R=0;S=A;T=L;break L914}N=U-1|0;if((c[c[L+(N<<2)>>2]>>2]|0)==(K|0)){U=N}else{break}}if((U|0)==-1){y=913;break L900}else{R=U;S=A;T=L}}}while(0);K=S&65535;if(S<<16>>16==0){break}N=b[(c[T+(R<<2)>>2]|0)+24>>1]|0;if(N<<16>>16==0){b[v>>1]=0;break}if((K|0)==273|(K|0)==279|(K|0)==324|(K|0)==325){Q=N&65535;N=a+40+(Q>>>5<<2)|0;c[N>>2]=1<<(Q&31)|c[N>>2];break}else if(!((K|0)==256|(K|0)==257|(K|0)==32997|(K|0)==323|(K|0)==322|(K|0)==32998|(K|0)==284|(K|0)==278|(K|0)==338)){break}if((b$(a,z,0)|0)==0){break L876}b[v>>1]=0}}while(0);v=u+1&65535;if((v&65535)<(p&65535)){u=v;z=z+24|0}else{y=748;break}}if((y|0)==748){z=a+88|0;L939:do{if((b[z>>1]|0)==6){u=a+126|0;if((b[u>>1]|0)!=2){break}r=c[h>>2]|0;C=r;o=0;while(1){if((b[C>>1]|0)==273){break}v=o+1&65535;if((v&65535)<(p&65535)){C=C+24|0;o=v}else{break L939}}if((C|0)==0){break}o=C+8|0;if((c[o>>2]|0)==1&(c[o+4>>2]|0)==0){W=r;X=0}else{break}while(1){if((b[W>>1]|0)==279){break}o=X+1&65535;if((o&65535)<(p&65535)){W=W+24|0;X=o}else{break L939}}if((W|0)==0){break}r=W+8|0;if(!((c[r>>2]|0)==1&(c[r+4>>2]|0)==0)){break}b[u>>1]=1;d$(c[a+628>>2]|0,43968,26704,(B=i,i=i+1|0,i=i+7&-8,c[B>>2]=0,B)|0);i=B}}while(0);r=a+40|0;C=c[r>>2]|0;if((C&2|0)==0){cg(c[a+628>>2]|0,147520,26432,(B=i,i=i+8|0,c[B>>2]=25616,B)|0);i=B;break}if((C&4|0)==0){C=dk(a)|0;c[a+168>>2]=C;c[a+68>>2]=c[a+56>>2];c[a+72>>2]=c[a+100>>2];c[a+76>>2]=c[a+64>>2];Y=c[q>>2]&-1025;Z=C}else{C=dF(a)|0;c[a+168>>2]=C;Y=c[q>>2]|1024;Z=C}c[q>>2]=Y;C=a+168|0;if((Z|0)==0){cg(c[a+628>>2]|0,43968,24120,(B=i,i=i+8|0,c[B>>2]=(Y&1024|0)!=0?23368:42104,B)|0);i=B;break}o=a+164|0;c[o>>2]=Z;v=a+126|0;if((b[v>>1]|0)==2){c[o>>2]=(Z>>>0)/((e[a+98>>1]|0)>>>0)|0}t=c[r>>2]|0;L967:do{if((t&33554432|0)==0){K=Y&1024;do{if((b[z>>1]|0)==6&(K|0)==0){if((Z|0)!=1){_=0;break}c[r>>2]=t|33554432;break L967}else{_=K}}while(0);cg(c[a+628>>2]|0,147520,26432,(B=i,i=i+8|0,c[B>>2]=(_|0)!=0?41432:40928,B)|0);i=B;break L876}}while(0);t=a+98|0;K=a+172|0;u=a+176|0;N=a+84|0;Q=0;x=c[h>>2]|0;L974:while(1){$=x|0;J=b[$>>1]|0;V=J&65535;L976:do{if((V|0)==280|(V|0)==281|(V|0)==258|(V|0)==32996|(V|0)==339){M=b0(a,x,k)|0;if((M|0)==1){w=x+8|0;P=c[w+4>>2]|0;ab=0;if(P>>>0<ab>>>0|P>>>0==ab>>>0&(c[w>>2]|0)>>>0<(e[t>>1]|0)>>>0){ac=1;y=783;break L974}w=b5(a,x,f)|0;if((w|0)!=0){ac=w;y=783;break L974}w=c[f>>2]|0;ab=b[t>>1]|0;P=b[w>>1]|0;b[k>>1]=P;ad=ab;ab=w;while(1){ae=ad-1&65535;af=ab+2|0;if(ae<<16>>16==0){ag=0;break}if((b[af>>1]|0)==P<<16>>16){ad=ae;ab=af}else{ag=5;break}}dU(w);ah=ag}else{ah=M}ab=e[$>>1]|0;if((ah|0)!=0){ai=ah;aj=ab;y=785;break L974}ad=bF(a,ab,(B=i,i=i+8|0,c[B>>2]=e[k>>1]|0,B)|0)|0;i=B;if((ad|0)==0){break L876}}else if((V|0)==340|(V|0)==341){ad=x+8|0;if(!((c[ad>>2]|0)==(e[t>>1]|0)&(c[ad+4>>2]|0)==0)){ak=1;al=J;y=792;break L974}am=b3(a,x,l)|0;if((am|0)!=0){y=791;break L974}ad=c[q>>2]|0;c[q>>2]=ad|4194304;ab=c[l>>2]|0;P=bF(a,e[$>>1]|0,(B=i,i=i+8|0,c[B>>2]=ab,B)|0)|0;i=B;c[q>>2]=ad;dU(ab);if((P|0)==0){break L876}}else if((V|0)==273|(V|0)==324){if((b4(a,x,c[C>>2]|0,K)|0)==0){break L876}}else if((V|0)==279|(V|0)==325){if((b4(a,x,c[C>>2]|0,u)|0)==0){break L876}}else if((V|0)==320|(V|0)==301){c[m>>2]=0;P=e[N>>1]|0;ab=1<<P;ad=b[$>>1]|0;af=x+8|0;ae=c[af>>2]|0;an=c[af+4>>2]|0;if(ad<<16>>16==301){if((ae|0)==(ab|0)&(an|0)==0){ao=0;ap=ab}else{y=800}}else{y=800}if((y|0)==800){y=0;ao=ab;ap=3<<P}do{if((ae|0)==(ap|0)&(an|0)==0){P=b5(a,x,m)|0;ab=e[$>>1]|0;if((P|0)!=0){aq=P;ar=ab;break}P=c[m>>2]|0;af=P+(ao<<1)|0;as=P+(ao<<1<<1)|0;bF(a,ab,(B=i,i=i+24|0,c[B>>2]=P,c[B+8>>2]=af,c[B+16>>2]=as,B)|0)|0;i=B;dU(P);break L976}else{aq=1;ar=ad&65535}}while(0);ad=bX(a,ar)|0;if((ad|0)==0){at=40248}else{at=c[ad+28>>2]|0}b1(a,aq,43968,at,1)}else if((V|0)==255){if((b0(a,x,n)|0)!=0){break}ad=e[n>>1]|0;if((ad|0)==2){au=1}else if((ad|0)==3){au=2}else{break}bF(a,254,(B=i,i=i+8|0,c[B>>2]=au,B)|0)|0;i=B}else if((V|0)!=0){b$(a,x,1)|0}}while(0);V=Q+1&65535;if((V&65535)<(p&65535)){Q=V;x=x+24|0}else{y=814;break}}if((y|0)==814){do{if((b[z>>1]|0)==6){do{if((c[r>>2]&256|0)==0){d$(c[a+628>>2]|0,43968,39672,(B=i,i=i+1|0,i=i+7&-8,c[B>>2]=0,B)|0);i=B;x=bF(a,262,(B=i,i=i+8|0,c[B>>2]=6,B)|0)|0;i=B;if((x|0)==0){break L876}}else{x=a+90|0;if((b[x>>1]|0)!=2){break}b[x>>1]=6;d$(c[a+628>>2]|0,43968,38824,(B=i,i=i+1|0,i=i+7&-8,c[B>>2]=0,B)|0);i=B}}while(0);x=c[r>>2]|0;if((x&64|0)==0){d$(c[a+628>>2]|0,43968,38064,(B=i,i=i+1|0,i=i+7&-8,c[B>>2]=0,B)|0);i=B;Q=bF(a,258,(B=i,i=i+8|0,c[B>>2]=8,B)|0)|0;i=B;if((Q|0)==0){break L876}av=c[r>>2]|0}else{av=x}if((av&65536|0)!=0){break}x=a+90|0;Q=b[x>>1]|0;if(Q<<16>>16==2){d$(c[a+628>>2]|0,43968,37320,(B=i,i=i+1|0,i=i+7&-8,c[B>>2]=0,B)|0);i=B;N=bF(a,277,(B=i,i=i+8|0,c[B>>2]=3,B)|0)|0;i=B;if((N|0)==0){break L876}aw=b[x>>1]|0}else{aw=Q}if((aw<<16>>16|0)==6){d$(c[a+628>>2]|0,43968,36432,(B=i,i=i+1|0,i=i+7&-8,c[B>>2]=0,B)|0);i=B;Q=bF(a,277,(B=i,i=i+8|0,c[B>>2]=3,B)|0)|0;i=B;if((Q|0)==0){break L876}else{break}}else if((aw<<16>>16|0)==0|(aw<<16>>16|0)==1){Q=bF(a,277,(B=i,i=i+8|0,c[B>>2]=1,B)|0)|0;i=B;if((Q|0)==0){break L876}else{break}}else{break}}}while(0);Q=a+90|0;do{if((b[Q>>1]|0)==3){if((c[r>>2]&67108864|0)!=0){break}if((e[a+84>>1]|0)<=7){cg(c[a+628>>2]|0,147520,26432,(B=i,i=i+8|0,c[B>>2]=35824,B)|0);i=B;break L876}if((b[a+98>>1]|0)==3){b[Q>>1]=2;break}else{b[Q>>1]=1;break}}}while(0);x=b[z>>1]|0;L1046:do{if(x<<16>>16!=6){if((c[r>>2]&16777216|0)==0){N=b[v>>1]|0;if((N<<16>>16|0)==1){if((c[C>>2]|0)>>>0>1){y=841}else{y=842}}else if((N<<16>>16|0)==2){if((c[C>>2]|0)==(e[a+98>>1]|0)){y=842}else{y=841}}else{y=842}if((y|0)==841){cg(c[a+628>>2]|0,147520,26432,(B=i,i=i+8|0,c[B>>2]=35264,B)|0);i=B;break L876}else if((y|0)==842){d$(c[a+628>>2]|0,43968,34744,(B=i,i=i+1|0,i=i+7&-8,c[B>>2]=0,B)|0);i=B;if((b6(a,c[h>>2]|0,p)|0)<0){break L876}else{break}}}L1057:do{if((c[C>>2]|0)==1){N=a+172|0;u=c[N>>2]|0;if((c[u>>2]|0)==0&(c[u+4>>2]|0)==0){break}u=a+176|0;K=c[u>>2]|0;t=c[K>>2]|0;V=c[K+4>>2]|0;do{if(!((t|0)==0&(V|0)==0)){if(x<<16>>16==1){K=bf[c[a+648>>2]&63](c[a+628>>2]|0)|0;J=c[N>>2]|0;ad=hz(K,E,c[J>>2]|0,c[J+4>>2]|0)|0;J=E;if(V>>>0>J>>>0|V>>>0==J>>>0&t>>>0>ad>>>0){break}}if((c[a+8>>2]|0)!=0){break L1057}if((b[z>>1]|0)!=1){break L1057}ad=c[u>>2]|0;J=c[ad>>2]|0;K=c[ad+4>>2]|0;ad=dm(a)|0;an=hI(c[a+60>>2]|0,0,ad,E)|0;ad=E;if(!(K>>>0<ad>>>0|K>>>0==ad>>>0&J>>>0<an>>>0)){break L1057}}}while(0);d$(c[a+628>>2]|0,43968,34208,(B=i,i=i+1|0,i=i+7&-8,c[B>>2]=0,B)|0);i=B;if((b6(a,c[h>>2]|0,p)|0)<0){break L876}else{break L1046}}}while(0);if((b[v>>1]|0)!=1){break}if((c[C>>2]|0)>>>0<=2){break}if((b[z>>1]|0)!=1){break}u=c[a+176>>2]|0;t=c[u>>2]|0;V=c[u+4>>2]|0;N=u+8|0;u=c[N>>2]|0;an=c[N+4>>2]|0;if((t|0)==(u|0)&(V|0)==(an|0)|(t|0)==0&(V|0)==0|(u|0)==0&(an|0)==0){break}d$(c[a+628>>2]|0,43968,33792,(B=i,i=i+1|0,i=i+7&-8,c[B>>2]=0,B)|0);i=B;if((b6(a,c[h>>2]|0,p)|0)<0){break L876}}}while(0);x=c[h>>2]|0;if((x|0)!=0){dU(x);c[h>>2]=0}do{if((c[r>>2]&524288|0)==0){x=b[a+84>>1]|0;if((x&65535)>15){b[a+106>>1]=-1;break}else{b[a+106>>1]=(1<<(x&65535))+65535&65535;break}}}while(0);r=c[C>>2]|0;L1083:do{if(r>>>0>1){x=a+180|0;c[x>>2]=1;an=a+172|0;u=1;while(1){if(u>>>0>=r>>>0){break L1083}V=c[an>>2]|0;t=V+(u-1<<3)|0;N=c[t+4>>2]|0;J=V+(u<<3)|0;V=c[J+4>>2]|0;if(N>>>0>V>>>0|N>>>0==V>>>0&(c[t>>2]|0)>>>0>(c[J>>2]|0)>>>0){break}else{u=u+1|0}}c[x>>2]=0}}while(0);r=c[a+504>>2]|0;bf[r&63](a)|0;do{if((b[v>>1]|0)==1){if((c[C>>2]|0)!=1){break}if((b[z>>1]|0)!=1){break}r=c[q>>2]|0;if((r&33792|0)!=32768){break}u=a+176|0;an=c[u>>2]|0;if((an|0)==0){s=0;i=d;return s|0}J=c[an>>2]|0;t=c[an+4>>2]|0;an=a+172|0;V=c[an>>2]|0;N=c[V>>2]|0;ad=c[V+4>>2]|0;do{if((b[Q>>1]|0)==6){if((r&16384|0)!=0){ax=1;break}ax=e[a+194>>1]|0}else{ax=1}}while(0);r=dH(a,ax)|0;x=E;V=0;if(x>>>0>V>>>0|x>>>0==V>>>0&r>>>0>8192>>>0){ay=ax;az=x;aA=r}else{if((r|0)==0&(x|0)==0){break}V=hJ(8192,0,r,x)|0;K=E;ae=aa(V,ax)|0;M=hI(V,K,r,x)|0;ay=ae;az=E;aA=M}if(ay>>>0>=(c[a+100>>2]|0)>>>0){break}M=hy(J,t,-1,-1)|0;ae=hy(M,E,aA,az)|0;M=hJ(ae,E,aA,az)|0;ae=E;x=0;if((M|0)==0&(ae|0)==0|(ae>>>0>x>>>0|ae>>>0==x>>>0&M>>>0>-1>>>0)){break}x=M;M=d5(a,x,8,31720)|0;ae=M;r=d5(a,x,8,31528)|0;K=r;V=(M|0)==0;w=(r|0)==0;if(!(V|w)){if((x|0)!=0){P=0;as=az;af=aA;ab=ad;aB=N;aC=t;aE=J;while(1){aF=as>>>0>aC>>>0|as>>>0==aC>>>0&af>>>0>aE>>>0;aG=aF?aE:af;aH=aF?aC:as;aF=ae+(P<<3)|0;c[aF>>2]=aG;c[aF+4>>2]=aH;aF=K+(P<<3)|0;c[aF>>2]=aB;c[aF+4>>2]=ab;aF=hy(aG,aH,aB,ab)|0;aI=E;aJ=hz(aE,aC,aG,aH)|0;aK=P+1|0;if(aK>>>0<x>>>0){P=aK;as=aH;af=aG;ab=aI;aB=aF;aC=E;aE=aJ}else{break}}}c[C>>2]=x;c[o>>2]=x;bF(a,278,(B=i,i=i+8|0,c[B>>2]=ay,B)|0)|0;i=B;dU(c[u>>2]|0);dU(c[an>>2]|0);c[u>>2]=ae;c[an>>2]=K;c[a+180>>2]=1;break}if(!V){dU(M)}if(w){break}dU(r)}}while(0);c[q>>2]=c[q>>2]&-2097161;c[a+444>>2]=-1;c[a+452>>2]=-1;c[a+488>>2]=-1;c[a+492>>2]=-1;o=a+496|0;c[o>>2]=-1;C=dr(a)|0;c[a+580>>2]=C;if((C|0)==0){cg(c[a+628>>2]|0,43968,33512,(B=i,i=i+1|0,i=i+7&-8,c[B>>2]=0,B)|0);i=B;s=0;i=d;return s|0}if((c[q>>2]&1024|0)==0){if((dp(a)|0)!=0){s=1;i=d;return s|0}cg(c[a+628>>2]|0,43968,32760,(B=i,i=i+1|0,i=i+7&-8,c[B>>2]=0,B)|0);i=B;s=0;i=d;return s|0}else{C=dJ(a)|0;c[o>>2]=C;if((C|0)!=0){s=1;i=d;return s|0}cg(c[a+628>>2]|0,43968,33168,(B=i,i=i+1|0,i=i+7&-8,c[B>>2]=0,B)|0);i=B;s=0;i=d;return s|0}}else if((y|0)==783){ai=ac;aj=e[$>>1]|0;y=785}else if((y|0)==791){ak=am;al=b[$>>1]|0;y=792}if((y|0)==785){C=bX(a,aj)|0;if((C|0)==0){aL=40248}else{aL=c[C+28>>2]|0}b1(a,ai,43968,aL,0);break}else if((y|0)==792){C=bX(a,al&65535)|0;if((C|0)==0){aM=40248}else{aM=c[C+28>>2]|0}b1(a,ak,43968,aM,0);break}}else if((y|0)==911){aD(29424,27888,3559,43968);return 0}else if((y|0)==912){aD(29424,27888,3559,43968);return 0}else if((y|0)==913){aD(29424,27888,3559,43968);return 0}}}while(0);y=c[h>>2]|0;if((y|0)==0){s=0;i=d;return s|0}dU(y);s=0;i=d;return s|0}function b_(a,f,g,h,j){a=a|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;k=i;i=i+40|0;l=k|0;m=k+8|0;n=k+16|0;o=k+24|0;p=k+32|0;if((h|0)==0){aD(27808,27888,4453,44216);return 0}q=a+16|0;c[q>>2]=f;c[q+4>>2]=g;g=(j|0)!=0;if(g){c[j>>2]=0;c[j+4>>2]=0}f=a+12|0;r=c[f>>2]|0;L1161:do{if((r&2048|0)==0){s=a+628|0;t=ba[c[a+640>>2]&127](c[s>>2]|0,c[q>>2]|0,c[q+4>>2]|0,0)|0;if(!((t|0)==(c[q>>2]|0)&(E|0)==(c[q+4>>2]|0))){cg(c[s>>2]|0,44216,27656,(u=i,i=i+8|0,c[u>>2]=c[a>>2],u)|0);i=u;v=0;i=k;return v|0}t=a+632|0;w=c[t>>2]|0;x=c[s>>2]|0;do{if((c[f>>2]&524288|0)==0){if((be[w&63](x,l,2)|0)!=2){cg(c[s>>2]|0,44216,27552,(u=i,i=i+8|0,c[u>>2]=c[a>>2],u)|0);i=u;v=0;i=k;return v|0}if((c[f>>2]&128|0)!=0){ds(l)}y=b[l>>1]|0;if((y&65535)<=4096){z=12;A=y;break}cg(c[s>>2]|0,44216,27384,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=k;return v|0}else{if((be[w&63](x,m,8)|0)!=8){cg(c[s>>2]|0,44216,27552,(u=i,i=i+8|0,c[u>>2]=c[a>>2],u)|0);i=u;v=0;i=k;return v|0}if((c[f>>2]&128|0)!=0){du(m)}y=c[m>>2]|0;B=c[m+4>>2]|0;C=0;if(!(B>>>0>C>>>0|B>>>0==C>>>0&y>>>0>4096>>>0)){C=y&65535;b[l>>1]=C;z=20;A=C;break}cg(c[s>>2]|0,44216,27384,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=k;return v|0}}while(0);x=d5(a,A&65535,z,27224)|0;if((x|0)==0){v=0;i=k;return v|0}w=c[t>>2]|0;C=c[s>>2]|0;y=aa(e[l>>1]|0,z)|0;B=be[w&63](C,x,y)|0;if((B|0)!=(aa(e[l>>1]|0,z)|0)){cg(c[s>>2]|0,44216,27120,(u=i,i=i+8|0,c[u>>2]=c[a>>2],u)|0);i=u;dU(x);v=0;i=k;return v|0}if(!g){D=x;break}B=c[t>>2]|0;y=c[s>>2]|0;if((c[f>>2]&524288|0)!=0){if((be[B&63](y,j,8)|0)!=8){c[j>>2]=0;c[j+4>>2]=0}if((c[f>>2]&128|0)==0){D=x;break}du(j);D=x;break}if((be[B&63](y,n,4)|0)!=4){c[n>>2]=0}if((c[f>>2]&128|0)!=0){dt(n)}c[j>>2]=c[n>>2];c[j+4>>2]=0;D=x}else{x=c[q>>2]|0;y=x;if(!((y|0)==(x|0)&(((y|0)<0|0?-1:0)|0)==(c[q+4>>2]|0))){cg(c[a+628>>2]|0,44216,27016,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=k;return v|0}L1167:do{if((r&524288|0)==0){x=y+2|0;do{if(!((y|0)>2147483645|(x|0)<2)){if((x|0)>(c[a+616>>2]|0)){break}dX(l,(c[a+612>>2]|0)+y|0,2);if((c[f>>2]&128|0)!=0){ds(l)}B=b[l>>1]|0;if((B&65535)<=4096){F=x;G=12;H=B;break L1167}cg(c[a+628>>2]|0,44216,27384,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=k;return v|0}}while(0);cg(c[a+628>>2]|0,44216,27016,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=k;return v|0}else{x=y+8|0;do{if(!((y|0)>2147483639|(x|0)<8)){if((x|0)>(c[a+616>>2]|0)){break}dX(o,(c[a+612>>2]|0)+y|0,8);if((c[f>>2]&128|0)!=0){du(o)}B=c[o>>2]|0;C=c[o+4>>2]|0;w=0;if(!(C>>>0>w>>>0|C>>>0==w>>>0&B>>>0>4096>>>0)){w=B&65535;b[l>>1]=w;F=x;G=20;H=w;break L1167}cg(c[a+628>>2]|0,44216,27384,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=k;return v|0}}while(0);cg(c[a+628>>2]|0,44216,27016,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=k;return v|0}}while(0);if(H<<16>>16==0){cg(c[a+628>>2]|0,44216,26872,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=k;return v|0}y=d5(a,H&65535,G,27224)|0;if((y|0)==0){v=0;i=k;return v|0}s=aa(e[l>>1]|0,G)|0;t=s+F|0;do{if(!((t|0)<(F|0)|(t|0)<(s|0))){x=a+616|0;if((t|0)>(c[x>>2]|0)){break}w=a+612|0;dX(y,(c[w>>2]|0)+F|0,s);if(!g){D=y;break L1161}B=(aa(e[l>>1]|0,G)|0)+F|0;C=c[f>>2]|0;if((C&524288|0)!=0){I=B+8|0;do{if((B|0)>2147483639|(I|0)<8){J=984}else{if((I|0)>(c[x>>2]|0)){J=984;break}dX(j,(c[w>>2]|0)+B|0,8)}}while(0);if((J|0)==984){c[j>>2]=0;c[j+4>>2]=0}if((c[f>>2]&128|0)==0){D=y;break L1161}du(j);D=y;break L1161}I=B+4|0;do{if((B|0)>2147483643|(I|0)<4){J=977}else{if((I|0)>(c[x>>2]|0)){J=977;break}dX(p,(c[w>>2]|0)+B|0,4);K=c[f>>2]|0}}while(0);if((J|0)==977){c[p>>2]=0;K=C}if((K&128|0)!=0){dt(p)}c[j>>2]=c[p>>2];c[j+4>>2]=0;D=y;break L1161}}while(0);cg(c[a+628>>2]|0,44216,26816,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;dU(y);v=0;i=k;return v|0}}while(0);u=d5(a,e[l>>1]|0,24,27224)|0;a=u;if((u|0)==0){dU(D);v=0;i=k;return v|0}if((b[l>>1]|0)!=0){u=D;j=a;p=0;while(1){K=u;if((c[f>>2]&128|0)!=0){ds(K)}b[j>>1]=b[K>>1]|0;K=u+2|0;if((c[f>>2]&128|0)!=0){ds(K)}b[j+2>>1]=b[K>>1]|0;K=u+4|0;J=c[f>>2]|0;F=(J&128|0)!=0;if((J&524288|0)==0){J=K;if(F){dt(J)}G=j+8|0;c[G>>2]=c[J>>2];c[G+4>>2]=0;c[j+16>>2]=c[u+8>>2];L=u+12|0}else{if(F){du(K)}F=d[u+7|0]|0;G=d[u+6|0]|0;J=d[u+5|0]|0;g=0<<8|J>>>24|(0<<16|G>>>16)|(0<<24|F>>>8)|d[u+8|0]|(d[u+9|0]<<8|0>>>24)|(d[u+10|0]<<16|0>>>16)|(d[u+11|0]<<24|0>>>8);H=j+8|0;c[H>>2]=J<<8|0>>>24|d[K]|(G<<16|0>>>16)|(F<<24|0>>>8)|(0<<8|0>>>24)|(0<<16|0>>>16)|(0<<24|0>>>8);c[H+4>>2]=g;g=d[u+15|0]|0;H=d[u+14|0]|0;F=d[u+13|0]|0;G=0<<8|F>>>24|(0<<16|H>>>16)|(0<<24|g>>>8)|d[u+16|0]|(d[u+17|0]<<8|0>>>24)|(d[u+18|0]<<16|0>>>16)|(d[u+19|0]<<24|0>>>8);K=j+16|0;c[K>>2]=F<<8|0>>>24|d[u+12|0]|(H<<16|0>>>16)|(g<<24|0>>>8)|(0<<8|0>>>24)|(0<<16|0>>>16)|(0<<24|0>>>8);c[K+4>>2]=G;L=u+20|0}G=p+1&65535;if((G&65535)<(e[l>>1]|0)){u=L;j=j+24|0;p=G}else{break}}}dU(D);c[h>>2]=a;v=b[l>>1]|0;i=k;return v|0}function b$(f,j,k){f=f|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,bb=0,bc=0,bd=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b2=0,b4=0.0,b6=0.0,b7=0,ch=0,ci=0,cj=0,ck=0,cl=0,cm=0,cn=0,co=0,cp=0,cq=0,cr=0,cs=0,ct=0,cu=0,cv=0,cw=0,cx=0,cy=0,cz=0,cA=0,cB=0,cC=0,cD=0,cE=0,cF=0,cG=0,cH=0,cI=0,cJ=0,cK=0,cL=0,cM=0,cN=0;l=i;i=i+656|0;m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+104|0;A=l+112|0;B=l+120|0;C=l+128|0;D=l+136|0;F=l+144|0;G=l+152|0;H=l+160|0;I=l+168|0;J=l+176|0;K=l+184|0;L=l+192|0;M=l+200|0;N=l+208|0;O=l+216|0;P=l+224|0;Q=l+232|0;R=l+240|0;S=l+248|0;T=l+256|0;U=l+264|0;V=l+272|0;W=l+280|0;X=l+288|0;Y=l+296|0;Z=l+304|0;_=l+312|0;$=l+320|0;aa=l+328|0;ab=l+336|0;ac=l+344|0;ad=l+352|0;ae=l+360|0;af=l+368|0;ag=l+376|0;ah=l+384|0;ai=l+392|0;aj=l+400|0;ak=l+408|0;al=l+416|0;am=l+424|0;an=l+432|0;ao=l+440|0;ap=l+448|0;aq=l+456|0;ar=l+464|0;as=l+472|0;at=l+480|0;au=l+488|0;av=l+496|0;aw=l+504|0;ax=l+512|0;ay=l+520|0;az=l+528|0;aA=l+536|0;aB=l+544|0;aC=l+552|0;aE=l+560|0;aF=l+568|0;aG=l+576|0;aH=l+584|0;aI=l+592|0;aJ=l+600|0;aK=l+608|0;aL=l+616|0;aM=l+624|0;aN=l+632|0;aO=l+640|0;aP=l+648|0;aQ=j|0;aR=c[f+660>>2]|0;aT=b[aQ>>1]|0;L1302:do{if((aR|0)!=0){aU=c[f+656>>2]|0;aV=aT&65535;aW=-1;aX=aR;while(1){aY=(aW+aX|0)/2|0;aZ=c[c[aU+(aY<<2)>>2]>>2]|0;if((aZ|0)==(aV|0)){a_=aY;break}a$=aZ>>>0<aV>>>0;aW=a$?aY:aW;aX=a$?aX:aY;if((aW+1|0)==(aX|0)){break L1302}}while(1){if((a_|0)==0){a0=0;break}aX=a_-1|0;if((c[c[aU+(aX<<2)>>2]>>2]|0)==(aV|0)){a_=aX}else{a1=1028;break}}if((a1|0)==1028){if((a_|0)==-1){break}else{a0=a_}}aV=c[aU+(a0<<2)>>2]|0;L1313:do{switch(c[aV+16>>2]|0){case 51:{aD(29784,27888,4711,30224);return 0};case 13:{aD(29656,27888,4712,30224);return 0};case 1:{if((a[aV+27|0]|0)!=0){aD(29496,27888,4721,30224);return 0}aX=ca(f,j,an)|0;if((aX|0)!=0){a2=aX;a1=1759;break L1313}aX=j+8|0;aW=c[aX>>2]|0;L1321:do{if((aW|0)==0){a3=0}else{aY=0;a$=c[an>>2]|0;while(1){if((a[a$]|0)==0){a3=aY;break L1321}aZ=aY+1|0;if(aZ>>>0<aW>>>0){aY=aZ;a$=a$+1|0}else{a3=aZ;break}}}}while(0);a$=a3+1|0;L1327:do{if(a$>>>0<aW>>>0){d$(c[f+628>>2]|0,30224,29288,(a4=i,i=i+8|0,c[a4>>2]=c[aV+28>>2],a4)|0);i=a4;a1=1051}else{if(a$>>>0<=aW>>>0){a1=1051;break}d$(c[f+628>>2]|0,30224,29160,(a4=i,i=i+8|0,c[a4>>2]=c[aV+28>>2],a4)|0);i=a4;aY=c[aX>>2]|0;aZ=aY+1|0;a5=hy(aY,c[aX+4>>2]|0,1,0)|0;do{if((aZ|0)==(a5|0)&0==(E|0)){aY=dT(aZ)|0;a6=c[an>>2]|0;if((aY|0)==0){a7=a6;break}dX(aY,a6,c[aX>>2]|0);a[aY+(c[aX>>2]|0)|0]=0;if((a6|0)!=0){dU(a6)}c[an>>2]=aY;a8=aY;break L1327}else{a7=c[an>>2]|0}}while(0);if((a7|0)==0){a9=0;i=l;return a9|0}dU(a7);a9=0;i=l;return a9|0}}while(0);if((a1|0)==1051){a8=c[an>>2]|0}aX=bF(f,e[aQ>>1]|0,(a4=i,i=i+8|0,c[a4>>2]=a8,a4)|0)|0;i=a4;if((a8|0)!=0){dU(a8)}if((aX|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 2:{if((b[aV+4>>1]|0)!=1){aD(28952,27888,4770,30224);return 0}if((a[aV+27|0]|0)!=0){aD(29496,27888,4771,30224);return 0}aX=al;aW=am;a$=j+8|0;L1357:do{if((c[a$>>2]|0)==1&(c[a$+4>>2]|0)==0){switch(e[j+2>>1]|0){case 1:{bb=0;bc=a[j+16|0]|0;break L1357;break};case 6:{aZ=a[j+16|0]|0;a5=aZ<<24>>24<0;bb=a5?4:0;bc=a5?0:aZ;break L1357;break};case 3:{aZ=b[j+16>>1]|0;b[ah>>1]=aZ;if((c[f+12>>2]&128|0)==0){bd=aZ}else{ds(ah);bd=b[ah>>1]|0}aZ=(bd&65535)>255;bb=aZ?4:0;bc=aZ?0:bd&255;break L1357;break};case 8:{aZ=b[j+16>>1]|0;b[ai>>1]=aZ;if((c[f+12>>2]&128|0)==0){bf=aZ}else{ds(ai);bf=b[ai>>1]|0}aZ=(bf&65535)>255;bb=aZ?4:0;bc=aZ?0:bf&255;break L1357;break};case 4:{aZ=c[j+16>>2]|0;c[aj>>2]=aZ;if((c[f+12>>2]&128|0)==0){bg=aZ}else{dt(aj);bg=c[aj>>2]|0}aZ=bg>>>0>255;bb=aZ?4:0;bc=aZ?0:bg&255;break L1357;break};case 9:{aZ=c[j+16>>2]|0;c[ak>>2]=aZ;if((c[f+12>>2]&128|0)==0){bh=aZ}else{dt(ak);bh=c[ak>>2]|0}aZ=bh>>>0>255;bb=aZ?4:0;bc=aZ?0:bh&255;break L1357;break};case 16:{aZ=f+12|0;a5=c[aZ>>2]|0;aY=j+16|0;do{if((a5&524288|0)==0){a6=c[aY>>2]|0;c[af>>2]=a6;if((a5&128|0)==0){bi=a6;bj=a5}else{dt(af);bi=c[af>>2]|0;bj=c[aZ>>2]|0}a6=bi;bk=0;if((bj&2048|0)==0){bl=f+628|0;bm=ba[c[f+640>>2]&127](c[bl>>2]|0,a6,bk,0)|0;if(!((bm|0)==(a6|0)&(E|0)==(bk|0))){bb=3;bc=0;break L1357}if((be[c[f+632>>2]&63](c[bl>>2]|0,aX,8)|0)==8){break}else{bb=3;bc=0;break L1357}}bl=aS(bi|0,8)|0;bk=bl;if(E|bk>>>0<8){bb=3;bc=0;break L1357}if(bk>>>0>(c[f+616>>2]|0)>>>0){bb=3;bc=0;break L1357}dX(aX,(c[f+612>>2]|0)+bi|0,8)}else{bk=aY|0;bl=c[bk+4>>2]|0;c[al>>2]=c[bk>>2];c[al+4>>2]=bl}}while(0);if((c[aZ>>2]&128|0)!=0){du(al)}aY=c[al>>2]|0;a5=c[al+4>>2]|0;bl=0;bk=a5>>>0>bl>>>0|a5>>>0==bl>>>0&aY>>>0>255>>>0;bb=bk?4:0;bc=bk?0:aY&255;break L1357;break};case 17:{aY=f+12|0;bk=c[aY>>2]|0;bl=j+16|0;do{if((bk&524288|0)==0){a5=c[bl>>2]|0;c[ag>>2]=a5;if((bk&128|0)==0){bn=a5;bo=bk}else{dt(ag);bn=c[ag>>2]|0;bo=c[aY>>2]|0}a5=bn;a6=0;if((bo&2048|0)==0){bm=f+628|0;bp=ba[c[f+640>>2]&127](c[bm>>2]|0,a5,a6,0)|0;if(!((bp|0)==(a5|0)&(E|0)==(a6|0))){bb=3;bc=0;break L1357}if((be[c[f+632>>2]&63](c[bm>>2]|0,aW,8)|0)==8){break}else{bb=3;bc=0;break L1357}}bm=aS(bn|0,8)|0;a6=bm;if(E|a6>>>0<8){bb=3;bc=0;break L1357}if(a6>>>0>(c[f+616>>2]|0)>>>0){bb=3;bc=0;break L1357}dX(aW,(c[f+612>>2]|0)+bn|0,8)}else{a6=bl|0;bm=c[a6+4>>2]|0;c[am>>2]=c[a6>>2];c[am+4>>2]=bm}}while(0);if((c[aY>>2]&128|0)!=0){du(am)}bl=c[am>>2]|0;bk=c[am+4>>2]|0;aZ=0;bm=bk>>>0>aZ>>>0|bk>>>0==aZ>>>0&bl>>>0>255>>>0;bb=bm?4:0;bc=bm?0:bl&255;break L1357;break};default:{bb=2;bc=0;break L1357}}}else{bb=1;bc=0}}while(0);if((bb|0)!=0){a2=bb;a1=1759;break L1313}aW=bF(f,e[aQ>>1]|0,(a4=i,i=i+8|0,c[a4>>2]=bc&255,a4)|0)|0;i=a4;if((aW|0)==0){a9=0}else{a1=1757;break L1313}i=l;return a9|0};case 4:{if((b[aV+4>>1]|0)!=1){aD(28952,27888,4783,30224);return 0}if((a[aV+27|0]|0)!=0){aD(29496,27888,4784,30224);return 0}aW=b0(f,j,ao)|0;if((aW|0)!=0){a2=aW;a1=1759;break L1313}aW=bF(f,e[aQ>>1]|0,(a4=i,i=i+8|0,c[a4>>2]=e[ao>>1]|0,a4)|0)|0;i=a4;if((aW|0)==0){a9=0}else{a1=1757;break L1313}i=l;return a9|0};case 6:{if((b[aV+4>>1]|0)!=1){aD(28952,27888,4796,30224);return 0}if((a[aV+27|0]|0)!=0){aD(29496,27888,4797,30224);return 0}aW=ad;aX=ae;a$=j+8|0;L1431:do{if((c[a$>>2]|0)==1&(c[a$+4>>2]|0)==0){switch(e[j+2>>1]|0){case 1:{c[ap>>2]=d[j+16|0]|0;bq=0;break L1431;break};case 6:{bl=a[j+16|0]|0;bm=bl<<24>>24<0;if(bm){bq=bm?4:0;break L1431}c[ap>>2]=bl<<24>>24;bq=0;break L1431;break};case 3:{bl=b[j+16>>1]|0;b[aa>>1]=bl;if((c[f+12>>2]&128|0)==0){br=bl}else{ds(aa);br=b[aa>>1]|0}c[ap>>2]=br&65535;bq=0;break L1431;break};case 8:{bl=b[j+16>>1]|0;b[ab>>1]=bl;if((c[f+12>>2]&128|0)==0){bs=bl}else{ds(ab);bs=b[ab>>1]|0}bl=bs<<16>>16<0;if(bl){bq=bl?4:0;break L1431}c[ap>>2]=bs<<16>>16;bq=0;break L1431;break};case 4:{c[ap>>2]=c[j+16>>2];if((c[f+12>>2]&128|0)==0){bq=0;break L1431}dt(ap);bq=0;break L1431;break};case 9:{bl=c[j+16>>2]|0;c[ac>>2]=bl;if((c[f+12>>2]&128|0)==0){bt=bl}else{dt(ac);bt=c[ac>>2]|0}bl=bt>>31&4;if((bl|0)!=0){bq=bl;break L1431}c[ap>>2]=bt;bq=0;break L1431;break};case 16:{bl=f+12|0;bm=c[bl>>2]|0;aZ=j+16|0;do{if((bm&524288|0)==0){bk=c[aZ>>2]|0;c[_>>2]=bk;if((bm&128|0)==0){bu=bk;bv=bm}else{dt(_);bu=c[_>>2]|0;bv=c[bl>>2]|0}bk=bu;a6=0;if((bv&2048|0)==0){a5=f+628|0;bp=ba[c[f+640>>2]&127](c[a5>>2]|0,bk,a6,0)|0;if(!((bp|0)==(bk|0)&(E|0)==(a6|0))){bq=3;break L1431}if((be[c[f+632>>2]&63](c[a5>>2]|0,aW,8)|0)==8){break}else{bq=3;break L1431}}a5=aS(bu|0,8)|0;a6=a5;if(E|a6>>>0<8){bq=3;break L1431}if(a6>>>0>(c[f+616>>2]|0)>>>0){bq=3;break L1431}dX(aW,(c[f+612>>2]|0)+bu|0,8)}else{a6=aZ|0;a5=c[a6+4>>2]|0;c[ad>>2]=c[a6>>2];c[ad+4>>2]=a5}}while(0);if((c[bl>>2]&128|0)!=0){du(ad)}aZ=c[ad>>2]|0;bm=c[ad+4>>2]|0;aY=0;a5=bm>>>0>aY>>>0|bm>>>0==aY>>>0&aZ>>>0>-1>>>0;if(a5){bq=a5?4:0;break L1431}c[ap>>2]=aZ;bq=0;break L1431;break};case 17:{aZ=f+12|0;a5=c[aZ>>2]|0;aY=j+16|0;do{if((a5&524288|0)==0){bm=c[aY>>2]|0;c[$>>2]=bm;if((a5&128|0)==0){bw=bm;bx=a5}else{dt($);bw=c[$>>2]|0;bx=c[aZ>>2]|0}bm=bw;a6=0;if((bx&2048|0)==0){bk=f+628|0;bp=ba[c[f+640>>2]&127](c[bk>>2]|0,bm,a6,0)|0;if(!((bp|0)==(bm|0)&(E|0)==(a6|0))){bq=3;break L1431}if((be[c[f+632>>2]&63](c[bk>>2]|0,aX,8)|0)==8){break}else{bq=3;break L1431}}bk=aS(bw|0,8)|0;a6=bk;if(E|a6>>>0<8){bq=3;break L1431}if(a6>>>0>(c[f+616>>2]|0)>>>0){bq=3;break L1431}dX(aX,(c[f+612>>2]|0)+bw|0,8)}else{a6=aY|0;bk=c[a6+4>>2]|0;c[ae>>2]=c[a6>>2];c[ae+4>>2]=bk}}while(0);if((c[aZ>>2]&128|0)!=0){du(ae)}aY=c[ae>>2]|0;a5=c[ae+4>>2]|0;bl=0;bk=a5>>>0>bl>>>0|a5>>>0==bl>>>0&aY>>>0>-1>>>0;if(bk){bq=bk?4:0;break L1431}c[ap>>2]=aY;bq=0;break L1431;break};default:{bq=2;break L1431}}}else{bq=1}}while(0);if((bq|0)!=0){a2=bq;a1=1759;break L1313}aX=bF(f,e[aQ>>1]|0,(a4=i,i=i+8|0,c[a4>>2]=c[ap>>2],a4)|0)|0;i=a4;if((aX|0)==0){a9=0}else{a1=1757;break L1313}i=l;return a9|0};case 8:{if((b[aV+4>>1]|0)!=1){aD(28952,27888,4809,30224);return 0}if((a[aV+27|0]|0)!=0){aD(29496,27888,4810,30224);return 0}aX=Z;aW=j+8|0;L1499:do{if((c[aW>>2]|0)==1&(c[aW+4>>2]|0)==0){switch(e[j+2>>1]|0){case 8:{a$=b[j+16>>1]|0;b[W>>1]=a$;if((c[f+12>>2]&128|0)==0){by=a$}else{ds(W);by=b[W>>1]|0}a$=by<<16>>16<0;if(a$){bz=a$?4:0;break L1499}c[aq>>2]=by<<16>>16;c[aq+4>>2]=by<<16>>16<0|0?-1:0;bz=0;break L1499;break};case 1:{c[aq>>2]=d[j+16|0]|0;c[aq+4>>2]=0;bz=0;break L1499;break};case 3:{a$=b[j+16>>1]|0;b[V>>1]=a$;if((c[f+12>>2]&128|0)==0){bA=a$}else{ds(V);bA=b[V>>1]|0}c[aq>>2]=bA&65535;c[aq+4>>2]=0;bz=0;break L1499;break};case 17:{a$=f+12|0;aY=c[a$>>2]|0;bk=j+16|0;do{if((aY&524288|0)==0){bl=c[bk>>2]|0;c[U>>2]=bl;if((aY&128|0)==0){bB=bl;bC=aY}else{dt(U);bB=c[U>>2]|0;bC=c[a$>>2]|0}bl=bB;a5=0;if((bC&2048|0)==0){a6=f+628|0;bm=ba[c[f+640>>2]&127](c[a6>>2]|0,bl,a5,0)|0;if(!((bm|0)==(bl|0)&(E|0)==(a5|0))){bz=3;break L1499}if((be[c[f+632>>2]&63](c[a6>>2]|0,aX,8)|0)==8){break}else{bz=3;break L1499}}a6=aS(bB|0,8)|0;a5=a6;if(E|a5>>>0<8){bz=3;break L1499}if(a5>>>0>(c[f+616>>2]|0)>>>0){bz=3;break L1499}dX(aX,(c[f+612>>2]|0)+bB|0,8)}else{a5=bk|0;a6=c[a5+4>>2]|0;c[Z>>2]=c[a5>>2];c[Z+4>>2]=a6}}while(0);if((c[a$>>2]&128|0)!=0){du(Z)}bk=c[Z>>2]|0;aY=c[Z+4>>2]|0;aZ=0;a6=(aY|0)<(aZ|0)|(aY|0)==(aZ|0)&bk>>>0<0>>>0;if(a6){bz=a6?4:0;break L1499}c[aq>>2]=bk;c[aq+4>>2]=aY;bz=0;break L1499;break};case 6:{aY=a[j+16|0]|0;bk=aY<<24>>24<0;if(bk){bz=bk?4:0;break L1499}c[aq>>2]=aY<<24>>24;c[aq+4>>2]=aY<<24>>24<0|0?-1:0;bz=0;break L1499;break};case 16:{aY=f+12|0;bk=c[aY>>2]|0;a6=j+16|0;do{if((bk&524288|0)==0){aZ=c[a6>>2]|0;c[T>>2]=aZ;if((bk&128|0)==0){bD=aZ;bE=bk}else{dt(T);bD=c[T>>2]|0;bE=c[aY>>2]|0}aZ=bD;a5=0;bl=aq;if((bE&2048|0)==0){bm=f+628|0;bp=ba[c[f+640>>2]&127](c[bm>>2]|0,aZ,a5,0)|0;if(!((bp|0)==(aZ|0)&(E|0)==(a5|0))){bz=3;break L1499}if((be[c[f+632>>2]&63](c[bm>>2]|0,bl,8)|0)==8){break}else{bz=3;break L1499}}bm=aS(bD|0,8)|0;a5=bm;if(E|a5>>>0<8){bz=3;break L1499}if(a5>>>0>(c[f+616>>2]|0)>>>0){bz=3;break L1499}dX(bl,(c[f+612>>2]|0)+bD|0,8)}else{bl=a6|0;a5=c[bl+4>>2]|0;c[aq>>2]=c[bl>>2];c[aq+4>>2]=a5}}while(0);if((c[aY>>2]&128|0)==0){bz=0;break L1499}du(aq);bz=0;break L1499;break};case 9:{a6=c[j+16>>2]|0;c[Y>>2]=a6;if((c[f+12>>2]&128|0)==0){bG=a6}else{dt(Y);bG=c[Y>>2]|0}a6=bG>>31&4;if((a6|0)!=0){bz=a6;break L1499}c[aq>>2]=bG;c[aq+4>>2]=(bG|0)<0|0?-1:0;bz=0;break L1499;break};case 4:{a6=c[j+16>>2]|0;c[X>>2]=a6;if((c[f+12>>2]&128|0)==0){bH=a6}else{dt(X);bH=c[X>>2]|0}c[aq>>2]=bH;c[aq+4>>2]=0;bz=0;break L1499;break};default:{bz=2;break L1499}}}else{bz=1}}while(0);if((bz|0)!=0){a2=bz;a1=1759;break L1313}aX=c[aq+4>>2]|0;aW=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[aq>>2],c[a4+8>>2]=aX,a4)|0)|0;i=a4;if((aW|0)==0){a9=0}else{a1=1757;break L1313}i=l;return a9|0};case 10:{if((b[aV+4>>1]|0)!=1){aD(28952,27888,4822,30224);return 0}if((a[aV+27|0]|0)!=0){aD(29496,27888,4823,30224);return 0}aW=O;aX=P;a6=S;bk=j+8|0;L1566:do{if((c[bk>>2]|0)==1&(c[bk+4>>2]|0)==0){switch(e[j+2>>1]|0){case 4:{a$=c[j+16>>2]|0;c[M>>2]=a$;if((c[f+12>>2]&128|0)==0){bI=a$}else{dt(M);bI=c[M>>2]|0}g[ar>>2]=+(bI>>>0>>>0);bJ=0;break L1566;break};case 9:{a$=c[j+16>>2]|0;c[N>>2]=a$;if((c[f+12>>2]&128|0)==0){bK=a$}else{dt(N);bK=c[N>>2]|0}g[ar>>2]=+(bK|0);bJ=0;break L1566;break};case 16:{a$=f+12|0;a5=c[a$>>2]|0;bl=j+16|0;do{if((a5&524288|0)==0){bm=c[bl>>2]|0;c[I>>2]=bm;if((a5&128|0)==0){bL=bm;bM=a5}else{dt(I);bL=c[I>>2]|0;bM=c[a$>>2]|0}bm=bL;aZ=0;if((bM&2048|0)==0){bp=f+628|0;bN=ba[c[f+640>>2]&127](c[bp>>2]|0,bm,aZ,0)|0;if(!((bN|0)==(bm|0)&(E|0)==(aZ|0))){bJ=3;break L1566}if((be[c[f+632>>2]&63](c[bp>>2]|0,aW,8)|0)==8){break}else{bJ=3;break L1566}}bp=aS(bL|0,8)|0;aZ=bp;if(E|aZ>>>0<8){bJ=3;break L1566}if(aZ>>>0>(c[f+616>>2]|0)>>>0){bJ=3;break L1566}dX(aW,(c[f+612>>2]|0)+bL|0,8)}else{aZ=bl|0;bp=c[aZ+4>>2]|0;c[O>>2]=c[aZ>>2];c[O+4>>2]=bp}}while(0);if((c[a$>>2]&128|0)!=0){du(O)}g[ar>>2]=+((c[O>>2]|0)>>>0)+ +((c[O+4>>2]|0)>>>0)*4294967296.0;bJ=0;break L1566;break};case 17:{bl=f+12|0;a5=c[bl>>2]|0;aY=j+16|0;do{if((a5&524288|0)==0){bp=c[aY>>2]|0;c[H>>2]=bp;if((a5&128|0)==0){bO=bp;bP=a5}else{dt(H);bO=c[H>>2]|0;bP=c[bl>>2]|0}bp=bO;aZ=0;if((bP&2048|0)==0){bm=f+628|0;bN=ba[c[f+640>>2]&127](c[bm>>2]|0,bp,aZ,0)|0;if(!((bN|0)==(bp|0)&(E|0)==(aZ|0))){bJ=3;break L1566}if((be[c[f+632>>2]&63](c[bm>>2]|0,aX,8)|0)==8){break}else{bJ=3;break L1566}}bm=aS(bO|0,8)|0;aZ=bm;if(E|aZ>>>0<8){bJ=3;break L1566}if(aZ>>>0>(c[f+616>>2]|0)>>>0){bJ=3;break L1566}dX(aX,(c[f+612>>2]|0)+bO|0,8)}else{aZ=aY|0;bm=c[aZ+4>>2]|0;c[P>>2]=c[aZ>>2];c[P+4>>2]=bm}}while(0);if((c[bl>>2]&128|0)!=0){du(P)}g[ar>>2]=+((c[P>>2]|0)>>>0)+ +(c[P+4>>2]|0)*4294967296.0;bJ=0;break L1566;break};case 1:{g[ar>>2]=+((d[j+16|0]|0)>>>0);bJ=0;break L1566;break};case 6:{g[ar>>2]=+(a[j+16|0]|0);bJ=0;break L1566;break};case 3:{aY=b[j+16>>1]|0;b[K>>1]=aY;if((c[f+12>>2]&128|0)==0){bQ=aY}else{ds(K);bQ=b[K>>1]|0}g[ar>>2]=+((bQ&65535)>>>0);bJ=0;break L1566;break};case 8:{aY=b[j+16>>1]|0;b[L>>1]=aY;if((c[f+12>>2]&128|0)==0){bR=aY}else{ds(L);bR=b[L>>1]|0}g[ar>>2]=+(bR<<16>>16|0);bJ=0;break L1566;break};case 5:{aY=ce(f,j,Q)|0;if((aY|0)!=0){bJ=aY;break L1566}g[ar>>2]=+h[Q>>3];bJ=0;break L1566;break};case 10:{aY=cf(f,j,R)|0;if((aY|0)!=0){bJ=aY;break L1566}g[ar>>2]=+h[R>>3];bJ=0;break L1566;break};case 11:{g[ar>>2]=+g[j+16>>2];if((c[f+12>>2]&128|0)==0){bJ=0;break L1566}dt(ar);bJ=0;break L1566;break};case 12:{aY=f+12|0;a5=c[aY>>2]|0;a$=j+16|0;do{if((a5&524288|0)==0){bm=c[a$>>2]|0;c[J>>2]=bm;if((a5&128|0)==0){bS=bm;bT=a5}else{dt(J);bS=c[J>>2]|0;bT=c[aY>>2]|0}bm=bS;aZ=0;if((bT&2048|0)==0){bp=f+628|0;bN=ba[c[f+640>>2]&127](c[bp>>2]|0,bm,aZ,0)|0;if(!((bN|0)==(bm|0)&(E|0)==(aZ|0))){bJ=3;break L1566}if((be[c[f+632>>2]&63](c[bp>>2]|0,a6,8)|0)==8){break}else{bJ=3;break L1566}}bp=aS(bS|0,8)|0;aZ=bp;if(E|aZ>>>0<8){bJ=3;break L1566}if(aZ>>>0>(c[f+616>>2]|0)>>>0){bJ=3;break L1566}dX(a6,(c[f+612>>2]|0)+bS|0,8)}else{h[S>>3]=+h[a$>>3]}}while(0);if((c[aY>>2]&128|0)!=0){du(S)}g[ar>>2]=+h[S>>3];bJ=0;break L1566;break};default:{bJ=2;break L1566}}}else{bJ=1}}while(0);if((bJ|0)!=0){a2=bJ;a1=1759;break L1313}a6=bF(f,e[aQ>>1]|0,(a4=i,i=i+8|0,h[a4>>3]=+g[ar>>2],a4)|0)|0;i=a4;if((a6|0)==0){a9=0}else{a1=1757;break L1313}i=l;return a9|0};case 11:{if((b[aV+4>>1]|0)!=1){aD(28952,27888,4835,30224);return 0}if((a[aV+27|0]|0)!=0){aD(29496,27888,4836,30224);return 0}a6=D;aX=F;aW=j+8|0;L1654:do{if((c[aW>>2]|0)==1&(c[aW+4>>2]|0)==0){switch(e[j+2>>1]|0){case 1:{h[as>>3]=+((d[j+16|0]|0)>>>0);bU=0;break L1654;break};case 6:{h[as>>3]=+(a[j+16|0]|0);bU=0;break L1654;break};case 3:{bk=b[j+16>>1]|0;b[z>>1]=bk;if((c[f+12>>2]&128|0)==0){bV=bk}else{ds(z);bV=b[z>>1]|0}h[as>>3]=+((bV&65535)>>>0);bU=0;break L1654;break};case 8:{bk=b[j+16>>1]|0;b[A>>1]=bk;if((c[f+12>>2]&128|0)==0){bW=bk}else{ds(A);bW=b[A>>1]|0}h[as>>3]=+(bW<<16>>16|0);bU=0;break L1654;break};case 4:{bk=c[j+16>>2]|0;c[B>>2]=bk;if((c[f+12>>2]&128|0)==0){bX=bk}else{dt(B);bX=c[B>>2]|0}h[as>>3]=+(bX>>>0>>>0);bU=0;break L1654;break};case 9:{bk=c[j+16>>2]|0;c[C>>2]=bk;if((c[f+12>>2]&128|0)==0){bY=bk}else{dt(C);bY=c[C>>2]|0}h[as>>3]=+(bY|0);bU=0;break L1654;break};case 16:{bk=f+12|0;a$=c[bk>>2]|0;a5=j+16|0;do{if((a$&524288|0)==0){bl=c[a5>>2]|0;c[x>>2]=bl;if((a$&128|0)==0){bZ=bl;b_=a$}else{dt(x);bZ=c[x>>2]|0;b_=c[bk>>2]|0}bl=bZ;aZ=0;if((b_&2048|0)==0){bp=f+628|0;bm=ba[c[f+640>>2]&127](c[bp>>2]|0,bl,aZ,0)|0;if(!((bm|0)==(bl|0)&(E|0)==(aZ|0))){bU=3;break L1654}if((be[c[f+632>>2]&63](c[bp>>2]|0,a6,8)|0)==8){break}else{bU=3;break L1654}}bp=aS(bZ|0,8)|0;aZ=bp;if(E|aZ>>>0<8){bU=3;break L1654}if(aZ>>>0>(c[f+616>>2]|0)>>>0){bU=3;break L1654}dX(a6,(c[f+612>>2]|0)+bZ|0,8)}else{aZ=a5|0;bp=c[aZ+4>>2]|0;c[D>>2]=c[aZ>>2];c[D+4>>2]=bp}}while(0);if((c[bk>>2]&128|0)!=0){du(D)}h[as>>3]=+((c[D>>2]|0)>>>0)+ +((c[D+4>>2]|0)>>>0)*4294967296.0;bU=0;break L1654;break};case 17:{a5=f+12|0;a$=c[a5>>2]|0;aY=j+16|0;do{if((a$&524288|0)==0){bp=c[aY>>2]|0;c[w>>2]=bp;if((a$&128|0)==0){b$=bp;b2=a$}else{dt(w);b$=c[w>>2]|0;b2=c[a5>>2]|0}bp=b$;aZ=0;if((b2&2048|0)==0){bl=f+628|0;bm=ba[c[f+640>>2]&127](c[bl>>2]|0,bp,aZ,0)|0;if(!((bm|0)==(bp|0)&(E|0)==(aZ|0))){bU=3;break L1654}if((be[c[f+632>>2]&63](c[bl>>2]|0,aX,8)|0)==8){break}else{bU=3;break L1654}}bl=aS(b$|0,8)|0;aZ=bl;if(E|aZ>>>0<8){bU=3;break L1654}if(aZ>>>0>(c[f+616>>2]|0)>>>0){bU=3;break L1654}dX(aX,(c[f+612>>2]|0)+b$|0,8)}else{aZ=aY|0;bl=c[aZ+4>>2]|0;c[F>>2]=c[aZ>>2];c[F+4>>2]=bl}}while(0);if((c[a5>>2]&128|0)!=0){du(F)}h[as>>3]=+((c[F>>2]|0)>>>0)+ +(c[F+4>>2]|0)*4294967296.0;bU=0;break L1654;break};case 5:{bU=ce(f,j,as)|0;break L1654;break};case 10:{bU=cf(f,j,as)|0;break L1654;break};case 11:{b4=+g[j+16>>2];g[G>>2]=b4;if((c[f+12>>2]&128|0)==0){b6=b4}else{dt(G);b6=+g[G>>2]}h[as>>3]=b6;bU=0;break L1654;break};case 12:{aY=f+12|0;a$=c[aY>>2]|0;bk=j+16|0;do{if((a$&524288|0)==0){bl=c[bk>>2]|0;c[y>>2]=bl;if((a$&128|0)==0){b7=bl;ch=a$}else{dt(y);b7=c[y>>2]|0;ch=c[aY>>2]|0}bl=b7;aZ=0;bp=as;if((ch&2048|0)==0){bm=f+628|0;bN=ba[c[f+640>>2]&127](c[bm>>2]|0,bl,aZ,0)|0;if(!((bN|0)==(bl|0)&(E|0)==(aZ|0))){bU=3;break L1654}if((be[c[f+632>>2]&63](c[bm>>2]|0,bp,8)|0)==8){break}else{bU=3;break L1654}}bm=aS(b7|0,8)|0;aZ=bm;if(E|aZ>>>0<8){bU=3;break L1654}if(aZ>>>0>(c[f+616>>2]|0)>>>0){bU=3;break L1654}dX(bp,(c[f+612>>2]|0)+b7|0,8)}else{h[as>>3]=+h[bk>>3]}}while(0);if((c[aY>>2]&128|0)==0){bU=0;break L1654}du(as);bU=0;break L1654;break};default:{bU=2;break L1654}}}else{bU=1}}while(0);if((bU|0)!=0){a2=bU;a1=1759;break L1313}aX=bF(f,e[aQ>>1]|0,(a4=i,i=i+8|0,h[a4>>3]=+h[as>>3],a4)|0)|0;i=a4;if((aX|0)==0){a9=0}else{a1=1757;break L1313}i=l;return a9|0};case 12:{if((b[aV+4>>1]|0)!=1){aD(28952,27888,4848,30224);return 0}if((a[aV+27|0]|0)!=0){aD(29496,27888,4849,30224);return 0}aX=j+8|0;if(!((c[aX>>2]|0)==1&(c[aX+4>>2]|0)==0)){a2=1;a1=1759;break L1313}aX=e[j+2>>1]|0;do{if((aX|0)==4|(aX|0)==13){a6=c[j+16>>2]|0;c[v>>2]=a6;if((c[f+12>>2]&128|0)==0){ci=a6}else{dt(v);ci=c[v>>2]|0}c[at>>2]=ci;c[at+4>>2]=0}else if((aX|0)==16|(aX|0)==18){a6=f+12|0;aW=c[a6>>2]|0;bk=j+16|0;do{if((aW&524288|0)==0){a$=c[bk>>2]|0;c[u>>2]=a$;if((aW&128|0)==0){cj=a$;ck=aW}else{dt(u);cj=c[u>>2]|0;ck=c[a6>>2]|0}a$=cj;a5=0;bp=at;if((ck&2048|0)==0){aZ=f+628|0;bm=ba[c[f+640>>2]&127](c[aZ>>2]|0,a$,a5,0)|0;if(!((bm|0)==(a$|0)&(E|0)==(a5|0))){a2=3;a1=1759;break L1313}if((be[c[f+632>>2]&63](c[aZ>>2]|0,bp,8)|0)==8){break}else{a2=3;a1=1759;break L1313}}aZ=aS(cj|0,8)|0;a5=aZ;if(E|a5>>>0<8){a2=3;a1=1759;break L1313}if(a5>>>0>(c[f+616>>2]|0)>>>0){a2=3;a1=1759;break L1313}dX(bp,(c[f+612>>2]|0)+cj|0,8)}else{bp=bk|0;a5=c[bp+4>>2]|0;c[at>>2]=c[bp>>2];c[at+4>>2]=a5}}while(0);if((c[a6>>2]&128|0)==0){break}du(at)}else{a2=2;a1=1759;break L1313}}while(0);aX=c[at+4>>2]|0;bk=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[at>>2],c[a4+8>>2]=aX,a4)|0)|0;i=a4;if((bk|0)==0){a9=0}else{a1=1757;break L1313}i=l;return a9|0};case 14:{if((b[aV+4>>1]|0)!=2){aD(28800,27888,4861,30224);return 0}if((a[aV+27|0]|0)!=0){aD(29496,27888,4862,30224);return 0}bk=j+8|0;aX=c[bk>>2]|0;if(!((aX|0)==2&(c[bk+4>>2]|0)==0)){d$(c[f+628>>2]|0,30224,28624,(a4=i,i=i+16|0,c[a4>>2]=c[aV+28>>2],c[a4+8>>2]=aX,a4)|0);i=a4;a9=0;i=l;return a9|0}aX=b5(f,j,au)|0;if((aX|0)!=0){a2=aX;a1=1759;break L1313}aX=c[au>>2]|0;bk=e[aX+2>>1]|0;aW=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=e[aX>>1]|0,c[a4+8>>2]=bk,a4)|0)|0;i=a4;dU(aX);if((aW|0)==0){a9=0}else{a1=1757;break L1313}i=l;return a9|0};case 16:{aW=b[aV+4>>1]|0;if(aW<<16>>16<=0){aD(28464,27888,4883,30224);return 0}if((a[aV+27|0]|0)!=0){aD(29496,27888,4884,30224);return 0}aX=j+8|0;bk=c[aX>>2]|0;if(!((bk|0)==(aW<<16>>16|0)&(c[aX+4>>2]|0)==((aW<<16>>16<0|0?-1:0)|0))){d$(c[f+628>>2]|0,30224,28248,(a4=i,i=i+24|0,c[a4>>2]=c[aV+28>>2],c[a4+8>>2]=aW<<16>>16,c[a4+16>>2]=bk,a4)|0);i=a4;a9=0;i=l;return a9|0}bk=ca(f,j,av)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[av>>2]|0;aW=bF(f,e[aQ>>1]|0,(a4=i,i=i+8|0,c[a4>>2]=bk,a4)|0)|0;i=a4;if((bk|0)!=0){dU(bk)}if((aW|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 18:{aW=b[aV+4>>1]|0;if(aW<<16>>16<=0){aD(28464,27888,4909,30224);return 0}if((a[aV+27|0]|0)!=0){aD(29496,27888,4910,30224);return 0}bk=j+8|0;if(!((c[bk>>2]|0)==(aW<<16>>16|0)&(c[bk+4>>2]|0)==((aW<<16>>16<0|0?-1:0)|0))){a1=1757;break L1313}aW=b5(f,j,aw)|0;if((aW|0)!=0){a2=aW;a1=1759;break L1313}aW=c[aw>>2]|0;bk=bF(f,e[aQ>>1]|0,(a4=i,i=i+8|0,c[a4>>2]=aW,a4)|0)|0;i=a4;if((aW|0)!=0){dU(aW)}if((bk|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 20:{bk=b[aV+4>>1]|0;if(bk<<16>>16<=0){aD(28464,27888,4931,30224);return 0}if((a[aV+27|0]|0)!=0){aD(29496,27888,4932,30224);return 0}aW=j+8|0;if(!((c[aW>>2]|0)==(bk<<16>>16|0)&(c[aW+4>>2]|0)==((bk<<16>>16<0|0?-1:0)|0))){a1=1757;break L1313}bk=cb(f,j,ax)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[ax>>2]|0;aW=bF(f,e[aQ>>1]|0,(a4=i,i=i+8|0,c[a4>>2]=bk,a4)|0)|0;i=a4;if((bk|0)!=0){dU(bk)}if((aW|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 24:{aW=b[aV+4>>1]|0;if(aW<<16>>16<=0){aD(28464,27888,4953,30224);return 0}if((a[aV+27|0]|0)!=0){aD(29496,27888,4954,30224);return 0}bk=j+8|0;if(!((c[bk>>2]|0)==(aW<<16>>16|0)&(c[bk+4>>2]|0)==((aW<<16>>16<0|0?-1:0)|0))){a1=1757;break L1313}aW=cc(f,j,ay)|0;if((aW|0)!=0){a2=aW;a1=1759;break L1313}aW=c[ay>>2]|0;bk=bF(f,e[aQ>>1]|0,(a4=i,i=i+8|0,c[a4>>2]=aW,a4)|0)|0;i=a4;if((aW|0)!=0){dU(aW)}if((bk|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 27:{if((b[aV+4>>1]|0)!=-1){aD(28112,27888,4975,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,4976,30224);return 0}bk=j+8|0;aW=c[bk+4>>2]|0;aX=0;if(aW>>>0>aX>>>0|aW>>>0==aX>>>0&(c[bk>>2]|0)>>>0>65535>>>0){a2=1;a1=1759;break L1313}aX=ca(f,j,az)|0;if((aX|0)!=0){a2=aX;a1=1759;break L1313}aX=c[az>>2]|0;aW=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[bk>>2]&65535,c[a4+8>>2]=aX,a4)|0)|0;i=a4;if((aX|0)!=0){dU(aX)}if((aW|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 28:{if((b[aV+4>>1]|0)!=-1){aD(28112,27888,4997,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,4998,30224);return 0}aW=j+8|0;aX=c[aW+4>>2]|0;bk=0;if(aX>>>0>bk>>>0|aX>>>0==bk>>>0&(c[aW>>2]|0)>>>0>65535>>>0){a2=1;a1=1759;break L1313}bk=ca(f,j,aA)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[aA>>2]|0;aX=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[aW>>2]&65535,c[a4+8>>2]=bk,a4)|0)|0;i=a4;if((bk|0)!=0){dU(bk)}if((aX|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 30:{if((b[aV+4>>1]|0)!=-1){aD(28112,27888,5019,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5020,30224);return 0}aX=j+8|0;bk=c[aX+4>>2]|0;aW=0;if(bk>>>0>aW>>>0|bk>>>0==aW>>>0&(c[aX>>2]|0)>>>0>65535>>>0){a2=1;a1=1759;break L1313}aW=b5(f,j,aB)|0;if((aW|0)!=0){a2=aW;a1=1759;break L1313}aW=c[aB>>2]|0;bk=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[aX>>2]&65535,c[a4+8>>2]=aW,a4)|0)|0;i=a4;if((aW|0)!=0){dU(aW)}if((bk|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 32:{if((b[aV+4>>1]|0)!=-1){aD(28112,27888,5041,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5042,30224);return 0}bk=j+8|0;aW=c[bk+4>>2]|0;aX=0;if(aW>>>0>aX>>>0|aW>>>0==aX>>>0&(c[bk>>2]|0)>>>0>65535>>>0){a2=1;a1=1759;break L1313}aX=cb(f,j,aC)|0;if((aX|0)!=0){a2=aX;a1=1759;break L1313}aX=c[aC>>2]|0;aW=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[bk>>2]&65535,c[a4+8>>2]=aX,a4)|0)|0;i=a4;if((aX|0)!=0){dU(aX)}if((aW|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 34:{if((b[aV+4>>1]|0)!=-1){aD(28112,27888,5063,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5064,30224);return 0}aW=j+8|0;aX=c[aW+4>>2]|0;bk=0;if(aX>>>0>bk>>>0|aX>>>0==bk>>>0&(c[aW>>2]|0)>>>0>65535>>>0){a2=1;a1=1759;break L1313}bk=b8(f,j,aE)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[aE>>2]|0;aX=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[aW>>2]&65535,c[a4+8>>2]=bk,a4)|0)|0;i=a4;if((bk|0)!=0){dU(bk)}if((aX|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 36:{if((b[aV+4>>1]|0)!=-1){aD(28112,27888,5085,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5086,30224);return 0}aX=j+8|0;bk=c[aX+4>>2]|0;aW=0;if(bk>>>0>aW>>>0|bk>>>0==aW>>>0&(c[aX>>2]|0)>>>0>65535>>>0){a2=1;a1=1759;break L1313}aW=cc(f,j,aF)|0;if((aW|0)!=0){a2=aW;a1=1759;break L1313}aW=c[aF>>2]|0;bk=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[aX>>2]&65535,c[a4+8>>2]=aW,a4)|0)|0;i=a4;if((aW|0)!=0){dU(aW)}if((bk|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 37:{if((b[aV+4>>1]|0)!=-1){aD(28112,27888,5107,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5108,30224);return 0}bk=j+8|0;aW=c[bk+4>>2]|0;aX=0;if(aW>>>0>aX>>>0|aW>>>0==aX>>>0&(c[bk>>2]|0)>>>0>65535>>>0){a2=1;a1=1759;break L1313}aX=b3(f,j,aG)|0;if((aX|0)!=0){a2=aX;a1=1759;break L1313}aX=c[aG>>2]|0;aW=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[bk>>2]&65535,c[a4+8>>2]=aX,a4)|0)|0;i=a4;if((aX|0)!=0){dU(aX)}if((aW|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 38:{if((b[aV+4>>1]|0)!=-1){aD(28112,27888,5129,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5130,30224);return 0}aW=j+8|0;aX=c[aW+4>>2]|0;bk=0;if(aX>>>0>bk>>>0|aX>>>0==bk>>>0&(c[aW>>2]|0)>>>0>65535>>>0){a2=1;a1=1759;break L1313}bk=cd(f,j,aH)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[aH>>2]|0;aX=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[aW>>2]&65535,c[a4+8>>2]=bk,a4)|0)|0;i=a4;if((bk|0)!=0){dU(bk)}if((aX|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 39:{if((b[aV+4>>1]|0)!=-3){aD(27920,27888,5151,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5152,30224);return 0}aX=ca(f,j,aI)|0;if((aX|0)!=0){a2=aX;a1=1759;break L1313}aX=c[aI>>2]|0;bk=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[j+8>>2],c[a4+8>>2]=aX,a4)|0)|0;i=a4;if((aX|0)!=0){dU(aX)}if((bk|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 40:{if((b[aV+4>>1]|0)!=-3){aD(27920,27888,5168,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5169,30224);return 0}bk=ca(f,j,aJ)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[aJ>>2]|0;aX=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[j+8>>2],c[a4+8>>2]=bk,a4)|0)|0;i=a4;if((bk|0)!=0){dU(bk)}if((aX|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 41:{if((b[aV+4>>1]|0)!=-3){aD(27920,27888,5185,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5186,30224);return 0}aX=j+2|0;switch(e[aX>>1]|0){case 7:case 1:case 6:case 3:case 8:case 4:case 9:case 16:case 17:{break};default:{a2=2;a1=1759;break L1313}}bk=b9(f,j,s,1,t)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[t>>2]|0;L1968:do{if((bk|0)==0){cl=0}else{aW=e[aX>>1]|0;if((aW|0)==7|(aW|0)==1){aY=c[s>>2]|0;if((aY|0)==0){cl=bk;break}else{cm=bk;cn=0}while(1){if((a[cm]|0)<0){break}a5=cn+1|0;if(a5>>>0<aY>>>0){cm=cm+1|0;cn=a5}else{cl=bk;break L1968}}dU(bk);a2=4;a1=1759;break L1313}else if((aW|0)==6){cl=bk;break}aY=c[s>>2]|0;a6=dT(aY)|0;if((a6|0)==0){dU(bk);a2=7;a1=1759;break L1313}L1980:do{switch(e[aX>>1]|0){case 3:{if((aY|0)==0){a1=1551;break L1980}a5=f+12|0;bp=bk;aZ=a6;a$=0;while(1){if((c[a5>>2]&128|0)!=0){ds(bp)}bm=b[bp>>1]|0;if((bm&65535)>127){a1=1550;break L1980}a[aZ]=bm&255;bm=a$+1|0;if(bm>>>0<(c[s>>2]|0)>>>0){bp=bp+2|0;aZ=aZ+1|0;a$=bm}else{a1=1551;break}}break};case 8:{if((aY|0)==0){a1=1551;break L1980}a$=f+12|0;aZ=bk;bp=a6;a5=0;while(1){if((c[a$>>2]&128|0)!=0){ds(aZ)}bm=b[aZ>>1]|0;if((bm+128&65535)>255){a1=1550;break L1980}a[bp]=bm&255;bm=a5+1|0;if(bm>>>0<(c[s>>2]|0)>>>0){aZ=aZ+2|0;bp=bp+1|0;a5=bm}else{a1=1551;break}}break};case 4:{if((aY|0)==0){a1=1551;break L1980}a5=f+12|0;bp=bk;aZ=a6;a$=0;while(1){if((c[a5>>2]&128|0)!=0){dt(bp)}bm=c[bp>>2]|0;if(bm>>>0>127){a1=1550;break L1980}a[aZ]=bm&255;bm=a$+1|0;if(bm>>>0<(c[s>>2]|0)>>>0){bp=bp+4|0;aZ=aZ+1|0;a$=bm}else{a1=1551;break}}break};case 9:{if((aY|0)==0){a1=1551;break L1980}a$=f+12|0;aZ=bk;bp=a6;a5=0;while(1){if((c[a$>>2]&128|0)!=0){dt(aZ)}bm=c[aZ>>2]|0;if((bm+128|0)>>>0>255){a1=1550;break L1980}a[bp]=bm&255;bm=a5+1|0;if(bm>>>0<(c[s>>2]|0)>>>0){aZ=aZ+4|0;bp=bp+1|0;a5=bm}else{a1=1551;break}}break};case 16:{if((aY|0)==0){a1=1551;break L1980}a5=f+12|0;bp=bk;aZ=a6;a$=0;while(1){if((c[a5>>2]&128|0)!=0){du(bp)}bm=c[bp>>2]|0;bl=c[bp+4>>2]|0;bN=0;if(bl>>>0>bN>>>0|bl>>>0==bN>>>0&bm>>>0>127>>>0){a1=1550;break L1980}a[aZ]=bm&255;bm=a$+1|0;if(bm>>>0<(c[s>>2]|0)>>>0){bp=bp+8|0;aZ=aZ+1|0;a$=bm}else{a1=1551;break}}break};case 17:{if((aY|0)==0){a1=1551;break L1980}a$=f+12|0;aZ=bk;bp=a6;a5=0;while(1){if((c[a$>>2]&128|0)!=0){du(aZ)}bm=c[aZ>>2]|0;bN=hy(bm,c[aZ+4>>2]|0,128,0)|0;bl=E;co=0;if(bl>>>0>co>>>0|bl>>>0==co>>>0&bN>>>0>255>>>0){a1=1550;break L1980}a[bp]=bm&255;bm=a5+1|0;if(bm>>>0<(c[s>>2]|0)>>>0){aZ=aZ+8|0;bp=bp+1|0;a5=bm}else{a1=1551;break}}break};default:{a1=1551}}}while(0);if((a1|0)==1550){dU(c[t>>2]|0);dU(a6);a2=4;a1=1759;break L1313}else if((a1|0)==1551){dU(c[t>>2]|0);cl=a6;break}}}while(0);bk=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[j+8>>2],c[a4+8>>2]=cl,a4)|0)|0;i=a4;if((cl|0)!=0){dU(cl)}if((bk|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 42:{if((b[aV+4>>1]|0)!=-3){aD(27920,27888,5202,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5203,30224);return 0}bk=b5(f,j,aK)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[aK>>2]|0;aX=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[j+8>>2],c[a4+8>>2]=bk,a4)|0)|0;i=a4;if((bk|0)!=0){dU(bk)}if((aX|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 43:{if((b[aV+4>>1]|0)!=-3){aD(27920,27888,5219,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5220,30224);return 0}aX=j+2|0;switch(e[aX>>1]|0){case 1:case 6:case 3:case 8:case 4:case 9:case 16:case 17:{break};default:{a2=2;a1=1759;break L1313}}bk=b9(f,j,q,2,r)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[r>>2]|0;L2058:do{if((bk|0)==0){cp=0}else{aY=e[aX>>1]|0;if((aY|0)==3){aW=c[q>>2]|0;a5=bk;if((aW|0)==0){cp=a5;break}bp=f+12|0;aZ=a5;a$=1;while(1){if((c[bp>>2]&128|0)!=0){ds(aZ)}if((b[aZ>>1]|0)<0){break}if(a$>>>0>=aW>>>0){cp=a5;break L2058}aZ=aZ+2|0;a$=a$+1|0}dU(bk);a2=4;a1=1759;break L1313}else if((aY|0)==8){a$=bk;if((c[f+12>>2]&128|0)==0){cp=a$;break}dv(a$,c[q>>2]|0);cp=a$;break}else{a$=c[q>>2]|0;aZ=dT(a$<<1)|0;a5=aZ;if((aZ|0)==0){dU(bk);a2=7;a1=1759;break L1313}L2077:do{switch(e[aX>>1]|0){case 1:{if((a$|0)==0){a1=1613;break L2077}else{cq=bk;cr=a5;cs=0}while(1){b[cr>>1]=d[cq]|0;aW=cs+1|0;if(aW>>>0<(c[q>>2]|0)>>>0){cq=cq+1|0;cr=cr+2|0;cs=aW}else{a1=1613;break}}break};case 6:{if((a$|0)==0){a1=1613;break L2077}else{ct=bk;cu=a5;cv=0}while(1){b[cu>>1]=a[ct]|0;aW=cv+1|0;if(aW>>>0<(c[q>>2]|0)>>>0){ct=ct+1|0;cu=cu+2|0;cv=aW}else{a1=1613;break}}break};case 4:{if((a$|0)==0){a1=1613;break L2077}aW=f+12|0;bp=bk;a6=a5;bm=0;while(1){if((c[aW>>2]&128|0)!=0){dt(bp)}bN=c[bp>>2]|0;if(bN>>>0>32767){a1=1612;break L2077}b[a6>>1]=bN&65535;bN=bm+1|0;if(bN>>>0<(c[q>>2]|0)>>>0){bp=bp+4|0;a6=a6+2|0;bm=bN}else{a1=1613;break}}break};case 9:{if((a$|0)==0){a1=1613;break L2077}bm=f+12|0;a6=bk;bp=a5;aW=0;while(1){if((c[bm>>2]&128|0)!=0){dt(a6)}bN=c[a6>>2]|0;if((bN+32768|0)>>>0>65535){a1=1612;break L2077}b[bp>>1]=bN&65535;bN=aW+1|0;if(bN>>>0<(c[q>>2]|0)>>>0){a6=a6+4|0;bp=bp+2|0;aW=bN}else{a1=1613;break}}break};case 16:{if((a$|0)==0){a1=1613;break L2077}aW=f+12|0;bp=bk;a6=a5;bm=0;while(1){if((c[aW>>2]&128|0)!=0){du(bp)}bN=c[bp>>2]|0;co=c[bp+4>>2]|0;bl=0;if(co>>>0>bl>>>0|co>>>0==bl>>>0&bN>>>0>32767>>>0){a1=1612;break L2077}b[a6>>1]=bN&65535;bN=bm+1|0;if(bN>>>0<(c[q>>2]|0)>>>0){bp=bp+8|0;a6=a6+2|0;bm=bN}else{a1=1613;break}}break};case 17:{if((a$|0)==0){a1=1613;break L2077}bm=f+12|0;a6=bk;bp=a5;aW=0;while(1){if((c[bm>>2]&128|0)!=0){du(a6)}bN=c[a6>>2]|0;bl=hy(bN,c[a6+4>>2]|0,32768,0)|0;co=E;cw=0;if(co>>>0>cw>>>0|co>>>0==cw>>>0&bl>>>0>65535>>>0){a1=1612;break L2077}b[bp>>1]=bN&65535;bN=aW+1|0;if(bN>>>0<(c[q>>2]|0)>>>0){a6=a6+8|0;bp=bp+2|0;aW=bN}else{a1=1613;break}}break};default:{a1=1613}}}while(0);if((a1|0)==1612){dU(c[r>>2]|0);dU(aZ);a2=4;a1=1759;break L1313}else if((a1|0)==1613){dU(c[r>>2]|0);cp=a5;break}}}}while(0);bk=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[j+8>>2],c[a4+8>>2]=cp,a4)|0)|0;i=a4;if((cp|0)!=0){dU(cp)}if((bk|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 44:{if((b[aV+4>>1]|0)!=-3){aD(27920,27888,5236,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5237,30224);return 0}bk=cb(f,j,aL)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[aL>>2]|0;aX=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[j+8>>2],c[a4+8>>2]=bk,a4)|0)|0;i=a4;if((bk|0)!=0){dU(bk)}if((aX|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 45:{if((b[aV+4>>1]|0)!=-3){aD(27920,27888,5253,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5254,30224);return 0}aX=j+2|0;switch(e[aX>>1]|0){case 1:case 6:case 3:case 8:case 4:case 9:case 16:case 17:{break};default:{a2=2;a1=1759;break L1313}}bk=b9(f,j,o,4,p)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[p>>2]|0;L2145:do{if((bk|0)==0){cx=0}else{a$=e[aX>>1]|0;if((a$|0)==4){aY=c[o>>2]|0;aW=bk;if((aY|0)==0){cx=aW;break}bp=f+12|0;a6=aW;bm=1;while(1){if((c[bp>>2]&128|0)!=0){dt(a6)}cy=c[a6>>2]>>31&4;if((cy|0)!=0){break}if(bm>>>0>=aY>>>0){cx=aW;break L2145}a6=a6+4|0;bm=bm+1|0}dU(bk);a2=cy;a1=1759;break L1313}else if((a$|0)==9){bm=bk;if((c[f+12>>2]&128|0)==0){cx=bm;break}dx(bm,c[o>>2]|0);cx=bm;break}else{bm=c[o>>2]|0;a6=dT(bm<<2)|0;aW=a6;if((a6|0)==0){dU(bk);a2=7;a1=1759;break L1313}L2164:do{switch(e[aX>>1]|0){case 1:{if((bm|0)==0){a1=1670;break L2164}else{cz=bk;cA=aW;cB=0}while(1){c[cA>>2]=d[cz]|0;aY=cB+1|0;if(aY>>>0<(c[o>>2]|0)>>>0){cz=cz+1|0;cA=cA+4|0;cB=aY}else{a1=1670;break}}break};case 6:{if((bm|0)==0){a1=1670;break L2164}else{cC=bk;cD=aW;cE=0}while(1){c[cD>>2]=a[cC]|0;aY=cE+1|0;if(aY>>>0<(c[o>>2]|0)>>>0){cC=cC+1|0;cD=cD+4|0;cE=aY}else{a1=1670;break}}break};case 3:{if((bm|0)==0){a1=1670;break L2164}aY=f+12|0;bp=bk;a5=aW;aZ=0;while(1){if((c[aY>>2]&128|0)!=0){ds(bp)}c[a5>>2]=e[bp>>1]|0;bN=aZ+1|0;if(bN>>>0<(c[o>>2]|0)>>>0){bp=bp+2|0;a5=a5+4|0;aZ=bN}else{a1=1670;break}}break};case 8:{if((bm|0)==0){a1=1670;break L2164}aZ=f+12|0;a5=bk;bp=aW;aY=0;while(1){if((c[aZ>>2]&128|0)!=0){ds(a5)}c[bp>>2]=b[a5>>1]|0;bN=aY+1|0;if(bN>>>0<(c[o>>2]|0)>>>0){a5=a5+2|0;bp=bp+4|0;aY=bN}else{a1=1670;break}}break};case 16:{if((bm|0)==0){a1=1670;break L2164}aY=f+12|0;bp=bk;a5=aW;aZ=0;while(1){if((c[aY>>2]&128|0)!=0){du(bp)}bN=c[bp>>2]|0;bl=c[bp+4>>2]|0;cw=0;if(bl>>>0>cw>>>0|bl>>>0==cw>>>0&bN>>>0>2147483647>>>0){break}c[a5>>2]=bN;bN=aZ+1|0;if(bN>>>0<(c[o>>2]|0)>>>0){bp=bp+8|0;a5=a5+4|0;aZ=bN}else{a1=1670;break L2164}}cF=c[p>>2]|0;a1=1669;break};case 17:{if((bm|0)==0){a1=1670;break L2164}if((c[f+12>>2]&128|0)==0){cF=bk;a1=1669;break L2164}du(bk);cF=bk;a1=1669;break};default:{a1=1670}}}while(0);if((a1|0)==1669){dU(cF);dU(a6);a2=4;a1=1759;break L1313}else if((a1|0)==1670){dU(c[p>>2]|0);cx=aW;break}}}}while(0);bk=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[j+8>>2],c[a4+8>>2]=cx,a4)|0)|0;i=a4;if((cx|0)!=0){dU(cx)}if((bk|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 46:{if((b[aV+4>>1]|0)!=-3){aD(27920,27888,5270,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5271,30224);return 0}bk=b8(f,j,aM)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[aM>>2]|0;aX=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[j+8>>2],c[a4+8>>2]=bk,a4)|0)|0;i=a4;if((bk|0)!=0){dU(bk)}if((aX|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 47:{if((b[aV+4>>1]|0)!=-3){aD(27920,27888,5287,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5288,30224);return 0}aX=j+2|0;switch(e[aX>>1]|0){case 1:case 6:case 3:case 8:case 4:case 9:case 16:case 17:{break};default:{a2=2;a1=1759;break L1313}}bk=b9(f,j,m,8,n)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[n>>2]|0;L2226:do{if((bk|0)==0){cG=0}else{bm=e[aX>>1]|0;if((bm|0)==16){a$=c[m>>2]|0;aZ=bk;if((a$|0)==0){cG=aZ;break}a5=f+12|0;bp=aZ;aY=1;while(1){if((c[a5>>2]&128|0)!=0){du(bp)}bN=c[bp+4>>2]|0;cw=0;if((bN|0)<(cw|0)|(bN|0)==(cw|0)&(c[bp>>2]|0)>>>0<0>>>0){break}if(aY>>>0>=a$>>>0){cG=aZ;break L2226}bp=bp+8|0;aY=aY+1|0}dU(bk);a2=4;a1=1759;break L1313}else if((bm|0)==17){aY=bk;if((c[f+12>>2]&128|0)==0){cG=aY;break}dy(aY,c[m>>2]|0);cG=aY;break}else{aY=c[m>>2]|0;bp=dT(aY<<3)|0;aZ=bp;if((bp|0)==0){dU(bk);a2=7;a1=1759;break L1313}L2245:do{switch(e[aX>>1]|0){case 1:{if((aY|0)==0){break L2245}else{cH=bk;cI=aZ;cJ=0}while(1){c[cI>>2]=d[cH]|0;c[cI+4>>2]=0;bp=cJ+1|0;if(bp>>>0<aY>>>0){cH=cH+1|0;cI=cI+8|0;cJ=bp}else{break}}break};case 6:{if((aY|0)==0){break L2245}else{cK=bk;cL=aZ;cM=0}while(1){bp=a[cK]|0;c[cL>>2]=bp<<24>>24;c[cL+4>>2]=bp<<24>>24<0|0?-1:0;bp=cM+1|0;if(bp>>>0<aY>>>0){cK=cK+1|0;cL=cL+8|0;cM=bp}else{break}}break};case 3:{if((aY|0)==0){break L2245}bp=f+12|0;a$=bk;a5=aZ;aW=0;while(1){if((c[bp>>2]&128|0)!=0){ds(a$)}c[a5>>2]=e[a$>>1]|0;c[a5+4>>2]=0;a6=aW+1|0;if(a6>>>0<aY>>>0){a$=a$+2|0;a5=a5+8|0;aW=a6}else{break}}break};case 8:{if((aY|0)==0){break L2245}aW=f+12|0;a5=bk;a$=aZ;bp=0;while(1){if((c[aW>>2]&128|0)!=0){ds(a5)}a6=b[a5>>1]|0;c[a$>>2]=a6<<16>>16;c[a$+4>>2]=a6<<16>>16<0|0?-1:0;a6=bp+1|0;if(a6>>>0<aY>>>0){a5=a5+2|0;a$=a$+8|0;bp=a6}else{break}}break};case 4:{if((aY|0)==0){break L2245}bp=f+12|0;a$=bk;a5=aZ;aW=0;while(1){if((c[bp>>2]&128|0)!=0){dt(a$)}c[a5>>2]=c[a$>>2];c[a5+4>>2]=0;a6=aW+1|0;if(a6>>>0<aY>>>0){a$=a$+4|0;a5=a5+8|0;aW=a6}else{break}}break};case 9:{if((aY|0)==0){break L2245}aW=f+12|0;a5=bk;a$=aZ;bp=0;while(1){if((c[aW>>2]&128|0)!=0){dt(a5)}a6=c[a5>>2]|0;c[a$>>2]=a6;c[a$+4>>2]=(a6|0)<0|0?-1:0;a6=bp+1|0;if(a6>>>0<aY>>>0){a5=a5+4|0;a$=a$+8|0;bp=a6}else{break}}break};default:{}}}while(0);dU(bk);cG=aZ;break}}}while(0);bk=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[j+8>>2],c[a4+8>>2]=cG,a4)|0)|0;i=a4;if((cG|0)!=0){dU(cG)}if((bk|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 48:{if((b[aV+4>>1]|0)!=-3){aD(27920,27888,5304,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5305,30224);return 0}bk=cc(f,j,aN)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[aN>>2]|0;aX=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[j+8>>2],c[a4+8>>2]=bk,a4)|0)|0;i=a4;if((bk|0)!=0){dU(bk)}if((aX|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 49:{if((b[aV+4>>1]|0)!=-3){aD(27920,27888,5321,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5322,30224);return 0}aX=b3(f,j,aO)|0;if((aX|0)!=0){a2=aX;a1=1759;break L1313}aX=c[aO>>2]|0;bk=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[j+8>>2],c[a4+8>>2]=aX,a4)|0)|0;i=a4;if((aX|0)!=0){dU(aX)}if((bk|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 50:{if((b[aV+4>>1]|0)!=-3){aD(27920,27888,5338,30224);return 0}if((a[aV+27|0]|0)!=1){aD(28024,27888,5339,30224);return 0}bk=cd(f,j,aP)|0;if((bk|0)!=0){a2=bk;a1=1759;break L1313}bk=c[aP>>2]|0;aX=bF(f,e[aQ>>1]|0,(a4=i,i=i+16|0,c[a4>>2]=c[j+8>>2],c[a4+8>>2]=bk,a4)|0)|0;i=a4;if((bk|0)!=0){dU(bk)}if((aX|0)==0){a9=0}else{a1=1758;break L1313}i=l;return a9|0};case 0:{a1=1757;break};default:{aD(27880,27888,5353,30224);return 0}}}while(0);if((a1|0)==1757){a9=1;i=l;return a9|0}else if((a1|0)==1758){a9=1;i=l;return a9|0}else if((a1|0)==1759){if((aV|0)==0){cN=40248}else{cN=c[aV+28>>2]|0}b1(f,a2,30224,cN,k);a9=0;i=l;return a9|0}}}while(0);cg(c[f+628>>2]|0,30224,29976,(a4=i,i=i+8|0,c[a4>>2]=aT&65535,a4)|0);i=a4;a9=0;i=l;return a9|0}function b0(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0;j=i;i=i+56|0;k=j|0;l=j+8|0;m=j+16|0;n=j+24|0;o=j+32|0;p=j+40|0;q=j+48|0;r=g+8|0;if(!((c[r>>2]|0)==1&(c[r+4>>2]|0)==0)){s=1;i=j;return s|0}switch(e[g+2>>1]|0|0){case 9:{r=c[g+16>>2]|0;c[o>>2]=r;if((c[f+12>>2]&128|0)==0){t=r}else{dt(o);t=c[o>>2]|0}o=t>>>0>65535;if(o){s=o?4:0;i=j;return s|0}b[h>>1]=t&65535;s=0;i=j;return s|0};case 1:{b[h>>1]=d[g+16|0]|0;s=0;i=j;return s|0};case 17:{t=f+12|0;o=c[t>>2]|0;r=g+16|0;do{if((o&524288|0)==0){u=c[r>>2]|0;c[l>>2]=u;if((o&128|0)==0){v=u;w=o}else{dt(l);v=c[l>>2]|0;w=c[t>>2]|0}u=v;x=0;y=q;if((w&2048|0)==0){z=f+628|0;A=ba[c[f+640>>2]&127](c[z>>2]|0,u,x,0)|0;if(!((A|0)==(u|0)&(E|0)==(x|0))){s=3;i=j;return s|0}if((be[c[f+632>>2]&63](c[z>>2]|0,y,8)|0)==8){break}else{s=3}i=j;return s|0}z=aS(v|0,8)|0;x=z;if(E|x>>>0<8){s=3;i=j;return s|0}if(x>>>0>(c[f+616>>2]|0)>>>0){s=3;i=j;return s|0}else{dX(y,(c[f+612>>2]|0)+v|0,8);break}}else{y=r|0;x=c[y+4>>2]|0;c[q>>2]=c[y>>2];c[q+4>>2]=x}}while(0);if((c[t>>2]&128|0)!=0){du(q)}t=c[q>>2]|0;r=c[q+4>>2]|0;q=0;v=r>>>0>q>>>0|r>>>0==q>>>0&t>>>0>65535>>>0;if(v){s=v?4:0;i=j;return s|0}b[h>>1]=t&65535;s=0;i=j;return s|0};case 4:{t=c[g+16>>2]|0;c[n>>2]=t;if((c[f+12>>2]&128|0)==0){B=t}else{dt(n);B=c[n>>2]|0}n=B>>>0>65535;if(n){s=n?4:0;i=j;return s|0}b[h>>1]=B&65535;s=0;i=j;return s|0};case 16:{B=f+12|0;n=c[B>>2]|0;t=g+16|0;do{if((n&524288|0)==0){v=c[t>>2]|0;c[k>>2]=v;if((n&128|0)==0){C=v;D=n}else{dt(k);C=c[k>>2]|0;D=c[B>>2]|0}v=C;q=0;r=p;if((D&2048|0)==0){w=f+628|0;l=ba[c[f+640>>2]&127](c[w>>2]|0,v,q,0)|0;if(!((l|0)==(v|0)&(E|0)==(q|0))){s=3;i=j;return s|0}if((be[c[f+632>>2]&63](c[w>>2]|0,r,8)|0)==8){break}else{s=3}i=j;return s|0}w=aS(C|0,8)|0;q=w;if(E|q>>>0<8){s=3;i=j;return s|0}if(q>>>0>(c[f+616>>2]|0)>>>0){s=3;i=j;return s|0}else{dX(r,(c[f+612>>2]|0)+C|0,8);break}}else{r=t|0;q=c[r+4>>2]|0;c[p>>2]=c[r>>2];c[p+4>>2]=q}}while(0);if((c[B>>2]&128|0)!=0){du(p)}B=c[p>>2]|0;t=c[p+4>>2]|0;p=0;C=t>>>0>p>>>0|t>>>0==p>>>0&B>>>0>65535>>>0;if(C){s=C?4:0;i=j;return s|0}b[h>>1]=B&65535;s=0;i=j;return s|0};case 6:{B=a[g+16|0]|0;C=B<<24>>24<0;if(C){s=C?4:0;i=j;return s|0}b[h>>1]=B<<24>>24;s=0;i=j;return s|0};case 8:{B=b[g+16>>1]|0;b[m>>1]=B;if((c[f+12>>2]&128|0)==0){F=B}else{ds(m);F=b[m>>1]|0}m=F<<16>>16<0;if(m){s=m?4:0;i=j;return s|0}b[h>>1]=F;s=0;i=j;return s|0};case 3:{b[h>>1]=b[g+16>>1]|0;if((c[f+12>>2]&128|0)==0){s=0;i=j;return s|0}ds(h);s=0;i=j;return s|0};default:{s=2;i=j;return s|0}}return 0}function b1(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;if((f|0)==0){switch(b|0){case 6:{cg(c[a+628>>2]|0,d,25184,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};case 7:{cg(c[a+628>>2]|0,d,25048,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};case 1:{cg(c[a+628>>2]|0,d,25816,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};case 2:{cg(c[a+628>>2]|0,d,25728,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};case 3:{cg(c[a+628>>2]|0,d,25680,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};case 4:{cg(c[a+628>>2]|0,d,25584,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};case 5:{cg(c[a+628>>2]|0,d,25456,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};default:{aD(27880,27888,3371,43992)}}}else{switch(b|0){case 7:{d$(c[a+628>>2]|0,d,24072,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};case 5:{d$(c[a+628>>2]|0,d,24320,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};case 2:{d$(c[a+628>>2]|0,d,24776,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};case 1:{cg(c[a+628>>2]|0,d,24936,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};case 6:{d$(c[a+628>>2]|0,d,24160,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};case 4:{d$(c[a+628>>2]|0,d,24480,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};case 3:{d$(c[a+628>>2]|0,d,24584,(h=i,i=i+8|0,c[h>>2]=e,h)|0);i=h;i=g;return};default:{aD(27880,27888,3412,43992)}}}}function b2(a){a=a|0;return 1}function b3(f,j,k){f=f|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0,H=0,I=0,J=0.0,K=0,L=0,M=0,N=0,O=0;l=i;i=i+16|0;m=l|0;n=l+8|0;o=j+2|0;switch(e[o>>1]|0){case 1:case 6:case 3:case 8:case 4:case 9:case 16:case 17:case 5:case 10:case 11:case 12:{break};default:{p=2;i=l;return p|0}}q=b9(f,j,m,8,n)|0;do{if((q|0)==0){j=c[n>>2]|0;if((j|0)==0){break}if((b[o>>1]|0)==12){if((c[f+12>>2]&128|0)!=0){dy(j,c[m>>2]|0)}c[k>>2]=j;p=0;i=l;return p|0}r=dT(c[m>>2]<<3)|0;s=r;if((r|0)==0){dU(j);p=7;i=l;return p|0}L2488:do{switch(e[o>>1]|0){case 8:{r=c[m>>2]|0;if((r|0)==0){break L2488}t=f+12|0;u=j;v=s;w=0;x=r;while(1){if((c[t>>2]&128|0)==0){y=x}else{ds(u);y=c[m>>2]|0}h[v>>3]=+(b[u>>1]|0);r=w+1|0;if(r>>>0<y>>>0){u=u+2|0;v=v+8|0;w=r;x=y}else{break}}break};case 17:{x=c[m>>2]|0;if((x|0)==0){break L2488}w=f+12|0;v=j;u=s;t=0;r=x;while(1){if((c[w>>2]&128|0)==0){z=r}else{du(v);z=c[m>>2]|0}h[u>>3]=+((c[v>>2]|0)>>>0)+ +(c[v+4>>2]|0)*4294967296.0;x=t+1|0;if(x>>>0<z>>>0){v=v+8|0;u=u+8|0;t=x;r=z}else{break}}break};case 6:{r=c[m>>2]|0;if((r|0)==0){break L2488}else{A=j;B=s;C=0}while(1){h[B>>3]=+(a[A]|0);t=C+1|0;if(t>>>0<r>>>0){A=A+1|0;B=B+8|0;C=t}else{break}}break};case 9:{r=c[m>>2]|0;if((r|0)==0){break L2488}t=f+12|0;u=j;v=s;w=0;x=r;while(1){if((c[t>>2]&128|0)==0){D=x}else{dt(u);D=c[m>>2]|0}h[v>>3]=+(c[u>>2]|0);r=w+1|0;if(r>>>0<D>>>0){u=u+4|0;v=v+8|0;w=r;x=D}else{break}}break};case 5:{if((c[m>>2]|0)==0){break L2488}x=f+12|0;w=j;v=s;u=0;while(1){t=c[x>>2]|0;if((t&128|0)==0){E=t}else{dt(w);E=c[x>>2]|0}t=w+4|0;r=c[w>>2]|0;if((E&128|0)!=0){dt(t)}F=c[t>>2]|0;if((F|0)==0){G=0.0}else{G=+(r>>>0>>>0)/+(F>>>0>>>0)}h[v>>3]=G;F=u+1|0;if(F>>>0<(c[m>>2]|0)>>>0){w=w+8|0;v=v+8|0;u=F}else{break}}break};case 4:{u=c[m>>2]|0;if((u|0)==0){break L2488}v=f+12|0;w=j;x=s;F=0;r=u;while(1){if((c[v>>2]&128|0)==0){H=r}else{dt(w);H=c[m>>2]|0}h[x>>3]=+((c[w>>2]|0)>>>0>>>0);u=F+1|0;if(u>>>0<H>>>0){w=w+4|0;x=x+8|0;F=u;r=H}else{break}}break};case 10:{if((c[m>>2]|0)==0){break L2488}r=f+12|0;F=j;x=s;w=0;while(1){v=c[r>>2]|0;if((v&128|0)==0){I=v}else{dt(F);I=c[r>>2]|0}v=c[F>>2]|0;u=F+4|0;if((I&128|0)!=0){dt(u)}t=c[u>>2]|0;if((t|0)==0){J=0.0}else{J=+(v|0)/+(t>>>0>>>0)}h[x>>3]=J;t=w+1|0;if(t>>>0<(c[m>>2]|0)>>>0){F=F+8|0;x=x+8|0;w=t}else{break}}break};case 11:{if((c[f+12>>2]&128|0)!=0){dx(j,c[m>>2]|0)}w=c[m>>2]|0;if((w|0)==0){break L2488}x=j;F=s;r=0;while(1){h[F>>3]=+g[x>>2];t=r+1|0;if(t>>>0<w>>>0){x=x+4|0;F=F+8|0;r=t}else{break}}break};case 3:{r=c[m>>2]|0;if((r|0)==0){break L2488}F=f+12|0;x=j;w=s;t=0;v=r;while(1){if((c[F>>2]&128|0)==0){K=v}else{ds(x);K=c[m>>2]|0}h[w>>3]=+((e[x>>1]|0)>>>0);r=t+1|0;if(r>>>0<K>>>0){x=x+2|0;w=w+8|0;t=r;v=K}else{break}}break};case 1:{v=c[m>>2]|0;if((v|0)==0){break L2488}else{L=0;M=s;N=j}while(1){h[M>>3]=+((d[N]|0)>>>0);t=L+1|0;if(t>>>0<v>>>0){L=t;M=M+8|0;N=N+1|0}else{break}}break};case 16:{v=c[m>>2]|0;if((v|0)==0){break L2488}t=f+12|0;w=j;x=s;F=0;r=v;while(1){if((c[t>>2]&128|0)==0){O=r}else{du(w);O=c[m>>2]|0}h[x>>3]=+((c[w>>2]|0)>>>0)+ +((c[w+4>>2]|0)>>>0)*4294967296.0;v=F+1|0;if(v>>>0<O>>>0){w=w+8|0;x=x+8|0;F=v;r=O}else{break}}break};default:{}}}while(0);dU(j);c[k>>2]=s;p=0;i=l;return p|0}}while(0);c[k>>2]=0;p=q;i=l;return p|0}function b4(a,b,d,f){a=a|0;b=b|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+8|0;h=g|0;j=b8(a,b,h)|0;if((j|0)!=0){k=bX(a,e[b>>1]|0)|0;if((k|0)==0){l=40248}else{l=c[k+28>>2]|0}b1(a,j,46440,l,0);m=0;i=g;return m|0}l=b+8|0;b=d;j=0;if((c[l>>2]|0)==(b|0)&(c[l+4>>2]|0)==(j|0)){n=c[h>>2]|0}else{k=d5(a,d,8,30912)|0;a=k;if((k|0)==0){dU(c[h>>2]|0);m=0;i=g;return m|0}o=c[l>>2]|0;p=c[l+4>>2]|0;q=c[h>>2]|0;if(p>>>0<j>>>0|p>>>0==j>>>0&o>>>0<b>>>0){dX(k,q,o<<3);o=c[l>>2]|0;dW(a+(o<<3)|0,0,d-o<<3)}else{dX(k,q,d<<3)}dU(q);c[h>>2]=a;n=a}c[f>>2]=n;m=1;i=g;return m|0}function b5(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;j=i;i=i+16|0;k=j|0;l=j+8|0;m=g+2|0;switch(e[m>>1]|0){case 1:case 6:case 3:case 8:case 4:case 9:case 16:case 17:{break};default:{n=2;i=j;return n|0}}o=b9(f,g,k,2,l)|0;do{if((o|0)==0){g=c[l>>2]|0;if((g|0)==0){break}p=e[m>>1]|0;if((p|0)==3){q=g;c[h>>2]=q;if((c[f+12>>2]&128|0)==0){n=0;i=j;return n|0}dv(q,c[k>>2]|0);n=0;i=j;return n|0}else if((p|0)==8){p=c[k>>2]|0;q=g;L2659:do{if((p|0)!=0){r=f+12|0;s=q;t=1;while(1){if((c[r>>2]&128|0)!=0){ds(s)}if((b[s>>1]|0)<0){break}if(t>>>0>=p>>>0){break L2659}s=s+2|0;t=t+1|0}dU(g);n=4;i=j;return n|0}}while(0);c[h>>2]=q;n=0;i=j;return n|0}else{p=c[k>>2]|0;t=dT(p<<1)|0;s=t;if((t|0)==0){dU(g);n=7;i=j;return n|0}L2608:do{switch(e[m>>1]|0){case 17:{if((p|0)==0){u=2053;break L2608}r=f+12|0;v=g;w=s;x=0;while(1){if((c[r>>2]&128|0)!=0){du(v)}y=c[v>>2]|0;z=c[v+4>>2]|0;A=0;if(z>>>0>A>>>0|z>>>0==A>>>0&y>>>0>65535>>>0){u=2052;break L2608}b[w>>1]=y&65535;y=x+1|0;if(y>>>0<(c[k>>2]|0)>>>0){v=v+8|0;w=w+2|0;x=y}else{u=2053;break}}break};case 16:{if((p|0)==0){u=2053;break L2608}x=f+12|0;w=g;v=s;r=0;while(1){if((c[x>>2]&128|0)!=0){du(w)}y=c[w>>2]|0;A=c[w+4>>2]|0;z=0;if(A>>>0>z>>>0|A>>>0==z>>>0&y>>>0>65535>>>0){u=2052;break L2608}b[v>>1]=y&65535;y=r+1|0;if(y>>>0<(c[k>>2]|0)>>>0){w=w+8|0;v=v+2|0;r=y}else{u=2053;break}}break};case 4:{if((p|0)==0){u=2053;break L2608}r=f+12|0;v=g;w=s;x=0;while(1){if((c[r>>2]&128|0)!=0){dt(v)}y=c[v>>2]|0;if(y>>>0>65535){u=2052;break L2608}b[w>>1]=y&65535;y=x+1|0;if(y>>>0<(c[k>>2]|0)>>>0){v=v+4|0;w=w+2|0;x=y}else{u=2053;break}}break};case 6:{if((p|0)==0){u=2053;break L2608}else{B=g;C=s;D=0}while(1){x=a[B]|0;if(x<<24>>24<0){u=2052;break L2608}b[C>>1]=x<<24>>24;x=D+1|0;if(x>>>0<(c[k>>2]|0)>>>0){B=B+1|0;C=C+2|0;D=x}else{u=2053;break}}break};case 9:{if((p|0)==0){u=2053;break L2608}x=f+12|0;w=g;v=s;r=0;while(1){if((c[x>>2]&128|0)!=0){dt(w)}y=c[w>>2]|0;if(y>>>0>65535){u=2052;break L2608}b[v>>1]=y&65535;y=r+1|0;if(y>>>0<(c[k>>2]|0)>>>0){w=w+4|0;v=v+2|0;r=y}else{u=2053;break}}break};case 1:{if((p|0)==0){u=2053;break L2608}else{E=g;F=s;G=0}while(1){b[F>>1]=d[E]|0;r=G+1|0;if(r>>>0<(c[k>>2]|0)>>>0){E=E+1|0;F=F+2|0;G=r}else{u=2053;break}}break};default:{u=2053}}}while(0);if((u|0)==2052){dU(c[l>>2]|0);dU(t);n=4;i=j;return n|0}else if((u|0)==2053){dU(c[l>>2]|0);c[h>>2]=s;n=0;i=j;return n|0}}}}while(0);c[h>>2]=0;n=o;i=j;return n|0}function b6(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0;g=i;h=a+176|0;j=c[h>>2]|0;if((j|0)!=0){dU(j)}j=a+168|0;k=d5(a,c[j>>2]|0,8,26288)|0;c[h>>2]=k;if((k|0)==0){l=-1;i=g;return l|0}L2681:do{if((b[a+88>>1]|0)==1){if((c[a+12>>2]&1024|0)!=0){k=dI(a)|0;m=E;if((c[j>>2]|0)==0){break}else{n=0}while(1){o=(c[h>>2]|0)+(n<<3)|0;c[o>>2]=k;c[o+4>>2]=m;n=n+1|0;if(n>>>0>=(c[j>>2]|0)>>>0){break L2681}}}m=dm(a)|0;if((c[j>>2]|0)==0){break}k=hI(((c[a+60>>2]|0)>>>0)/((c[a+164>>2]|0)>>>0)|0,0,m,E)|0;m=E;o=0;do{p=(c[h>>2]|0)+(o<<3)|0;c[p>>2]=k;c[p+4>>2]=m;o=o+1|0;}while(o>>>0<(c[j>>2]|0)>>>0)}else{o=a+628|0;m=bf[c[a+648>>2]&63](c[o>>2]|0)|0;k=E;p=a+12|0;q=f&65535;if((c[p>>2]&524288|0)==0){r=(q*12|0)+14|0}else{r=(q*20|0)+32|0}q=r;s=0;L2696:do{if(f<<16>>16==0){t=s;u=q}else{v=s;w=q;x=f;y=d;while(1){z=y+2|0;bV(e[z>>1]|0)|0;A=bV(e[z>>1]|0)|0;if((A|0)==0){break}B=y+8|0;C=hI(c[B>>2]|0,c[B+4>>2]|0,A,0)|0;A=E;B=0;D=0;F=(c[p>>2]&524288|0)==0?A>>>0<D>>>0|A>>>0==D>>>0&C>>>0<5>>>0:A>>>0<B>>>0|A>>>0==B>>>0&C>>>0<9>>>0;B=hy(F?0:C,F?0:A,w,v)|0;A=E;F=x-1&65535;if(F<<16>>16==0){t=A;u=B;break L2696}else{v=A;w=B;x=F;y=y+24|0}}cg(c[o>>2]|0,147808,26152,(y=i,i=i+8|0,c[y>>2]=e[z>>1]|0,y)|0);i=y;l=-1;i=g;return l|0}}while(0);o=hz(m,k,u,t)|0;p=E;if((b[a+126>>1]|0)==2){q=hJ(o,p,e[a+98>>1]|0,0)|0;G=E;H=q}else{G=p;H=o}if((c[j>>2]|0)==0){I=-1}else{o=0;while(1){p=(c[h>>2]|0)+(o<<3)|0;c[p>>2]=H;c[p+4>>2]=G;p=o+1|0;if(p>>>0<(c[j>>2]|0)>>>0){o=p}else{I=o;break}}}o=(c[a+172>>2]|0)+(I<<3)|0;p=c[o>>2]|0;q=c[o+4>>2]|0;o=(c[h>>2]|0)+(I<<3)|0;s=hy(c[o>>2]|0,c[o+4>>2]|0,p,q)|0;y=E;if(!(y>>>0>k>>>0|y>>>0==k>>>0&s>>>0>m>>>0)){break}s=hz(m,k,p,q)|0;c[o>>2]=s;c[o+4>>2]=E}}while(0);I=a+40|0;h=c[I>>2]|0;c[I>>2]=h|16777216;if((h&131072|0)!=0){l=1;i=g;return l|0}c[a+100>>2]=c[a+60>>2];l=1;i=g;return l|0}function b7(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;if((e|0)<=0){aD(31192,27888,3309,44024);return 0}do{if((c[a+12>>2]&2048|0)==0){g=a+628|0;h=ba[c[a+640>>2]&127](c[g>>2]|0,b,d,0)|0;if(!((h|0)==(b|0)&(E|0)==(d|0))){i=3;return i|0}if((be[c[a+632>>2]&63](c[g>>2]|0,f,e)|0)==(e|0)){break}else{i=3}return i|0}else{g=b;h=aS(g|0,e|0)|0;j=h;if(!((b|0|0)==(b|0)&(d&0|0)==(d|0))){i=3;return i|0}if(E|j>>>0<e>>>0){i=3;return i|0}if(j>>>0>(c[a+616>>2]|0)>>>0){i=3;return i|0}else{dX(f,(c[a+612>>2]|0)+g|0,e);break}}}while(0);i=0;return i|0}function b8(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;j=i;i=i+16|0;k=j|0;l=j+8|0;m=g+2|0;switch(e[m>>1]|0|0){case 1:case 6:case 3:case 8:case 4:case 9:case 16:case 17:{break};default:{n=2;i=j;return n|0}}o=b9(f,g,k,8,l)|0;do{if((o|0)==0){g=c[l>>2]|0;if((g|0)==0){break}p=e[m>>1]|0;if((p|0)==16){q=g;c[h>>2]=q;if((c[f+12>>2]&128|0)==0){n=0;i=j;return n|0}dy(q,c[k>>2]|0);n=0;i=j;return n|0}else if((p|0)==17){p=c[k>>2]|0;q=g;L2800:do{if((p|0)!=0){r=f+12|0;s=q;t=1;while(1){if((c[r>>2]&128|0)!=0){du(s)}u=c[s+4>>2]|0;v=0;if((u|0)<(v|0)|(u|0)==(v|0)&(c[s>>2]|0)>>>0<0>>>0){break}if(t>>>0>=p>>>0){break L2800}s=s+8|0;t=t+1|0}dU(g);n=4;i=j;return n|0}}while(0);c[h>>2]=q;n=0;i=j;return n|0}else{p=c[k>>2]|0;t=dT(p<<3)|0;s=t;if((t|0)==0){dU(g);n=7;i=j;return n|0}L2756:do{switch(e[m>>1]|0|0){case 3:{if((p|0)==0){w=2158;break L2756}r=f+12|0;v=g;u=s;x=0;while(1){if((c[r>>2]&128|0)!=0){ds(v)}c[u>>2]=e[v>>1]|0;c[u+4>>2]=0;y=x+1|0;if(y>>>0<p>>>0){v=v+2|0;u=u+8|0;x=y}else{w=2158;break}}break};case 1:{if((p|0)==0){w=2158;break L2756}else{z=g;A=s;B=0}while(1){c[A>>2]=d[z]|0;c[A+4>>2]=0;x=B+1|0;if(x>>>0<p>>>0){z=z+1|0;A=A+8|0;B=x}else{w=2158;break}}break};case 4:{if((p|0)==0){w=2158;break L2756}x=f+12|0;u=g;v=s;r=0;while(1){if((c[x>>2]&128|0)!=0){dt(u)}c[v>>2]=c[u>>2];c[v+4>>2]=0;y=r+1|0;if(y>>>0<p>>>0){u=u+4|0;v=v+8|0;r=y}else{w=2158;break}}break};case 6:{if((p|0)==0){w=2158;break L2756}else{C=g;D=s;E=0}while(1){r=a[C]|0;if(r<<24>>24<0){F=4;w=2157;break L2756}c[D>>2]=r<<24>>24;c[D+4>>2]=r<<24>>24<0|0?-1:0;r=E+1|0;if(r>>>0<p>>>0){C=C+1|0;D=D+8|0;E=r}else{w=2158;break}}break};case 9:{if((p|0)==0){w=2158;break L2756}r=f+12|0;v=g;u=s;x=0;while(1){if((c[r>>2]&128|0)!=0){dt(v)}y=c[v>>2]|0;G=y>>31&4;if((G|0)!=0){F=G;w=2157;break L2756}c[u>>2]=y;c[u+4>>2]=(y|0)<0|0?-1:0;y=x+1|0;if(y>>>0<p>>>0){v=v+4|0;u=u+8|0;x=y}else{w=2158;break}}break};case 8:{if((p|0)==0){w=2158;break L2756}x=f+12|0;u=g;v=s;r=0;while(1){if((c[x>>2]&128|0)!=0){ds(u)}y=b[u>>1]|0;if(y<<16>>16<0){F=4;w=2157;break L2756}c[v>>2]=y<<16>>16;c[v+4>>2]=y<<16>>16<0|0?-1:0;y=r+1|0;if(y>>>0<p>>>0){u=u+2|0;v=v+8|0;r=y}else{w=2158;break}}break};default:{w=2158}}}while(0);if((w|0)==2158){dU(g);c[h>>2]=s;n=0;i=j;return n|0}else if((w|0)==2157){dU(g);dU(t);n=F;i=j;return n|0}}}}while(0);c[h>>2]=0;n=o;i=j;return n|0}function b9(a,b,d,f,g){a=a|0;b=b|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;h=i;i=i+16|0;j=h|0;k=h+8|0;l=bV(e[b+2>>1]|0)|0;m=b+8|0;n=c[m>>2]|0;o=c[m+4>>2]|0;if((n|0)==0&(o|0)==0|(l|0)==0){c[g>>2]=0;p=0;i=h;return p|0}m=2147483647/(l|0)|0;q=(m|0)<0|0?-1:0;if(q>>>0<o>>>0|q>>>0==o>>>0&m>>>0<n>>>0){p=6;i=h;return p|0}m=0;if(m>>>0<o>>>0|m>>>0==o>>>0&(2147483647/(f>>>0)|0)>>>0<n>>>0){p=6;i=h;return p|0}f=n;c[d>>2]=f;d=aa(f,l)|0;if((d|0)<=0){aD(30720,27888,790,44048);return 0}n=d5(a,f,l,30488)|0;if((n|0)==0){p=7;i=h;return p|0}l=c[a+12>>2]|0;do{if((l&524288|0)==0){f=b+16|0;if(d>>>0<5){dX(n,f,d);break}o=c[f>>2]|0;c[j>>2]=o;if((l&128|0)==0){r=o}else{dt(j);r=c[j>>2]|0}o=b7(a,r,0,d,n)|0;if((o|0)==0){break}dU(n);p=o;i=h;return p|0}else{if(d>>>0<9){dX(n,b+16|0,d);break}o=b+16|0;f=c[o>>2]|0;m=c[o+4>>2]|0;c[k>>2]=f;c[k+4>>2]=m;if((l&128|0)==0){s=m;t=f}else{du(k);s=c[k+4>>2]|0;t=c[k>>2]|0}f=b7(a,t,s,d,n)|0;if((f|0)==0){break}dU(n);p=f;i=h;return p|0}}while(0);c[g>>2]=n;p=0;i=h;return p|0}function ca(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+16|0;j=h|0;k=h+8|0;l=f+2|0;switch(e[l>>1]|0){case 2:case 7:case 1:case 6:case 3:case 8:case 4:case 9:case 16:case 17:{break};default:{m=2;i=h;return m|0}}n=b9(d,f,j,1,k)|0;do{if((n|0)==0){f=c[k>>2]|0;if((f|0)==0){break}o=e[l>>1]|0;if((o|0)==6){p=c[j>>2]|0;L2862:do{if((p|0)!=0){q=f;r=0;while(1){if((a[q]|0)<0){break}s=r+1|0;if(s>>>0<p>>>0){q=q+1|0;r=s}else{break L2862}}dU(f);m=4;i=h;return m|0}}while(0);c[g>>2]=f;m=0;i=h;return m|0}else if((o|0)==2|(o|0)==7|(o|0)==1){c[g>>2]=f;m=0;i=h;return m|0}else{p=c[j>>2]|0;r=dT(p)|0;if((r|0)==0){dU(f);m=7;i=h;return m|0}L2877:do{switch(e[l>>1]|0){case 4:{if((p|0)==0){t=2249;break L2877}q=d+12|0;s=f;u=r;v=0;while(1){if((c[q>>2]&128|0)!=0){dt(s)}w=c[s>>2]|0;if(w>>>0>255){t=2248;break L2877}a[u]=w&255;w=v+1|0;if(w>>>0<(c[j>>2]|0)>>>0){s=s+4|0;u=u+1|0;v=w}else{t=2249;break}}break};case 8:{if((p|0)==0){t=2249;break L2877}v=d+12|0;u=f;s=r;q=0;while(1){if((c[v>>2]&128|0)!=0){ds(u)}w=b[u>>1]|0;if((w&65535)>255){t=2248;break L2877}a[s]=w&255;w=q+1|0;if(w>>>0<(c[j>>2]|0)>>>0){u=u+2|0;s=s+1|0;q=w}else{t=2249;break}}break};case 16:{if((p|0)==0){t=2249;break L2877}q=d+12|0;s=f;u=r;v=0;while(1){if((c[q>>2]&128|0)!=0){du(s)}w=c[s>>2]|0;x=c[s+4>>2]|0;y=0;if(x>>>0>y>>>0|x>>>0==y>>>0&w>>>0>255>>>0){t=2248;break L2877}a[u]=w&255;w=v+1|0;if(w>>>0<(c[j>>2]|0)>>>0){s=s+8|0;u=u+1|0;v=w}else{t=2249;break}}break};case 9:{if((p|0)==0){t=2249;break L2877}v=d+12|0;u=f;s=r;q=0;while(1){if((c[v>>2]&128|0)!=0){dt(u)}w=c[u>>2]|0;if(w>>>0>255){t=2248;break L2877}a[s]=w&255;w=q+1|0;if(w>>>0<(c[j>>2]|0)>>>0){u=u+4|0;s=s+1|0;q=w}else{t=2249;break}}break};case 17:{if((p|0)==0){t=2249;break L2877}q=d+12|0;s=f;u=r;v=0;while(1){if((c[q>>2]&128|0)!=0){du(s)}w=c[s>>2]|0;y=c[s+4>>2]|0;x=0;if(y>>>0>x>>>0|y>>>0==x>>>0&w>>>0>255>>>0){t=2248;break L2877}a[u]=w&255;w=v+1|0;if(w>>>0<(c[j>>2]|0)>>>0){s=s+8|0;u=u+1|0;v=w}else{t=2249;break}}break};case 3:{if((p|0)==0){t=2249;break L2877}v=d+12|0;u=f;s=r;q=0;while(1){if((c[v>>2]&128|0)!=0){ds(u)}w=b[u>>1]|0;if((w&65535)>255){t=2248;break L2877}a[s]=w&255;w=q+1|0;if(w>>>0<(c[j>>2]|0)>>>0){u=u+2|0;s=s+1|0;q=w}else{t=2249;break}}break};default:{t=2249}}}while(0);if((t|0)==2249){dU(c[k>>2]|0);c[g>>2]=r;m=0;i=h;return m|0}else if((t|0)==2248){dU(c[k>>2]|0);dU(r);m=4;i=h;return m|0}}}}while(0);c[g>>2]=0;m=n;i=h;return m|0}function cb(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;j=i;i=i+16|0;k=j|0;l=j+8|0;m=g+2|0;switch(e[m>>1]|0|0){case 1:case 6:case 3:case 8:case 4:case 9:case 16:case 17:{break};default:{n=2;i=j;return n|0}}o=b9(f,g,k,4,l)|0;do{if((o|0)==0){g=c[l>>2]|0;if((g|0)==0){break}p=e[m>>1]|0;if((p|0)==4){q=g;c[h>>2]=q;if((c[f+12>>2]&128|0)==0){n=0;i=j;return n|0}dx(q,c[k>>2]|0);n=0;i=j;return n|0}else if((p|0)==9){p=c[k>>2]|0;q=g;L2996:do{if((p|0)!=0){r=f+12|0;s=q;t=1;while(1){if((c[r>>2]&128|0)!=0){dt(s)}u=c[s>>2]>>31&4;if((u|0)!=0){break}if(t>>>0>=p>>>0){break L2996}s=s+4|0;t=t+1|0}dU(g);n=u;i=j;return n|0}}while(0);c[h>>2]=q;n=0;i=j;return n|0}else{p=c[k>>2]|0;t=dT(p<<2)|0;s=t;if((t|0)==0){dU(g);n=7;i=j;return n|0}L2946:do{switch(e[m>>1]|0|0){case 16:{if((p|0)==0){v=2307;break L2946}r=f+12|0;w=g;x=s;y=0;while(1){if((c[r>>2]&128|0)!=0){du(w)}z=c[w>>2]|0;A=c[w+4>>2]|0;B=0;if(A>>>0>B>>>0|A>>>0==B>>>0&z>>>0>-1>>>0){v=2306;break L2946}c[x>>2]=z;z=y+1|0;if(z>>>0<(c[k>>2]|0)>>>0){w=w+8|0;x=x+4|0;y=z}else{v=2307;break}}break};case 6:{if((p|0)==0){v=2307;break L2946}else{C=g;D=s;E=0}while(1){y=a[C]|0;if(y<<24>>24<0){v=2306;break L2946}c[D>>2]=y<<24>>24;y=E+1|0;if(y>>>0<(c[k>>2]|0)>>>0){C=C+1|0;D=D+4|0;E=y}else{v=2307;break}}break};case 3:{if((p|0)==0){v=2307;break L2946}y=f+12|0;x=g;w=s;r=0;while(1){if((c[y>>2]&128|0)!=0){ds(x)}c[w>>2]=e[x>>1]|0;z=r+1|0;if(z>>>0<(c[k>>2]|0)>>>0){x=x+2|0;w=w+4|0;r=z}else{v=2307;break}}break};case 17:{if((p|0)==0){v=2307;break L2946}r=f+12|0;w=g;x=s;y=0;while(1){if((c[r>>2]&128|0)!=0){du(w)}z=c[w>>2]|0;B=c[w+4>>2]|0;A=0;if(B>>>0>A>>>0|B>>>0==A>>>0&z>>>0>-1>>>0){v=2306;break L2946}c[x>>2]=z;z=y+1|0;if(z>>>0<(c[k>>2]|0)>>>0){w=w+8|0;x=x+4|0;y=z}else{v=2307;break}}break};case 8:{if((p|0)==0){v=2307;break L2946}y=f+12|0;x=g;w=s;r=0;while(1){if((c[y>>2]&128|0)!=0){ds(x)}z=b[x>>1]|0;if(z<<16>>16<0){v=2306;break L2946}c[w>>2]=z<<16>>16;z=r+1|0;if(z>>>0<(c[k>>2]|0)>>>0){x=x+2|0;w=w+4|0;r=z}else{v=2307;break}}break};case 1:{if((p|0)==0){v=2307;break L2946}else{F=g;G=s;H=0}while(1){c[G>>2]=d[F]|0;r=H+1|0;if(r>>>0<(c[k>>2]|0)>>>0){F=F+1|0;G=G+4|0;H=r}else{v=2307;break}}break};default:{v=2307}}}while(0);if((v|0)==2306){dU(c[l>>2]|0);dU(t);n=4;i=j;return n|0}else if((v|0)==2307){dU(c[l>>2]|0);c[h>>2]=s;n=0;i=j;return n|0}}}}while(0);c[h>>2]=0;n=o;i=j;return n|0}function cc(f,j,k){f=f|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0,C=0.0,D=0,E=0,F=0,G=0,H=0,I=0;l=i;i=i+16|0;m=l|0;n=l+8|0;o=j+2|0;switch(e[o>>1]|0){case 1:case 6:case 3:case 8:case 4:case 9:case 16:case 17:case 5:case 10:case 11:case 12:{break};default:{p=2;i=l;return p|0}}q=b9(f,j,m,4,n)|0;do{if((q|0)==0){j=c[n>>2]|0;if((j|0)==0){break}if((b[o>>1]|0)==11){if((c[f+12>>2]&128|0)!=0){dx(j,c[m>>2]|0)}c[k>>2]=j;p=0;i=l;return p|0}r=dT(c[m>>2]<<2)|0;s=r;if((r|0)==0){dU(j);p=7;i=l;return p|0}L3029:do{switch(e[o>>1]|0){case 12:{if((c[f+12>>2]&128|0)!=0){dy(j,c[m>>2]|0)}if((c[m>>2]|0)==0){break L3029}r=j;t=s;u=0;while(1){g[t>>2]=+h[r>>3];v=u+1|0;if(v>>>0<(c[m>>2]|0)>>>0){r=r+8|0;t=t+4|0;u=v}else{break}}break};case 17:{if((c[m>>2]|0)==0){break L3029}u=f+12|0;t=j;r=s;v=0;while(1){if((c[u>>2]&128|0)!=0){du(t)}g[r>>2]=+((c[t>>2]|0)>>>0)+ +(c[t+4>>2]|0)*4294967296.0;w=v+1|0;if(w>>>0<(c[m>>2]|0)>>>0){t=t+8|0;r=r+4|0;v=w}else{break}}break};case 4:{if((c[m>>2]|0)==0){break L3029}v=f+12|0;r=j;t=s;u=0;while(1){if((c[v>>2]&128|0)!=0){dt(r)}g[t>>2]=+((c[r>>2]|0)>>>0>>>0);w=u+1|0;if(w>>>0<(c[m>>2]|0)>>>0){r=r+4|0;t=t+4|0;u=w}else{break}}break};case 5:{if((c[m>>2]|0)==0){break L3029}u=f+12|0;t=j;r=s;v=0;while(1){w=c[u>>2]|0;if((w&128|0)==0){x=w}else{dt(t);x=c[u>>2]|0}w=t+4|0;y=c[t>>2]|0;if((x&128|0)!=0){dt(w)}z=c[w>>2]|0;if((z|0)==0){A=0.0}else{A=+(y>>>0>>>0)/+(z>>>0>>>0)}g[r>>2]=A;z=v+1|0;if(z>>>0<(c[m>>2]|0)>>>0){t=t+8|0;r=r+4|0;v=z}else{break}}break};case 10:{if((c[m>>2]|0)==0){break L3029}v=f+12|0;r=j;t=s;u=0;while(1){z=c[v>>2]|0;if((z&128|0)==0){B=z}else{dt(r);B=c[v>>2]|0}z=c[r>>2]|0;y=r+4|0;if((B&128|0)!=0){dt(y)}w=c[y>>2]|0;if((w|0)==0){C=0.0}else{C=+(z|0)/+(w>>>0>>>0)}g[t>>2]=C;w=u+1|0;if(w>>>0<(c[m>>2]|0)>>>0){r=r+8|0;t=t+4|0;u=w}else{break}}break};case 9:{if((c[m>>2]|0)==0){break L3029}u=f+12|0;t=j;r=s;v=0;while(1){if((c[u>>2]&128|0)!=0){dt(t)}g[r>>2]=+(c[t>>2]|0);w=v+1|0;if(w>>>0<(c[m>>2]|0)>>>0){t=t+4|0;r=r+4|0;v=w}else{break}}break};case 1:{if((c[m>>2]|0)==0){break L3029}else{D=0;E=s;F=j}while(1){g[E>>2]=+((d[F]|0)>>>0);v=D+1|0;if(v>>>0<(c[m>>2]|0)>>>0){D=v;E=E+4|0;F=F+1|0}else{break}}break};case 6:{if((c[m>>2]|0)==0){break L3029}else{G=j;H=s;I=0}while(1){g[H>>2]=+(a[G]|0);v=I+1|0;if(v>>>0<(c[m>>2]|0)>>>0){G=G+1|0;H=H+4|0;I=v}else{break}}break};case 3:{if((c[m>>2]|0)==0){break L3029}v=f+12|0;r=j;t=s;u=0;while(1){if((c[v>>2]&128|0)!=0){ds(r)}g[t>>2]=+((e[r>>1]|0)>>>0);w=u+1|0;if(w>>>0<(c[m>>2]|0)>>>0){r=r+2|0;t=t+4|0;u=w}else{break}}break};case 8:{if((c[m>>2]|0)==0){break L3029}u=f+12|0;t=j;r=s;v=0;while(1){if((c[u>>2]&128|0)!=0){ds(t)}g[r>>2]=+(b[t>>1]|0);w=v+1|0;if(w>>>0<(c[m>>2]|0)>>>0){t=t+2|0;r=r+4|0;v=w}else{break}}break};case 16:{if((c[m>>2]|0)==0){break L3029}v=f+12|0;r=j;t=s;u=0;while(1){if((c[v>>2]&128|0)!=0){du(r)}g[t>>2]=+((c[r>>2]|0)>>>0)+ +((c[r+4>>2]|0)>>>0)*4294967296.0;w=u+1|0;if(w>>>0<(c[m>>2]|0)>>>0){r=r+8|0;t=t+4|0;u=w}else{break}}break};default:{}}}while(0);dU(c[n>>2]|0);c[k>>2]=s;p=0;i=l;return p|0}}while(0);c[k>>2]=0;p=q;i=l;return p|0}function cd(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+16|0;g=f|0;h=f+8|0;j=b+2|0;k=e[j>>1]|0;if(!((k|0)==4|(k|0)==16|(k|0)==13|(k|0)==18)){l=2;i=f;return l|0}k=b9(a,b,g,8,h)|0;b=c[h>>2]|0;if((k|0)!=0|(b|0)==0){c[d>>2]=0;l=k;i=f;return l|0}k=e[j>>1]|0;if((k|0)==16|(k|0)==18){k=b;c[d>>2]=k;if((c[a+12>>2]&128|0)==0){l=0;i=f;return l|0}dy(k,c[g>>2]|0);l=0;i=f;return l|0}k=c[g>>2]|0;g=dT(k<<3)|0;h=g;if((g|0)==0){dU(b);l=7;i=f;return l|0}g=e[j>>1]|0;do{if((g|0)==4|(g|0)==13){if((k|0)==0){break}j=a+12|0;m=b;n=h;o=0;while(1){if((c[j>>2]&128|0)!=0){dt(m)}c[n>>2]=c[m>>2];c[n+4>>2]=0;p=o+1|0;if(p>>>0<k>>>0){m=m+4|0;n=n+8|0;o=p}else{break}}}}while(0);dU(b);c[d>>2]=h;l=0;i=f;return l|0}function ce(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0;e=i;i=i+16|0;f=e|0;g=e+8|0;j=a+12|0;k=c[j>>2]|0;l=b+16|0;do{if((k&524288|0)==0){b=c[l>>2]|0;c[g>>2]=b;if((k&128|0)==0){m=b;n=k}else{dt(g);m=c[g>>2]|0;n=c[j>>2]|0}b=m;o=0;p=f;if((n&2048|0)==0){q=a+628|0;r=ba[c[a+640>>2]&127](c[q>>2]|0,b,o,0)|0;if(!((r|0)==(b|0)&(E|0)==(o|0))){s=3;i=e;return s|0}if((be[c[a+632>>2]&63](c[q>>2]|0,p,8)|0)==8){break}else{s=3}i=e;return s|0}q=aS(m|0,8)|0;o=q;if(E|o>>>0<8){s=3;i=e;return s|0}if(o>>>0>(c[a+616>>2]|0)>>>0){s=3;i=e;return s|0}else{dX(p,(c[a+612>>2]|0)+m|0,8);break}}else{p=l|0;o=c[p+4>>2]|0;q=f;c[q>>2]=c[p>>2];c[q+4>>2]=o}}while(0);l=f;if((c[j>>2]&128|0)!=0){dx(l,2)}j=c[l>>2]|0;if((j|0)==0){t=0.0}else{t=+(j>>>0>>>0)/+((c[f+4>>2]|0)>>>0>>>0)}h[d>>3]=t;s=0;i=e;return s|0}function cf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0;e=i;i=i+16|0;f=e|0;g=e+8|0;j=a+12|0;k=c[j>>2]|0;l=b+16|0;do{if((k&524288|0)==0){b=c[l>>2]|0;c[g>>2]=b;if((k&128|0)==0){m=b;n=k}else{dt(g);m=c[g>>2]|0;n=c[j>>2]|0}b=m;o=0;p=f;if((n&2048|0)==0){q=a+628|0;r=ba[c[a+640>>2]&127](c[q>>2]|0,b,o,0)|0;if(!((r|0)==(b|0)&(E|0)==(o|0))){s=3;i=e;return s|0}if((be[c[a+632>>2]&63](c[q>>2]|0,p,8)|0)==8){break}else{s=3}i=e;return s|0}q=aS(m|0,8)|0;o=q;if(E|o>>>0<8){s=3;i=e;return s|0}if(o>>>0>(c[a+616>>2]|0)>>>0){s=3;i=e;return s|0}else{dX(p,(c[a+612>>2]|0)+m|0,8);break}}else{p=l|0;o=c[p+4>>2]|0;q=f;c[q>>2]=c[p>>2];c[q+4>>2]=o}}while(0);l=f;if((c[j>>2]&128|0)!=0){dx(l,2)}j=c[l>>2]|0;if((j|0)==0){t=0.0}else{t=+(j|0)/+((c[f+4>>2]|0)>>>0>>>0)}h[d>>3]=t;s=0;i=e;return s|0}function cg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f|0;h=g|0;j=g;c[j>>2]=e;c[j+4>>2]=0;j=c[11278]|0;if((j|0)!=0){bg[j&127](b,d,h)}j=c[37200]|0;if((j|0)==0){i=f;return}bk[j&7](a,b,d,h);i=f;return}function ch(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+8|0;if((c[f>>2]|0)==0){g=1;i=b;return g|0}h=a+12|0;j=c[h>>2]|0;do{if((j&64|0)==0){k=j}else{do{if((j&4096|0)!=0){c[h>>2]=j&-4097;if((bf[c[a+528>>2]&63](a)|0)==0){g=0}else{break}i=b;return g|0}}while(0);if((d1(a)|0)==0){g=0;i=b;return g|0}else{k=c[h>>2]|0;break}}}while(0);do{if((k&2097160|0)==2097152){if((c[f>>2]|0)!=2){break}c[d>>2]=0;c[e>>2]=0;if((c4(a)|0)==0){j=bH(a,273,(l=i,i=i+8|0,c[l>>2]=d,l)|0)|0;i=l;if((j|0)==0){break}j=bH(a,279,(l=i,i=i+8|0,c[l>>2]=e,l)|0)|0;i=l;if((j|0)==0){break}j=a+168|0;if((et(a,273,16,c[j>>2]|0,c[d>>2]|0)|0)==0){break}if((et(a,279,16,c[j>>2]|0,c[e>>2]|0)|0)==0){break}c[h>>2]=c[h>>2]&-2097217;g=1;i=b;return g|0}else{j=bH(a,324,(l=i,i=i+8|0,c[l>>2]=d,l)|0)|0;i=l;if((j|0)==0){break}j=bH(a,325,(l=i,i=i+8|0,c[l>>2]=e,l)|0)|0;i=l;if((j|0)==0){break}j=a+168|0;if((et(a,324,16,c[j>>2]|0,c[d>>2]|0)|0)==0){break}if((et(a,325,16,c[j>>2]|0,c[e>>2]|0)|0)==0){break}c[h>>2]=c[h>>2]&-2097217;g=1;i=b;return g|0}}}while(0);do{if((c[h>>2]&2097160|0)!=0){if((es(a)|0)==0){g=0}else{break}i=b;return g|0}}while(0);g=1;i=b;return g|0}function ci(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+16|0;g=f|0;h=f+8|0;if((c[a+500>>2]|0)==0){hu(d|0,31584,54)|0;j=0;i=f;return j|0}k=a+84|0;l=e[k>>1]|0;switch(l|0){case 1:case 2:case 4:case 8:case 16:{break};default:{aL(d|0,40312,(m=i,i=i+8|0,c[m>>2]=l,m)|0)|0;i=m;j=0;i=f;return j|0}}l=a+98|0;n=(e[l>>1]|0)-(e[a+156>>1]|0)|0;o=bH(a,262,(m=i,i=i+8|0,c[m>>2]=g,m)|0)|0;i=m;do{if((o|0)==0){if((n|0)==1){b[g>>1]=1;p=1;break}else if((n|0)==3){b[g>>1]=2;q=2508;break}else{aL(d|0,33904,(m=i,i=i+8|0,c[m>>2]=8656,m)|0)|0;i=m;j=0;i=f;return j|0}}else{r=e[g>>1]|0;if((r|0)==32844){if((b[a+88>>1]|0)==-30860){j=1;i=f;return j|0}aL(d|0,23304,(m=i,i=i+16|0,c[m>>2]=42064,c[m+8>>2]=34676,m)|0)|0;i=m;j=0;i=f;return j|0}else if((r|0)==2){q=2508;break}else if((r|0)==0|(r|0)==1|(r|0)==3){p=r;break}else if((r|0)==6|(r|0)==8){j=1;i=f;return j|0}else if((r|0)==32845){if(((b[a+88>>1]|0)+30860&65535)>=2){aL(d|0,41368,(m=i,i=i+24|0,c[m>>2]=42064,c[m+8>>2]=34676,c[m+16>>2]=34677,m)|0)|0;i=m;j=0;i=f;return j|0}s=b[a+126>>1]|0;if(s<<16>>16==1){j=1;i=f;return j|0}aL(d|0,40872,(m=i,i=i+16|0,c[m>>2]=40200,c[m+8>>2]=s&65535,m)|0)|0;i=m;j=0;i=f;return j|0}else if((r|0)==5){d7(a,332,(m=i,i=i+8|0,c[m>>2]=h,m)|0)|0;i=m;s=b[h>>1]|0;if(s<<16>>16!=1){t=s&65535;aL(d|0,25512,(m=i,i=i+16|0,c[m>>2]=24056,c[m+8>>2]=t,m)|0)|0;i=m;j=0;i=f;return j|0}t=b[l>>1]|0;if((t&65535)>=4){j=1;i=f;return j|0}aL(d|0,25512,(m=i,i=i+16|0,c[m>>2]=29216,c[m+8>>2]=t&65535,m)|0)|0;i=m;j=0;i=f;return j|0}else{aL(d|0,39608,(m=i,i=i+16|0,c[m>>2]=8656,c[m+8>>2]=r,m)|0)|0;i=m;j=0;i=f;return j|0}}}while(0);if((q|0)==2508){if((n|0)>=3){j=1;i=f;return j|0}aL(d|0,27816,(m=i,i=i+16|0,c[m>>2]=26656,c[m+8>>2]=n,m)|0)|0;i=m;j=0;i=f;return j|0}if((b[a+126>>1]|0)!=1){j=1;i=f;return j|0}a=b[l>>1]|0;if(a<<16>>16==1){j=1;i=f;return j|0}l=b[k>>1]|0;if((l&65535)>=8){j=1;i=f;return j|0}aL(d|0,31200,(m=i,i=i+40|0,c[m>>2]=8656,c[m+8>>2]=p,c[m+16>>2]=29216,c[m+24>>2]=a&65535,c[m+32>>2]=l&65535,m)|0)|0;i=m;j=0;i=f;return j|0}function cj(a){a=a|0;var b=0,d=0,e=0;b=a+56|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+60|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+64|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+68|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+72|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+76|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+80|0;d=c[b>>2]|0;if((d|0)!=0){dU(d);c[b>>2]=0}b=a+36|0;d=c[b>>2]|0;if((d|0)==0){return}dU(d);d=a+40|0;dU(c[d>>2]|0);e=a+44|0;dU(c[e>>2]|0);c[e>>2]=0;c[d>>2]=0;c[b>>2]=0;return}function ck(d,f,h,j){d=d|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0.0;k=i;i=i+128|0;l=k|0;m=k+8|0;n=k+16|0;o=k+24|0;p=k+40|0;q=k+48|0;r=k+56|0;s=k+64|0;t=k+72|0;u=k+80|0;v=k+88|0;w=k+96|0;x=k+104|0;y=k+112|0;z=k+120|0;c[d+84>>2]=0;c[d+88>>2]=0;A=d+36|0;c[A>>2]=0;B=d+40|0;c[B>>2]=0;C=d+44|0;c[C>>2]=0;b[d+30>>1]=4;D=d|0;c[D>>2]=f;c[d+4>>2]=h;h=d+24|0;d7(f,258,(E=i,i=i+8|0,c[E>>2]=h,E)|0)|0;i=E;F=e[h>>1]|0;L3332:do{switch(F|0){case 1:case 2:case 4:case 8:case 16:{G=d+12|0;c[G>>2]=0;H=d+26|0;d7(f,277,(E=i,i=i+8|0,c[E>>2]=H,E)|0)|0;i=E;d7(f,338,(E=i,i=i+16|0,c[E>>2]=t,c[E+8>>2]=s,E)|0)|0;i=E;do{if((b[t>>1]|0)!=0){I=e[c[s>>2]>>1]|0;if((I|0)==1|(I|0)==2){c[G>>2]=I;break}else if((I|0)!=0){break}if((e[H>>1]|0)<=3){break}c[G>>2]=1}}while(0);I=d+32|0;J=bH(f,262,(E=i,i=i+8|0,c[E>>2]=I,E)|0)|0;i=E;if((J|0)==0){b[I>>1]=0}J=b[t>>1]|0;K=b[H>>1]|0;do{if(J<<16>>16==0){if(K<<16>>16!=4){L=0;M=K;break}if((b[I>>1]|0)!=2){L=0;M=4;break}c[G>>2]=1;b[t>>1]=1;L=1;M=4}else{L=J&65535;M=K}}while(0);K=(M&65535)-L|0;d7(f,259,(E=i,i=i+8|0,c[E>>2]=v,E)|0)|0;i=E;d7(f,284,(E=i,i=i+8|0,c[E>>2]=u,E)|0)|0;i=E;J=bH(f,262,(E=i,i=i+8|0,c[E>>2]=I,E)|0)|0;i=E;L3350:do{if((J|0)==0){if((K|0)==3){b[I>>1]=2;N=2596;break}else if((K|0)==1){bH(f,259,(E=i,i=i+8|0,c[E>>2]=r,E)|0)|0;i=E;O=b[r>>1]|0;do{if((O-2&65535)>=3){if(O<<16>>16==-32765){break}b[I>>1]=1;N=2589;break L3350}}while(0);b[I>>1]=0;N=2589;break}else{aL(j|0,33904,(E=i,i=i+8|0,c[E>>2]=8656,E)|0)|0;i=E;break L3332}}else{O=e[I>>1]|0;if((O|0)==5){d7(f,332,(E=i,i=i+8|0,c[E>>2]=z,E)|0)|0;i=E;P=b[z>>1]|0;if(P<<16>>16!=1){Q=P&65535;aL(j|0,25512,(E=i,i=i+16|0,c[E>>2]=24056,c[E+8>>2]=Q,E)|0)|0;i=E;break L3332}Q=b[H>>1]|0;if((Q&65535)>=4){break}P=Q&65535;aL(j|0,25512,(E=i,i=i+16|0,c[E>>2]=29216,c[E+8>>2]=P,E)|0)|0;i=E;break L3332}else if((O|0)==3){P=bH(f,320,(E=i,i=i+24|0,c[E>>2]=w,c[E+8>>2]=x,c[E+16>>2]=y,E)|0)|0;i=E;if((P|0)==0){hu(j|0,38776,32)|0;break L3332}P=2<<e[h>>1];c[A>>2]=dT(P)|0;c[B>>2]=dT(P)|0;Q=dT(P)|0;c[C>>2]=Q;R=c[A>>2]|0;do{if((R|0)!=0){if((c[B>>2]|0)==0|(Q|0)==0){break}dX(R,c[w>>2]|0,P);dX(c[B>>2]|0,c[x>>2]|0,P);dX(c[C>>2]|0,c[y>>2]|0,P);N=2589;break L3350}}while(0);hu(j|0,38e3,32)|0;break L3332}else if((O|0)==8){break}else if((O|0)==32845){if(((b[v>>1]|0)+30860&65535)>=2){aL(j|0,41368,(E=i,i=i+24|0,c[E>>2]=42064,c[E+8>>2]=34676,c[E+16>>2]=34677,E)|0)|0;i=E;break L3332}P=b[u>>1]|0;if(P<<16>>16==1){bF(f,65560,(E=i,i=i+8|0,c[E>>2]=3,E)|0)|0;i=E;b[I>>1]=2;b[h>>1]=8;break}aL(j|0,40872,(E=i,i=i+16|0,c[E>>2]=40200,c[E+8>>2]=P&65535,E)|0)|0;i=E;S=0;i=k;return S|0}else if((O|0)==2){N=2596;break}else if((O|0)==32844){if((b[v>>1]|0)==-30860){bF(f,65560,(E=i,i=i+8|0,c[E>>2]=3,E)|0)|0;i=E;b[I>>1]=1;b[h>>1]=8;break}else{aL(j|0,23304,(E=i,i=i+16|0,c[E>>2]=42064,c[E+8>>2]=34676,E)|0)|0;i=E;break L3332}}else if((O|0)==0|(O|0)==1){N=2589;break}else if((O|0)==6){if((b[u>>1]|0)!=1){break}if((b[v>>1]|0)!=7){break}bF(f,65538,(E=i,i=i+8|0,c[E>>2]=1,E)|0)|0;i=E;b[I>>1]=2;break}else{aL(j|0,39608,(E=i,i=i+16|0,c[E>>2]=8656,c[E+8>>2]=O,E)|0)|0;i=E;break L3332}}}while(0);do{if((N|0)==2596){if((K|0)>=3){break}aL(j|0,27816,(E=i,i=i+16|0,c[E>>2]=26656,c[E+8>>2]=K,E)|0)|0;i=E;break L3332}else if((N|0)==2589){if((b[u>>1]|0)!=1){break}J=b[H>>1]|0;if(J<<16>>16==1){break}P=b[h>>1]|0;if((P&65535)>=8){break}R=e[I>>1]|0;aL(j|0,31200,(E=i,i=i+40|0,c[E>>2]=8656,c[E+8>>2]=R,c[E+16>>2]=29216,c[E+24>>2]=J&65535,c[E+32>>2]=P&65535,E)|0)|0;i=E;break L3332}}while(0);K=d+56|0;P=d+72|0;J=d+76|0;R=d+80|0;hv(K|0,0,28);bH(f,256,(E=i,i=i+8|0,c[E>>2]=d+16,E)|0)|0;i=E;bH(f,257,(E=i,i=i+8|0,c[E>>2]=d+20,E)|0)|0;i=E;d7(f,274,(E=i,i=i+8|0,c[E>>2]=d+28,E)|0)|0;i=E;do{if((b[u>>1]|0)==2){Q=(e[H>>1]|0)<2;c[d+8>>2]=Q&1;if(Q){break}Q=d+48|0;c[Q>>2]=(c4(c[D>>2]|0)|0)!=0?38:46;T=d+52|0;U=T;V=T|0;c[V>>2]=0;L3403:do{switch(e[I>>1]|0){case 5:{if((b[h>>1]|0)!=8){break L3403}if((b[H>>1]|0)!=4){break L3403}c[G>>2]=1;c[V>>2]=8;break};case 6:{if((b[h>>1]|0)!=8){break L3403}if((b[H>>1]|0)!=3){break L3403}if((cw(d)|0)==0){break L3403}d7(c[D>>2]|0,530,(E=i,i=i+16|0,c[E>>2]=l,c[E+8>>2]=m,E)|0)|0;i=E;if((e[l>>1]<<4|e[m>>1]|0)!=17){break L3403}c[V>>2]=16;break};case 0:case 1:case 2:{T=e[h>>1]|0;if((T|0)==8){W=c[G>>2]|0;if((W|0)==1){c[V>>2]=4;break L3403}else if((W|0)==2){if((c[J>>2]|0)!=0){aD(31848,32440,2667,45064);return 0}W=dT(65536)|0;c[J>>2]=W;if((W|0)==0){cg(c[(c[D>>2]|0)+628>>2]|0,45064,32088,(E=i,i=i+1|0,i=i+7&-8,c[E>>2]=0,E)|0);i=E;break L3403}else{X=W;Y=0;Z=0}while(1){W=X;_=0;while(1){a[W]=((((aa(_&65535,Z)|0)+127|0)>>>0)/255|0)&255;$=_+1&65535;if(($&65535)<256){W=W+1|0;_=$}else{break}}_=Y+1&65535;if((_&65535)<256){X=X+256|0;Y=_;Z=_&65535}else{break}}c[V>>2]=12;break L3403}else{c[V>>2]=10;break L3403}}else if((T|0)!=16){break L3403}_=c[G>>2]|0;if((_|0)==1){if((c[R>>2]|0)!=0){aD(32704,32440,2689,45080);return 0}W=dT(65536)|0;c[R>>2]=W;if((W|0)==0){cg(c[(c[D>>2]|0)+628>>2]|0,45080,32088,(E=i,i=i+1|0,i=i+7&-8,c[E>>2]=0,E)|0);i=E;break L3403}else{ab=W;ac=0}while(1){a[ab]=(((ac+128|0)>>>0)/257|0)&255;W=ac+1|0;if(W>>>0<65536){ab=ab+1|0;ac=W}else{break}}c[V>>2]=6;break L3403}T=(_|0)==2;if((c[R>>2]|0)!=0){aD(32704,32440,2689,45080);return 0}W=dT(65536)|0;c[R>>2]=W;if((W|0)==0){cg(c[(c[D>>2]|0)+628>>2]|0,45080,32088,(E=i,i=i+1|0,i=i+7&-8,c[E>>2]=0,E)|0);i=E;ad=0}else{$=W;W=0;while(1){a[$]=(((W+128|0)>>>0)/257|0)&255;ae=W+1|0;if(ae>>>0<65536){$=$+1|0;W=ae}else{ad=1;break}}}if(!T){if(!ad){break L3403}c[V>>2]=2;break L3403}if(!ad){break L3403}if((c[J>>2]|0)!=0){aD(31848,32440,2667,45064);return 0}W=dT(65536)|0;c[J>>2]=W;if((W|0)==0){cg(c[(c[D>>2]|0)+628>>2]|0,45064,32088,(E=i,i=i+1|0,i=i+7&-8,c[E>>2]=0,E)|0);i=E;break L3403}else{af=W;ag=0;ah=0}while(1){W=af;$=0;while(1){a[W]=((((aa($&65535,ah)|0)+127|0)>>>0)/255|0)&255;_=$+1&65535;if((_&65535)<256){W=W+1|0;$=_}else{break}}$=ag+1&65535;if(($&65535)<256){af=af+256|0;ag=$;ah=$&65535}else{break}}c[V>>2]=14;break};default:{}}}while(0);do{if((c[Q>>2]|0)!=0){if((c[U>>2]|0)==0){break}else{S=1}i=k;return S|0}}while(0);hu(j|0,37272,28)|0;break L3332}else{c[d+8>>2]=1}}while(0);U=d+48|0;c[U>>2]=(c4(c[D>>2]|0)|0)!=0?72:54;Q=d+52|0;V=Q;O=Q|0;c[O>>2]=0;L3472:do{switch(e[I>>1]|0){case 2:{Q=e[h>>1]|0;if((Q|0)==8){T=c[G>>2]|0;if((T|0)==1){c[O>>2]=18;break L3472}else if((T|0)==2){if((c[J>>2]|0)!=0){aD(31848,32440,2667,45064);return 0}T=dT(65536)|0;c[J>>2]=T;if((T|0)==0){cg(c[(c[D>>2]|0)+628>>2]|0,45064,32088,(E=i,i=i+1|0,i=i+7&-8,c[E>>2]=0,E)|0);i=E;break L3472}else{ai=T;aj=0;ak=0}while(1){T=ai;$=0;while(1){a[T]=((((aa($&65535,ak)|0)+127|0)>>>0)/255|0)&255;W=$+1&65535;if((W&65535)<256){T=T+1|0;$=W}else{break}}$=aj+1&65535;if(($&65535)<256){ai=ai+256|0;aj=$;ak=$&65535}else{break}}c[O>>2]=6;break L3472}else{c[O>>2]=22;break L3472}}else if((Q|0)!=16){break L3472}$=c[G>>2]|0;if(($|0)==1){if((c[R>>2]|0)!=0){aD(32704,32440,2689,45080);return 0}T=dT(65536)|0;c[R>>2]=T;if((T|0)==0){cg(c[(c[D>>2]|0)+628>>2]|0,45080,32088,(E=i,i=i+1|0,i=i+7&-8,c[E>>2]=0,E)|0);i=E;break L3472}else{al=T;am=0}while(1){a[al]=(((am+128|0)>>>0)/257|0)&255;T=am+1|0;if(T>>>0<65536){al=al+1|0;am=T}else{break}}c[O>>2]=16;break L3472}Q=($|0)==2;if((c[R>>2]|0)!=0){aD(32704,32440,2689,45080);return 0}T=dT(65536)|0;c[R>>2]=T;if((T|0)==0){cg(c[(c[D>>2]|0)+628>>2]|0,45080,32088,(E=i,i=i+1|0,i=i+7&-8,c[E>>2]=0,E)|0);i=E;an=0}else{W=T;T=0;while(1){a[W]=(((T+128|0)>>>0)/257|0)&255;_=T+1|0;if(_>>>0<65536){W=W+1|0;T=_}else{an=1;break}}}if(!Q){if(!an){break L3472}c[O>>2]=10;break L3472}if(!an){break L3472}if((c[J>>2]|0)!=0){aD(31848,32440,2667,45064);return 0}T=dT(65536)|0;c[J>>2]=T;if((T|0)==0){cg(c[(c[D>>2]|0)+628>>2]|0,45064,32088,(E=i,i=i+1|0,i=i+7&-8,c[E>>2]=0,E)|0);i=E;break L3472}else{ao=T;ap=0;aq=0}while(1){T=ao;W=0;while(1){a[T]=((((aa(W&65535,aq)|0)+127|0)>>>0)/255|0)&255;$=W+1&65535;if(($&65535)<256){T=T+1|0;W=$}else{break}}W=ap+1&65535;if((W&65535)<256){ao=ao+256|0;ap=W;aq=W&65535}else{break}}c[O>>2]=34;break};case 5:{if((cG(d)|0)==0){break L3472}if((b[h>>1]|0)!=8){break L3472}if((c[K>>2]|0)==0){c[O>>2]=14;break L3472}else{c[O>>2]=32;break L3472}break};case 3:{if((cG(d)|0)==0){break L3472}Q=e[h>>1]|0;if((Q|0)==8){c[O>>2]=24;break L3472}else if((Q|0)==4){c[O>>2]=8;break L3472}else if((Q|0)==2){c[O>>2]=36;break L3472}else if((Q|0)==1){c[O>>2]=52;break L3472}else{break L3472}break};case 0:case 1:{if((cG(d)|0)==0){break L3472}switch(e[h>>1]|0){case 16:{c[O>>2]=4;break L3472;break};case 8:{do{if((c[G>>2]|0)!=0){if((b[H>>1]|0)!=2){break}c[O>>2]=44;break L3472}}while(0);c[O>>2]=30;break L3472;break};case 4:{c[O>>2]=38;break L3472;break};case 2:{c[O>>2]=20;break L3472;break};case 1:{c[O>>2]=50;break L3472;break};default:{break L3472}}break};case 6:{if((b[h>>1]|0)!=8){break L3472}if((b[H>>1]|0)!=3){break L3472}if((cw(d)|0)==0){break L3472}d7(c[D>>2]|0,530,(E=i,i=i+16|0,c[E>>2]=p,c[E+8>>2]=q,E)|0)|0;i=E;switch(e[p>>1]<<4|e[q>>1]|0){case 68:{c[O>>2]=2;break L3472;break};case 66:{c[O>>2]=42;break L3472;break};case 65:{c[O>>2]=46;break L3472;break};case 34:{c[O>>2]=28;break L3472;break};case 33:{c[O>>2]=40;break L3472;break};case 18:{c[O>>2]=26;break L3472;break};case 17:{c[O>>2]=12;break L3472;break};default:{break L3472}}break};case 8:{if((cG(d)|0)==0){break L3472}if((b[h>>1]|0)!=8){break L3472}do{if((c[P>>2]|0)==0){Q=dT(18124)|0;c[P>>2]=Q;if((Q|0)!=0){N=2688;break}cg(c[(c[D>>2]|0)+628>>2]|0,8976,30864,(E=i,i=i+1|0,i=i+7&-8,c[E>>2]=0,E)|0);i=E;ar=0}else{N=2688}}while(0);do{if((N|0)==2688){Q=c[D>>2]|0;d7(Q,318,(E=i,i=i+8|0,c[E>>2]=n,E)|0)|0;i=E;g[o+4>>2]=100.0;Q=c[n>>2]|0;W=Q+4|0;T=o|0;g[T>>2]=+g[Q>>2]/+g[W>>2]*100.0;as=+g[W>>2];g[o+8>>2]=(1.0- +g[Q>>2]-as)/as*100.0;if((ea(c[P>>2]|0,14088,T)|0)>=0){ar=48;break}cg(c[(c[D>>2]|0)+628>>2]|0,8976,30664,(E=i,i=i+1|0,i=i+7&-8,c[E>>2]=0,E)|0);i=E;dU(c[P>>2]|0);ar=0}}while(0);c[O>>2]=ar;break};default:{}}}while(0);do{if((c[U>>2]|0)!=0){if((c[V>>2]|0)==0){break}else{S=1}i=k;return S|0}}while(0);hu(j|0,37272,28)|0;break};default:{aL(j|0,40312,(E=i,i=i+8|0,c[E>>2]=F,E)|0)|0;i=E}}}while(0);dU(c[A>>2]|0);dU(c[B>>2]|0);dU(c[C>>2]|0);c[C>>2]=0;c[B>>2]=0;c[A>>2]=0;S=0;i=k;return S|0}function cl(a,d,e,f,g,h){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=i;i=i+1120|0;k=j+1024|0;l=j|0;hv(l|0,0,1024);do{if((ci(a,l)|0)!=0){if((ck(k,a,h,l)|0)==0){break}b[k+30>>1]=g&65535;m=c[k+20>>2]|0;n=f+((aa(e-m|0,d)|0)<<2)|0;o=c[k+48>>2]|0;do{if((o|0)==0){p=c[k>>2]|0;q=c[p+628>>2]|0;cg(q,c3(p)|0,36384,(r=i,i=i+1|0,i=i+7&-8,c[r>>2]=0,r)|0);i=r;s=0}else{if((c[k+52>>2]|0)==0){p=c[k>>2]|0;q=c[p+628>>2]|0;cg(q,c3(p)|0,35744,(r=i,i=i+1|0,i=i+7&-8,c[r>>2]=0,r)|0);i=r;s=0;break}else{s=ba[o&127](k,n,d,m)|0;break}}}while(0);cj(k);t=s;i=j;return t|0}}while(0);s=c[a+628>>2]|0;cg(s,c3(a)|0,35232,(r=i,i=i+8|0,c[r>>2]=l,r)|0);i=r;t=0;i=j;return t|0}function cm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return cl(a,b,c,d,4,e)|0}function cn(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ab=0;h=i;i=i+16|0;j=h|0;k=h+8|0;l=c[a>>2]|0;m=c[a+52>>2]|0;n=c[a+12>>2]|0;o=dJ(l)|0;do{if((o|0)!=0){p=(n|0)!=0;q=aa(p?4:3,o)|0;if((q|0)==0){break}r=dT(q)|0;if((r|0)==0){s=c[l+628>>2]|0;cg(s,c3(l)|0,35232,(t=i,i=i+8|0,c[t>>2]=31352,t)|0);i=t;u=0;i=h;return u|0}dW(r,0,q);q=r+o|0;s=o<<1;v=r+s|0;if(p){w=r+(s+o)|0}else{w=0}bH(l,322,(t=i,i=i+8|0,c[t>>2]=j,t)|0)|0;i=t;bH(l,323,(t=i,i=i+8|0,c[t>>2]=k,t)|0)|0;i=t;L3608:do{switch(e[a+28>>1]|0){case 2:case 6:{switch(b[a+30>>1]|0){case 4:case 8:{x=3;y=2781;break L3608;break};case 3:case 7:{x=1;y=2781;break L3608;break};case 1:case 5:{z=2;y=2782;break L3608;break};default:{z=0;y=2782;break L3608}}break};case 1:case 5:{switch(b[a+30>>1]|0){case 4:case 8:{x=1;y=2781;break L3608;break};case 3:case 7:{x=3;y=2781;break L3608;break};case 2:case 6:{z=2;y=2782;break L3608;break};default:{z=0;y=2782;break L3608}}break};case 3:case 7:{switch(b[a+30>>1]|0){case 2:case 6:{x=1;y=2781;break L3608;break};case 1:case 5:{x=3;y=2781;break L3608;break};case 4:case 8:{z=2;y=2782;break L3608;break};default:{z=0;y=2782;break L3608}}break};case 4:case 8:{switch(b[a+30>>1]|0){case 2:case 6:{x=3;y=2781;break L3608;break};case 1:case 5:{x=1;y=2781;break L3608;break};case 3:case 7:{z=2;y=2782;break L3608;break};default:{z=0;y=2782;break L3608}}break};default:{z=0;y=2782}}}while(0);if((y|0)==2781){A=g-1|0;B=-((c[j>>2]|0)+f|0)|0;C=x;D=1}else if((y|0)==2782){A=0;B=f-(c[j>>2]|0)|0;C=z;D=0}s=e[a+32>>1]|0;if((s|0)==0|(s|0)==1|(s|0)==3){E=1;F=r;G=r}else{E=3;F=q;G=v}s=(g|0)==0;L3632:do{if(s){H=1}else{I=a+84|0;J=a+4|0;K=(f|0)==0;L=a+88|0;M=(E|0)==1;N=E&65535;O=A;P=1;Q=0;while(1){R=c[k>>2]|0;S=c[I>>2]|0;T=R-(((S+Q|0)>>>0)%(R>>>0)|0)|0;R=(T+Q|0)>>>0>g>>>0?g-Q|0:T;L3636:do{if(K){U=P}else{T=aa(O,f)|0;V=0;W=S;while(1){if((da(l,r,(c[L>>2]|0)+V|0,W+Q|0,0,0)|0)==-1){if((c[J>>2]|0)!=0){U=0;break L3636}}do{if(!M){if((da(l,F,(c[L>>2]|0)+V|0,(c[I>>2]|0)+Q|0,0,1)|0)==-1){if((c[J>>2]|0)!=0){U=0;break L3636}}if((da(l,G,(c[L>>2]|0)+V|0,(c[I>>2]|0)+Q|0,0,2)|0)!=-1){break}if((c[J>>2]|0)!=0){U=0;break L3636}}}while(0);do{if(p){if((da(l,w,(c[L>>2]|0)+V|0,(c[I>>2]|0)+Q|0,0,N)|0)!=-1){break}if((c[J>>2]|0)!=0){U=0;break L3636}}}while(0);X=(((c[I>>2]|0)+Q|0)>>>0)%((c[k>>2]|0)>>>0)|0;Y=aa(dG(l)|0,X)|0;X=c[j>>2]|0;if((X+V|0)>>>0>f>>>0){Z=f-V|0;_=X-Z|0;if(p){$=w+Y|0}else{$=0}bd[m&31](a,d+(V+T<<2)|0,V,O,Z,R,_,_+B|0,r+Y|0,F+Y|0,G+Y|0,$)}else{if(p){ab=w+Y|0}else{ab=0}bd[m&31](a,d+(V+T<<2)|0,V,O,X,R,0,B,r+Y|0,F+Y|0,G+Y|0,ab)}Y=(c[j>>2]|0)+V|0;if(Y>>>0>=f>>>0){U=P;break L3636}V=Y;W=c[I>>2]|0}}}while(0);S=R+Q|0;if(S>>>0>=g>>>0){H=U;break L3632}O=(D?-R|0:R)+O|0;P=U;Q=S}}}while(0);if(!((C&2|0)==0|s)){p=f-1|0;v=0;do{q=aa(v,f)|0;Q=p+q|0;if((q|0)<(Q|0)){P=d+(q<<2)|0;q=d+(Q<<2)|0;do{Q=c[P>>2]|0;c[P>>2]=c[q>>2];c[q>>2]=Q;P=P+4|0;q=q-4|0;}while(P>>>0<q>>>0)}v=v+1|0;}while(v>>>0<g>>>0)}dU(r);u=H;i=h;return u|0}}while(0);H=c[l+628>>2]|0;cg(H,c3(l)|0,31696,(t=i,i=i+8|0,c[t>>2]=31144,t)|0);i=t;u=0;i=h;return u|0}function co(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;h=i;i=i+8|0;j=h|0;k=c[a>>2]|0;l=c[a+52>>2]|0;m=c[a+16>>2]|0;n=c[a+12>>2]|0;o=dp(k)|0;do{if((o|0)!=0){p=(n|0)!=0;q=aa(p?4:3,o)|0;if((q|0)==0){break}r=dT(q)|0;if((r|0)==0){s=c[k+628>>2]|0;cg(s,c3(k)|0,31352,(t=i,i=i+1|0,i=i+7&-8,c[t>>2]=0,t)|0);i=t;u=0;i=h;return u|0}dW(r,0,q);q=o<<1;if(p){v=r+(q+o)|0}else{v=0}L3692:do{switch(e[a+28>>1]|0){case 1:case 5:{switch(b[a+30>>1]|0){case 4:case 8:{w=1;x=2841;break L3692;break};case 2:case 6:{y=0;z=0;A=2;B=0;break L3692;break};case 3:case 7:{w=3;x=2841;break L3692;break};default:{y=0;z=0;A=0;B=0;break L3692}}break};case 3:case 7:{switch(b[a+30>>1]|0){case 4:case 8:{y=0;z=0;A=2;B=0;break L3692;break};case 2:case 6:{w=1;x=2841;break L3692;break};case 1:case 5:{w=3;x=2841;break L3692;break};default:{y=0;z=0;A=0;B=0;break L3692}}break};case 4:case 8:{switch(b[a+30>>1]|0){case 3:case 7:{y=0;z=0;A=2;B=0;break L3692;break};case 2:case 6:{w=3;x=2841;break L3692;break};case 1:case 5:{w=1;x=2841;break L3692;break};default:{y=0;z=0;A=0;B=0;break L3692}}break};case 2:case 6:{switch(b[a+30>>1]|0){case 1:case 5:{y=0;z=0;A=2;B=0;break L3692;break};case 4:case 8:{w=3;x=2841;break L3692;break};case 3:case 7:{w=1;x=2841;break L3692;break};default:{y=0;z=0;A=0;B=0;break L3692}}break};default:{y=0;z=0;A=0;B=0}}}while(0);if((x|0)==2841){y=-(f<<1)|0;z=g-1|0;A=w;B=1}s=e[a+32>>1]|0;if((s|0)==0|(s|0)==1|(s|0)==3){C=1;D=r;E=r}else{C=3;D=r+o|0;E=r+q|0}d7(k,278,(t=i,i=i+8|0,c[t>>2]=j,t)|0)|0;i=t;s=dr(k)|0;F=m>>>0>f>>>0?m-f|0:0;G=a+4|0;H=(g|0)==0;L3715:do{if(H){I=1}else{J=a+84|0;K=(C|0)==1;L=C&65535;M=z;N=0;while(1){O=c[j>>2]|0;P=(c[J>>2]|0)+N|0;Q=O-((P>>>0)%(O>>>0)|0)|0;O=(Q+N|0)>>>0>g>>>0?g-N|0:Q;Q=dj(k,P,0)|0;if((c6(k,Q,r,aa(((((c[J>>2]|0)+N|0)>>>0)%((c[j>>2]|0)>>>0)|0)+O|0,s)|0)|0)==-1){if((c[G>>2]|0)!=0){I=0;break L3715}}do{if(!K){Q=dj(k,P,1)|0;if((c6(k,Q,D,aa(((((c[J>>2]|0)+N|0)>>>0)%((c[j>>2]|0)>>>0)|0)+O|0,s)|0)|0)==-1){if((c[G>>2]|0)!=0){I=0;break L3715}}Q=dj(k,P,2)|0;if((c6(k,Q,E,aa(((((c[J>>2]|0)+N|0)>>>0)%((c[j>>2]|0)>>>0)|0)+O|0,s)|0)|0)!=-1){break}if((c[G>>2]|0)!=0){I=0;break L3715}}}while(0);do{if(p){Q=dj(k,P,L)|0;if((c6(k,Q,v,aa(((((c[J>>2]|0)+N|0)>>>0)%((c[j>>2]|0)>>>0)|0)+O|0,s)|0)|0)!=-1){break}if((c[G>>2]|0)!=0){I=0;break L3715}}}while(0);P=aa((((c[J>>2]|0)+N|0)>>>0)%((c[j>>2]|0)>>>0)|0,s)|0;Q=d+((aa(M,f)|0)<<2)|0;if(p){R=v+P|0}else{R=0}bd[l&31](a,Q,0,M,f,O,F,y,r+P|0,D+P|0,E+P|0,R);P=O+N|0;if(P>>>0<g>>>0){M=(B?-O|0:O)+M|0;N=P}else{I=1;break}}}}while(0);if(!((A&2|0)==0|H)){F=f-1|0;p=0;do{s=aa(p,f)|0;G=F+s|0;if((s|0)<(G|0)){q=d+(s<<2)|0;s=d+(G<<2)|0;do{G=c[q>>2]|0;c[q>>2]=c[s>>2];c[s>>2]=G;q=q+4|0;s=s-4|0;}while(q>>>0<s>>>0)}p=p+1|0;}while(p>>>0<g>>>0)}dU(r);u=I;i=h;return u|0}}while(0);I=c[k+628>>2]|0;cg(I,c3(k)|0,31696,(t=i,i=i+8|0,c[t>>2]=31512,t)|0);i=t;u=0;i=h;return u|0}function cp(a,b,e,f,g,h,i,j,k,l,m,n){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0;if((h|0)==0){return}f=g>>>0>7;e=b;b=k;k=l;l=m;m=n;n=h;while(1){h=n-1|0;if(f){a=e;o=b;p=k;q=l;r=m;s=g;while(1){c[a>>2]=(d[p]|0)<<8|(d[o]|0)|(d[q]|0)<<16|(d[r]|0)<<24;c[a+4>>2]=(d[p+1|0]|0)<<8|(d[o+1|0]|0)|(d[q+1|0]|0)<<16|(d[r+1|0]|0)<<24;c[a+8>>2]=(d[p+2|0]|0)<<8|(d[o+2|0]|0)|(d[q+2|0]|0)<<16|(d[r+2|0]|0)<<24;c[a+12>>2]=(d[p+3|0]|0)<<8|(d[o+3|0]|0)|(d[q+3|0]|0)<<16|(d[r+3|0]|0)<<24;c[a+16>>2]=(d[p+4|0]|0)<<8|(d[o+4|0]|0)|(d[q+4|0]|0)<<16|(d[r+4|0]|0)<<24;c[a+20>>2]=(d[p+5|0]|0)<<8|(d[o+5|0]|0)|(d[q+5|0]|0)<<16|(d[r+5|0]|0)<<24;c[a+24>>2]=(d[p+6|0]|0)<<8|(d[o+6|0]|0)|(d[q+6|0]|0)<<16|(d[r+6|0]|0)<<24;t=o+8|0;u=p+8|0;v=q+8|0;w=r+8|0;x=a+32|0;c[a+28>>2]=(d[p+7|0]|0)<<8|(d[o+7|0]|0)|(d[q+7|0]|0)<<16|(d[r+7|0]|0)<<24;y=s-8|0;if(y>>>0>7){a=x;o=t;p=u;q=v;r=w;s=y}else{z=x;A=t;B=u;C=v;D=w;E=y;break}}}else{z=e;A=b;B=k;C=l;D=m;E=g}switch(E|0){case 2:{F=D;G=C;H=B;I=A;J=z;K=2880;break};case 3:{L=D;M=C;N=B;O=A;P=z;K=2879;break};case 6:{Q=D;R=C;S=B;T=A;U=z;K=2876;break};case 1:{V=D;W=C;X=B;Y=A;Z=z;K=2881;break};case 5:{_=D;$=C;aa=B;ab=A;ac=z;K=2877;break};case 7:{c[z>>2]=(d[B]|0)<<8|(d[A]|0)|(d[C]|0)<<16|(d[D]|0)<<24;Q=D+1|0;R=C+1|0;S=B+1|0;T=A+1|0;U=z+4|0;K=2876;break};case 4:{ad=D;ae=C;af=B;ag=A;ah=z;K=2878;break};default:{ai=D;aj=C;ak=B;al=A;am=z}}if((K|0)==2876){K=0;c[U>>2]=(d[S]|0)<<8|(d[T]|0)|(d[R]|0)<<16|(d[Q]|0)<<24;_=Q+1|0;$=R+1|0;aa=S+1|0;ab=T+1|0;ac=U+4|0;K=2877}if((K|0)==2877){K=0;c[ac>>2]=(d[aa]|0)<<8|(d[ab]|0)|(d[$]|0)<<16|(d[_]|0)<<24;ad=_+1|0;ae=$+1|0;af=aa+1|0;ag=ab+1|0;ah=ac+4|0;K=2878}if((K|0)==2878){K=0;c[ah>>2]=(d[af]|0)<<8|(d[ag]|0)|(d[ae]|0)<<16|(d[ad]|0)<<24;L=ad+1|0;M=ae+1|0;N=af+1|0;O=ag+1|0;P=ah+4|0;K=2879}if((K|0)==2879){K=0;c[P>>2]=(d[N]|0)<<8|(d[O]|0)|(d[M]|0)<<16|(d[L]|0)<<24;F=L+1|0;G=M+1|0;H=N+1|0;I=O+1|0;J=P+4|0;K=2880}if((K|0)==2880){K=0;c[J>>2]=(d[H]|0)<<8|(d[I]|0)|(d[G]|0)<<16|(d[F]|0)<<24;V=F+1|0;W=G+1|0;X=H+1|0;Y=I+1|0;Z=J+4|0;K=2881}if((K|0)==2881){K=0;c[Z>>2]=(d[X]|0)<<8|(d[Y]|0)|(d[W]|0)<<16|(d[V]|0)<<24;ai=V+1|0;aj=W+1|0;ak=X+1|0;al=Y+1|0;am=Z+4|0}if((h|0)==0){break}else{e=am+(j<<2)|0;b=al+i|0;k=ak+i|0;l=aj+i|0;m=ai+i|0;n=h}}return}function cq(a,b,e,f,g,h,i,j,k,l,m,n){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;if((h|0)==0){return}f=(g|0)==0;e=a+76|0;a=m;m=n;n=l;l=k;k=b;b=h;while(1){h=b-1|0;if(f){o=a;p=m;q=n;r=l;s=k}else{t=a+g|0;u=l+g|0;v=a;w=m;x=n;y=l;z=g;A=k;while(1){B=z-1|0;C=d[w]|0;D=c[e>>2]|0;E=C<<8;c[A>>2]=d[D+(d[y]|0|E)|0]|0|C<<24|(d[D+(d[x]|0|E)|0]|0)<<8|(d[D+(d[v]|0|E)|0]|0)<<16;if((B|0)==0){break}else{v=v+1|0;w=w+1|0;x=x+1|0;y=y+1|0;z=B;A=A+4|0}}o=t;p=m+g|0;q=n+g|0;r=u;s=k+(g<<2)|0}if((h|0)==0){break}else{a=o+i|0;m=p+i|0;n=q+i|0;l=r+i|0;k=s+(j<<2)|0;b=h}}return}function cr(a,b,e,f,g,h,i,j,k,l,m,n){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0;if((h|0)==0){return}n=g>>>0>7;f=k;k=l;l=m;m=b;b=h;while(1){h=b-1|0;if(n){e=f;a=k;o=l;p=m;q=g;while(1){c[p>>2]=d[e]|0|(d[a]|0)<<8|(d[o]|0)<<16|-16777216;c[p+4>>2]=d[e+1|0]|0|(d[a+1|0]|0)<<8|(d[o+1|0]|0)<<16|-16777216;c[p+8>>2]=d[e+2|0]|0|(d[a+2|0]|0)<<8|(d[o+2|0]|0)<<16|-16777216;c[p+12>>2]=d[e+3|0]|0|(d[a+3|0]|0)<<8|(d[o+3|0]|0)<<16|-16777216;c[p+16>>2]=d[e+4|0]|0|(d[a+4|0]|0)<<8|(d[o+4|0]|0)<<16|-16777216;c[p+20>>2]=d[e+5|0]|0|(d[a+5|0]|0)<<8|(d[o+5|0]|0)<<16|-16777216;c[p+24>>2]=d[e+6|0]|0|(d[a+6|0]|0)<<8|(d[o+6|0]|0)<<16|-16777216;r=e+8|0;s=a+8|0;t=o+8|0;u=p+32|0;c[p+28>>2]=d[e+7|0]|0|(d[a+7|0]|0)<<8|(d[o+7|0]|0)<<16|-16777216;v=q-8|0;if(v>>>0>7){e=r;a=s;o=t;p=u;q=v}else{w=r;x=s;y=t;z=u;A=v;break}}}else{w=f;x=k;y=l;z=m;A=g}switch(A|0){case 2:{B=z;C=y;D=x;E=w;F=2906;break};case 3:{G=z;H=y;I=x;J=w;F=2905;break};case 6:{K=z;L=y;M=x;N=w;F=2902;break};case 1:{O=z;P=y;Q=x;R=w;F=2907;break};case 4:{S=z;T=y;U=x;V=w;F=2904;break};case 7:{c[z>>2]=d[w]|0|(d[x]|0)<<8|(d[y]|0)<<16|-16777216;K=z+4|0;L=y+1|0;M=x+1|0;N=w+1|0;F=2902;break};case 5:{W=z;X=y;Y=x;Z=w;F=2903;break};default:{_=z;$=y;aa=x;ab=w}}if((F|0)==2902){F=0;c[K>>2]=d[N]|0|(d[M]|0)<<8|(d[L]|0)<<16|-16777216;W=K+4|0;X=L+1|0;Y=M+1|0;Z=N+1|0;F=2903}if((F|0)==2903){F=0;c[W>>2]=d[Z]|0|(d[Y]|0)<<8|(d[X]|0)<<16|-16777216;S=W+4|0;T=X+1|0;U=Y+1|0;V=Z+1|0;F=2904}if((F|0)==2904){F=0;c[S>>2]=d[V]|0|(d[U]|0)<<8|(d[T]|0)<<16|-16777216;G=S+4|0;H=T+1|0;I=U+1|0;J=V+1|0;F=2905}if((F|0)==2905){F=0;c[G>>2]=d[J]|0|(d[I]|0)<<8|(d[H]|0)<<16|-16777216;B=G+4|0;C=H+1|0;D=I+1|0;E=J+1|0;F=2906}if((F|0)==2906){F=0;c[B>>2]=d[E]|0|(d[D]|0)<<8|(d[C]|0)<<16|-16777216;O=B+4|0;P=C+1|0;Q=D+1|0;R=E+1|0;F=2907}if((F|0)==2907){F=0;c[O>>2]=d[R]|0|(d[Q]|0)<<8|(d[P]|0)<<16|-16777216;_=O+4|0;$=P+1|0;aa=Q+1|0;ab=R+1|0}if((h|0)==0){break}else{f=ab+i|0;k=aa+i|0;l=$+i|0;m=_+(j<<2)|0;b=h}}return}function cs(a,b,f,g,h,i,j,k,l,m,n,o){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;if((i|0)==0){return}g=(h|0)==0;f=a+80|0;a=b;b=l;l=m;m=n;n=o;o=i;while(1){i=o-1|0;if(g){p=a;q=b;r=l;s=m;t=n}else{u=n+(h<<1)|0;v=l+(h<<1)|0;w=0;x=a;y=b;z=l;A=m;B=n;while(1){C=c[f>>2]|0;c[x>>2]=(d[C+(e[z>>1]|0)|0]|0)<<8|(d[C+(e[y>>1]|0)|0]|0)|(d[C+(e[A>>1]|0)|0]|0)<<16|(d[C+(e[B>>1]|0)|0]|0)<<24;C=w+1|0;if(C>>>0<h>>>0){w=C;x=x+4|0;y=y+2|0;z=z+2|0;A=A+2|0;B=B+2|0}else{break}}p=a+(h<<2)|0;q=b+(h<<1)|0;r=v;s=m+(h<<1)|0;t=u}if((i|0)==0){break}else{a=p+(k<<2)|0;b=q+(j<<1)|0;l=r+(j<<1)|0;m=s+(j<<1)|0;n=t+(j<<1)|0;o=i}}return}function ct(a,b,f,g,h,i,j,k,l,m,n,o){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;if((i|0)==0){return}g=(h|0)==0;f=a+80|0;p=a+76|0;a=n;n=o;o=m;m=l;l=b;b=i;while(1){i=b-1|0;if(g){q=a;r=n;s=o;t=m;u=l}else{v=a+(h<<1)|0;w=m+(h<<1)|0;x=a;y=n;z=o;A=m;B=h;C=l;while(1){D=B-1|0;E=c[f>>2]|0;F=d[E+(e[y>>1]|0)|0]|0;G=c[p>>2]|0;H=F<<8;c[C>>2]=d[G+(d[E+(e[A>>1]|0)|0]|0|H)|0]|0|F<<24|(d[G+(d[E+(e[z>>1]|0)|0]|0|H)|0]|0)<<8|(d[G+(d[E+(e[x>>1]|0)|0]|0|H)|0]|0)<<16;if((D|0)==0){break}else{x=x+2|0;y=y+2|0;z=z+2|0;A=A+2|0;B=D;C=C+4|0}}q=v;r=n+(h<<1)|0;s=o+(h<<1)|0;t=w;u=l+(h<<2)|0}if((i|0)==0){break}else{a=q+(j<<1)|0;n=r+(j<<1)|0;o=s+(j<<1)|0;m=t+(j<<1)|0;l=u+(k<<2)|0;b=i}}return}function cu(a,b,f,g,h,i,j,k,l,m,n,o){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;if((i|0)==0){return}o=(h|0)==0;g=a+80|0;a=b;b=l;l=m;m=n;n=i;while(1){i=n-1|0;if(o){p=a;q=b;r=l;s=m}else{f=a+(h<<2)|0;t=l+(h<<1)|0;u=0;v=a;w=b;x=l;y=m;while(1){z=c[g>>2]|0;c[v>>2]=d[z+(e[w>>1]|0)|0]|0|(d[z+(e[x>>1]|0)|0]|0)<<8|(d[z+(e[y>>1]|0)|0]|0)<<16|-16777216;z=u+1|0;if(z>>>0<h>>>0){u=z;v=v+4|0;w=w+2|0;x=x+2|0;y=y+2|0}else{break}}p=f;q=b+(h<<1)|0;r=t;s=m+(h<<1)|0}if((i|0)==0){break}else{a=p+(k<<2)|0;b=q+(j<<1)|0;l=r+(j<<1)|0;m=s+(j<<1)|0;n=i}}return}function cv(a,b,e,f,g,h,i,j,k,l,m,n){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;if((h|0)==0){return}f=(g|0)==0;e=l;l=m;m=n;n=k;k=b;b=h;while(1){h=b-1|0;if(f){o=e;p=l;q=m;r=n;s=k}else{a=l+g|0;t=n+g|0;u=e;v=l;w=m;x=n;y=g;z=k;while(1){A=y-1|0;B=(d[w]|0)^255;C=((aa((d[x]|0)^255,B)|0)>>>0)/255|0;D=((aa((d[u]|0)^255,B)|0)>>>0)/255|0;c[z>>2]=C|D<<8|(((aa((d[v]|0)^255,B)|0)>>>0)/255|0)<<16|-16777216;if((A|0)==0){break}else{u=u+1|0;v=v+1|0;w=w+1|0;x=x+1|0;y=A;z=z+4|0}}o=e+g|0;p=a;q=m+g|0;r=t;s=k+(g<<2)|0}if((h|0)==0){break}else{e=o+i|0;l=p+i|0;m=q+i|0;n=r+i|0;k=s+(j<<2)|0;b=h}}return}function cw(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+68|0;do{if((c[f>>2]|0)==0){g=dT(6168)|0;c[f>>2]=g;if((g|0)!=0){break}cg(c[(c[a>>2]|0)+628>>2]|0,8952,33120,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h;j=0;i=b;return j|0}}while(0);g=a|0;d7(c[g>>2]|0,529,(h=i,i=i+8|0,c[h>>2]=d,h)|0)|0;i=h;d7(c[g>>2]|0,532,(h=i,i=i+8|0,c[h>>2]=e,h)|0)|0;i=h;j=(ec(c[f>>2]|0,c[d>>2]|0,c[e>>2]|0)|0)>>>31^1;i=b;return j|0}function cx(a,b,e,f,g,h,j,k,l,m,n,o){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0;o=i;i=i+24|0;f=o|0;e=o+8|0;p=o+16|0;if((h|0)==0){i=o;return}q=a+68|0;a=l;l=m;m=n;n=b;b=h;while(1){h=n;r=m;s=l;t=a;u=g;while(1){eb(c[q>>2]|0,d[t]|0,d[s]|0,d[r]|0,f,e,p);c[h>>2]=c[f>>2]|c[e>>2]<<8|c[p>>2]<<16|-16777216;v=u-1|0;if((v|0)==0){break}else{h=h+4|0;r=r+1|0;s=s+1|0;t=t+1|0;u=v}}u=b-1|0;if((u|0)==0){break}else{a=a+(g+j)|0;l=l+(g+j)|0;m=m+(g+j)|0;n=n+(g+k<<2)|0;b=u}}i=o;return}function cy(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;h=i;i=i+16|0;j=h|0;k=h+8|0;l=c[a>>2]|0;m=c[a+52>>2]|0;n=dT(dJ(l)|0)|0;if((n|0)==0){o=c[l+628>>2]|0;cg(o,c3(l)|0,35232,(p=i,i=i+8|0,c[p>>2]=31352,p)|0);i=p;q=0;i=h;return q|0}dW(n,0,dJ(l)|0);bH(l,322,(p=i,i=i+8|0,c[p>>2]=j,p)|0)|0;i=p;bH(l,323,(p=i,i=i+8|0,c[p>>2]=k,p)|0)|0;i=p;L3889:do{switch(e[a+28>>1]|0){case 4:case 8:{switch(b[a+30>>1]|0){case 2:case 6:{r=3;s=2982;break L3889;break};case 3:case 7:{t=2;s=2983;break L3889;break};case 1:case 5:{r=1;s=2982;break L3889;break};default:{t=0;s=2983;break L3889}}break};case 3:case 7:{switch(b[a+30>>1]|0){case 2:case 6:{r=1;s=2982;break L3889;break};case 4:case 8:{t=2;s=2983;break L3889;break};case 1:case 5:{r=3;s=2982;break L3889;break};default:{t=0;s=2983;break L3889}}break};case 1:case 5:{switch(b[a+30>>1]|0){case 2:case 6:{t=2;s=2983;break L3889;break};case 4:case 8:{r=1;s=2982;break L3889;break};case 3:case 7:{r=3;s=2982;break L3889;break};default:{t=0;s=2983;break L3889}}break};case 2:case 6:{switch(b[a+30>>1]|0){case 4:case 8:{r=3;s=2982;break L3889;break};case 1:case 5:{t=2;s=2983;break L3889;break};case 3:case 7:{r=1;s=2982;break L3889;break};default:{t=0;s=2983;break L3889}}break};default:{t=0;s=2983}}}while(0);if((s|0)==2983){u=0;v=f-(c[j>>2]|0)|0;w=t;x=0}else if((s|0)==2982){u=g-1|0;v=-((c[j>>2]|0)+f|0)|0;w=r;x=1}r=(g|0)==0;L3910:do{if(r){y=1}else{s=a+84|0;t=a+4|0;p=(f|0)==0;o=a+88|0;z=u;A=1;B=0;while(1){C=c[k>>2]|0;D=c[s>>2]|0;E=C-(((D+B|0)>>>0)%(C>>>0)|0)|0;C=(E+B|0)>>>0>g>>>0?g-B|0:E;L3914:do{if(p){F=A}else{E=aa(z,f)|0;G=0;H=D;while(1){if((da(l,n,(c[o>>2]|0)+G|0,H+B|0,0,0)|0)==-1){if((c[t>>2]|0)!=0){F=0;break L3914}}I=(((c[s>>2]|0)+B|0)>>>0)%((c[k>>2]|0)>>>0)|0;J=aa(dG(l)|0,I)|0;I=c[j>>2]|0;if((I+G|0)>>>0>f>>>0){K=f-G|0;L=I-K|0;bi[m&63](a,d+(G+E<<2)|0,G,z,K,C,L,L+v|0,n+J|0)}else{bi[m&63](a,d+(G+E<<2)|0,G,z,I,C,0,v,n+J|0)}J=(c[j>>2]|0)+G|0;if(J>>>0>=f>>>0){F=A;break L3914}G=J;H=c[s>>2]|0}}}while(0);D=C+B|0;if(D>>>0>=g>>>0){y=F;break L3910}z=(x?-C|0:C)+z|0;A=F;B=D}}}while(0);dU(n);if((w&2|0)==0|r){q=y;i=h;return q|0}r=f-1|0;w=0;while(1){n=aa(w,f)|0;F=r+n|0;if((n|0)<(F|0)){x=d+(n<<2)|0;n=d+(F<<2)|0;do{F=c[x>>2]|0;c[x>>2]=c[n>>2];c[n>>2]=F;x=x+4|0;n=n-4|0;}while(x>>>0<n>>>0)}n=w+1|0;if(n>>>0<g>>>0){w=n}else{q=y;break}}i=h;return q|0}function cz(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;h=i;i=i+24|0;j=h|0;k=h+16|0;l=c[a>>2]|0;m=c[a+52>>2]|0;n=c[a+16>>2]|0;o=dT(dp(l)|0)|0;if((o|0)==0){p=c[l+628>>2]|0;cg(p,c3(l)|0,29624,(q=i,i=i+1|0,i=i+7&-8,c[q>>2]=0,q)|0);i=q;r=0;i=h;return r|0}dW(o,0,dp(l)|0);L3945:do{switch(e[a+28>>1]|0){case 4:case 8:{switch(b[a+30>>1]|0){case 2:case 6:{s=3;t=3022;break L3945;break};case 1:case 5:{s=1;t=3022;break L3945;break};case 3:case 7:{u=0;v=0;w=2;x=0;break L3945;break};default:{u=0;v=0;w=0;x=0;break L3945}}break};case 2:case 6:{switch(b[a+30>>1]|0){case 3:case 7:{s=1;t=3022;break L3945;break};case 4:case 8:{s=3;t=3022;break L3945;break};case 1:case 5:{u=0;v=0;w=2;x=0;break L3945;break};default:{u=0;v=0;w=0;x=0;break L3945}}break};case 1:case 5:{switch(b[a+30>>1]|0){case 4:case 8:{s=1;t=3022;break L3945;break};case 3:case 7:{s=3;t=3022;break L3945;break};case 2:case 6:{u=0;v=0;w=2;x=0;break L3945;break};default:{u=0;v=0;w=0;x=0;break L3945}}break};case 3:case 7:{switch(b[a+30>>1]|0){case 2:case 6:{s=1;t=3022;break L3945;break};case 1:case 5:{s=3;t=3022;break L3945;break};case 4:case 8:{u=0;v=0;w=2;x=0;break L3945;break};default:{u=0;v=0;w=0;x=0;break L3945}}break};default:{u=0;v=0;w=0;x=0}}}while(0);if((t|0)==3022){u=-(f<<1)|0;v=g-1|0;w=s;x=1}d7(l,278,(q=i,i=i+8|0,c[q>>2]=j,q)|0)|0;i=q;d7(l,530,(q=i,i=i+16|0,c[q>>2]=h+8,c[q+8>>2]=k,q)|0)|0;i=q;q=dr(l)|0;s=n>>>0>f>>>0?n-f|0:0;n=a+4|0;t=(g|0)==0;L3965:do{if(t){y=1}else{p=a+84|0;z=v;A=0;while(1){B=c[j>>2]|0;C=(c[p>>2]|0)+A|0;D=B-((C>>>0)%(B>>>0)|0)|0;B=(D+A|0)>>>0>g>>>0?g-A|0:D;D=e[k>>1]|0;E=(B>>>0)%(D>>>0)|0;if((E|0)==0){F=B}else{F=D-E+B|0}E=dj(l,C,0)|0;if((c6(l,E,o,aa(((((c[p>>2]|0)+A|0)>>>0)%((c[j>>2]|0)>>>0)|0)+F|0,q)|0)|0)==-1){if((c[n>>2]|0)!=0){y=0;break L3965}}E=aa((((c[p>>2]|0)+A|0)>>>0)%((c[j>>2]|0)>>>0)|0,q)|0;C=d+((aa(z,f)|0)<<2)|0;bi[m&63](a,C,0,z,f,B,s,u,o+E|0);E=B+A|0;if(E>>>0<g>>>0){z=(x?-B|0:B)+z|0;A=E}else{y=1;break}}}}while(0);if(!((w&2|0)==0|t)){t=f-1|0;w=0;do{x=aa(w,f)|0;u=t+x|0;if((x|0)<(u|0)){s=d+(x<<2)|0;x=d+(u<<2)|0;do{u=c[s>>2]|0;c[s>>2]=c[x>>2];c[x>>2]=u;s=s+4|0;x=x-4|0;}while(s>>>0<x>>>0)}w=w+1|0;}while(w>>>0<g>>>0)}dU(o);r=y;i=h;return r|0}function cA(a,b,f,g,h,i,j,k,l){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0;g=e[a+26>>1]|0;a=aa(g,j)|0;if((i|0)==0){return}j=h>>>0>7;f=g+1|0;m=g+2|0;n=g+3|0;o=g<<1;p=o|1;q=o+2|0;r=o+3|0;s=o+g|0;t=s+1|0;u=s+2|0;v=s+3|0;w=s+g|0;x=w+1|0;y=w+2|0;z=w+3|0;A=w+g|0;B=A+1|0;C=A+2|0;D=A+3|0;E=A+g|0;F=E+1|0;G=E+2|0;H=E+3|0;I=E+g|0;J=I+1|0;K=I+2|0;L=I+3|0;M=I+g|0;N=l;l=b;b=i;while(1){i=b-1|0;if(j){O=N;P=l;Q=h;while(1){c[P>>2]=(d[O+1|0]|0)<<8|(d[O]|0)|(d[O+2|0]|0)<<16|(d[O+3|0]|0)<<24;c[P+4>>2]=(d[O+f|0]|0)<<8|(d[O+g|0]|0)|(d[O+m|0]|0)<<16|(d[O+n|0]|0)<<24;c[P+8>>2]=(d[O+p|0]|0)<<8|(d[O+o|0]|0)|(d[O+q|0]|0)<<16|(d[O+r|0]|0)<<24;c[P+12>>2]=(d[O+t|0]|0)<<8|(d[O+s|0]|0)|(d[O+u|0]|0)<<16|(d[O+v|0]|0)<<24;c[P+16>>2]=(d[O+x|0]|0)<<8|(d[O+w|0]|0)|(d[O+y|0]|0)<<16|(d[O+z|0]|0)<<24;c[P+20>>2]=(d[O+B|0]|0)<<8|(d[O+A|0]|0)|(d[O+C|0]|0)<<16|(d[O+D|0]|0)<<24;c[P+24>>2]=(d[O+F|0]|0)<<8|(d[O+E|0]|0)|(d[O+G|0]|0)<<16|(d[O+H|0]|0)<<24;R=P+32|0;c[P+28>>2]=(d[O+J|0]|0)<<8|(d[O+I|0]|0)|(d[O+K|0]|0)<<16|(d[O+L|0]|0)<<24;S=O+M|0;T=Q-8|0;if(T>>>0>7){O=S;P=R;Q=T}else{U=S;V=R;W=T;break}}}else{U=N;V=l;W=h}switch(W|0){case 3:{X=V;Y=U;Z=3049;break};case 4:{_=V;$=U;Z=3048;break};case 2:{ab=V;ac=U;Z=3050;break};case 6:{ad=V;ae=U;Z=3046;break};case 1:{af=V;ag=U;Z=3051;break};case 5:{ah=V;ai=U;Z=3047;break};case 7:{c[V>>2]=(d[U+1|0]|0)<<8|(d[U]|0)|(d[U+2|0]|0)<<16|(d[U+3|0]|0)<<24;ad=V+4|0;ae=U+g|0;Z=3046;break};default:{aj=V;ak=U}}if((Z|0)==3046){Z=0;c[ad>>2]=(d[ae+1|0]|0)<<8|(d[ae]|0)|(d[ae+2|0]|0)<<16|(d[ae+3|0]|0)<<24;ah=ad+4|0;ai=ae+g|0;Z=3047}if((Z|0)==3047){Z=0;c[ah>>2]=(d[ai+1|0]|0)<<8|(d[ai]|0)|(d[ai+2|0]|0)<<16|(d[ai+3|0]|0)<<24;_=ah+4|0;$=ai+g|0;Z=3048}if((Z|0)==3048){Z=0;c[_>>2]=(d[$+1|0]|0)<<8|(d[$]|0)|(d[$+2|0]|0)<<16|(d[$+3|0]|0)<<24;X=_+4|0;Y=$+g|0;Z=3049}if((Z|0)==3049){Z=0;c[X>>2]=(d[Y+1|0]|0)<<8|(d[Y]|0)|(d[Y+2|0]|0)<<16|(d[Y+3|0]|0)<<24;ab=X+4|0;ac=Y+g|0;Z=3050}if((Z|0)==3050){Z=0;c[ab>>2]=(d[ac+1|0]|0)<<8|(d[ac]|0)|(d[ac+2|0]|0)<<16|(d[ac+3|0]|0)<<24;af=ab+4|0;ag=ac+g|0;Z=3051}if((Z|0)==3051){Z=0;c[af>>2]=(d[ag+1|0]|0)<<8|(d[ag]|0)|(d[ag+2|0]|0)<<16|(d[ag+3|0]|0)<<24;aj=af+4|0;ak=ag+g|0}if((i|0)==0){break}else{N=ak+a|0;l=aj+(k<<2)|0;b=i}}return}function cB(a,b,f,g,h,i,j,k,l){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;g=e[a+26>>1]|0;f=aa(g,j)|0;if((i|0)==0){return}j=(h|0)==0;m=a+76|0;a=aa(g,h)|0;n=l;l=b;b=i;while(1){i=b-1|0;if(j){o=n;p=l}else{q=n+a|0;r=n;s=h;t=l;while(1){u=s-1|0;v=d[r+3|0]|0;w=c[m>>2]|0;x=v<<8;c[t>>2]=d[w+(d[r]|0|x)|0]|0|v<<24|(d[w+(d[r+1|0]|0|x)|0]|0)<<8|(d[w+(d[r+2|0]|0|x)|0]|0)<<16;if((u|0)==0){break}else{r=r+g|0;s=u;t=t+4|0}}o=q;p=l+(h<<2)|0}if((i|0)==0){break}else{n=o+f|0;l=p+(k<<2)|0;b=i}}return}function cC(a,b,f,g,h,i,j,k,l){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ab=0,ac=0,ad=0;g=e[a+26>>1]|0;a=aa(g,j)|0;if((i|0)==0){return}j=h>>>0>7;f=g+1|0;m=g+2|0;n=g<<1;o=n|1;p=n+2|0;q=n+g|0;r=q+1|0;s=q+2|0;t=q+g|0;u=t+1|0;v=t+2|0;w=t+g|0;x=w+1|0;y=w+2|0;z=w+g|0;A=z+1|0;B=z+2|0;C=z+g|0;D=C+1|0;E=C+2|0;F=C+g|0;G=l;l=b;b=i;while(1){i=b-1|0;if(j){H=G;I=l;J=h;while(1){c[I>>2]=d[H]|0|(d[H+1|0]|0)<<8|(d[H+2|0]|0)<<16|-16777216;c[I+4>>2]=d[H+g|0]|0|(d[H+f|0]|0)<<8|(d[H+m|0]|0)<<16|-16777216;c[I+8>>2]=d[H+n|0]|0|(d[H+o|0]|0)<<8|(d[H+p|0]|0)<<16|-16777216;c[I+12>>2]=d[H+q|0]|0|(d[H+r|0]|0)<<8|(d[H+s|0]|0)<<16|-16777216;c[I+16>>2]=d[H+t|0]|0|(d[H+u|0]|0)<<8|(d[H+v|0]|0)<<16|-16777216;c[I+20>>2]=d[H+w|0]|0|(d[H+x|0]|0)<<8|(d[H+y|0]|0)<<16|-16777216;c[I+24>>2]=d[H+z|0]|0|(d[H+A|0]|0)<<8|(d[H+B|0]|0)<<16|-16777216;K=I+32|0;c[I+28>>2]=d[H+C|0]|0|(d[H+D|0]|0)<<8|(d[H+E|0]|0)<<16|-16777216;L=H+F|0;M=J-8|0;if(M>>>0>7){H=L;I=K;J=M}else{N=L;O=K;P=M;break}}}else{N=G;O=l;P=h}switch(P|0){case 7:{c[O>>2]=d[N]|0|(d[N+1|0]|0)<<8|(d[N+2|0]|0)<<16|-16777216;Q=O+4|0;R=N+g|0;S=3072;break};case 6:{Q=O;R=N;S=3072;break};case 5:{T=O;U=N;S=3073;break};case 3:{V=O;W=N;S=3075;break};case 4:{X=O;Y=N;S=3074;break};case 1:{Z=O;_=N;S=3077;break};case 2:{$=O;ab=N;S=3076;break};default:{ac=O;ad=N}}if((S|0)==3072){S=0;c[Q>>2]=d[R]|0|(d[R+1|0]|0)<<8|(d[R+2|0]|0)<<16|-16777216;T=Q+4|0;U=R+g|0;S=3073}if((S|0)==3073){S=0;c[T>>2]=d[U]|0|(d[U+1|0]|0)<<8|(d[U+2|0]|0)<<16|-16777216;X=T+4|0;Y=U+g|0;S=3074}if((S|0)==3074){S=0;c[X>>2]=d[Y]|0|(d[Y+1|0]|0)<<8|(d[Y+2|0]|0)<<16|-16777216;V=X+4|0;W=Y+g|0;S=3075}if((S|0)==3075){S=0;c[V>>2]=d[W]|0|(d[W+1|0]|0)<<8|(d[W+2|0]|0)<<16|-16777216;$=V+4|0;ab=W+g|0;S=3076}if((S|0)==3076){S=0;c[$>>2]=d[ab]|0|(d[ab+1|0]|0)<<8|(d[ab+2|0]|0)<<16|-16777216;Z=$+4|0;_=ab+g|0;S=3077}if((S|0)==3077){S=0;c[Z>>2]=d[_]|0|(d[_+1|0]|0)<<8|(d[_+2|0]|0)<<16|-16777216;ac=Z+4|0;ad=_+g|0}if((i|0)==0){break}else{G=ad+a|0;l=ac+(k<<2)|0;b=i}}return}function cD(a,b,f,g,h,i,j,k,l){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=e[a+26>>1]|0;f=aa(g,j)|0;if((i|0)==0){return}j=(h|0)==0;m=a+80|0;a=aa(g,h)|0;n=b;b=l;l=i;while(1){i=l-1|0;if(j){o=n;p=b}else{q=b+(a<<1)|0;r=h;s=n;t=b;while(1){u=r-1|0;v=c[m>>2]|0;c[s>>2]=(d[v+(e[t+2>>1]|0)|0]|0)<<8|(d[v+(e[t>>1]|0)|0]|0)|(d[v+(e[t+4>>1]|0)|0]|0)<<16|(d[v+(e[t+6>>1]|0)|0]|0)<<24;if((u|0)==0){break}else{r=u;s=s+4|0;t=t+(g<<1)|0}}o=n+(h<<2)|0;p=q}if((i|0)==0){break}else{n=o+(k<<2)|0;b=p+(f<<1)|0;l=i}}return}function cE(a,b,f,g,h,i,j,k,l){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;g=e[a+26>>1]|0;f=aa(g,j)|0;if((i|0)==0){return}j=(h|0)==0;m=a+80|0;n=a+76|0;a=aa(g,h)|0;o=l;l=b;b=i;while(1){i=b-1|0;if(j){p=o;q=l}else{r=o+(a<<1)|0;s=o;t=h;u=l;while(1){v=t-1|0;w=c[m>>2]|0;x=d[w+(e[s+6>>1]|0)|0]|0;y=c[n>>2]|0;z=x<<8;c[u>>2]=d[y+(d[w+(e[s>>1]|0)|0]|0|z)|0]|0|x<<24|(d[y+(d[w+(e[s+2>>1]|0)|0]|0|z)|0]|0)<<8|(d[y+(d[w+(e[s+4>>1]|0)|0]|0|z)|0]|0)<<16;if((v|0)==0){break}else{s=s+(g<<1)|0;t=v;u=u+4|0}}p=r;q=l+(h<<2)|0}if((i|0)==0){break}else{o=p+(f<<1)|0;l=q+(k<<2)|0;b=i}}return}function cF(a,b,f,g,h,i,j,k,l){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=e[a+26>>1]|0;f=aa(g,j)|0;if((i|0)==0){return}j=(h|0)==0;m=a+80|0;a=aa(g,h)|0;n=b;b=l;l=i;while(1){i=l-1|0;if(j){o=n;p=b}else{q=b+(a<<1)|0;r=h;s=n;t=b;while(1){u=r-1|0;v=c[m>>2]|0;c[s>>2]=d[v+(e[t>>1]|0)|0]|0|(d[v+(e[t+2>>1]|0)|0]|0)<<8|(d[v+(e[t+4>>1]|0)|0]|0)<<16|-16777216;if((u|0)==0){break}else{r=u;s=s+4|0;t=t+(g<<1)|0}}o=n+(h<<2)|0;p=q}if((i|0)==0){break}else{n=o+(k<<2)|0;b=p+(f<<1)|0;l=i}}return}function cG(f){f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;g=i;h=f+32|0;L4092:do{switch(e[h>>1]|0){case 2:case 6:case 5:{if((b[f+24>>1]|0)==8){j=1}else{break L4092}i=g;return j|0};case 1:case 0:{break};case 3:{k=f+36|0;l=c[k>>2]|0;m=f+40|0;n=c[m>>2]|0;o=f+44|0;p=c[o>>2]|0;q=f+24|0;r=b[q>>1]|0;s=1<<(r&65535);t=s;u=p;v=n;w=l;while(1){if((t|0)<=0){x=3147;break}if((e[w>>1]|0)>255){x=3145;break}if((e[v>>1]|0)>255){x=3145;break}if((e[u>>1]|0)>255){x=3145;break}else{t=t-1|0;u=u+2|0;v=v+2|0;w=w+2|0}}do{if((x|0)==3147){w=c[f>>2]|0;v=c[w+628>>2]|0;d$(v,c3(w)|0,30416,(y=i,i=i+1|0,i=i+7&-8,c[y>>2]=0,y)|0);i=y;x=3148}else if((x|0)==3145){if((s|0)>0){z=s}else{A=r;break}while(1){w=z-1|0;v=l+(w<<1)|0;b[v>>1]=(e[v>>1]|0)>>>8;v=n+(w<<1)|0;b[v>>1]=(e[v>>1]|0)>>>8;v=p+(w<<1)|0;b[v>>1]=(e[v>>1]|0)>>>8;if((w|0)>0){z=w}else{x=3148;break}}}}while(0);if((x|0)==3148){A=b[q>>1]|0}if((A&65535)>=9){j=1;i=g;return j|0}p=A&65535;n=c[k>>2]|0;l=c[m>>2]|0;r=c[o>>2]|0;s=dT(((8/(p>>>0)|0)<<10)+1024|0)|0;w=s;v=f+64|0;c[v>>2]=w;if((s|0)==0){u=c[f>>2]|0;t=c[u+628>>2]|0;cg(t,c3(u)|0,30184,(y=i,i=i+1|0,i=i+7&-8,c[y>>2]=0,y)|0);i=y;j=0;i=g;return j|0}u=s+1024|0;s=0;t=w;while(1){c[t+(s<<2)>>2]=u;if((p|0)==4){w=s>>>4&15;c[u>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;w=s&15;c[u+4>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;B=u+8|0}else if((p|0)==8){c[u>>2]=b[n+(s<<1)>>1]&255|e[l+(s<<1)>>1]<<8&65280|e[r+(s<<1)>>1]<<16|-16777216;B=u+4|0}else if((p|0)==1){w=s>>>7&1;c[u>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;w=s>>>6&1;c[u+4>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;w=s>>>5&1;c[u+8>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;w=s>>>4&1;c[u+12>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;w=s>>>3&1;c[u+16>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;w=s>>>2&1;c[u+20>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;w=s>>>1&1;c[u+24>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;w=s&1;c[u+28>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;B=u+32|0}else if((p|0)==2){w=s>>>6&3;c[u>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;w=s>>>4&3;c[u+4>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;w=s>>>2&3;c[u+8>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;w=s&3;c[u+12>>2]=b[n+(w<<1)>>1]&255|e[l+(w<<1)>>1]<<8&65280|e[r+(w<<1)>>1]<<16|-16777216;B=u+16|0}else{B=u}w=s+1|0;if((w|0)>=256){j=1;break}u=B;s=w;t=c[v>>2]|0}i=g;return j|0};default:{j=1;i=g;return j|0}}}while(0);B=f+24|0;A=b[B>>1]|0;x=A<<16>>16==16?255:(1<<(A&65535))-1|0;A=dT(x+1|0)|0;z=f+56|0;c[z>>2]=A;if((A|0)==0){v=c[f>>2]|0;t=c[v+628>>2]|0;cg(t,c3(v)|0,29928,(y=i,i=i+1|0,i=i+7&-8,c[y>>2]=0,y)|0);i=y;j=0;i=g;return j|0}v=(x|0)<0;do{if((b[h>>1]|0)==0){if(v){break}a[A]=-1;if((x|0)<1){break}else{C=1}do{a[(c[z>>2]|0)+C|0]=(((x-C|0)*255|0|0)/(x|0)|0)&255;C=C+1|0;}while((C|0)<=(x|0))}else{if(v){break}a[A]=0;if((x|0)<1){break}else{D=1}do{a[(c[z>>2]|0)+D|0]=((D*255|0|0)/(x|0)|0)&255;D=D+1|0;}while((D|0)<=(x|0))}}while(0);x=b[B>>1]|0;if((x&65535)>=17){j=1;i=g;return j|0}if((e[h>>1]|0)>=2){j=1;i=g;return j|0}h=c[z>>2]|0;B=x&65535;D=8/(B>>>0)|0;A=dT((D|0)==0?2048:(D<<10)+1024|0)|0;D=A;v=f+60|0;c[v>>2]=D;if((A|0)==0){C=c[f>>2]|0;f=c[C+628>>2]|0;cg(f,c3(C)|0,29752,(y=i,i=i+1|0,i=i+7&-8,c[y>>2]=0,y)|0);i=y;j=0;i=g;return j|0}y=A+1024|0;L4152:do{if((x<<16>>16|0)==16){c[D>>2]=y;A=d[h]|0;c[y>>2]=A|A<<8|A<<16|-16777216;A=y;C=1;do{A=A+4|0;c[(c[v>>2]|0)+(C<<2)>>2]=A;f=d[h+C|0]|0;c[A>>2]=f|f<<8|f<<16|-16777216;C=C+1|0;}while((C|0)<256)}else if((x<<16>>16|0)==2){C=0;A=y;f=D;while(1){c[f+(C<<2)>>2]=A;t=d[h+(C>>6)|0]|0;c[A>>2]=t|t<<8|t<<16|-16777216;t=d[h+(C>>>4&3)|0]|0;c[A+4>>2]=t|t<<8|t<<16|-16777216;t=d[h+(C>>>2&3)|0]|0;c[A+8>>2]=t|t<<8|t<<16|-16777216;t=d[h+(C&3)|0]|0;c[A+12>>2]=t|t<<8|t<<16|-16777216;t=C+1|0;if((t|0)>=256){break L4152}C=t;A=A+16|0;f=c[v>>2]|0}}else if((x<<16>>16|0)==1){f=0;A=y;C=D;while(1){c[C+(f<<2)>>2]=A;t=d[h+(f>>7)|0]|0;c[A>>2]=t|t<<8|t<<16|-16777216;t=d[h+(f>>>6&1)|0]|0;c[A+4>>2]=t|t<<8|t<<16|-16777216;t=d[h+(f>>>5&1)|0]|0;c[A+8>>2]=t|t<<8|t<<16|-16777216;t=d[h+(f>>>4&1)|0]|0;c[A+12>>2]=t|t<<8|t<<16|-16777216;t=d[h+(f>>>3&1)|0]|0;c[A+16>>2]=t|t<<8|t<<16|-16777216;t=d[h+(f>>>2&1)|0]|0;c[A+20>>2]=t|t<<8|t<<16|-16777216;t=d[h+(f>>>1&1)|0]|0;c[A+24>>2]=t|t<<8|t<<16|-16777216;t=d[h+(f&1)|0]|0;c[A+28>>2]=t|t<<8|t<<16|-16777216;t=f+1|0;if((t|0)>=256){break L4152}f=t;A=A+32|0;C=c[v>>2]|0}}else{C=0;A=y;f=D;while(1){c[f+(C<<2)>>2]=A;if((B|0)==16|(B|0)==8){t=d[h+C|0]|0;c[A>>2]=t|t<<8|t<<16|-16777216;E=A+4|0}else if((B|0)==4){t=d[h+(C>>4)|0]|0;c[A>>2]=t|t<<8|t<<16|-16777216;t=d[h+(C&15)|0]|0;c[A+4>>2]=t|t<<8|t<<16|-16777216;E=A+8|0}else{E=A}t=C+1|0;if((t|0)>=256){break L4152}C=t;A=E;f=c[v>>2]|0}}}while(0);dU(c[z>>2]|0);c[z>>2]=0;j=1;i=g;return j|0}function cH(a,b,f,g,h,i,j,k,l){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0;g=e[a+26>>1]|0;a=aa(g,j)|0;if((i|0)==0){return}j=h>>>0>7;f=g+3|0;m=g+1|0;n=g+2|0;o=g<<1;p=o+3|0;q=o|1;r=o+2|0;s=o+g|0;t=s+3|0;u=s+1|0;v=s+2|0;w=s+g|0;x=w+3|0;y=w+1|0;z=w+2|0;A=w+g|0;B=A+3|0;C=A+1|0;D=A+2|0;E=A+g|0;F=E+3|0;G=E+1|0;H=E+2|0;I=E+g|0;J=I+3|0;K=I+1|0;L=I+2|0;M=I+g|0;N=l;l=b;b=i;while(1){i=b-1|0;if(j){O=N;P=l;Q=h;while(1){R=(d[O+3|0]|0)^255;S=((aa((d[O]|0)^255,R)|0)&65535)/255|0;T=((aa((d[O+1|0]|0)^255,R)|0)&65535)/255|0;c[P>>2]=S&65535|(T&65535)<<8|((((aa((d[O+2|0]|0)^255,R)|0)&65535)/255|0)&65535)<<16|-16777216;R=(d[O+f|0]|0)^255;T=((aa((d[O+g|0]|0)^255,R)|0)&65535)/255|0;S=((aa((d[O+m|0]|0)^255,R)|0)&65535)/255|0;c[P+4>>2]=T&65535|(S&65535)<<8|((((aa((d[O+n|0]|0)^255,R)|0)&65535)/255|0)&65535)<<16|-16777216;R=(d[O+p|0]|0)^255;S=((aa((d[O+o|0]|0)^255,R)|0)&65535)/255|0;T=((aa((d[O+q|0]|0)^255,R)|0)&65535)/255|0;c[P+8>>2]=S&65535|(T&65535)<<8|((((aa((d[O+r|0]|0)^255,R)|0)&65535)/255|0)&65535)<<16|-16777216;R=(d[O+t|0]|0)^255;T=((aa((d[O+s|0]|0)^255,R)|0)&65535)/255|0;S=((aa((d[O+u|0]|0)^255,R)|0)&65535)/255|0;c[P+12>>2]=T&65535|(S&65535)<<8|((((aa((d[O+v|0]|0)^255,R)|0)&65535)/255|0)&65535)<<16|-16777216;R=(d[O+x|0]|0)^255;S=((aa((d[O+w|0]|0)^255,R)|0)&65535)/255|0;T=((aa((d[O+y|0]|0)^255,R)|0)&65535)/255|0;c[P+16>>2]=S&65535|(T&65535)<<8|((((aa((d[O+z|0]|0)^255,R)|0)&65535)/255|0)&65535)<<16|-16777216;R=(d[O+B|0]|0)^255;T=((aa((d[O+A|0]|0)^255,R)|0)&65535)/255|0;S=((aa((d[O+C|0]|0)^255,R)|0)&65535)/255|0;c[P+20>>2]=T&65535|(S&65535)<<8|((((aa((d[O+D|0]|0)^255,R)|0)&65535)/255|0)&65535)<<16|-16777216;R=(d[O+F|0]|0)^255;S=((aa((d[O+E|0]|0)^255,R)|0)&65535)/255|0;T=((aa((d[O+G|0]|0)^255,R)|0)&65535)/255|0;c[P+24>>2]=S&65535|(T&65535)<<8|((((aa((d[O+H|0]|0)^255,R)|0)&65535)/255|0)&65535)<<16|-16777216;R=(d[O+J|0]|0)^255;T=((aa((d[O+I|0]|0)^255,R)|0)&65535)/255|0;S=((aa((d[O+K|0]|0)^255,R)|0)&65535)/255|0;U=P+32|0;c[P+28>>2]=T&65535|(S&65535)<<8|((((aa((d[O+L|0]|0)^255,R)|0)&65535)/255|0)&65535)<<16|-16777216;R=O+M|0;S=Q-8|0;if(S>>>0>7){O=R;P=U;Q=S}else{V=R;W=U;X=S;break}}}else{V=N;W=l;X=h}switch(X|0){case 2:{Y=W;Z=V;_=3181;break};case 4:{$=W;ab=V;_=3179;break};case 1:{ac=W;ad=V;_=3182;break};case 7:{Q=(d[V+3|0]|0)^255;P=((aa((d[V]|0)^255,Q)|0)&65535)/255|0;c[W>>2]=P&65535|((((aa((d[V+1|0]|0)^255,Q)|0)&65535)/255|0)&65535)<<8|((((aa((d[V+2|0]|0)^255,Q)|0)&65535)/255|0)&65535)<<16|-16777216;ae=W+4|0;af=V+g|0;_=3177;break};case 5:{ag=W;ah=V;_=3178;break};case 3:{ai=W;aj=V;_=3180;break};case 6:{ae=W;af=V;_=3177;break};default:{ak=W;al=V}}if((_|0)==3177){_=0;Q=(d[af+3|0]|0)^255;P=((aa((d[af]|0)^255,Q)|0)&65535)/255|0;O=((aa((d[af+1|0]|0)^255,Q)|0)&65535)/255|0;c[ae>>2]=P&65535|(O&65535)<<8|((((aa((d[af+2|0]|0)^255,Q)|0)&65535)/255|0)&65535)<<16|-16777216;ag=ae+4|0;ah=af+g|0;_=3178}if((_|0)==3178){_=0;Q=(d[ah+3|0]|0)^255;O=((aa((d[ah]|0)^255,Q)|0)&65535)/255|0;P=((aa((d[ah+1|0]|0)^255,Q)|0)&65535)/255|0;c[ag>>2]=O&65535|(P&65535)<<8|((((aa((d[ah+2|0]|0)^255,Q)|0)&65535)/255|0)&65535)<<16|-16777216;$=ag+4|0;ab=ah+g|0;_=3179}if((_|0)==3179){_=0;Q=(d[ab+3|0]|0)^255;P=((aa((d[ab]|0)^255,Q)|0)&65535)/255|0;O=((aa((d[ab+1|0]|0)^255,Q)|0)&65535)/255|0;c[$>>2]=P&65535|(O&65535)<<8|((((aa((d[ab+2|0]|0)^255,Q)|0)&65535)/255|0)&65535)<<16|-16777216;ai=$+4|0;aj=ab+g|0;_=3180}if((_|0)==3180){_=0;Q=(d[aj+3|0]|0)^255;O=((aa((d[aj]|0)^255,Q)|0)&65535)/255|0;P=((aa((d[aj+1|0]|0)^255,Q)|0)&65535)/255|0;c[ai>>2]=O&65535|(P&65535)<<8|((((aa((d[aj+2|0]|0)^255,Q)|0)&65535)/255|0)&65535)<<16|-16777216;Y=ai+4|0;Z=aj+g|0;_=3181}if((_|0)==3181){_=0;Q=(d[Z+3|0]|0)^255;P=((aa((d[Z]|0)^255,Q)|0)&65535)/255|0;O=((aa((d[Z+1|0]|0)^255,Q)|0)&65535)/255|0;c[Y>>2]=P&65535|(O&65535)<<8|((((aa((d[Z+2|0]|0)^255,Q)|0)&65535)/255|0)&65535)<<16|-16777216;ac=Y+4|0;ad=Z+g|0;_=3182}if((_|0)==3182){_=0;Q=(d[ad+3|0]|0)^255;O=((aa((d[ad]|0)^255,Q)|0)&65535)/255|0;P=((aa((d[ad+1|0]|0)^255,Q)|0)&65535)/255|0;c[ac>>2]=O&65535|(P&65535)<<8|((((aa((d[ad+2|0]|0)^255,Q)|0)&65535)/255|0)&65535)<<16|-16777216;ak=ac+4|0;al=ad+g|0}if((i|0)==0){break}else{N=al+a|0;l=ak+(k<<2)|0;b=i}}return}function cI(a,b,f,g,h,i,j,k,l){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=e[a+26>>1]|0;f=c[a+56>>2]|0;a=aa(g,j)|0;if((i|0)==0){return}j=(h|0)==0;m=aa(g,h)|0;n=l;l=b;b=i;while(1){i=b-1|0;if(j){o=n;p=l}else{q=n+m|0;r=n;s=h;t=l;while(1){u=s-1|0;v=(d[r+3|0]|0)^255;w=((aa((d[r]|0)^255,v)|0)&65535)/255|0;x=((aa((d[r+1|0]|0)^255,v)|0)&65535)/255|0;y=((aa((d[r+2|0]|0)^255,v)|0)&65535)/255|0;c[t>>2]=d[f+(w&65535)|0]|0|(d[f+(x&65535)|0]|0)<<8|(d[f+(y&65535)|0]|0)<<16|-16777216;if((u|0)==0){break}else{r=r+g|0;s=u;t=t+4|0}}o=q;p=l+(h<<2)|0}if((i|0)==0){break}else{n=o+a|0;l=p+(k<<2)|0;b=i}}return}function cJ(a,b,f,g,h,i,j,k,l){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=c[a+64>>2]|0;f=e[a+26>>1]|0;if((i|0)==0){return}a=(h|0)==0;m=aa(f,h)|0;n=l;l=b;b=i;while(1){i=b-1|0;if(a){o=n;p=l}else{q=n+m|0;r=n;s=h;t=l;while(1){u=s-1|0;c[t>>2]=c[c[g+((d[r]|0)<<2)>>2]>>2];if((u|0)==0){break}else{r=r+f|0;s=u;t=t+4|0}}o=q;p=l+(h<<2)|0}if((i|0)==0){break}else{n=o+j|0;l=p+(k<<2)|0;b=i}}return}function cK(a,b,e,f,g,h,i,j,k){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=c[a+64>>2]|0;a=(i|0)/2|0;if((h|0)==0){return}i=g>>>0>1;e=k;k=b;b=h;while(1){h=b-1|0;if(i){l=e;m=k;n=g;while(1){o=l+1|0;p=c[f+((d[l]|0)<<2)>>2]|0;c[m>>2]=c[p>>2];q=m+8|0;c[m+4>>2]=c[p+4>>2];p=n-2|0;if(p>>>0>1){l=o;m=q;n=p}else{r=o;s=q;t=p;break}}}else{r=e;s=k;t=g}if((t|0)==0){u=s;v=r}else{c[s>>2]=c[c[f+((d[r]|0)<<2)>>2]>>2];u=s+4|0;v=r+1|0}if((h|0)==0){break}else{e=v+a|0;k=u+(j<<2)|0;b=h}}return}function cL(a,b,e,f,g,h,i,j,k){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=c[a+64>>2]|0;a=(i|0)/4|0;if((h|0)==0){return}i=g>>>0>3;e=k;k=b;b=h;while(1){h=b-1|0;if(i){l=e;m=k;n=g;while(1){o=l+1|0;p=c[f+((d[l]|0)<<2)>>2]|0;c[m>>2]=c[p>>2];c[m+4>>2]=c[p+4>>2];c[m+8>>2]=c[p+8>>2];q=m+16|0;c[m+12>>2]=c[p+12>>2];p=n-4|0;if(p>>>0>3){l=o;m=q;n=p}else{r=o;s=q;t=p;break}}}else{r=e;s=k;t=g}do{if((t|0)==0){u=s;v=r}else{n=r+1|0;m=c[f+((d[r]|0)<<2)>>2]|0;if((t|0)==3){c[s>>2]=c[m>>2];w=m+4|0;x=s+4|0;y=3224}else if((t|0)==1){z=m;A=s}else if((t|0)==2){w=m;x=s;y=3224}else{u=s;v=n;break}if((y|0)==3224){y=0;c[x>>2]=c[w>>2];z=w+4|0;A=x+4|0}c[A>>2]=c[z>>2];u=A+4|0;v=n}}while(0);if((h|0)==0){break}else{e=v+a|0;k=u+(j<<2)|0;b=h}}return}function cM(a,b,e,f,g,h,i,j,k){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;f=c[a+64>>2]|0;a=(i|0)/8|0;if((h|0)==0){return}i=g>>>0>7;e=k;k=b;b=h;while(1){h=b-1|0;if(i){l=e;m=k;n=g;while(1){o=l+1|0;p=c[f+((d[l]|0)<<2)>>2]|0;c[m>>2]=c[p>>2];c[m+4>>2]=c[p+4>>2];c[m+8>>2]=c[p+8>>2];c[m+12>>2]=c[p+12>>2];c[m+16>>2]=c[p+16>>2];c[m+20>>2]=c[p+20>>2];c[m+24>>2]=c[p+24>>2];q=m+32|0;c[m+28>>2]=c[p+28>>2];p=n-8|0;if(p>>>0>7){l=o;m=q;n=p}else{r=o;s=q;t=p;break}}}else{r=e;s=k;t=g}L4266:do{if((t|0)==0){u=s;v=r}else{n=r+1|0;m=c[f+((d[r]|0)<<2)>>2]|0;switch(t|0){case 2:{w=m;x=s;y=3241;break};case 1:{z=m;A=s;break};case 3:{B=m;C=s;y=3240;break};case 5:{D=m;E=s;y=3238;break};case 4:{F=m;G=s;y=3239;break};case 6:{H=m;I=s;y=3237;break};case 7:{c[s>>2]=c[m>>2];H=m+4|0;I=s+4|0;y=3237;break};default:{u=s;v=n;break L4266}}if((y|0)==3237){y=0;c[I>>2]=c[H>>2];D=H+4|0;E=I+4|0;y=3238}if((y|0)==3238){y=0;c[E>>2]=c[D>>2];F=D+4|0;G=E+4|0;y=3239}if((y|0)==3239){y=0;c[G>>2]=c[F>>2];B=F+4|0;C=G+4|0;y=3240}if((y|0)==3240){y=0;c[C>>2]=c[B>>2];w=B+4|0;x=C+4|0;y=3241}if((y|0)==3241){y=0;c[x>>2]=c[w>>2];z=w+4|0;A=x+4|0}c[A>>2]=c[z>>2];u=A+4|0;v=n}}while(0);if((h|0)==0){break}else{e=v+a|0;k=u+(j<<2)|0;b=h}}return}function cN(a,b,d,f,g,h,i,j,k){a=a|0;b=b|0;d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=e[a+26>>1]|0;d=c[a+60>>2]|0;if((h|0)==0){return}a=(g|0)==0;l=(aa(f,g)|0)<<1;m=k;k=b;b=h;while(1){h=b-1|0;if(a){n=m;o=k}else{p=m+l|0;q=g;r=k;s=m;while(1){t=q-1|0;c[r>>2]=c[c[d+((e[s>>1]|0)>>>8<<2)>>2]>>2];if((t|0)==0){break}else{q=t;r=r+4|0;s=s+(f<<1)|0}}n=p;o=k+(g<<2)|0}if((h|0)==0){break}else{m=n+i|0;k=o+(j<<2)|0;b=h}}return}function cO(a,b,f,g,h,i,j,k,l){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=e[a+26>>1]|0;f=c[a+60>>2]|0;if((i|0)==0){return}a=(h|0)==0;m=aa(g,h)|0;n=l;l=b;b=i;while(1){i=b-1|0;if(a){o=n;p=l}else{q=n+m|0;r=n;s=h;t=l;while(1){u=s-1|0;c[t>>2]=((d[r+1|0]|0)<<24|16777215)&c[c[f+((d[r]|0)<<2)>>2]>>2];if((u|0)==0){break}else{r=r+g|0;s=u;t=t+4|0}}o=q;p=l+(h<<2)|0}if((i|0)==0){break}else{n=o+j|0;l=p+(k<<2)|0;b=i}}return}function cP(a,b,f,g,h,i,j,k,l){a=a|0;b=b|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=e[a+26>>1]|0;f=c[a+60>>2]|0;if((i|0)==0){return}a=(h|0)==0;m=aa(g,h)|0;n=l;l=b;b=i;while(1){i=b-1|0;if(a){o=n;p=l}else{q=n+m|0;r=n;s=h;t=l;while(1){u=s-1|0;c[t>>2]=c[c[f+((d[r]|0)<<2)>>2]>>2];if((u|0)==0){break}else{r=r+g|0;s=u;t=t+4|0}}o=q;p=l+(h<<2)|0}if((i|0)==0){break}else{n=o+j|0;l=p+(k<<2)|0;b=i}}return}function cQ(a,b,e,f,g,h,i,j,k){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=c[a+60>>2]|0;a=(i|0)/2|0;if((h|0)==0){return}i=g>>>0>1;e=k;k=b;b=h;while(1){h=b-1|0;if(i){l=e;m=k;n=g;while(1){o=l+1|0;p=c[f+((d[l]|0)<<2)>>2]|0;c[m>>2]=c[p>>2];q=m+8|0;c[m+4>>2]=c[p+4>>2];p=n-2|0;if(p>>>0>1){l=o;m=q;n=p}else{r=o;s=q;t=p;break}}}else{r=e;s=k;t=g}if((t|0)==0){u=s;v=r}else{c[s>>2]=c[c[f+((d[r]|0)<<2)>>2]>>2];u=s+4|0;v=r+1|0}if((h|0)==0){break}else{e=v+a|0;k=u+(j<<2)|0;b=h}}return}function cR(a,b,e,f,g,h,i,j,k){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=c[a+60>>2]|0;a=(i|0)/4|0;if((h|0)==0){return}i=g>>>0>3;e=k;k=b;b=h;while(1){h=b-1|0;if(i){l=e;m=k;n=g;while(1){o=l+1|0;p=c[f+((d[l]|0)<<2)>>2]|0;c[m>>2]=c[p>>2];c[m+4>>2]=c[p+4>>2];c[m+8>>2]=c[p+8>>2];q=m+16|0;c[m+12>>2]=c[p+12>>2];p=n-4|0;if(p>>>0>3){l=o;m=q;n=p}else{r=o;s=q;t=p;break}}}else{r=e;s=k;t=g}do{if((t|0)==0){u=s;v=r}else{n=r+1|0;m=c[f+((d[r]|0)<<2)>>2]|0;if((t|0)==3){c[s>>2]=c[m>>2];w=m+4|0;x=s+4|0;y=3294}else if((t|0)==2){w=m;x=s;y=3294}else if((t|0)==1){z=m;A=s}else{u=s;v=n;break}if((y|0)==3294){y=0;c[x>>2]=c[w>>2];z=w+4|0;A=x+4|0}c[A>>2]=c[z>>2];u=A+4|0;v=n}}while(0);if((h|0)==0){break}else{e=v+a|0;k=u+(j<<2)|0;b=h}}return}function cS(a,b,e,f,g,h,i,j,k){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;f=c[a+60>>2]|0;a=(i|0)/8|0;if((h|0)==0){return}i=g>>>0>7;e=k;k=b;b=h;while(1){h=b-1|0;if(i){l=e;m=k;n=g;while(1){o=l+1|0;p=c[f+((d[l]|0)<<2)>>2]|0;c[m>>2]=c[p>>2];c[m+4>>2]=c[p+4>>2];c[m+8>>2]=c[p+8>>2];c[m+12>>2]=c[p+12>>2];c[m+16>>2]=c[p+16>>2];c[m+20>>2]=c[p+20>>2];c[m+24>>2]=c[p+24>>2];q=m+32|0;c[m+28>>2]=c[p+28>>2];p=n-8|0;if(p>>>0>7){l=o;m=q;n=p}else{r=o;s=q;t=p;break}}}else{r=e;s=k;t=g}L4365:do{if((t|0)==0){u=s;v=r}else{n=r+1|0;m=c[f+((d[r]|0)<<2)>>2]|0;switch(t|0){case 7:{c[s>>2]=c[m>>2];w=m+4|0;x=s+4|0;y=3307;break};case 6:{w=m;x=s;y=3307;break};case 4:{z=m;A=s;y=3309;break};case 3:{B=m;C=s;y=3310;break};case 5:{D=m;E=s;y=3308;break};case 2:{F=m;G=s;y=3311;break};case 1:{H=m;I=s;break};default:{u=s;v=n;break L4365}}if((y|0)==3307){y=0;c[x>>2]=c[w>>2];D=w+4|0;E=x+4|0;y=3308}if((y|0)==3308){y=0;c[E>>2]=c[D>>2];z=D+4|0;A=E+4|0;y=3309}if((y|0)==3309){y=0;c[A>>2]=c[z>>2];B=z+4|0;C=A+4|0;y=3310}if((y|0)==3310){y=0;c[C>>2]=c[B>>2];F=B+4|0;G=C+4|0;y=3311}if((y|0)==3311){y=0;c[G>>2]=c[F>>2];H=F+4|0;I=G+4|0}c[I>>2]=c[H>>2];u=I+4|0;v=n}}while(0);if((h|0)==0){break}else{e=v+a|0;k=u+(j<<2)|0;b=h}}return}function cT(a,b,e,f,g,h,j,k,l){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0;f=i;i=i+768|0;e=f|0;m=f+8|0;n=f+16|0;o=f+24|0;p=f+32|0;q=f+40|0;r=f+48|0;s=f+56|0;t=f+64|0;u=f+72|0;v=f+80|0;w=f+88|0;x=f+96|0;y=f+104|0;z=f+112|0;A=f+120|0;B=f+128|0;C=f+136|0;D=f+144|0;E=f+152|0;F=f+160|0;G=f+168|0;H=f+176|0;I=f+184|0;J=f+192|0;K=f+200|0;L=f+208|0;M=f+216|0;N=f+224|0;O=f+232|0;P=f+240|0;Q=f+248|0;R=f+256|0;S=f+264|0;T=f+272|0;U=f+280|0;V=f+288|0;W=f+296|0;X=f+304|0;Y=f+312|0;Z=f+320|0;_=f+328|0;$=f+336|0;aa=f+344|0;ab=f+352|0;ac=f+360|0;ad=f+368|0;ae=f+376|0;af=f+384|0;ag=f+392|0;ah=f+400|0;ai=f+408|0;aj=f+416|0;ak=f+424|0;al=f+432|0;am=f+440|0;an=f+448|0;ao=f+456|0;ap=f+464|0;aq=f+472|0;ar=f+480|0;as=f+488|0;at=f+496|0;au=f+504|0;av=f+512|0;aw=f+520|0;ax=f+528|0;ay=f+536|0;az=f+544|0;aA=f+552|0;aB=f+560|0;aC=f+568|0;aD=f+576|0;aE=f+584|0;aF=f+592|0;aG=f+600|0;aH=f+608|0;aI=f+616|0;aJ=f+624|0;aK=f+632|0;aL=f+640|0;aM=f+648|0;aN=f+656|0;aO=f+664|0;aP=f+672|0;aQ=f+680|0;aR=f+688|0;aS=f+696|0;aT=f+704|0;aU=f+712|0;aV=f+720|0;aW=f+728|0;aX=f+736|0;aY=f+744|0;aZ=f+752|0;a_=f+760|0;a$=k+g|0;a0=b+(a$<<2)|0;a1=a$<<1;a2=b+(a1<<2)|0;a3=b+(a$+a1<<2)|0;a1=(k<<2)+(g*3|0)|0;k=(j*18|0|0)/4|0;do{if((h&3|0)==0){if((g&3|0)!=0){break}if(h>>>0<=3){i=f;return}j=g>>>2;a$=a+68|0;a4=j<<2;a5=j*18|0;a6=a0;a7=a2;a8=a3;a9=l;ba=h;bb=b;while(1){bc=bb;bd=j;be=a9;bf=a8;bg=a7;bh=a6;while(1){bi=d[be+16|0]|0;bj=d[be+17|0]|0;eb(c[a$>>2]|0,d[be]|0,bi,bj,e,m,n);c[bc>>2]=c[e>>2]|c[m>>2]<<8|c[n>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+1|0]|0,bi,bj,o,p,q);c[bc+4>>2]=c[o>>2]|c[p>>2]<<8|c[q>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+2|0]|0,bi,bj,r,s,t);c[bc+8>>2]=c[r>>2]|c[s>>2]<<8|c[t>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+3|0]|0,bi,bj,u,v,w);c[bc+12>>2]=c[u>>2]|c[v>>2]<<8|c[w>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+4|0]|0,bi,bj,x,y,z);c[bh>>2]=c[x>>2]|c[y>>2]<<8|c[z>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+5|0]|0,bi,bj,A,B,C);c[bh+4>>2]=c[A>>2]|c[B>>2]<<8|c[C>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+6|0]|0,bi,bj,D,E,F);c[bh+8>>2]=c[D>>2]|c[E>>2]<<8|c[F>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+7|0]|0,bi,bj,G,H,I);c[bh+12>>2]=c[G>>2]|c[H>>2]<<8|c[I>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+8|0]|0,bi,bj,J,K,L);c[bg>>2]=c[J>>2]|c[K>>2]<<8|c[L>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+9|0]|0,bi,bj,M,N,O);c[bg+4>>2]=c[M>>2]|c[N>>2]<<8|c[O>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+10|0]|0,bi,bj,P,Q,R);c[bg+8>>2]=c[P>>2]|c[Q>>2]<<8|c[R>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+11|0]|0,bi,bj,S,T,U);c[bg+12>>2]=c[S>>2]|c[T>>2]<<8|c[U>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+12|0]|0,bi,bj,V,W,X);c[bf>>2]=c[V>>2]|c[W>>2]<<8|c[X>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+13|0]|0,bi,bj,Y,Z,_);c[bf+4>>2]=c[Y>>2]|c[Z>>2]<<8|c[_>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+14|0]|0,bi,bj,$,aa,ab);c[bf+8>>2]=c[$>>2]|c[aa>>2]<<8|c[ab>>2]<<16|-16777216;eb(c[a$>>2]|0,d[be+15|0]|0,bi,bj,ac,ad,ae);c[bf+12>>2]=c[ac>>2]|c[ad>>2]<<8|c[ae>>2]<<16|-16777216;bj=bd-1|0;if((bj|0)==0){break}else{bc=bc+16|0;bd=bj;be=be+18|0;bf=bf+16|0;bg=bg+16|0;bh=bh+16|0}}bh=ba-4|0;if(bh>>>0>3){a6=a6+(a4+a1<<2)|0;a7=a7+(a4+a1<<2)|0;a8=a8+(a4+a1<<2)|0;a9=a9+(a5+k)|0;ba=bh;bb=bb+(a4+a1<<2)|0}else{break}}i=f;return}}while(0);if((h|0)==0){i=f;return}ae=(g|0)==0;ad=a+68|0;a=a0;a0=a2;a2=a3;a3=l;l=h;h=b;while(1){L4401:do{if(ae){bk=a;bl=a0;bm=a2;bn=a3;bo=h}else{b=a;ac=a0;ab=a2;aa=a3;$=g;_=h;while(1){Z=d[aa+16|0]|0;Y=d[aa+17|0]|0;if(($|0)==2){bp=3338}else if(($|0)==3){bp=3333}else if(($|0)!=1){if((l|0)==3){bp=3330}else if((l|0)==2){bp=3331}else if((l|0)!=1){eb(c[ad>>2]|0,d[aa+15|0]|0,Z,Y,af,ag,ah);c[ab+12>>2]=c[af>>2]|c[ag>>2]<<8|c[ah>>2]<<16|-16777216;bp=3330}if((bp|0)==3330){bp=0;eb(c[ad>>2]|0,d[aa+11|0]|0,Z,Y,ai,aj,ak);c[ac+12>>2]=c[ai>>2]|c[aj>>2]<<8|c[ak>>2]<<16|-16777216;bp=3331}if((bp|0)==3331){bp=0;eb(c[ad>>2]|0,d[aa+7|0]|0,Z,Y,al,am,an);c[b+12>>2]=c[al>>2]|c[am>>2]<<8|c[an>>2]<<16|-16777216}eb(c[ad>>2]|0,d[aa+3|0]|0,Z,Y,ao,ap,aq);c[_+12>>2]=c[ao>>2]|c[ap>>2]<<8|c[aq>>2]<<16|-16777216;bp=3333}if((bp|0)==3333){bp=0;if((l|0)==2){bp=3336}else if((l|0)==3){bp=3335}else if((l|0)!=1){eb(c[ad>>2]|0,d[aa+14|0]|0,Z,Y,ar,as,at);c[ab+8>>2]=c[ar>>2]|c[as>>2]<<8|c[at>>2]<<16|-16777216;bp=3335}if((bp|0)==3335){bp=0;eb(c[ad>>2]|0,d[aa+10|0]|0,Z,Y,au,av,aw);c[ac+8>>2]=c[au>>2]|c[av>>2]<<8|c[aw>>2]<<16|-16777216;bp=3336}if((bp|0)==3336){bp=0;eb(c[ad>>2]|0,d[aa+6|0]|0,Z,Y,ax,ay,az);c[b+8>>2]=c[ax>>2]|c[ay>>2]<<8|c[az>>2]<<16|-16777216}eb(c[ad>>2]|0,d[aa+2|0]|0,Z,Y,aA,aB,aC);c[_+8>>2]=c[aA>>2]|c[aB>>2]<<8|c[aC>>2]<<16|-16777216;bp=3338}if((bp|0)==3338){bp=0;if((l|0)==2){bp=3341}else if((l|0)==3){bp=3340}else if((l|0)!=1){eb(c[ad>>2]|0,d[aa+13|0]|0,Z,Y,aD,aE,aF);c[ab+4>>2]=c[aD>>2]|c[aE>>2]<<8|c[aF>>2]<<16|-16777216;bp=3340}if((bp|0)==3340){bp=0;eb(c[ad>>2]|0,d[aa+9|0]|0,Z,Y,aG,aH,aI);c[ac+4>>2]=c[aG>>2]|c[aH>>2]<<8|c[aI>>2]<<16|-16777216;bp=3341}if((bp|0)==3341){bp=0;eb(c[ad>>2]|0,d[aa+5|0]|0,Z,Y,aJ,aK,aL);c[b+4>>2]=c[aJ>>2]|c[aK>>2]<<8|c[aL>>2]<<16|-16777216}eb(c[ad>>2]|0,d[aa+1|0]|0,Z,Y,aM,aN,aO);c[_+4>>2]=c[aM>>2]|c[aN>>2]<<8|c[aO>>2]<<16|-16777216}if((l|0)==2){bp=3346}else if((l|0)==3){bp=3345}else if((l|0)!=1){eb(c[ad>>2]|0,d[aa+12|0]|0,Z,Y,aP,aQ,aR);c[ab>>2]=c[aP>>2]|c[aQ>>2]<<8|c[aR>>2]<<16|-16777216;bp=3345}if((bp|0)==3345){bp=0;eb(c[ad>>2]|0,d[aa+8|0]|0,Z,Y,aS,aT,aU);c[ac>>2]=c[aS>>2]|c[aT>>2]<<8|c[aU>>2]<<16|-16777216;bp=3346}if((bp|0)==3346){bp=0;eb(c[ad>>2]|0,d[aa+4|0]|0,Z,Y,aV,aW,aX);c[b>>2]=c[aV>>2]|c[aW>>2]<<8|c[aX>>2]<<16|-16777216}eb(c[ad>>2]|0,d[aa]|0,Z,Y,aY,aZ,a_);c[_>>2]=c[aY>>2]|c[aZ>>2]<<8|c[a_>>2]<<16|-16777216;if($>>>0<4){break}Y=_+16|0;Z=b+16|0;X=ac+16|0;W=ab+16|0;V=$-4|0;U=aa+18|0;if((V|0)==0){bk=Z;bl=X;bm=W;bn=U;bo=Y;break L4401}else{b=Z;ac=X;ab=W;aa=U;$=V;_=Y}}bk=b+($<<2)|0;bl=ac+($<<2)|0;bm=ab+($<<2)|0;bn=aa+18|0;bo=_+($<<2)|0}}while(0);if(l>>>0<5){bp=3355;break}Y=l-4|0;if((Y|0)==0){bp=3357;break}else{a=bk+(a1<<2)|0;a0=bl+(a1<<2)|0;a2=bm+(a1<<2)|0;a3=bn+k|0;l=Y;h=bo+(a1<<2)|0}}if((bp|0)==3355){i=f;return}else if((bp|0)==3357){i=f;return}}function cU(a,b,e,f,g,h,j,k,l){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0;f=i;i=i+384|0;e=f|0;m=f+8|0;n=f+16|0;o=f+24|0;p=f+32|0;q=f+40|0;r=f+48|0;s=f+56|0;t=f+64|0;u=f+72|0;v=f+80|0;w=f+88|0;x=f+96|0;y=f+104|0;z=f+112|0;A=f+120|0;B=f+128|0;C=f+136|0;D=f+144|0;E=f+152|0;F=f+160|0;G=f+168|0;H=f+176|0;I=f+184|0;J=f+192|0;K=f+200|0;L=f+208|0;M=f+216|0;N=f+224|0;O=f+232|0;P=f+240|0;Q=f+248|0;R=f+256|0;S=f+264|0;T=f+272|0;U=f+280|0;V=f+288|0;W=f+296|0;X=f+304|0;Y=f+312|0;Z=f+320|0;_=f+328|0;$=f+336|0;aa=f+344|0;ab=f+352|0;ac=f+360|0;ad=f+368|0;ae=f+376|0;af=b+(k+g<<2)|0;ag=(k<<1)+g|0;k=(j*10|0|0)/4|0;do{if((h&3|0)==0){if((g&1|0)!=0){break}if(h>>>0<=1){i=f;return}j=g>>>2;ah=a+68|0;ai=j<<2;aj=j*10|0;ak=af;al=l;am=h;an=b;while(1){ao=an;ap=j;aq=al;ar=ak;while(1){as=d[aq+8|0]|0;at=d[aq+9|0]|0;eb(c[ah>>2]|0,d[aq]|0,as,at,e,m,n);c[ao>>2]=c[e>>2]|c[m>>2]<<8|c[n>>2]<<16|-16777216;eb(c[ah>>2]|0,d[aq+1|0]|0,as,at,o,p,q);c[ao+4>>2]=c[o>>2]|c[p>>2]<<8|c[q>>2]<<16|-16777216;eb(c[ah>>2]|0,d[aq+2|0]|0,as,at,r,s,t);c[ao+8>>2]=c[r>>2]|c[s>>2]<<8|c[t>>2]<<16|-16777216;eb(c[ah>>2]|0,d[aq+3|0]|0,as,at,u,v,w);c[ao+12>>2]=c[u>>2]|c[v>>2]<<8|c[w>>2]<<16|-16777216;eb(c[ah>>2]|0,d[aq+4|0]|0,as,at,x,y,z);c[ar>>2]=c[x>>2]|c[y>>2]<<8|c[z>>2]<<16|-16777216;eb(c[ah>>2]|0,d[aq+5|0]|0,as,at,A,B,C);c[ar+4>>2]=c[A>>2]|c[B>>2]<<8|c[C>>2]<<16|-16777216;eb(c[ah>>2]|0,d[aq+6|0]|0,as,at,D,E,F);c[ar+8>>2]=c[D>>2]|c[E>>2]<<8|c[F>>2]<<16|-16777216;eb(c[ah>>2]|0,d[aq+7|0]|0,as,at,G,H,I);c[ar+12>>2]=c[G>>2]|c[H>>2]<<8|c[I>>2]<<16|-16777216;at=ap-1|0;if((at|0)==0){break}else{ao=ao+16|0;ap=at;aq=aq+10|0;ar=ar+16|0}}ar=am-2|0;if(ar>>>0>1){ak=ak+(ai+ag<<2)|0;al=al+(aj+k)|0;am=ar;an=an+(ai+ag<<2)|0}else{break}}i=f;return}}while(0);if((h|0)==0){i=f;return}I=(g|0)==0;H=a+68|0;a=af;af=l;l=h;h=b;while(1){L4465:do{if(I){au=a;av=af;aw=h}else{b=(l|0)==1;G=a;F=af;E=g;D=h;while(1){C=d[F+8|0]|0;B=d[F+9|0]|0;if((E|0)==3){ax=3373}else if((E|0)==2){ax=3376}else if((E|0)!=1){if(!b){eb(c[H>>2]|0,d[F+7|0]|0,C,B,J,K,L);c[G+12>>2]=c[J>>2]|c[K>>2]<<8|c[L>>2]<<16|-16777216}eb(c[H>>2]|0,d[F+3|0]|0,C,B,M,N,O);c[D+12>>2]=c[M>>2]|c[N>>2]<<8|c[O>>2]<<16|-16777216;ax=3373}if((ax|0)==3373){ax=0;if(!b){eb(c[H>>2]|0,d[F+6|0]|0,C,B,P,Q,R);c[G+8>>2]=c[P>>2]|c[Q>>2]<<8|c[R>>2]<<16|-16777216}eb(c[H>>2]|0,d[F+2|0]|0,C,B,S,T,U);c[D+8>>2]=c[S>>2]|c[T>>2]<<8|c[U>>2]<<16|-16777216;ax=3376}if((ax|0)==3376){ax=0;if(!b){eb(c[H>>2]|0,d[F+5|0]|0,C,B,V,W,X);c[G+4>>2]=c[V>>2]|c[W>>2]<<8|c[X>>2]<<16|-16777216}eb(c[H>>2]|0,d[F+1|0]|0,C,B,Y,Z,_);c[D+4>>2]=c[Y>>2]|c[Z>>2]<<8|c[_>>2]<<16|-16777216}if(!b){eb(c[H>>2]|0,d[F+4|0]|0,C,B,$,aa,ab);c[G>>2]=c[$>>2]|c[aa>>2]<<8|c[ab>>2]<<16|-16777216}eb(c[H>>2]|0,d[F]|0,C,B,ac,ad,ae);c[D>>2]=c[ac>>2]|c[ad>>2]<<8|c[ae>>2]<<16|-16777216;if(E>>>0<4){break}B=D+16|0;C=G+16|0;A=E-4|0;z=F+10|0;if((A|0)==0){au=C;av=z;aw=B;break L4465}else{G=C;F=z;E=A;D=B}}au=G+(E<<2)|0;av=F+10|0;aw=D+(E<<2)|0}}while(0);if(l>>>0<3){ax=3389;break}b=l-2|0;if((b|0)==0){ax=3391;break}else{a=au+(ag<<2)|0;af=av+k|0;l=b;h=aw+(ag<<2)|0}}if((ax|0)==3389){i=f;return}else if((ax|0)==3391){i=f;return}}function cV(a,b,e,f,g,h,j,k,l){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;f=i;i=i+168|0;e=f|0;m=f+8|0;n=f+16|0;o=f+24|0;p=f+32|0;q=f+40|0;r=f+48|0;s=f+56|0;t=f+64|0;u=f+72|0;v=f+80|0;w=f+88|0;x=f+96|0;y=f+104|0;z=f+112|0;A=f+120|0;B=f+128|0;C=f+136|0;D=f+144|0;E=f+152|0;F=f+160|0;G=g>>>2;H=a+68|0;a=g&3;g=(a|0)==0;I=a|4;J=G*6|0;K=G<<2;L=K-4|0;M=b;b=h;h=l;while(1){l=h+J|0;N=M;O=G;P=h;while(1){Q=d[P+4|0]|0;R=d[P+5|0]|0;eb(c[H>>2]|0,d[P]|0,Q,R,e,m,n);c[N>>2]=c[e>>2]|c[m>>2]<<8|c[n>>2]<<16|-16777216;eb(c[H>>2]|0,d[P+1|0]|0,Q,R,o,p,q);c[N+4>>2]=c[o>>2]|c[p>>2]<<8|c[q>>2]<<16|-16777216;eb(c[H>>2]|0,d[P+2|0]|0,Q,R,r,s,t);c[N+8>>2]=c[r>>2]|c[s>>2]<<8|c[t>>2]<<16|-16777216;eb(c[H>>2]|0,d[P+3|0]|0,Q,R,u,v,w);c[N+12>>2]=c[u>>2]|c[v>>2]<<8|c[w>>2]<<16|-16777216;R=O-1|0;if((R|0)==0){break}else{N=N+16|0;O=R;P=P+6|0}}P=M+(K<<2)|0;if(g){S=P;T=l}else{O=d[h+(J+4)|0]|0;N=d[h+(J+5)|0]|0;if((a|0)==3){eb(c[H>>2]|0,d[h+(J+2)|0]|0,O,N,x,y,z);c[M+((K|2)<<2)>>2]=c[x>>2]|c[y>>2]<<8|c[z>>2]<<16|-16777216;U=3398}else if((a|0)==1){U=3399}else if((a|0)==2){U=3398}if((U|0)==3398){U=0;eb(c[H>>2]|0,d[h+(J|1)|0]|0,O,N,A,B,C);c[M+((K|1)<<2)>>2]=c[A>>2]|c[B>>2]<<8|c[C>>2]<<16|-16777216;U=3399}if((U|0)==3399){U=0;eb(c[H>>2]|0,d[l]|0,O,N,D,E,F);c[P>>2]=c[D>>2]|c[E>>2]<<8|c[F>>2]<<16|-16777216}S=M+(L+I<<2)|0;T=h+(J+6)|0}P=b-1|0;if((P|0)==0){break}else{M=S+(k<<2)|0;b=P;h=T+j|0}}i=f;return}function cW(a,b,e,f,g,h,j,k,l){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0;f=i;i=i+216|0;e=f|0;m=f+8|0;n=f+16|0;o=f+24|0;p=f+32|0;q=f+40|0;r=f+48|0;s=f+56|0;t=f+64|0;u=f+72|0;v=f+80|0;w=f+88|0;x=f+96|0;y=f+104|0;z=f+112|0;A=f+120|0;B=f+128|0;C=f+136|0;D=f+144|0;E=f+152|0;F=f+160|0;G=f+168|0;H=f+176|0;I=f+184|0;J=f+192|0;K=f+200|0;L=f+208|0;M=(k<<1)+g|0;N=((j|0)/2|0)*6|0;if(h>>>0>1){j=g>>>0>1;O=a+68|0;P=b+(k+g<<2)|0;k=l;Q=h;R=b;while(1){if(j){S=P;T=k;U=g;V=R;while(1){W=d[T+4|0]|0;X=d[T+5|0]|0;eb(c[O>>2]|0,d[T]|0,W,X,e,m,n);c[V>>2]=c[e>>2]|c[m>>2]<<8|c[n>>2]<<16|-16777216;eb(c[O>>2]|0,d[T+1|0]|0,W,X,o,p,q);c[V+4>>2]=c[o>>2]|c[p>>2]<<8|c[q>>2]<<16|-16777216;eb(c[O>>2]|0,d[T+2|0]|0,W,X,r,s,t);c[S>>2]=c[r>>2]|c[s>>2]<<8|c[t>>2]<<16|-16777216;eb(c[O>>2]|0,d[T+3|0]|0,W,X,u,v,w);c[S+4>>2]=c[u>>2]|c[v>>2]<<8|c[w>>2]<<16|-16777216;X=V+8|0;W=S+8|0;Y=T+6|0;Z=U-2|0;if(Z>>>0>1){S=W;T=Y;U=Z;V=X}else{_=W;$=Y;aa=Z;ab=X;break}}}else{_=P;$=k;aa=g;ab=R}if((aa|0)==1){V=d[$+4|0]|0;U=d[$+5|0]|0;eb(c[O>>2]|0,d[$]|0,V,U,x,y,z);c[ab>>2]=c[x>>2]|c[y>>2]<<8|c[z>>2]<<16|-16777216;eb(c[O>>2]|0,d[$+2|0]|0,V,U,A,B,C);c[_>>2]=c[A>>2]|c[B>>2]<<8|c[C>>2]<<16|-16777216;ac=ab+4|0;ad=$+6|0;ae=_+4|0}else{ac=ab;ad=$;ae=_}U=ac+(M<<2)|0;V=ad+N|0;T=Q-2|0;if(T>>>0>1){P=ae+(M<<2)|0;k=V;Q=T;R=U}else{af=V;ag=T;ah=U;break}}}else{af=l;ag=h;ah=b}if((ag|0)!=1){i=f;return}if(g>>>0>1){ag=a+68|0;b=af;h=g;l=ah;while(1){R=d[b+4|0]|0;Q=d[b+5|0]|0;eb(c[ag>>2]|0,d[b]|0,R,Q,D,E,F);c[l>>2]=c[D>>2]|c[E>>2]<<8|c[F>>2]<<16|-16777216;eb(c[ag>>2]|0,d[b+1|0]|0,R,Q,G,H,I);c[l+4>>2]=c[G>>2]|c[H>>2]<<8|c[I>>2]<<16|-16777216;Q=l+8|0;R=b+6|0;k=h-2|0;if(k>>>0>1){b=R;h=k;l=Q}else{ai=R;aj=k;ak=Q;break}}}else{ai=af;aj=g;ak=ah}if((aj|0)!=1){i=f;return}eb(c[a+68>>2]|0,d[ai]|0,d[ai+4|0]|0,d[ai+5|0]|0,J,K,L);c[ak>>2]=c[J>>2]|c[K>>2]<<8|c[L>>2]<<16|-16777216;i=f;return}function cX(a,b,e,f,g,h,j,k,l){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;f=i;i=i+72|0;e=f|0;m=f+8|0;n=f+16|0;o=f+24|0;p=f+32|0;q=f+40|0;r=f+48|0;s=f+56|0;t=f+64|0;u=(j<<2|0)/2|0;j=g>>>1;v=a+68|0;a=(g&1|0)==0;g=j<<2;w=j<<1;x=b;b=h;h=l;while(1){l=h+g|0;y=x;z=j;A=h;while(1){B=d[A+2|0]|0;C=d[A+3|0]|0;eb(c[v>>2]|0,d[A]|0,B,C,e,m,n);c[y>>2]=c[e>>2]|c[m>>2]<<8|c[n>>2]<<16|-16777216;eb(c[v>>2]|0,d[A+1|0]|0,B,C,o,p,q);c[y+4>>2]=c[o>>2]|c[p>>2]<<8|c[q>>2]<<16|-16777216;C=z-1|0;if((C|0)==0){break}else{y=y+8|0;z=C;A=A+4|0}}A=x+(w<<2)|0;if(a){D=A;E=l}else{eb(c[v>>2]|0,d[l]|0,d[h+(g|2)|0]|0,d[h+(g|3)|0]|0,r,s,t);c[A>>2]=c[r>>2]|c[s>>2]<<8|c[t>>2]<<16|-16777216;D=x+((w|1)<<2)|0;E=h+(g+4)|0}A=b-1|0;if((A|0)==0){break}else{x=D+(k<<2)|0;b=A;h=E+u|0}}i=f;return}function cY(a,b,e,f,g,h,j,k,l){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;f=i;i=i+72|0;e=f|0;m=f+8|0;n=f+16|0;o=f+24|0;p=f+32|0;q=f+40|0;r=f+48|0;s=f+56|0;t=f+64|0;if(h>>>0>1){u=((j|0)/2|0)<<2;j=a+68|0;v=g+1+(k<<1)|0;w=g-1|0;x=g<<2;y=b+(k+g<<2)|0;k=l;z=h;A=b;while(1){B=A;C=g;D=k;E=y;while(1){F=d[D+2|0]|0;G=d[D+3|0]|0;eb(c[j>>2]|0,d[D]|0,F,G,e,m,n);c[B>>2]=c[e>>2]|c[m>>2]<<8|c[n>>2]<<16|-16777216;eb(c[j>>2]|0,d[D+1|0]|0,F,G,o,p,q);c[E>>2]=c[o>>2]|c[p>>2]<<8|c[q>>2]<<16|-16777216;G=C-1|0;if((G|0)==0){break}else{B=B+4|0;C=G;D=D+4|0;E=E+4|0}}E=A+(w+v<<2)|0;D=k+(x+u)|0;C=z-2|0;if(C>>>0>1){y=y+(w+v<<2)|0;k=D;z=C;A=E}else{H=D;I=C;J=E;break}}}else{H=l;I=h;J=b}if((I|0)!=1){i=f;return}I=a+68|0;a=J;J=g;g=H;while(1){eb(c[I>>2]|0,d[g]|0,d[g+2|0]|0,d[g+3|0]|0,r,s,t);c[a>>2]=c[r>>2]|c[s>>2]<<8|c[t>>2]<<16|-16777216;H=J-1|0;if((H|0)==0){break}else{a=a+4|0;J=H;g=g+4|0}}i=f;return}function cZ(a,b,e,f,g,h,j,k,l){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+24|0;e=f|0;m=f+8|0;n=f+16|0;o=a+68|0;a=b;b=l;l=h;while(1){h=a;p=g;q=b;while(1){eb(c[o>>2]|0,d[q]|0,d[q+1|0]|0,d[q+2|0]|0,e,m,n);c[h>>2]=c[e>>2]|c[m>>2]<<8|c[n>>2]<<16|-16777216;r=p-1|0;if((r|0)==0){break}else{h=h+4|0;p=r;q=q+3|0}}q=l-1|0;if((q|0)==0){break}else{a=a+(g+k<<2)|0;b=b+((g+j|0)*3|0)|0;l=q}}i=f;return}function c_(b,e,f,h,j,k,l,m,n){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;h=i;i=i+48|0;f=h|0;o=h+8|0;p=h+16|0;q=h+24|0;r=h+32|0;s=h+40|0;t=l*3|0;if((k|0)==0){i=h;return}l=(j|0)==0;u=b+72|0;b=j*3|0;v=e;e=n;n=k;while(1){k=n-1|0;if(l){w=v;x=e}else{y=e+b|0;z=j;A=v;B=e;while(1){C=z-1|0;d8(c[u>>2]|0,d[B]|0,a[B+1|0]|0,a[B+2|0]|0,f,o,p);d9(c[u>>2]|0,+g[f>>2],+g[o>>2],+g[p>>2],q,r,s);c[A>>2]=c[q>>2]|c[r>>2]<<8|c[s>>2]<<16|-16777216;if((C|0)==0){break}else{z=C;A=A+4|0;B=B+3|0}}w=v+(j<<2)|0;x=y}if((k|0)==0){break}else{v=w+(m<<2)|0;e=x+t|0;n=k}}i=h;return}function c$(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=a[b]|0;g=f<<24>>24;if((g|0)==114){i=e;return((a[b+1|0]|0)==43?2:0)|0}else if((g|0)==119|(g|0)==97){h=f<<24>>24==119?578:66;i=e;return h|0}else{cg(0,d,30744,(d=i,i=i+8|0,c[d>>2]=b,d)|0);i=d;h=-1;i=e;return h|0}return 0}function c0(d,f,g,h,j,k,l,m,n,o){d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;p=i;i=i+8|0;q=p|0;r=a[f]|0;s=r<<24>>24;if((s|0)==114){t=(a[f+1|0]|0)==43?2:0}else if((s|0)==119|(s|0)==97){t=r<<24>>24==119?578:66}else{cg(0,44240,30744,(u=i,i=i+8|0,c[u>>2]=f,u)|0);i=u;v=0;i=p;return v|0}r=dT((ht(d|0)|0)+697|0)|0;s=r;if((r|0)==0){cg(g,44240,31104,(u=i,i=i+8|0,c[u>>2]=d,u)|0);i=u;v=0;i=p;return v|0}dW(r,0,696);w=r+696|0;c[r>>2]=w;hw(w|0,d|0)|0;w=r+8|0;c[w>>2]=t&2;b[r+448>>1]=-1;x=r+456|0;c[x>>2]=0;c[x+4>>2]=0;c[r+452>>2]=-1;c[r+444>>2]=-1;x=r+628|0;c[x>>2]=g;if((h|0)==0|(j|0)==0|(k|0)==0|(l|0)==0|(m|0)==0){cg(g,44240,29112,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;v=0;i=p;return v|0}g=r+632|0;c[g>>2]=h;h=r+636|0;c[h>>2]=j;j=r+640|0;c[j>>2]=k;c[r+644>>2]=l;c[r+648>>2]=m;m=r+620|0;c[m>>2]=(n|0)==0?2:n;c[r+624>>2]=(o|0)==0?4:o;em(s);o=r+12|0;n=(t|0)==0;l=n?2049:1;c[o>>2]=l;if((t|0)==2|(t|0)==0){k=l|32768;c[o>>2]=k;y=k}else{y=l}l=a[f]|0;L4607:do{if(l<<24>>24!=0){k=(t&64|0)==0;if(n){z=f;A=l;B=y}else{C=f;D=l;E=y;while(1){L4612:do{switch(D<<24>>24|0){case 72:{F=E&-4|2;c[o>>2]=F;G=F;break};case 66:{F=E&-4|1;c[o>>2]=F;G=F;break};case 76:{F=E&-4|2;c[o>>2]=F;G=F;break};case 104:{F=E|65536;c[o>>2]=F;G=F;break};case 56:{if(k){G=E;break L4612}F=E|524288;c[o>>2]=F;G=F;break};case 98:{if(k){G=E;break L4612}F=E|128;c[o>>2]=F;G=F;break};default:{G=E}}}while(0);F=C+1|0;H=a[F]|0;if(H<<24>>24==0){break L4607}else{C=F;D=H;E=G}}}while(1){L4624:do{switch(A<<24>>24|0){case 72:{E=B&-4|2;c[o>>2]=E;I=E;break};case 76:{E=B&-4|2;c[o>>2]=E;I=E;break};case 99:{E=B&-32769;c[o>>2]=E;I=E;break};case 66:{E=B&-4|1;c[o>>2]=E;I=E;break};case 104:{E=B|65536;c[o>>2]=E;I=E;break};case 67:{E=B|32768;c[o>>2]=E;I=E;break};case 109:{E=B&-2049;c[o>>2]=E;I=E;break};case 98:{if(k){I=B;break L4624}E=B|128;c[o>>2]=E;I=E;break};case 56:{if(k){I=B;break L4624}E=B|524288;c[o>>2]=E;I=E;break};case 77:{E=B|2048;c[o>>2]=E;I=E;break};default:{I=B}}}while(0);E=z+1|0;D=a[E]|0;if(D<<24>>24==0){break L4607}else{z=E;A=D;B=I}}}}while(0);L4639:do{if((t&512|0)==0){I=r+424|0;if((be[c[g>>2]&63](c[x>>2]|0,I,8)|0)!=8){J=3498;break}B=b[I>>1]|0;I=B&65535;if((B<<16>>16|0)==19789){c[o>>2]=c[o>>2]|128}else if(!((B<<16>>16|0)==18761|(B<<16>>16|0)==20549)){cg(c[x>>2]|0,d,25400,(u=i,i=i+16|0,c[u>>2]=I,c[u+8>>2]=I,u)|0);i=u;break}I=r+426|0;if((c[o>>2]&128|0)!=0){ds(I)}B=b[I>>1]|0;I=B&65535;if((B-42&65535)>=2){cg(c[x>>2]|0,d,24008,(u=i,i=i+16|0,c[u>>2]=I,c[u+8>>2]=I,u)|0);i=u;break}do{if(B<<16>>16==42){I=c[o>>2]|0;if((I&128|0)==0){K=I}else{dt(r+428|0);K=c[o>>2]|0}b[r+440>>1]=8;L=K}else{I=r+432|0;if((be[c[g>>2]&63](c[x>>2]|0,I,8)|0)!=8){cg(c[x>>2]|0,d,27768,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;break L4639}A=r+428|0;if((c[o>>2]&128|0)!=0){ds(A);du(I)}I=b[A>>1]|0;A=I&65535;if(I<<16>>16!=8){cg(c[x>>2]|0,d,23248,(u=i,i=i+16|0,c[u>>2]=A,c[u+8>>2]=A,u)|0);i=u;break L4639}A=b[r+430>>1]|0;I=A&65535;if(A<<16>>16==0){b[r+440>>1]=16;A=c[o>>2]|524288;c[o>>2]=A;L=A;break}else{cg(c[x>>2]|0,d,42016,(u=i,i=i+16|0,c[u>>2]=I,c[u+8>>2]=I,u)|0);i=u;break L4639}}}while(0);B=L|512;c[o>>2]=B;hv(r+588|0,0,20);I=a[f]|0;if((I|0)==97){if((bL(s)|0)==0){break}else{v=s}i=p;return v|0}else if((I|0)!=114){break}if((L&524288|0)==0){I=r+24|0;c[I>>2]=c[r+428>>2];c[I+4>>2]=0}else{I=r+432|0;A=c[I+4>>2]|0;z=r+24|0;c[z>>2]=c[I>>2];c[z+4>>2]=A}do{if((L&2048|0)==0){M=B}else{if((be[c[m>>2]&63](c[x>>2]|0,r+612|0,q)|0)==0){A=c[o>>2]&-2049;c[o>>2]=A;M=A;break}A=c[q>>2]|0;c[r+616>>2]=A;if((A|0)==(c[q>>2]|0)&(((A|0)<0|0?-1:0)|0)==(c[q+4>>2]|0)){M=c[o>>2]|0;break}else{aD(41336,33736,449,44240);return 0}}}while(0);if((M&65536|0)!=0){v=s;i=p;return v|0}if((bZ(s)|0)==0){break}c[r+608>>2]=-1;c[o>>2]=c[o>>2]|16;v=s;i=p;return v|0}else{J=3498}}while(0);do{if((J|0)==3498){if((c[w>>2]|0)==0){cg(c[x>>2]|0,d,27768,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;break}M=c[o>>2]|0;q=M&128;m=r+424|0;L=m;b[L>>1]=(q|0)!=0?19789:18761;f=r+426|0;if((M&524288|0)==0){b[f>>1]=42;c[r+428>>2]=0;if((q|0)!=0){ds(f)}b[r+440>>1]=8}else{b[f>>1]=43;M=r+428|0;b[M>>1]=8;b[r+430>>1]=0;g=r+432|0;c[g>>2]=0;c[g+4>>2]=0;if((q|0)!=0){ds(f);ds(M)}b[r+440>>1]=16}M=c[j>>2]|0;f=c[x>>2]|0;q=0;g=0;ba[M&127](f,q,g,0)|0;g=r+440|0;q=be[c[h>>2]&63](c[x>>2]|0,m,e[g>>1]|0)|0;if((q|0)!=(e[g>>1]|0)){cg(c[x>>2]|0,d,26624,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;break}if((b[L>>1]|0)==19789){c[o>>2]=c[o>>2]|128}if((bL(s)|0)==0){break}L=r+16|0;c[L>>2]=0;c[L+4>>2]=0;L=r+32|0;c[L>>2]=0;c[L+4>>2]=0;v=s;i=p;return v|0}}while(0);c[w>>2]=0;bD(s);v=0;i=p;return v|0}function c1(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function c2(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return}function c3(a){a=a|0;return c[a>>2]|0}function c4(a){a=a|0;return(c[a+12>>2]|0)>>>10&1|0}function c5(a){a=a|0;return b[a+448>>1]|0}function c6(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;if((c[a+8>>2]|0)==1){cg(c[a+628>>2]|0,c[a>>2]|0,37240,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;h=-1;i=f;return h|0}if((c[a+12>>2]&1024|0)!=0){cg(c[a+628>>2]|0,c[a>>2]|0,35696,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;h=-1;i=f;return h|0}j=c[a+168>>2]|0;if(j>>>0<=b>>>0){cg(c[a+628>>2]|0,46056,30376,(g=i,i=i+16|0,c[g>>2]=b,c[g+8>>2]=j,g)|0);i=g;h=-1;i=f;return h|0}g=c[a+100>>2]|0;j=c[a+60>>2]|0;k=g>>>0>j>>>0?j:g;g=((j-1+k|0)>>>0)/(k>>>0)|0;l=j-(aa((b>>>0)%(g>>>0)|0,k)|0)|0;j=dn(a,l>>>0>k>>>0?k:l)|0;if((j|0)==0){h=-1;i=f;return h|0}l=(e|0)!=-1&(j|0)>(e|0)?e:j;if((c7(a,b)|0)==0){h=-1;i=f;return h|0}if((ba[c[a+540>>2]&127](a,d,l,((b>>>0)/(g>>>0)|0)&65535)|0)<1){h=-1;i=f;return h|0}bg[c[a+652>>2]&127](a,d,l);h=l;i=f;return h|0}function c7(a,b){a=a|0;b=b|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;if((b2(a)|0)==0){f=0;i=d;return f|0}g=a+176|0;h=c[g>>2]|0;if((h|0)==0){f=0;i=d;return f|0}j=a+12|0;k=c[j>>2]|0;L4753:do{if((k&131072|0)==0){l=h+(b<<3)|0;m=c[l>>2]|0;n=c[l+4>>2]|0;if((m|0)==0&(n|0)==0){cg(c[a+628>>2]|0,46424,29024,(o=i,i=i+24|0,c[o>>2]=0,c[o+8>>2]=0,c[o+16>>2]=b,o)|0);i=o;f=0;i=d;return f|0}do{if((k&2048|0)!=0){if(((e[a+94>>1]|0|256)&k|0)==0){break}do{if((k&512|0)==0){p=k}else{l=a+588|0;q=c[l>>2]|0;if((q|0)==0){p=k;break}dU(q);c[l>>2]=0;c[a+592>>2]=0;p=c[j>>2]|0}}while(0);l=p&-513;c[j>>2]=l;q=c[a+616>>2]|0;r=q;s=(q|0)<0|0?-1:0;q=(c[a+172>>2]|0)+(b<<3)|0;t=c[q>>2]|0;u=c[q+4>>2]|0;v=hz(r,s,m,n)|0;w=E;if(!(n>>>0>s>>>0|n>>>0==s>>>0&m>>>0>r>>>0|(u>>>0>w>>>0|u>>>0==w>>>0&t>>>0>v>>>0))){v=m;c[a+592>>2]=v;c[a+588>>2]=(c[a+612>>2]|0)+(c[q>>2]|0);c[a+596>>2]=0;c[a+600>>2]=v;c[j>>2]=l|8388608;break L4753}l=c[a+628>>2]|0;v=hz(r,s,t,u)|0;u=E;cg(l,46424,27712,(o=i,i=i+40|0,c[o>>2]=b,c[o+8>>2]=v,c[o+16>>2]=u,c[o+24>>2]=m,c[o+32>>2]=n,o)|0);i=o;c[a+452>>2]=-1;f=0;i=d;return f|0}}while(0);u=m;if(!((u|0)==(m|0)&(((u|0)<0|0?-1:0)|0)==(n|0))){cg(c[a+628>>2]|0,46424,30984,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o;f=0;i=d;return f|0}do{if((u|0)>(c[a+592>>2]|0)){c[a+452>>2]=-1;if((k&512|0)==0){cg(c[a+628>>2]|0,46424,26584,(o=i,i=i+8|0,c[o>>2]=b,o)|0);i=o;f=0;i=d;return f|0}if((c9(a,0,u)|0)==0){f=0;i=d;return f|0}else{x=c[j>>2]|0;break}}else{x=k}}while(0);do{if((x&8388608|0)!=0){c[a+452>>2]=-1;if((c9(a,0,u)|0)==0){f=0}else{break}i=d;return f|0}}while(0);n=a+588|0;if((c8(a,b,c[n>>2]|0,u,46424)|0)!=(u|0)){f=0;i=d;return f|0}c[a+596>>2]=0;c[a+600>>2]=u;if(((e[a+94>>1]|0|256)&c[j>>2]|0)!=0){break}dC(c[n>>2]|0,u)}}while(0);if((b2(a)|0)==0){f=0;i=d;return f|0}if((c[g>>2]|0)==0){f=0;i=d;return f|0}x=c[j>>2]|0;do{if((x&32|0)==0){if((bf[c[a+508>>2]&63](a)|0)==0){f=0;i=d;return f|0}else{k=c[j>>2]|32;c[j>>2]=k;y=k;break}}else{y=x}}while(0);c[a+452>>2]=b;x=c[a+164>>2]|0;c[a+444>>2]=aa(c[a+100>>2]|0,(b>>>0)%(x>>>0)|0)|0;c[j>>2]=y&-1048577;if((y&131072|0)==0){c[a+604>>2]=c[a+588>>2];c[a+608>>2]=c[(c[g>>2]|0)+(b<<3)>>2]}else{c[a+604>>2]=0;c[a+608>>2]=0}f=bj[c[a+512>>2]&63](a,((b>>>0)/(x>>>0)|0)&65535)|0;i=d;return f|0}function c8(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;if((b2(a)|0)==0){h=-1;i=g;return h|0}j=c[a+12>>2]|0;if((j&131072|0)!=0){aD(41976,41320,372,43944);return 0}if((j&2048|0)==0){j=a+628|0;k=a+172|0;l=(c[k>>2]|0)+(b<<3)|0;m=ba[c[a+640>>2]&127](c[j>>2]|0,c[l>>2]|0,c[l+4>>2]|0,0)|0;l=(c[k>>2]|0)+(b<<3)|0;if(!((m|0)==(c[l>>2]|0)&(E|0)==(c[l+4>>2]|0))){cg(c[j>>2]|0,f,33752,(n=i,i=i+16|0,c[n>>2]=c[a+444>>2],c[n+8>>2]=b,n)|0);i=n;h=-1;i=g;return h|0}l=be[c[a+632>>2]&63](c[j>>2]|0,d,e)|0;if((l|0)==(e|0)){h=e;i=g;return h|0}cg(c[j>>2]|0,f,33448,(n=i,i=i+40|0,c[n>>2]=c[a+444>>2],c[n+8>>2]=l,c[n+16>>2]=(l|0)<0|0?-1:0,c[n+24>>2]=e,c[n+32>>2]=(e|0)<0|0?-1:0,n)|0);i=n;h=-1;i=g;return h|0}l=(c[a+172>>2]|0)+(b<<3)|0;j=c[l>>2]|0;m=j;k=m+e|0;do{if((m|0)==(j|0)&(((m|0)<0|0?-1:0)|0)==(c[l+4>>2]|0)){o=c[a+616>>2]|0;if((m|0)>(o|0)){p=0;q=3640;break}if(!((m|e|0)<0|(k|0)>(o|0))){break}p=o-m|0;q=3640}else{p=0;q=3640}}while(0);do{if((q|0)==3640){if((p|0)==(e|0)){break}cg(c[a+628>>2]|0,f,33040,(n=i,i=i+48|0,c[n>>2]=c[a+444>>2],c[n+8>>2]=b,c[n+16>>2]=p,c[n+24>>2]=(p|0)<0|0?-1:0,c[n+32>>2]=e,c[n+40>>2]=(e|0)<0|0?-1:0,n)|0);i=n;h=-1;i=g;return h|0}}while(0);dX(d,(c[a+612>>2]|0)+m|0,e);h=e;i=g;return h|0}function c9(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=a+12|0;g=c[f>>2]|0;if((g&131072|0)!=0){aD(41976,41320,918,44072);return 0}c[f>>2]=g&-8388609;h=a+588|0;j=c[h>>2]|0;if((j|0)!=0){if((g&512|0)!=0){dU(j)}c[h>>2]=0;c[a+592>>2]=0}if((b|0)!=0){c[a+592>>2]=d;c[h>>2]=b;c[f>>2]=c[f>>2]&-513;k=1;i=e;return k|0}b=d+1023&-1024;d=(b|0)==0?-1:b;c[a+592>>2]=d;b=dT(d)|0;c[h>>2]=b;c[f>>2]=c[f>>2]|512;if((b|0)!=0){k=1;i=e;return k|0}cg(c[a+628>>2]|0,44072,40808,(b=i,i=i+8|0,c[b>>2]=c[a+444>>2],b)|0);i=b;c[a+592>>2]=0;k=0;i=e;return k|0}function da(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;if((c[a+8>>2]|0)==1){cg(c[a+628>>2]|0,c[a>>2]|0,37240,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j;k=-1;i=h;return k|0}if((c[a+12>>2]&1024|0)==0){cg(c[a+628>>2]|0,c[a>>2]|0,36312,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j;k=-1;i=h;return k|0}if((dE(a,d,e,f,g)|0)==0){k=-1;i=h;return k|0}k=db(a,dD(a,d,e,f,g)|0,b,-1)|0;i=h;return k|0}function db(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;g=c[a+496>>2]|0;if((c[a+8>>2]|0)==1){cg(c[a+628>>2]|0,c[a>>2]|0,37240,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h;j=-1;i=f;return j|0}if((c[a+12>>2]&1024|0)==0){cg(c[a+628>>2]|0,c[a>>2]|0,36312,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h;j=-1;i=f;return j|0}k=c[a+168>>2]|0;if(k>>>0<=b>>>0){cg(c[a+628>>2]|0,46032,25368,(h=i,i=i+16|0,c[h>>2]=b,c[h+8>>2]=k,h)|0);i=h;j=-1;i=f;return j|0}if((e|0)==-1){l=g}else{l=(g|0)<(e|0)?g:e}if((dc(a,b)|0)==0){j=-1;i=f;return j|0}if((ba[c[a+548>>2]&127](a,d,l,((b>>>0)/((c[a+164>>2]|0)>>>0)|0)&65535)|0)==0){j=-1;i=f;return j|0}bg[c[a+652>>2]&127](a,d,l);j=l;i=f;return j|0}function dc(a,b){a=a|0;b=b|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;if((b2(a)|0)==0){f=0;i=d;return f|0}g=a+176|0;h=c[g>>2]|0;if((h|0)==0){f=0;i=d;return f|0}j=a+12|0;k=c[j>>2]|0;L4900:do{if((k&131072|0)==0){l=h+(b<<3)|0;m=c[l>>2]|0;n=c[l+4>>2]|0;if((m|0)==0&(n|0)==0){cg(c[a+628>>2]|0,46408,23968,(o=i,i=i+24|0,c[o>>2]=0,c[o+8>>2]=0,c[o+16>>2]=b,o)|0);i=o;f=0;i=d;return f|0}do{if((k&2048|0)!=0){if(((e[a+94>>1]|0|256)&k|0)==0){break}do{if((k&512|0)==0){p=k}else{l=a+588|0;q=c[l>>2]|0;if((q|0)==0){p=k;break}dU(q);c[l>>2]=0;c[a+592>>2]=0;p=c[j>>2]|0}}while(0);l=p&-513;c[j>>2]=l;q=c[a+616>>2]|0;r=q;s=(q|0)<0|0?-1:0;do{if(!(n>>>0>s>>>0|n>>>0==s>>>0&m>>>0>r>>>0)){q=(c[a+172>>2]|0)+(b<<3)|0;t=c[q>>2]|0;u=c[q+4>>2]|0;v=hz(r,s,m,n)|0;w=E;if(u>>>0>w>>>0|u>>>0==w>>>0&t>>>0>v>>>0){break}v=m;c[a+592>>2]=v;c[a+588>>2]=(c[a+612>>2]|0)+(c[q>>2]|0);c[a+596>>2]=0;c[a+600>>2]=v;c[j>>2]=l|8388608;break L4900}}while(0);c[a+492>>2]=-1;f=0;i=d;return f|0}}while(0);l=m;if(!((l|0)==(m|0)&(((l|0)<0|0?-1:0)|0)==(n|0))){cg(c[a+628>>2]|0,46408,30984,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o;f=0;i=d;return f|0}do{if((l|0)>(c[a+592>>2]|0)){c[a+492>>2]=-1;if((k&512|0)==0){cg(c[a+628>>2]|0,46408,23208,(o=i,i=i+8|0,c[o>>2]=b,o)|0);i=o;f=0;i=d;return f|0}if((c9(a,0,l)|0)==0){f=0;i=d;return f|0}else{x=c[j>>2]|0;break}}else{x=k}}while(0);do{if((x&8388608|0)!=0){c[a+492>>2]=-1;if((c9(a,0,l)|0)==0){f=0}else{break}i=d;return f|0}}while(0);n=a+588|0;if((dd(a,b,c[n>>2]|0,l,46408)|0)!=(l|0)){f=0;i=d;return f|0}c[a+596>>2]=0;c[a+600>>2]=l;if(((e[a+94>>1]|0|256)&c[j>>2]|0)!=0){break}dC(c[n>>2]|0,l)}}while(0);if((b2(a)|0)==0){f=0;i=d;return f|0}if((c[g>>2]|0)==0){f=0;i=d;return f|0}x=c[j>>2]|0;do{if((x&32|0)==0){if((bf[c[a+508>>2]&63](a)|0)==0){f=0;i=d;return f|0}else{k=c[j>>2]|32;c[j>>2]=k;y=k;break}}else{y=x}}while(0);c[a+492>>2]=b;x=c[a+56>>2]|0;k=c[a+68>>2]|0;if(x>>>0<(-k|0)>>>0){z=((x-1+k|0)>>>0)/(k>>>0)|0}else{z=0}x=c[a+72>>2]|0;c[a+444>>2]=aa(x,(b>>>0)%(z>>>0)|0)|0;z=c[a+60>>2]|0;if(z>>>0<(-x|0)>>>0){A=((x-1+z|0)>>>0)/(x>>>0)|0}else{A=0}c[a+488>>2]=aa((b>>>0)%(A>>>0)|0,k)|0;c[j>>2]=y&-1048577;if((y&131072|0)==0){c[a+604>>2]=c[a+588>>2];c[a+608>>2]=c[(c[g>>2]|0)+(b<<3)>>2]}else{c[a+604>>2]=0;c[a+608>>2]=0}f=bj[c[a+512>>2]&63](a,((b>>>0)/((c[a+164>>2]|0)>>>0)|0)&65535)|0;i=d;return f|0}function dd(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;if((b2(a)|0)==0){h=-1;i=g;return h|0}j=c[a+12>>2]|0;if((j&131072|0)!=0){aD(41976,41320,684,43920);return 0}if((j&2048|0)==0){j=a+628|0;k=a+172|0;l=(c[k>>2]|0)+(b<<3)|0;m=ba[c[a+640>>2]&127](c[j>>2]|0,c[l>>2]|0,c[l+4>>2]|0,0)|0;l=(c[k>>2]|0)+(b<<3)|0;if(!((m|0)==(c[l>>2]|0)&(E|0)==(c[l+4>>2]|0))){l=c[a+488>>2]|0;cg(c[j>>2]|0,f,35184,(n=i,i=i+24|0,c[n>>2]=c[a+444>>2],c[n+8>>2]=l,c[n+16>>2]=b,n)|0);i=n;h=-1;i=g;return h|0}l=be[c[a+632>>2]&63](c[j>>2]|0,d,e)|0;if((l|0)==(e|0)){h=e;i=g;return h|0}m=c[a+488>>2]|0;cg(c[j>>2]|0,f,34664,(n=i,i=i+48|0,c[n>>2]=c[a+444>>2],c[n+8>>2]=m,c[n+16>>2]=l,c[n+24>>2]=(l|0)<0|0?-1:0,c[n+32>>2]=e,c[n+40>>2]=(e|0)<0|0?-1:0,n)|0);i=n;h=-1;i=g;return h|0}l=(c[a+172>>2]|0)+(b<<3)|0;m=c[l>>2]|0;j=m;k=j+e|0;do{if((j|0)==(m|0)&(((j|0)<0|0?-1:0)|0)==(c[l+4>>2]|0)){o=c[a+616>>2]|0;if((j|0)>(o|0)){p=0;q=3758;break}if(!((j|e|0)<0|(k|0)>(o|0))){break}p=o-j|0;q=3758}else{p=0;q=3758}}while(0);do{if((q|0)==3758){if((p|0)==(e|0)){break}k=c[a+488>>2]|0;cg(c[a+628>>2]|0,f,34136,(n=i,i=i+56|0,c[n>>2]=c[a+444>>2],c[n+8>>2]=k,c[n+16>>2]=b,c[n+24>>2]=p,c[n+32>>2]=(p|0)<0|0?-1:0,c[n+40>>2]=e,c[n+48>>2]=(e|0)<0|0?-1:0,n)|0);i=n;h=-1;i=g;return h|0}}while(0);dX(d,(c[a+612>>2]|0)+j|0,e);h=e;i=g;return h|0}function de(a,b,c){a=a|0;b=b|0;c=c|0;return}function df(a,b,c){a=a|0;b=b|0;c=c|0;if((c&1|0)==0){dv(b,(c|0)/2|0);return}else{aD(40184,41320,1048,43232)}}function dg(a,b,c){a=a|0;b=b|0;c=c|0;if(((c|0)%3|0|0)==0){dw(b,(c|0)/3|0);return}else{aD(39592,41320,1056,43208)}}function dh(a,b,c){a=a|0;b=b|0;c=c|0;if((c&3|0)==0){dx(b,(c|0)/4|0);return}else{aD(38752,41320,1064,43184)}}function di(a,b,c){a=a|0;b=b|0;c=c|0;if((c&7|0)==0){dA(b,(c|0)/8|0);return}else{aD(37984,41320,1072,43160)}}function dj(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=(d>>>0)/((c[a+100>>2]|0)>>>0)|0;if((b[a+126>>1]|0)!=2){h=g;i=f;return h|0}d=e&65535;j=b[a+98>>1]|0;if((j&65535)>(e&65535)){h=(aa(c[a+164>>2]|0,d)|0)+g|0;i=f;return h|0}else{cg(c[a+628>>2]|0,147104,29536,(a=i,i=i+16|0,c[a>>2]=d,c[a+8>>2]=j&65535,a)|0);i=a;h=0;i=f;return h|0}return 0}function dk(a){a=a|0;var d=0,f=0,g=0,h=0;d=c[a+100>>2]|0;do{if((d|0)==-1){f=1}else{g=c[a+60>>2]|0;if(g>>>0>=(-d|0)>>>0){f=0;break}f=((d-1+g|0)>>>0)/(d>>>0)|0}}while(0);if((b[a+126>>1]|0)!=2){h=f;return h|0}h=d2(a,f,e[a+98>>1]|0,39752)|0;return h|0}function dl(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;i=i+8|0;g=f|0;if((d|0)==-1){h=c[a+60>>2]|0}else{h=d}do{if((b[a+126>>1]|0)==1){if((b[a+90>>1]|0)!=6){break}if((c[a+12>>2]&16384|0)!=0){break}if((b[a+98>>1]|0)!=3){cg(c[a+628>>2]|0,45888,33552,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j;k=0;l=0;i=f;return(E=k,l)|0}d=g|0;m=g+2|0;d7(a,530,(j=i,i=i+16|0,c[j>>2]=d,c[j+8>>2]=m,j)|0)|0;i=j;n=b[d>>1]|0;do{if((n<<16>>16|0)==1|(n<<16>>16|0)==2|(n<<16>>16|0)==4){d=b[m>>1]|0;if(!((d<<16>>16|0)==1|(d<<16>>16|0)==2|(d<<16>>16|0)==4)){o=d;break}p=n&65535;q=(aa(d,n)|0)+2&65535;r=c[a+56>>2]|0;if(r>>>0<(-p|0)>>>0){s=0;t=((p-1+r|0)>>>0)/(p>>>0)|0}else{s=0;t=0}p=d&65535;if(h>>>0<(-p|0)>>>0){u=0;v=((h-1+p|0)>>>0)/(p>>>0)|0}else{u=0;v=0}p=d3(a,t,s,q&65535,0,45888)|0;q=E;d=a+84|0;r=d3(a,p,q,e[d>>1]|0,0,45888)|0;w=(r&7|0)!=0|(E&0|0)!=0;r=d3(a,p,q,e[d>>1]|0,0,45888)|0;d=E;q=hy(r>>>3|d<<29,d>>>3|0<<29,w&1,0)|0;w=d3(a,q,E,v,u,45888)|0;k=E;l=w;i=f;return(E=k,l)|0}else{o=b[m>>1]|0}}while(0);cg(c[a+628>>2]|0,45888,30928,(j=i,i=i+16|0,c[j>>2]=n&65535,c[j+8>>2]=o&65535,j)|0);i=j;k=0;l=0;i=f;return(E=k,l)|0}}while(0);j=dm(a)|0;o=d3(a,h,0,j,E,45888)|0;k=E;l=o;i=f;return(E=k,l)|0}
function gg(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=c[a+576>>2]|0;if((d|0)==0){aD(24880,36928,705,44096);return 0}if((bS(a,8544,1)|0)==0){cg(c[a+628>>2]|0,44096,32216,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e;f=0;i=b;return f|0}else{e=a+672|0;c[d+44>>2]=c[e>>2];c[e>>2]=10;e=a+668|0;c[d+48>>2]=c[e>>2];c[e>>2]=20;e=a+676|0;c[d+52>>2]=c[e>>2];c[e>>2]=32;e=a+508|0;c[d+56>>2]=c[e>>2];c[e>>2]=22;e=a+516|0;c[d+60>>2]=c[e>>2];c[e>>2]=30;c[d>>2]=1;c[d+24>>2]=0;c[d+40>>2]=0;f=1;i=b;return f|0}return 0}function gh(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=c[a+576>>2]|0;if((f|0)==0){aD(28416,36928,668,44304);return 0}g=c[f+44>>2]|0;if((g|0)==0){aD(32192,36928,669,44304);return 0}if((d|0)==317){h=c[f>>2]&65535;b[(v=c[e+4>>2]|0,c[e+4>>2]=v+8,c[(c[e>>2]|0)+v>>2]|0)>>1]=h;i=1;return i|0}else{i=be[g&63](a,d,e)|0;return i|0}return 0}function gi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a+576>>2]|0;if((e|0)==0){aD(28416,36928,648,44280);return 0}f=c[e+48>>2]|0;if((f|0)==0){aD(32600,36928,649,44280);return 0}if((b|0)==317){c[e>>2]=(v=c[d+4>>2]|0,c[d+4>>2]=v+8,c[(c[d>>2]|0)+v>>2]|0)&65535;e=a+48|0;c[e>>2]=c[e>>2]|4;e=a+12|0;c[e>>2]=c[e>>2]|8;g=1;return g|0}else{g=be[f&63](a,b,d)|0;return g|0}return 0}function gj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=c[a+576>>2]|0;if((c[a+48>>2]&4|0)!=0){aH(34432,13,1,b|0)|0;g=f;h=c[g>>2]|0;if((h|0)==2){aH(33624,24,1,b|0)|0}else if((h|0)==1){aH(33992,5,1,b|0)|0}else if((h|0)==3){aH(33272,25,1,b|0)|0}h=c[g>>2]|0;ax(b|0,32936,(g=i,i=i+16|0,c[g>>2]=h,c[g+8>>2]=h,g)|0)|0;i=g}g=c[f+52>>2]|0;if((g|0)==0){i=e;return}bg[g&127](a,b,d);i=e;return}function gk(a){a=a|0;var b=0,d=0,f=0,g=0,h=0;b=c[a+576>>2]|0;if((bf[c[b+56>>2]&63](a)|0)==0){d=0;return d|0}if((gn(a)|0)==0){d=0;return d|0}f=c[b>>2]|0;if((f|0)==2){g=e[a+84>>1]|0;if((g|0)==8){c[b+40>>2]=10}else if((g|0)==16){c[b+40>>2]=42}else if((g|0)==32){c[b+40>>2]=36}g=a+532|0;h=c[g>>2]|0;if((h|0)!=62){c[b+28>>2]=h;c[g>>2]=62;g=a+540|0;c[b+32>>2]=c[g>>2];c[g>>2]=34;g=a+548|0;c[b+36>>2]=c[g>>2];c[g>>2]=34}if((c[a+12>>2]&128|0)==0){d=1;return d|0}g=b+40|0;h=c[g>>2]|0;if((h|0)==42){c[g>>2]=68;c[a+652>>2]=66;d=1;return d|0}if((h|0)!=36){d=1;return d|0}c[g>>2]=6;c[a+652>>2]=66;d=1;return d|0}else if((f|0)==3){c[b+40>>2]=16;f=a+532|0;g=c[f>>2]|0;if((g|0)!=62){c[b+28>>2]=g;c[f>>2]=62;f=a+540|0;c[b+32>>2]=c[f>>2];c[f>>2]=34;f=a+548|0;c[b+36>>2]=c[f>>2];c[f>>2]=34}if((c[a+12>>2]&128|0)==0){d=1;return d|0}c[a+652>>2]=66;d=1;return d|0}else{d=1;return d|0}return 0}function gl(a){a=a|0;var b=0,d=0,f=0,g=0,h=0;b=c[a+576>>2]|0;if((bf[c[b+60>>2]&63](a)|0)==0){d=0;return d|0}if((gn(a)|0)==0){d=0;return d|0}f=c[b>>2]|0;if((f|0)==3){c[b+24>>2]=4;g=a+536|0;h=c[g>>2]|0;if((h|0)==68){d=1;return d|0}c[b+12>>2]=h;c[g>>2]=68;g=a+544|0;c[b+16>>2]=c[g>>2];c[g>>2]=16;g=a+552|0;c[b+20>>2]=c[g>>2];c[g>>2]=16;d=1;return d|0}else if((f|0)==2){f=e[a+84>>1]|0;if((f|0)==16){c[b+24>>2]=30}else if((f|0)==32){c[b+24>>2]=44}else if((f|0)==8){c[b+24>>2]=20}f=a+536|0;g=c[f>>2]|0;if((g|0)==68){d=1;return d|0}c[b+12>>2]=g;c[f>>2]=68;f=a+544|0;c[b+16>>2]=c[f>>2];c[f>>2]=16;f=a+552|0;c[b+20>>2]=c[f>>2];c[f>>2]=16;d=1;return d|0}else{d=1;return d|0}return 0}function gm(a){a=a|0;var b=0;b=c[a+576>>2]|0;if((b|0)==0){aD(24880,36928,746,44120);return 0}else{c[a+672>>2]=c[b+44>>2];c[a+668>>2]=c[b+48>>2];c[a+676>>2]=c[b+52>>2];c[a+508>>2]=c[b+56>>2];c[a+516>>2]=c[b+60>>2];return 1}return 0}function gn(a){a=a|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;f=c[a+576>>2]|0;g=c[f>>2]|0;do{if((g|0)==3){h=b[a+86>>1]|0;if(h<<16>>16==3){break}cg(c[a+628>>2]|0,147408,38296,(j=i,i=i+8|0,c[j>>2]=h&65535,j)|0);i=j;k=0;i=d;return k|0}else if((g|0)==2){h=b[a+84>>1]|0;if((h<<16>>16|0)==8|(h<<16>>16|0)==16|(h<<16>>16|0)==32){break}cg(c[a+628>>2]|0,147408,39160,(j=i,i=i+8|0,c[j>>2]=h&65535,j)|0);i=j;k=0;i=d;return k|0}else if((g|0)==1){k=1;i=d;return k|0}else{cg(c[a+628>>2]|0,147408,37608,(j=i,i=i+8|0,c[j>>2]=g,j)|0);i=j;k=0;i=d;return k|0}}while(0);if((b[a+126>>1]|0)==1){l=e[a+98>>1]|0}else{l=1}c[f+4>>2]=l;if((c[a+12>>2]&1024|0)==0){l=dr(a)|0;c[f+8>>2]=l;m=l}else{l=dG(a)|0;c[f+8>>2]=l;m=l}k=(m|0)!=0|0;i=d;return k|0}function go(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=c[(c[b+576>>2]|0)+4>>2]|0;if(((e|0)%(f|0)|0|0)!=0){aD(39912,36928,461,43040)}if((f|0)>=(e|0)){return}b=e-f|0;if((f|0)==4){e=a[d+3|0]|0;g=a[d+2|0]|0;h=a[d+1|0]|0;i=a[d]|0;j=b;k=d;while(1){l=k+4|0;m=a[l]|0;a[l]=m-i&255;n=k+5|0;o=a[n]|0;a[n]=o-h&255;n=k+6|0;p=a[n]|0;a[n]=p-g&255;n=k+7|0;q=a[n]|0;a[n]=q-e&255;n=j-4|0;if((n|0)>0){e=q;g=p;h=o;i=m;j=n;k=l}else{break}}return}else if((f|0)==3){k=b;j=d;i=a[d]|0;h=a[d+1|0]|0;g=a[d+2|0]|0;while(1){e=j+3|0;l=a[e]|0;a[e]=l-i&255;n=j+4|0;m=a[n]|0;a[n]=m-h&255;n=j+5|0;o=a[n]|0;a[n]=o-g&255;n=k-3|0;if((n|0)>0){k=n;j=e;i=l;h=m;g=o}else{break}}return}else{g=f-4|0;h=(g|0)>0;i=4-f|0;j=b;k=d+(b-1)|0;while(1){if((f|0)==1){r=k;s=1181}else if((f|0)==0){t=k}else if((f|0)==2){u=k;s=1180}else{if(h){b=k;d=g;while(1){o=b+f|0;a[o]=(a[o]|0)-(a[b]|0)&255;o=d-1|0;if((o|0)>0){b=b-1|0;d=o}else{break}}v=k+i|0}else{v=k}d=v+f|0;a[d]=(a[d]|0)-(a[v]|0)&255;d=v+(f-1)|0;a[d]=(a[d]|0)-(a[v-1|0]|0)&255;u=v-2|0;s=1180}if((s|0)==1180){s=0;d=u+f|0;a[d]=(a[d]|0)-(a[u]|0)&255;r=u-1|0;s=1181}if((s|0)==1181){s=0;d=r+f|0;a[d]=(a[d]|0)-(a[r]|0)&255;t=r-1|0}d=j-f|0;if((d|0)>0){j=d;k=t}else{break}}return}}function gp(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=c[(c[a+576>>2]|0)+4>>2]|0;a=(e|0)/2|0;if(((e|0)%(f<<1|0)|0|0)!=0){aD(40512,36928,509,43072)}if((a|0)<=(f|0)){return}e=a-f|0;a=f-4|0;g=(a|0)>0;h=4-f|0;i=e;j=d+(e-1<<1)|0;while(1){L1593:do{switch(f|0){case 1:{k=j;l=1199;break};case 2:{m=j;l=1198;break};case 4:{n=j;l=1196;break};case 0:{o=j;break};case 3:{p=j;l=1197;break};default:{if(g){q=j;r=a}else{n=j;l=1196;break L1593}while(1){e=q+(f<<1)|0;b[e>>1]=(b[e>>1]|0)-(b[q>>1]|0)&65535;e=r-1|0;if((e|0)>0){q=q-2|0;r=e}else{break}}n=j+(h<<1)|0;l=1196}}}while(0);if((l|0)==1196){l=0;e=n+(f<<1)|0;b[e>>1]=(b[e>>1]|0)-(b[n>>1]|0)&65535;p=n-2|0;l=1197}if((l|0)==1197){l=0;e=p+(f<<1)|0;b[e>>1]=(b[e>>1]|0)-(b[p>>1]|0)&65535;m=p-2|0;l=1198}if((l|0)==1198){l=0;e=m+(f<<1)|0;b[e>>1]=(b[e>>1]|0)-(b[m>>1]|0)&65535;k=m-2|0;l=1199}if((l|0)==1199){l=0;e=k+(f<<1)|0;b[e>>1]=(b[e>>1]|0)-(b[k>>1]|0)&65535;o=k-2|0}e=i-f|0;if((e|0)>0){i=e;j=o}else{break}}return}function gq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=c[(c[a+576>>2]|0)+4>>2]|0;a=(d|0)/4|0;if(((d|0)%(e<<2|0)|0|0)!=0){aD(41080,36928,529,43056)}if((a|0)<=(e|0)){return}d=a-e|0;a=e-4|0;f=(a|0)>0;g=4-e|0;h=d;i=b+(d-1<<2)|0;while(1){L1617:do{switch(e|0){case 0:{j=i;break};case 4:{k=i;l=1212;break};case 3:{m=i;l=1213;break};case 1:{n=i;l=1215;break};case 2:{o=i;l=1214;break};default:{if(f){p=i;q=a}else{k=i;l=1212;break L1617}while(1){d=p+(e<<2)|0;c[d>>2]=(c[d>>2]|0)-(c[p>>2]|0);d=q-1|0;if((d|0)>0){p=p-4|0;q=d}else{break}}k=i+(g<<2)|0;l=1212}}}while(0);if((l|0)==1212){l=0;d=k+(e<<2)|0;c[d>>2]=(c[d>>2]|0)-(c[k>>2]|0);m=k-4|0;l=1213}if((l|0)==1213){l=0;d=m+(e<<2)|0;c[d>>2]=(c[d>>2]|0)-(c[m>>2]|0);o=m-4|0;l=1214}if((l|0)==1214){l=0;d=o+(e<<2)|0;c[d>>2]=(c[d>>2]|0)-(c[o>>2]|0);n=o-4|0;l=1215}if((l|0)==1215){l=0;d=n+(e<<2)|0;c[d>>2]=(c[d>>2]|0)-(c[n>>2]|0);j=n-4|0}d=h-e|0;if((d|0)>0){h=d;i=j}else{break}}return}function gr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[a+576>>2]|0;if((f|0)==0){aD(28416,36928,584,44352);return 0}g=c[f+24>>2]|0;if((g|0)==0){aD(27192,36928,585,44352);return 0}h=f+12|0;if((c[h>>2]|0)==0){aD(41624,36928,586,44352);return 0}else{bg[g&127](a,b,d);return ba[c[h>>2]&127](a,b,d,e)|0}return 0}function gs(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;g=c[a+576>>2]|0;if((g|0)==0){aD(28416,36928,603,44328);return 0}h=g+24|0;if((c[h>>2]|0)==0){aD(27192,36928,604,44328);return 0}j=g+20|0;if((c[j>>2]|0)==0){aD(26088,36928,605,44328);return 0}k=dT(d)|0;if((k|0)==0){cg(c[a+628>>2]|0,44328,24688,(l=i,i=i+8|0,c[l>>2]=d,l)|0);i=l;m=0;i=f;return m|0}hu(k|0,b|0,d)|0;b=c[g+8>>2]|0;if((b|0)<=0){aD(23632,36928,623,44328);return 0}if(((d|0)%(b|0)|0|0)!=0){aD(22840,36928,624,44328);return 0}if((d|0)>0){g=d;l=k;while(1){bg[c[h>>2]&127](a,l,b);n=g-b|0;if((n|0)>0){g=n;l=l+b|0}else{break}}}b=ba[c[j>>2]&127](a,k,d,e)|0;dU(k);m=b;i=f;return m|0}function gt(b,d,f){b=b|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=c[(c[b+576>>2]|0)+4>>2]|0;h=(e[b+84>>1]|0)>>>3;b=(f>>>0)/(h>>>0)|0;i=dT(f)|0;if(((f>>>0)%((aa(h,g)|0)>>>0)|0|0)!=0){aD(30080,36928,554,43128)}if((i|0)==0){return}dX(i,d,f);do{if((b|0)>0){j=h-1|0;if((h|0)==0){break}else{k=0}do{l=aa(k,h)|0;m=0;do{n=a[i+(m+l)|0]|0;a[d+((aa(j-m|0,b)|0)+k)|0]=n;m=m+1|0;}while(m>>>0<h>>>0);k=k+1|0;}while((k|0)<(b|0))}}while(0);dU(i);if((g|0)>=(f|0)){return}i=g-4|0;b=(i|0)>0;k=4-g|0;h=d+(f-1-g)|0;d=f;while(1){L1687:do{switch(g|0){case 1:{o=h;p=1262;break};case 2:{q=h;p=1261;break};case 0:{r=h;break};case 3:{s=h;p=1260;break};case 4:{t=h;p=1259;break};default:{if(b){u=h;v=i}else{t=h;p=1259;break L1687}while(1){f=u+g|0;a[f]=(a[f]|0)-(a[u]|0)&255;f=v-1|0;if((f|0)>0){u=u-1|0;v=f}else{break}}t=h+k|0;p=1259}}}while(0);if((p|0)==1259){p=0;f=t+g|0;a[f]=(a[f]|0)-(a[t]|0)&255;s=t-1|0;p=1260}if((p|0)==1260){p=0;f=s+g|0;a[f]=(a[f]|0)-(a[s]|0)&255;q=s-1|0;p=1261}if((p|0)==1261){p=0;f=q+g|0;a[f]=(a[f]|0)-(a[q]|0)&255;o=q-1|0;p=1262}if((p|0)==1262){p=0;f=o+g|0;a[f]=(a[f]|0)-(a[o]|0)&255;r=o-1|0}f=d-g|0;if((f|0)>(g|0)){h=r;d=f}else{break}}return}function gu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=c[(c[b+576>>2]|0)+4>>2]|0;if(((e|0)%(f|0)|0|0)!=0){aD(39912,36928,248,43088)}if((f|0)>=(e|0)){return}if((f|0)==3){b=e-3|0;if((b|0)<=0){return}g=a[d]|0;h=a[d+1|0]|0;i=a[d+2|0]|0;j=b;b=d;while(1){k=b+3|0;l=(a[k]|0)+g|0;a[k]=l&255;m=b+4|0;n=(a[m]|0)+h|0;a[m]=n&255;m=b+5|0;o=(a[m]|0)+i|0;a[m]=o&255;m=j-3|0;if((m|0)>0){g=l;h=n;i=o;j=m;b=k}else{break}}return}else if((f|0)==4){b=e-4|0;if((b|0)<=0){return}j=a[d]|0;i=a[d+1|0]|0;h=a[d+2|0]|0;g=a[d+3|0]|0;k=b;b=d;while(1){m=b+4|0;o=(a[m]|0)+j|0;a[m]=o&255;n=b+5|0;l=(a[n]|0)+i|0;a[n]=l&255;n=b+6|0;p=(a[n]|0)+h|0;a[n]=p&255;n=b+7|0;q=(a[n]|0)+g|0;a[n]=q&255;n=k-4|0;if((n|0)>0){j=o;i=l;h=p;g=q;k=n;b=m}else{break}}return}else{b=f-4|0;k=(b|0)>0;g=d;d=e-f|0;while(1){L1727:do{switch(f|0){case 3:{r=g;s=1284;break};case 2:{t=g;s=1285;break};case 1:{u=g;s=1286;break};case 0:{v=g;break};case 4:{w=g;s=1283;break};default:{if(k){x=g;y=b}else{w=g;s=1283;break L1727}while(1){e=x+f|0;a[e]=(a[x]|0)+(a[e]|0)&255;e=y-1|0;if((e|0)>0){x=x+1|0;y=e}else{break}}w=g+b|0;s=1283}}}while(0);if((s|0)==1283){s=0;e=w+f|0;a[e]=(a[w]|0)+(a[e]|0)&255;r=w+1|0;s=1284}if((s|0)==1284){s=0;e=r+f|0;a[e]=(a[r]|0)+(a[e]|0)&255;t=r+1|0;s=1285}if((s|0)==1285){s=0;e=t+f|0;a[e]=(a[t]|0)+(a[e]|0)&255;u=t+1|0;s=1286}if((s|0)==1286){s=0;e=u+f|0;a[e]=(a[u]|0)+(a[e]|0)&255;v=u+1|0}e=d-f|0;if((e|0)>0){g=v;d=e}else{break}}return}}function gv(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=c[(c[a+576>>2]|0)+4>>2]|0;a=(e|0)/2|0;if(((e|0)%(f<<1|0)|0|0)!=0){aD(40512,36928,318,43112)}if((a|0)<=(f|0)){return}e=f-4|0;g=(e|0)>0;h=a-f|0;a=d;while(1){L1751:do{switch(f|0){case 0:{i=a;break};case 3:{j=a;k=1304;break};case 1:{l=a;k=1306;break};case 4:{m=a;k=1303;break};case 2:{n=a;k=1305;break};default:{if(g){o=a;p=e}else{m=a;k=1303;break L1751}while(1){d=o+(f<<1)|0;b[d>>1]=(b[d>>1]|0)+(b[o>>1]|0)&65535;d=p-1|0;if((d|0)>0){o=o+2|0;p=d}else{break}}m=a+(e<<1)|0;k=1303}}}while(0);if((k|0)==1303){k=0;d=m+(f<<1)|0;b[d>>1]=(b[d>>1]|0)+(b[m>>1]|0)&65535;j=m+2|0;k=1304}if((k|0)==1304){k=0;d=j+(f<<1)|0;b[d>>1]=(b[d>>1]|0)+(b[j>>1]|0)&65535;n=j+2|0;k=1305}if((k|0)==1305){k=0;d=n+(f<<1)|0;b[d>>1]=(b[d>>1]|0)+(b[n>>1]|0)&65535;l=n+2|0;k=1306}if((k|0)==1306){k=0;d=l+(f<<1)|0;b[d>>1]=(b[d>>1]|0)+(b[l>>1]|0)&65535;i=l+2|0}d=h-f|0;if((d|0)>0){h=d;a=i}else{break}}return}function gw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=c[(c[a+576>>2]|0)+4>>2]|0;a=(d|0)/4|0;if(((d|0)%(e<<2|0)|0|0)!=0){aD(41080,36928,355,43096)}if((a|0)<=(e|0)){return}d=e-4|0;f=(d|0)>0;g=a-e|0;a=b;while(1){L1775:do{switch(e|0){case 0:{h=a;break};case 4:{i=a;j=1319;break};case 1:{k=a;j=1322;break};case 3:{l=a;j=1320;break};case 2:{m=a;j=1321;break};default:{if(f){n=a;o=d}else{i=a;j=1319;break L1775}while(1){b=n+(e<<2)|0;c[b>>2]=(c[b>>2]|0)+(c[n>>2]|0);b=o-1|0;if((b|0)>0){n=n+4|0;o=b}else{break}}i=a+(d<<2)|0;j=1319}}}while(0);if((j|0)==1319){j=0;b=i+(e<<2)|0;c[b>>2]=(c[b>>2]|0)+(c[i>>2]|0);l=i+4|0;j=1320}if((j|0)==1320){j=0;b=l+(e<<2)|0;c[b>>2]=(c[b>>2]|0)+(c[l>>2]|0);m=l+4|0;j=1321}if((j|0)==1321){j=0;b=m+(e<<2)|0;c[b>>2]=(c[b>>2]|0)+(c[m>>2]|0);k=m+4|0;j=1322}if((j|0)==1322){j=0;b=k+(e<<2)|0;c[b>>2]=(c[b>>2]|0)+(c[k>>2]|0);h=k+4|0}b=g-e|0;if((b|0)>0){g=b;a=h}else{break}}return}function gx(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=c[a+576>>2]|0;if((f|0)==0){aD(28416,36928,413,44400);return 0}g=c[f+28>>2]|0;if((g|0)==0){aD(34960,36928,414,44400);return 0}h=f+40|0;if((c[h>>2]|0)==0){aD(35440,36928,415,44400);return 0}if((ba[g&127](a,b,d,e)|0)==0){i=0;return i|0}bg[c[h>>2]&127](a,b,d);i=1;return i|0}function gy(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=c[a+576>>2]|0;if((f|0)==0){aD(28416,36928,436,44376);return 0}g=c[f+36>>2]|0;if((g|0)==0){aD(36736,36928,437,44376);return 0}if((ba[g&127](a,b,d,e)|0)==0){h=0;return h|0}e=c[f+8>>2]|0;if((e|0)<=0){aD(23632,36928,441,44376);return 0}if(((d|0)%(e|0)|0|0)!=0){aD(36040,36928,442,44376);return 0}g=f+40|0;f=c[g>>2]|0;if((f|0)==0){aD(35440,36928,443,44376);return 0}if((d|0)>0){i=d;j=b;k=f}else{h=1;return h|0}while(1){bg[k&127](a,j,e);f=i-e|0;if((f|0)<=0){h=1;break}i=f;j=j+e|0;k=c[g>>2]|0}return h|0}function gz(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=c[(c[a+576>>2]|0)+4>>2]|0;a=d;d=(e|0)/2|0;if(((e|0)%(f<<1|0)|0|0)!=0){aD(40512,36928,299,43016)}if((d|0)<=(f|0)){return}dv(a,d);e=f-4|0;g=(e|0)>0;h=d-f|0;d=a;while(1){L1838:do{switch(f|0){case 2:{i=d;j=1366;break};case 3:{k=d;j=1365;break};case 0:{l=d;break};case 4:{m=d;j=1364;break};case 1:{n=d;j=1367;break};default:{if(g){o=d;p=e}else{m=d;j=1364;break L1838}while(1){a=o+(f<<1)|0;b[a>>1]=(b[a>>1]|0)+(b[o>>1]|0)&65535;a=p-1|0;if((a|0)>0){o=o+2|0;p=a}else{break}}m=d+(e<<1)|0;j=1364}}}while(0);if((j|0)==1364){j=0;a=m+(f<<1)|0;b[a>>1]=(b[a>>1]|0)+(b[m>>1]|0)&65535;k=m+2|0;j=1365}if((j|0)==1365){j=0;a=k+(f<<1)|0;b[a>>1]=(b[a>>1]|0)+(b[k>>1]|0)&65535;i=k+2|0;j=1366}if((j|0)==1366){j=0;a=i+(f<<1)|0;b[a>>1]=(b[a>>1]|0)+(b[i>>1]|0)&65535;n=i+2|0;j=1367}if((j|0)==1367){j=0;a=n+(f<<1)|0;b[a>>1]=(b[a>>1]|0)+(b[n>>1]|0)&65535;l=n+2|0}a=h-f|0;if((a|0)>0){h=a;d=l}else{break}}return}function gA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=c[(c[a+576>>2]|0)+4>>2]|0;a=b;b=(d|0)/4|0;if(((d|0)%(e<<2|0)|0|0)!=0){aD(41080,36928,336,43e3)}if((b|0)<=(e|0)){return}dx(a,b);d=e-4|0;f=(d|0)>0;g=b-e|0;b=a;while(1){L1862:do{switch(e|0){case 4:{h=b;i=1380;break};case 3:{j=b;i=1381;break};case 1:{k=b;i=1383;break};case 2:{l=b;i=1382;break};case 0:{m=b;break};default:{if(f){n=b;o=d}else{h=b;i=1380;break L1862}while(1){a=n+(e<<2)|0;c[a>>2]=(c[a>>2]|0)+(c[n>>2]|0);a=o-1|0;if((a|0)>0){n=n+4|0;o=a}else{break}}h=b+(d<<2)|0;i=1380}}}while(0);if((i|0)==1380){i=0;a=h+(e<<2)|0;c[a>>2]=(c[a>>2]|0)+(c[h>>2]|0);j=h+4|0;i=1381}if((i|0)==1381){i=0;a=j+(e<<2)|0;c[a>>2]=(c[a>>2]|0)+(c[j>>2]|0);l=j+4|0;i=1382}if((i|0)==1382){i=0;a=l+(e<<2)|0;c[a>>2]=(c[a>>2]|0)+(c[l>>2]|0);k=l+4|0;i=1383}if((i|0)==1383){i=0;a=k+(e<<2)|0;c[a>>2]=(c[a>>2]|0)+(c[k>>2]|0);m=k+4|0}a=g-e|0;if((a|0)>0){g=a;b=m}else{break}}return}function gB(b,d,f){b=b|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=c[(c[b+576>>2]|0)+4>>2]|0;h=(e[b+84>>1]|0)>>>3;b=(f>>>0)/(h>>>0)|0;i=dT(f)|0;if(((f>>>0)%((aa(h,g)|0)>>>0)|0|0)!=0){aD(30080,36928,379,43136)}if((i|0)==0){return}L1884:do{if((g|0)<(f|0)){j=g-4|0;k=(j|0)>0;l=d;m=f;while(1){L1888:do{switch(g|0){case 2:{n=l;o=1399;break};case 0:{p=l;break};case 4:{q=l;o=1397;break};case 1:{r=l;o=1400;break};case 3:{s=l;o=1398;break};default:{if(k){t=l;u=j}else{q=l;o=1397;break L1888}while(1){v=t+g|0;a[v]=(a[v]|0)+(a[t]|0)&255;v=u-1|0;if((v|0)>0){t=t+1|0;u=v}else{break}}q=l+j|0;o=1397}}}while(0);if((o|0)==1397){o=0;v=q+g|0;a[v]=(a[v]|0)+(a[q]|0)&255;s=q+1|0;o=1398}if((o|0)==1398){o=0;v=s+g|0;a[v]=(a[v]|0)+(a[s]|0)&255;n=s+1|0;o=1399}if((o|0)==1399){o=0;v=n+g|0;a[v]=(a[v]|0)+(a[n]|0)&255;r=n+1|0;o=1400}if((o|0)==1400){o=0;v=r+g|0;a[v]=(a[v]|0)+(a[r]|0)&255;p=r+1|0}v=m-g|0;if((v|0)>(g|0)){l=p;m=v}else{break L1884}}}}while(0);dX(i,d,f);if((b|0)>0){f=(h|0)==0;p=h-1|0;g=0;do{if(!f){r=aa(g,h)|0;o=0;do{a[d+(o+r)|0]=a[i+((aa(p-o|0,b)|0)+g)|0]|0;o=o+1|0;}while(o>>>0<h>>>0)}g=g+1|0;}while((g|0)<(b|0))}dU(i);return}function gC(a,b){a=a|0;b=b|0;c[a+508>>2]=16;c[a+532>>2]=14;c[a+540>>2]=14;return 1}function gD(a){a=a|0;var d=0,e=0,f=0;d=i;e=b[a+84>>1]|0;if(e<<16>>16==4){f=1;i=d;return f|0}cg(c[a+628>>2]|0,45464,28312,(a=i,i=i+8|0,c[a>>2]=e&65535,a)|0);i=a;f=0;i=d;return f|0}function gE(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;g=i;h=b+580|0;if(((f|0)%(c[h>>2]|0)|0|0)!=0){cg(c[b+628>>2]|0,45504,24384,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j;k=0;i=g;return k|0}if((f|0)<=0){k=1;i=g;return k|0}l=b+56|0;m=b+604|0;n=b+608|0;o=f;f=e;e=c[m>>2]|0;p=c[n>>2]|0;while(1){q=c[l>>2]|0;r=(q|0)>0;if((p|0)>0&r){s=f;t=e;u=p;v=0;w=0;while(1){x=t+1|0;y=a[t]|0;z=y&255;A=u-1|0;B=z&192;do{if((B|0)==0){if((w&1|0)==0){C=z;D=w;E=v<<4|v;F=s}else{G=d[s]|0|v;a[s]=G&255;C=z-1|0;D=w+1|0;E=G&255;F=s+1|0}G=C+D|0;if((G|0)<(q|0)&(C|0)>0){H=(C-1|0)>>>1;I=H+1|0;hv(F|0,E&255|0,I|0);J=C-2-(H<<1)|0;K=F+I|0}else{J=C;K=F}if((J|0)==-1){I=K-1|0;a[I]=a[I]&-16;L=I}else{L=K}M=G;N=E&15;O=L}else if((B|0)==192){G=z&15;I=w+1|0;if((w&1|0)==0){a[s]=y<<4;M=I;N=G;O=s;break}else{a[s]=(d[s]|0|G)&255;M=I;N=G;O=s+1|0;break}}else if((B|0)==128){G=z>>>3&7;do{if((G|0)==4){P=w;Q=v;R=s}else{I=(c[7168+(G<<2)>>2]|0)+v&15;H=w+1|0;if((w&1|0)==0){a[s]=I<<4&255;P=H;Q=I;R=s;break}else{a[s]=(d[s]|0|I)&255;P=H;Q=I;R=s+1|0;break}}}while(0);G=z&7;if((G|0)==4){M=P;N=Q;O=R;break}I=(c[7168+(G<<2)>>2]|0)+Q&15;if((P|0)>=(q|0)){M=P;N=I;O=R;break}G=P+1|0;if((P&1|0)==0){a[R]=I<<4&255;M=G;N=I;O=R;break}else{a[R]=(d[R]|0|I)&255;M=G;N=I;O=R+1|0;break}}else if((B|0)==64){I=z>>>4&3;do{if((I|0)==2){S=w;T=v;U=s}else{G=(c[1696+(I<<2)>>2]|0)+v&15;H=w+1|0;if((w&1|0)==0){a[s]=G<<4&255;S=H;T=G;U=s;break}else{a[s]=(d[s]|0|G)&255;S=H;T=G;U=s+1|0;break}}}while(0);I=z>>>2&3;do{if((I|0)==2){V=S;W=T;X=U}else{G=(c[1696+(I<<2)>>2]|0)+T&15;if((S|0)>=(q|0)){V=S;W=G;X=U;break}H=S+1|0;if((S&1|0)==0){a[U]=G<<4&255;V=H;W=G;X=U;break}else{a[U]=(d[U]|0|G)&255;V=H;W=G;X=U+1|0;break}}}while(0);I=z&3;if((I|0)==2){M=V;N=W;O=X;break}G=(c[1696+(I<<2)>>2]|0)+W&15;if((V|0)>=(q|0)){M=V;N=G;O=X;break}I=V+1|0;if((V&1|0)==0){a[X]=G<<4&255;M=I;N=G;O=X;break}else{a[X]=(d[X]|0|G)&255;M=I;N=G;O=X+1|0;break}}else{M=w;N=v;O=s}}while(0);z=(M|0)<(q|0);if((A|0)>0&z){s=O;t=x;u=A;v=N;w=M}else{Y=x;Z=A;_=M;$=z;break}}}else{Y=e;Z=p;_=0;$=r}c[m>>2]=Y;c[n>>2]=Z;if((_|0)!=(q|0)){break}w=c[h>>2]|0;v=o-w|0;if((v|0)<=0){k=1;aa=1467;break}o=v;f=f+w|0;e=Y;p=Z}if((aa|0)==1467){i=g;return k|0}aa=c[b+444>>2]|0;cg(c[b+628>>2]|0,45488,36560,(j=i,i=i+48|0,c[j>>2]=$?32152:30040,c[j+8>>2]=aa,c[j+16>>2]=_,c[j+24>>2]=(_|0)<0|0?-1:0,c[j+32>>2]=q,c[j+40>>2]=(q|0)<0|0?-1:0,j)|0);i=j;k=0;i=g;return k|0}function gF(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;if(!((b|0)==32946|(b|0)==8)){aD(24240,36544,399,44144);return 0}if((bS(a,8,1)|0)==0){cg(c[a+628>>2]|0,44144,32104,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e;f=0;i=d;return f|0}b=dT(136)|0;c[a+576>>2]=b;if((b|0)==0){cg(c[a+628>>2]|0,44144,30008,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e;f=0;i=d;return f|0}else{e=a+672|0;hv(b+96|0,0,16);c[b+128>>2]=c[e>>2];c[e>>2]=30;e=a+668|0;c[b+132>>2]=c[e>>2];c[e>>2]=24;c[b+120>>2]=-1;c[b+124>>2]=0;c[a+504>>2]=24;c[a+508>>2]=46;c[a+512>>2]=58;c[a+532>>2]=58;c[a+540>>2]=58;c[a+548>>2]=58;c[a+516>>2]=58;c[a+524>>2]=4;c[a+528>>2]=56;c[a+536>>2]=44;c[a+544>>2]=44;c[a+552>>2]=44;c[a+564>>2]=12;gg(a)|0;f=1;i=d;return f|0}return 0}function gG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a+576>>2]|0;if((b|0)==65557){f=c[e+120>>2]|0;c[(v=c[d+4>>2]|0,c[d+4>>2]=v+8,c[(c[d>>2]|0)+v>>2]|0)>>2]=f;g=1;return g|0}else{g=be[c[e+128>>2]&63](a,b,d)|0;return g|0}return 0}function gH(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=c[a+576>>2]|0;if((b|0)!=65557){g=be[c[f+132>>2]&63](a,b,d)|0;i=e;return g|0}b=(v=c[d+4>>2]|0,c[d+4>>2]=v+8,c[(c[d>>2]|0)+v>>2]|0);c[f+120>>2]=b;if((c[f+124>>2]&2|0)==0){g=1;i=e;return g|0}if((gX(f+64|0,b,0)|0)==0){g=1;i=e;return g|0}cg(c[a+628>>2]|0,45432,22808,(a=i,i=i+8|0,c[a>>2]=c[f+88>>2],a)|0);i=a;g=0;i=e;return g|0}function gI(a){a=a|0;return 1}function gJ(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=c[a+576>>2]|0;if((d|0)==0){aD(27160,36544,100,43296);return 0}e=d+124|0;f=d+64|0;if((c[e>>2]&2|0)!=0){gT(f)|0;c[e>>2]=0}if((g3(f,41600,56)|0)==0){c[e>>2]=c[e>>2]|1;g=1;i=b;return g|0}else{cg(c[a+628>>2]|0,43296,41064,(a=i,i=i+8|0,c[a>>2]=c[d+88>>2],a)|0);i=a;g=0;i=b;return g|0}return 0}function gK(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;b=i;d=c[a+576>>2]|0;if((d|0)==0){aD(27160,36544,127,43328);return 0}if((c[d+124>>2]&1|0)==0){e=c[a+508>>2]|0;bf[e&63](a)|0}e=d+64|0;c[e>>2]=c[a+588>>2];f=a+608|0;g=c[f>>2]|0;c[d+68>>2]=g;if((g|0)==(c[f>>2]|0)){h=(g1(e)|0)==0|0;i=b;return h|0}else{cg(c[a+628>>2]|0,43328,24632,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;h=0;i=b;return h|0}return 0}function gL(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;f=c[a+576>>2]|0;if((f|0)==0){aD(27160,36544,153,43360);return 0}if((c[f+124>>2]|0)!=1){aD(40464,36544,154,43360);return 0}g=a+604|0;h=f+64|0;j=h;k=h;c[k>>2]=c[g>>2];h=a+608|0;l=f+68|0;c[l>>2]=c[h>>2];c[f+76>>2]=b;b=f+80|0;c[b>>2]=d;d=a+628|0;m=a+444|0;a=f+88|0;do{f=g4(j,1)|0;if((f|0)==(-3|0)){n=c[a>>2]|0;cg(c[d>>2]|0,43360,39856,(o=i,i=i+16|0,c[o>>2]=c[m>>2],c[o+8>>2]=n,o)|0);i=o;if((g7(j)|0)!=0){p=0;q=1530;break}}else if((f|0)==1){q=1525;break}else if((f|0)!=0){q=1523;break}}while((c[b>>2]|0)!=0);do{if((q|0)==1530){i=e;return p|0}else if((q|0)==1523){cg(c[d>>2]|0,43360,22808,(o=i,i=i+8|0,c[o>>2]=c[a>>2],o)|0);i=o;p=0;i=e;return p|0}else if((q|0)==1525){j=c[b>>2]|0;if((j|0)==0){break}cg(c[d>>2]|0,43360,39088,(o=i,i=i+16|0,c[o>>2]=c[m>>2],c[o+8>>2]=j,o)|0);i=o;p=0;i=e;return p|0}}while(0);c[g>>2]=c[k>>2];c[h>>2]=c[l>>2];p=1;i=e;return p|0}function gM(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=c[a+576>>2]|0;if((d|0)==0){aD(27160,36544,207,43280);return 0}e=d+124|0;f=d+64|0;if((c[e>>2]&1|0)!=0){g6(f)|0;c[e>>2]=0}if((gR(f,c[d+120>>2]|0,41600,56)|0)==0){c[e>>2]=c[e>>2]|2;g=1;i=b;return g|0}else{cg(c[a+628>>2]|0,43280,41064,(a=i,i=i+8|0,c[a>>2]=c[d+88>>2],a)|0);i=a;g=0;i=b;return g|0}return 0}function gN(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;b=i;d=c[a+576>>2]|0;if((d|0)==0){aD(27160,36544,232,43312);return 0}if((c[d+124>>2]|0)!=2){e=c[a+516>>2]|0;bf[e&63](a)|0}c[d+76>>2]=c[a+588>>2];e=a+592|0;f=c[e>>2]|0;c[d+80>>2]=f;if((f|0)==(c[e>>2]|0)){g=(gU(d+64|0)|0)==0|0;i=b;return g|0}else{cg(c[a+628>>2]|0,43312,24632,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;g=0;i=b;return g|0}return 0}function gO(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=i;d=c[a+576>>2]|0;e=d+64|0;c[d+68>>2]=0;f=d+80|0;g=a+592|0;h=a+608|0;j=a+588|0;k=d+76|0;while(1){l=gY(e,4)|0;if(l>>>0>=2){break}m=c[f>>2]|0;n=c[g>>2]|0;if((m|0)!=(n|0)){c[h>>2]=n-m;d1(a)|0;c[k>>2]=c[j>>2];c[f>>2]=c[g>>2]}if((l|0)==1){o=1;p=1560;break}}if((p|0)==1560){i=b;return o|0}cg(c[a+628>>2]|0,45448,22808,(a=i,i=i+8|0,c[a>>2]=c[d+88>>2],a)|0);i=a;o=0;i=b;return o|0}function gP(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;f=c[a+576>>2]|0;if((f|0)==0){aD(27160,36544,259,43344);return 0}if((c[f+124>>2]|0)!=2){aD(26040,36544,260,43344);return 0}g=f+64|0;h=g;c[g>>2]=b;b=f+68|0;c[b>>2]=d;d=f+80|0;g=a+592|0;j=a+608|0;k=a+588|0;l=f+76|0;while(1){if((gY(h,0)|0)!=0){break}if((c[d>>2]|0)==0){c[j>>2]=c[g>>2];d1(a)|0;c[l>>2]=c[k>>2];c[d>>2]=c[g>>2]}if((c[b>>2]|0)==0){m=1;n=1574;break}}if((n|0)==1574){i=e;return m|0}cg(c[a+628>>2]|0,43344,23576,(a=i,i=i+8|0,c[a>>2]=c[f+88>>2],a)|0);i=a;m=0;i=e;return m|0}function gQ(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=a+576|0;d=c[b>>2]|0;if((d|0)==0){aD(28304,36544,329,43376)}gm(a)|0;c[a+672>>2]=c[d+128>>2];c[a+668>>2]=c[d+132>>2];e=d+124|0;f=c[e>>2]|0;do{if((f&2|0)==0){if((f&1|0)==0){break}g=d+64|0;g6(g)|0;c[e>>2]=0}else{g=d+64|0;gT(g)|0;c[e>>2]=0}}while(0);dU(d);c[b>>2]=0;em(a);return}function gR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return gS(a,b,8,15,8,0,c,d)|0}function gS(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;if((k|0)==0){m=-6;return m|0}if(!((a[k]|0)==49&(l|0)==56)){m=-6;return m|0}if((d|0)==0){m=-2;return m|0}l=d+24|0;c[l>>2]=0;k=d+32|0;n=c[k>>2]|0;if((n|0)==0){c[k>>2]=18;c[d+40>>2]=0;o=18}else{o=n}n=d+36|0;if((c[n>>2]|0)==0){c[n>>2]=2}n=(f|0)==-1?6:f;if((h|0)<0){p=0;q=-h|0}else{f=(h|0)>15;p=f?2:1;q=f?h-16|0:h}if(!((i-1|0)>>>0<9&(g|0)==8)){m=-2;return m|0}if((q-8|0)>>>0>7|n>>>0>9|j>>>0>4){m=-2;return m|0}g=(q|0)==8?9:q;q=d+40|0;h=be[o&63](c[q>>2]|0,1,5828)|0;if((h|0)==0){m=-4;return m|0}o=d+28|0;c[o>>2]=h;c[h>>2]=d;c[h+24>>2]=p;c[h+28>>2]=0;c[h+48>>2]=g;p=1<<g;g=h+44|0;c[g>>2]=p;c[h+52>>2]=p-1;f=i+7|0;c[h+80>>2]=f;r=1<<f;f=h+76|0;c[f>>2]=r;c[h+84>>2]=r-1;c[h+88>>2]=((i+9|0)>>>0)/3|0;r=h+56|0;c[r>>2]=be[c[k>>2]&63](c[q>>2]|0,p,2)|0;p=h+64|0;c[p>>2]=be[c[k>>2]&63](c[q>>2]|0,c[g>>2]|0,2)|0;g=h+68|0;c[g>>2]=be[c[k>>2]&63](c[q>>2]|0,c[f>>2]|0,2)|0;c[h+5824>>2]=0;f=1<<i+6;i=h+5788|0;c[i>>2]=f;s=be[c[k>>2]&63](c[q>>2]|0,f,4)|0;f=s;c[h+8>>2]=s;q=c[i>>2]|0;c[h+12>>2]=q<<2;do{if((c[r>>2]|0)!=0){if((c[p>>2]|0)==0){break}if((c[g>>2]|0)==0|(s|0)==0){break}c[h+5796>>2]=f+(q>>>1<<1);c[h+5784>>2]=s+(q*3|0);c[h+132>>2]=n;c[h+136>>2]=j;a[h+36|0]=8;i=gW(d)|0;if((i|0)!=0){m=i;return m|0}i=c[o>>2]|0;c[i+60>>2]=c[i+44>>2]<<1;k=i+76|0;t=i+68|0;b[(c[t>>2]|0)+((c[k>>2]|0)-1<<1)>>1]=0;hv(c[t>>2]|0,0,(c[k>>2]<<1)-2|0);k=c[i+132>>2]|0;c[i+128>>2]=e[22370+(k*12|0)>>1]|0;c[i+140>>2]=e[22368+(k*12|0)>>1]|0;c[i+144>>2]=e[22372+(k*12|0)>>1]|0;c[i+124>>2]=e[22374+(k*12|0)>>1]|0;c[i+108>>2]=0;c[i+92>>2]=0;c[i+116>>2]=0;c[i+5812>>2]=0;c[i+120>>2]=2;c[i+96>>2]=2;c[i+104>>2]=0;c[i+72>>2]=0;m=0;return m|0}}while(0);c[h+4>>2]=666;c[l>>2]=c[82];gT(d)|0;m=-4;return m|0}function gT(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((a|0)==0){b=-2;return b|0}d=a+28|0;e=c[d>>2]|0;if((e|0)==0){b=-2;return b|0}f=c[e+4>>2]|0;switch(f|0){case 666:case 113:case 103:case 91:case 73:case 69:case 42:{break};default:{b=-2;return b|0}}g=c[e+8>>2]|0;if((g|0)==0){h=e}else{bc[c[a+36>>2]&3](c[a+40>>2]|0,g);h=c[d>>2]|0}g=c[h+68>>2]|0;if((g|0)==0){i=h}else{bc[c[a+36>>2]&3](c[a+40>>2]|0,g);i=c[d>>2]|0}g=c[i+64>>2]|0;if((g|0)==0){j=i}else{bc[c[a+36>>2]&3](c[a+40>>2]|0,g);j=c[d>>2]|0}g=c[j+56>>2]|0;i=a+36|0;if((g|0)==0){k=j;l=a+40|0}else{j=a+40|0;bc[c[i>>2]&3](c[j>>2]|0,g);k=c[d>>2]|0;l=j}bc[c[i>>2]&3](c[l>>2]|0,k);c[d>>2]=0;b=(f|0)==113?-3:0;return b|0}function gU(a){a=a|0;var d=0,f=0,g=0;d=gW(a)|0;if((d|0)!=0){return d|0}f=c[a+28>>2]|0;c[f+60>>2]=c[f+44>>2]<<1;a=f+76|0;g=f+68|0;b[(c[g>>2]|0)+((c[a>>2]|0)-1<<1)>>1]=0;hv(c[g>>2]|0,0,(c[a>>2]<<1)-2|0);a=c[f+132>>2]|0;c[f+128>>2]=e[22370+(a*12|0)>>1]|0;c[f+140>>2]=e[22368+(a*12|0)>>1]|0;c[f+144>>2]=e[22372+(a*12|0)>>1]|0;c[f+124>>2]=e[22374+(a*12|0)>>1]|0;c[f+108>>2]=0;c[f+92>>2]=0;c[f+116>>2]=0;c[f+5812>>2]=0;c[f+120>>2]=2;c[f+96>>2]=2;c[f+104>>2]=0;c[f+72>>2]=0;return d|0}function gV(a){a=a|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;f=a+44|0;g=c[f>>2]|0;h=a+60|0;i=a+116|0;j=a+108|0;k=g-262|0;l=a|0;m=a+56|0;n=a+5812|0;o=a+72|0;p=a+88|0;q=a+84|0;r=a+68|0;s=a+52|0;t=a+64|0;u=a+112|0;v=a+92|0;w=a+76|0;x=c[i>>2]|0;y=g;while(1){z=c[j>>2]|0;A=(c[h>>2]|0)-x-z|0;if(z>>>0<(k+y|0)>>>0){B=A}else{z=c[m>>2]|0;C=z+g|0;hu(z|0,C|0,g)|0;c[u>>2]=(c[u>>2]|0)-g;c[j>>2]=(c[j>>2]|0)-g;c[v>>2]=(c[v>>2]|0)-g;C=c[w>>2]|0;z=C;D=(c[r>>2]|0)+(C<<1)|0;do{D=D-2|0;C=e[D>>1]|0;if(C>>>0<g>>>0){E=0}else{E=C-g&65535}b[D>>1]=E;z=z-1|0;}while((z|0)!=0);z=g;D=(c[t>>2]|0)+(g<<1)|0;do{D=D-2|0;C=e[D>>1]|0;if(C>>>0<g>>>0){F=0}else{F=C-g&65535}b[D>>1]=F;z=z-1|0;}while((z|0)!=0);B=A+g|0}z=c[l>>2]|0;D=z+4|0;C=c[D>>2]|0;if((C|0)==0){break}G=c[i>>2]|0;H=(c[m>>2]|0)+(G+(c[j>>2]|0))|0;I=C>>>0>B>>>0?B:C;if((I|0)==0){J=0;K=G}else{c[D>>2]=C-I;C=z|0;D=c[C>>2]|0;hu(H|0,D|0,I)|0;D=c[(c[z+28>>2]|0)+24>>2]|0;if((D|0)==2){G=z+48|0;c[G>>2]=hm(c[G>>2]|0,H,I)|0}else if((D|0)==1){D=z+48|0;c[D>>2]=hl(c[D>>2]|0,H,I)|0}c[C>>2]=(c[C>>2]|0)+I;C=z+8|0;c[C>>2]=(c[C>>2]|0)+I;J=I;K=c[i>>2]|0}I=K+J|0;c[i>>2]=I;C=c[n>>2]|0;L2221:do{if((I+C|0)>>>0>2){z=(c[j>>2]|0)-C|0;H=c[m>>2]|0;D=d[H+z|0]|0;c[o>>2]=D;c[o>>2]=((d[H+(z+1)|0]|0)^D<<c[p>>2])&c[q>>2];D=z;z=C;H=I;while(1){if((z|0)==0){L=H;break L2221}G=((d[(c[m>>2]|0)+(D+2)|0]|0)^c[o>>2]<<c[p>>2])&c[q>>2];c[o>>2]=G;b[(c[t>>2]|0)+((c[s>>2]&D)<<1)>>1]=b[(c[r>>2]|0)+(G<<1)>>1]|0;b[(c[r>>2]|0)+(c[o>>2]<<1)>>1]=D&65535;G=(c[n>>2]|0)-1|0;c[n>>2]=G;M=c[i>>2]|0;if((M+G|0)>>>0<3){L=M;break}else{D=D+1|0;z=G;H=M}}}else{L=I}}while(0);if(L>>>0>=262){break}if((c[(c[l>>2]|0)+4>>2]|0)==0){break}x=L;y=c[f>>2]|0}f=a+5824|0;a=c[f>>2]|0;y=c[h>>2]|0;if(a>>>0>=y>>>0){return}h=(c[i>>2]|0)+(c[j>>2]|0)|0;if(a>>>0<h>>>0){j=y-h|0;i=j>>>0>258?258:j;hv((c[m>>2]|0)+h|0,0,i|0);c[f>>2]=i+h;return}i=h+258|0;if(a>>>0>=i>>>0){return}h=i-a|0;i=y-a|0;y=h>>>0>i>>>0?i:h;hv((c[m>>2]|0)+a|0,0,y|0);c[f>>2]=(c[f>>2]|0)+y;return}function gW(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;if((a|0)==0){b=-2;return b|0}d=c[a+28>>2]|0;if((d|0)==0){b=-2;return b|0}if((c[a+32>>2]|0)==0){b=-2;return b|0}if((c[a+36>>2]|0)==0){b=-2;return b|0}c[a+20>>2]=0;c[a+8>>2]=0;c[a+24>>2]=0;c[a+44>>2]=2;c[d+20>>2]=0;c[d+16>>2]=c[d+8>>2];e=d+24|0;f=c[e>>2]|0;if((f|0)<0){g=-f|0;c[e>>2]=g;h=g}else{h=f}c[d+4>>2]=(h|0)!=0?42:113;if((h|0)==2){i=hm(0,0,0)|0}else{i=hl(0,0,0)|0}c[a+48>>2]=i;c[d+40>>2]=0;g9(d);b=0;return b|0}function gX(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((a|0)==0){f=-2;return f|0}g=c[a+28>>2]|0;if((g|0)==0){f=-2;return f|0}h=(b|0)==-1?6:b;if(h>>>0>9|d>>>0>4){f=-2;return f|0}b=g+132|0;i=g+136|0;if((c[i>>2]|0)==(d|0)){if((c[22376+((c[b>>2]|0)*12|0)>>2]|0)==(c[22376+(h*12|0)>>2]|0)){j=0}else{k=1690}}else{k=1690}do{if((k|0)==1690){if((c[a+8>>2]|0)==0){j=0;break}l=gY(a,5)|0;if((l|0)!=-5){j=l;break}j=(c[g+20>>2]|0)==0?0:-5}}while(0);if((c[b>>2]|0)!=(h|0)){c[b>>2]=h;c[g+128>>2]=e[22370+(h*12|0)>>1]|0;c[g+140>>2]=e[22368+(h*12|0)>>1]|0;c[g+144>>2]=e[22372+(h*12|0)>>1]|0;c[g+124>>2]=e[22374+(h*12|0)>>1]|0}c[i>>2]=d;f=j;return f|0}function gY(e,f){e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0;if((e|0)==0){g=-2;return g|0}h=e+28|0;i=c[h>>2]|0;if((i|0)==0|f>>>0>5){g=-2;return g|0}j=e+12|0;do{if((c[j>>2]|0)!=0){if((c[e>>2]|0)==0){if((c[e+4>>2]|0)!=0){break}}k=i+4|0;l=c[k>>2]|0;m=(f|0)==4;if(!((l|0)!=666|m)){break}n=e+16|0;if((c[n>>2]|0)==0){c[e+24>>2]=c[83];g=-5;return g|0}o=i|0;c[o>>2]=e;p=i+40|0;q=c[p>>2]|0;c[p>>2]=f;do{if((l|0)==42){if((c[i+24>>2]|0)!=2){r=(c[i+48>>2]<<12)-30720|0;do{if((c[i+136>>2]|0)>1){s=0}else{t=c[i+132>>2]|0;if((t|0)<2){s=0;break}if((t|0)<6){s=64;break}s=(t|0)==6?128:192}}while(0);t=s|r;u=i+108|0;v=(c[u>>2]|0)==0?t:t|32;t=(v|((v>>>0)%31|0))^31;c[k>>2]=113;v=i+20|0;w=c[v>>2]|0;c[v>>2]=w+1;x=i+8|0;a[(c[x>>2]|0)+w|0]=t>>>8&255;w=c[v>>2]|0;c[v>>2]=w+1;a[(c[x>>2]|0)+w|0]=t&255;t=e+48|0;if((c[u>>2]|0)!=0){u=c[t>>2]|0;w=c[v>>2]|0;c[v>>2]=w+1;a[(c[x>>2]|0)+w|0]=u>>>24&255;w=c[v>>2]|0;c[v>>2]=w+1;a[(c[x>>2]|0)+w|0]=u>>>16&255;u=c[t>>2]|0;w=c[v>>2]|0;c[v>>2]=w+1;a[(c[x>>2]|0)+w|0]=u>>>8&255;w=c[v>>2]|0;c[v>>2]=w+1;a[(c[x>>2]|0)+w|0]=u&255}c[t>>2]=hl(0,0,0)|0;y=c[k>>2]|0;z=1732;break}t=e+48|0;c[t>>2]=hm(0,0,0)|0;u=i+20|0;w=c[u>>2]|0;c[u>>2]=w+1;x=i+8|0;a[(c[x>>2]|0)+w|0]=31;w=c[u>>2]|0;c[u>>2]=w+1;a[(c[x>>2]|0)+w|0]=-117;w=c[u>>2]|0;c[u>>2]=w+1;a[(c[x>>2]|0)+w|0]=8;w=i+28|0;v=c[w>>2]|0;if((v|0)==0){A=c[u>>2]|0;c[u>>2]=A+1;a[(c[x>>2]|0)+A|0]=0;A=c[u>>2]|0;c[u>>2]=A+1;a[(c[x>>2]|0)+A|0]=0;A=c[u>>2]|0;c[u>>2]=A+1;a[(c[x>>2]|0)+A|0]=0;A=c[u>>2]|0;c[u>>2]=A+1;a[(c[x>>2]|0)+A|0]=0;A=c[u>>2]|0;c[u>>2]=A+1;a[(c[x>>2]|0)+A|0]=0;A=c[i+132>>2]|0;do{if((A|0)==9){B=2}else{if((c[i+136>>2]|0)>1){B=4;break}B=(A|0)<2?4:0}}while(0);A=c[u>>2]|0;c[u>>2]=A+1;a[(c[x>>2]|0)+A|0]=B;A=c[u>>2]|0;c[u>>2]=A+1;a[(c[x>>2]|0)+A|0]=3;c[k>>2]=113;break}A=((c[v+44>>2]|0)!=0?2:0)|(c[v>>2]|0)!=0|((c[v+16>>2]|0)==0?0:4)|((c[v+28>>2]|0)==0?0:8)|((c[v+36>>2]|0)==0?0:16);r=c[u>>2]|0;c[u>>2]=r+1;a[(c[x>>2]|0)+r|0]=A;A=c[(c[w>>2]|0)+4>>2]&255;r=c[u>>2]|0;c[u>>2]=r+1;a[(c[x>>2]|0)+r|0]=A;A=(c[(c[w>>2]|0)+4>>2]|0)>>>8&255;r=c[u>>2]|0;c[u>>2]=r+1;a[(c[x>>2]|0)+r|0]=A;A=(c[(c[w>>2]|0)+4>>2]|0)>>>16&255;r=c[u>>2]|0;c[u>>2]=r+1;a[(c[x>>2]|0)+r|0]=A;A=(c[(c[w>>2]|0)+4>>2]|0)>>>24&255;r=c[u>>2]|0;c[u>>2]=r+1;a[(c[x>>2]|0)+r|0]=A;A=c[i+132>>2]|0;do{if((A|0)==9){C=2}else{if((c[i+136>>2]|0)>1){C=4;break}C=(A|0)<2?4:0}}while(0);A=c[u>>2]|0;c[u>>2]=A+1;a[(c[x>>2]|0)+A|0]=C;A=c[(c[w>>2]|0)+12>>2]&255;v=c[u>>2]|0;c[u>>2]=v+1;a[(c[x>>2]|0)+v|0]=A;A=c[w>>2]|0;if((c[A+16>>2]|0)==0){D=A}else{v=c[A+20>>2]&255;A=c[u>>2]|0;c[u>>2]=A+1;a[(c[x>>2]|0)+A|0]=v;v=(c[(c[w>>2]|0)+20>>2]|0)>>>8&255;A=c[u>>2]|0;c[u>>2]=A+1;a[(c[x>>2]|0)+A|0]=v;D=c[w>>2]|0}if((c[D+44>>2]|0)!=0){c[t>>2]=hm(c[t>>2]|0,c[x>>2]|0,c[u>>2]|0)|0}c[i+32>>2]=0;c[k>>2]=69;E=w;z=1734}else{y=l;z=1732}}while(0);do{if((z|0)==1732){if((y|0)!=69){F=y;z=1755;break}E=i+28|0;z=1734}}while(0);do{if((z|0)==1734){l=c[E>>2]|0;if((c[l+16>>2]|0)==0){c[k>>2]=73;G=l;z=1757;break}v=i+20|0;A=c[v>>2]|0;r=i+32|0;H=c[r>>2]|0;L2338:do{if(H>>>0<(c[l+20>>2]&65535)>>>0){I=i+12|0;J=e+48|0;K=i+8|0;L=e+20|0;M=A;N=l;O=A;P=H;while(1){if((O|0)==(c[I>>2]|0)){if((c[N+44>>2]|0)!=0&O>>>0>M>>>0){c[J>>2]=hm(c[J>>2]|0,(c[K>>2]|0)+M|0,O-M|0)|0}Q=c[h>>2]|0;hc(Q);R=Q+20|0;S=c[R>>2]|0;T=c[n>>2]|0;U=S>>>0>T>>>0?T:S;do{if((U|0)!=0){S=c[j>>2]|0;T=Q+16|0;V=c[T>>2]|0;hu(S|0,V|0,U)|0;c[j>>2]=(c[j>>2]|0)+U;c[T>>2]=(c[T>>2]|0)+U;c[L>>2]=(c[L>>2]|0)+U;c[n>>2]=(c[n>>2]|0)-U;V=c[R>>2]|0;c[R>>2]=V-U;if((V|0)!=(U|0)){break}c[T>>2]=c[Q+8>>2]}}while(0);W=c[v>>2]|0;if((W|0)==(c[I>>2]|0)){break}X=W;Y=W;Z=c[r>>2]|0;_=c[E>>2]|0}else{X=M;Y=O;Z=P;_=N}Q=a[(c[_+16>>2]|0)+Z|0]|0;c[v>>2]=Y+1;a[(c[K>>2]|0)+Y|0]=Q;Q=(c[r>>2]|0)+1|0;c[r>>2]=Q;U=c[E>>2]|0;if(Q>>>0>=(c[U+20>>2]&65535)>>>0){$=X;aa=U;break L2338}M=X;N=U;O=c[v>>2]|0;P=Q}$=W;aa=c[E>>2]|0}else{$=A;aa=l}}while(0);do{if((c[aa+44>>2]|0)==0){ab=aa}else{l=c[v>>2]|0;if(l>>>0<=$>>>0){ab=aa;break}A=e+48|0;c[A>>2]=hm(c[A>>2]|0,(c[i+8>>2]|0)+$|0,l-$|0)|0;ab=c[E>>2]|0}}while(0);if((c[r>>2]|0)==(c[ab+20>>2]|0)){c[r>>2]=0;c[k>>2]=73;G=ab;z=1757;break}else{F=c[k>>2]|0;z=1755;break}}}while(0);do{if((z|0)==1755){if((F|0)!=73){ac=F;z=1775;break}G=c[i+28>>2]|0;z=1757}}while(0);do{if((z|0)==1757){v=i+28|0;if((c[G+28>>2]|0)==0){c[k>>2]=91;ad=v;z=1777;break}l=i+20|0;A=c[l>>2]|0;H=i+12|0;w=e+48|0;u=i+8|0;x=e+20|0;t=i+32|0;P=A;O=A;while(1){if((O|0)==(c[H>>2]|0)){if((c[(c[v>>2]|0)+44>>2]|0)!=0&O>>>0>P>>>0){c[w>>2]=hm(c[w>>2]|0,(c[u>>2]|0)+P|0,O-P|0)|0}A=c[h>>2]|0;hc(A);N=A+20|0;M=c[N>>2]|0;K=c[n>>2]|0;I=M>>>0>K>>>0?K:M;do{if((I|0)!=0){M=c[j>>2]|0;K=A+16|0;L=c[K>>2]|0;hu(M|0,L|0,I)|0;c[j>>2]=(c[j>>2]|0)+I;c[K>>2]=(c[K>>2]|0)+I;c[x>>2]=(c[x>>2]|0)+I;c[n>>2]=(c[n>>2]|0)-I;L=c[N>>2]|0;c[N>>2]=L-I;if((L|0)!=(I|0)){break}c[K>>2]=c[A+8>>2]}}while(0);A=c[l>>2]|0;if((A|0)==(c[H>>2]|0)){ae=1;af=A;break}else{ag=A;ah=A}}else{ag=P;ah=O}A=c[t>>2]|0;c[t>>2]=A+1;I=a[(c[(c[v>>2]|0)+28>>2]|0)+A|0]|0;c[l>>2]=ah+1;a[(c[u>>2]|0)+ah|0]=I;if(I<<24>>24==0){ae=I&255;af=ag;break}P=ag;O=c[l>>2]|0}do{if((c[(c[v>>2]|0)+44>>2]|0)!=0){O=c[l>>2]|0;if(O>>>0<=af>>>0){break}c[w>>2]=hm(c[w>>2]|0,(c[u>>2]|0)+af|0,O-af|0)|0}}while(0);if((ae|0)==0){c[t>>2]=0;c[k>>2]=91;ad=v;z=1777;break}else{ac=c[k>>2]|0;z=1775;break}}}while(0);do{if((z|0)==1775){if((ac|0)!=91){ai=ac;z=1795;break}ad=i+28|0;z=1777}}while(0);do{if((z|0)==1777){if((c[(c[ad>>2]|0)+36>>2]|0)==0){c[k>>2]=103;aj=ad;z=1797;break}u=i+20|0;w=c[u>>2]|0;l=i+12|0;O=e+48|0;P=i+8|0;H=e+20|0;x=i+32|0;r=w;I=w;while(1){if((I|0)==(c[l>>2]|0)){if((c[(c[ad>>2]|0)+44>>2]|0)!=0&I>>>0>r>>>0){c[O>>2]=hm(c[O>>2]|0,(c[P>>2]|0)+r|0,I-r|0)|0}w=c[h>>2]|0;hc(w);A=w+20|0;N=c[A>>2]|0;K=c[n>>2]|0;L=N>>>0>K>>>0?K:N;do{if((L|0)!=0){N=c[j>>2]|0;K=w+16|0;M=c[K>>2]|0;hu(N|0,M|0,L)|0;c[j>>2]=(c[j>>2]|0)+L;c[K>>2]=(c[K>>2]|0)+L;c[H>>2]=(c[H>>2]|0)+L;c[n>>2]=(c[n>>2]|0)-L;M=c[A>>2]|0;c[A>>2]=M-L;if((M|0)!=(L|0)){break}c[K>>2]=c[w+8>>2]}}while(0);w=c[u>>2]|0;if((w|0)==(c[l>>2]|0)){ak=1;al=w;break}else{am=w;an=w}}else{am=r;an=I}w=c[x>>2]|0;c[x>>2]=w+1;L=a[(c[(c[ad>>2]|0)+36>>2]|0)+w|0]|0;c[u>>2]=an+1;a[(c[P>>2]|0)+an|0]=L;if(L<<24>>24==0){ak=L&255;al=am;break}r=am;I=c[u>>2]|0}do{if((c[(c[ad>>2]|0)+44>>2]|0)!=0){I=c[u>>2]|0;if(I>>>0<=al>>>0){break}c[O>>2]=hm(c[O>>2]|0,(c[P>>2]|0)+al|0,I-al|0)|0}}while(0);if((ak|0)==0){c[k>>2]=103;aj=ad;z=1797;break}else{ai=c[k>>2]|0;z=1795;break}}}while(0);do{if((z|0)==1795){if((ai|0)!=103){break}aj=i+28|0;z=1797}}while(0);do{if((z|0)==1797){if((c[(c[aj>>2]|0)+44>>2]|0)==0){c[k>>2]=113;break}P=i+20|0;O=i+12|0;do{if(((c[P>>2]|0)+2|0)>>>0>(c[O>>2]|0)>>>0){u=c[h>>2]|0;hc(u);I=u+20|0;r=c[I>>2]|0;x=c[n>>2]|0;l=r>>>0>x>>>0?x:r;if((l|0)==0){break}r=c[j>>2]|0;x=u+16|0;H=c[x>>2]|0;hu(r|0,H|0,l)|0;c[j>>2]=(c[j>>2]|0)+l;c[x>>2]=(c[x>>2]|0)+l;H=e+20|0;c[H>>2]=(c[H>>2]|0)+l;c[n>>2]=(c[n>>2]|0)-l;H=c[I>>2]|0;c[I>>2]=H-l;if((H|0)!=(l|0)){break}c[x>>2]=c[u+8>>2]}}while(0);u=c[P>>2]|0;if((u+2|0)>>>0>(c[O>>2]|0)>>>0){break}x=e+48|0;l=c[x>>2]&255;c[P>>2]=u+1;H=i+8|0;a[(c[H>>2]|0)+u|0]=l;l=(c[x>>2]|0)>>>8&255;u=c[P>>2]|0;c[P>>2]=u+1;a[(c[H>>2]|0)+u|0]=l;c[x>>2]=hm(0,0,0)|0;c[k>>2]=113}}while(0);x=i+20|0;do{if((c[x>>2]|0)==0){if((c[e+4>>2]|0)!=0){break}if(((f<<1)-((f|0)>4?9:0)|0)>((q<<1)-((q|0)>4?9:0)|0)|m){break}c[e+24>>2]=c[83];g=-5;return g|0}else{l=c[h>>2]|0;hc(l);u=l+20|0;H=c[u>>2]|0;I=c[n>>2]|0;r=H>>>0>I>>>0?I:H;if((r|0)==0){ao=I}else{I=c[j>>2]|0;H=l+16|0;v=c[H>>2]|0;hu(I|0,v|0,r)|0;c[j>>2]=(c[j>>2]|0)+r;c[H>>2]=(c[H>>2]|0)+r;v=e+20|0;c[v>>2]=(c[v>>2]|0)+r;c[n>>2]=(c[n>>2]|0)-r;v=c[u>>2]|0;c[u>>2]=v-r;if((v|0)==(r|0)){c[H>>2]=c[l+8>>2]}ao=c[n>>2]|0}if((ao|0)!=0){break}c[p>>2]=-1;g=0;return g|0}}while(0);q=(c[k>>2]|0)==666;l=(c[e+4>>2]|0)==0;do{if(q){if(l){z=1819;break}c[e+24>>2]=c[83];g=-5;return g|0}else{if(l){z=1819}else{z=1822}}}while(0);do{if((z|0)==1819){if((c[i+116>>2]|0)!=0){z=1822;break}if((f|0)==0){g=0;return g|0}else{if(q){break}else{z=1822;break}}}}while(0);do{if((z|0)==1822){q=c[i+136>>2]|0;L2464:do{if((q|0)==3){l=i+116|0;H=(f|0)==0;r=i+96|0;v=i+108|0;u=i+5792|0;I=i+5796|0;t=i+5784|0;L=i+2440+(d[42488]<<2)|0;w=i+5788|0;A=i+56|0;K=i+92|0;L2466:while(1){M=c[l>>2]|0;do{if(M>>>0<259){gV(i);N=c[l>>2]|0;if(N>>>0<259&H){z=1895;break L2464}if((N|0)==0){break L2466}c[r>>2]=0;if(N>>>0>2){ap=N;z=1855;break}aq=c[v>>2]|0;z=1870}else{c[r>>2]=0;ap=M;z=1855}}while(0);do{if((z|0)==1855){z=0;M=c[v>>2]|0;if((M|0)==0){aq=0;z=1870;break}N=c[A>>2]|0;J=a[N+(M-1)|0]|0;if(J<<24>>24!=(a[N+M|0]|0)){aq=M;z=1870;break}if(J<<24>>24!=(a[N+(M+1)|0]|0)){aq=M;z=1870;break}Q=N+(M+2)|0;if(J<<24>>24!=(a[Q]|0)){aq=M;z=1870;break}U=N+(M+258)|0;N=Q;while(1){Q=N+1|0;if(J<<24>>24!=(a[Q]|0)){ar=Q;break}Q=N+2|0;if(J<<24>>24!=(a[Q]|0)){ar=Q;break}Q=N+3|0;if(J<<24>>24!=(a[Q]|0)){ar=Q;break}Q=N+4|0;if(J<<24>>24!=(a[Q]|0)){ar=Q;break}Q=N+5|0;if(J<<24>>24!=(a[Q]|0)){ar=Q;break}Q=N+6|0;if(J<<24>>24!=(a[Q]|0)){ar=Q;break}Q=N+7|0;if(J<<24>>24!=(a[Q]|0)){ar=Q;break}Q=N+8|0;if(J<<24>>24==(a[Q]|0)&Q>>>0<U>>>0){N=Q}else{ar=Q;break}}N=ar-U+258|0;J=N>>>0>ap>>>0?ap:N;c[r>>2]=J;if(J>>>0<=2){aq=M;z=1870;break}N=J+253|0;b[(c[I>>2]|0)+(c[u>>2]<<1)>>1]=1;J=c[u>>2]|0;c[u>>2]=J+1;a[(c[t>>2]|0)+J|0]=N&255;J=i+148+((d[42232+(N&255)|0]|256)+1<<2)|0;b[J>>1]=(b[J>>1]|0)+1&65535;b[L>>1]=(b[L>>1]|0)+1&65535;J=(c[u>>2]|0)==((c[w>>2]|0)-1|0);N=c[r>>2]|0;c[l>>2]=(c[l>>2]|0)-N;Q=(c[v>>2]|0)+N|0;c[v>>2]=Q;c[r>>2]=0;if(J){as=Q}else{continue L2466}}}while(0);if((z|0)==1870){z=0;Q=a[(c[A>>2]|0)+aq|0]|0;b[(c[I>>2]|0)+(c[u>>2]<<1)>>1]=0;J=c[u>>2]|0;c[u>>2]=J+1;a[(c[t>>2]|0)+J|0]=Q;J=i+148+((Q&255)<<2)|0;b[J>>1]=(b[J>>1]|0)+1&65535;J=(c[u>>2]|0)==((c[w>>2]|0)-1|0);c[l>>2]=(c[l>>2]|0)-1;Q=(c[v>>2]|0)+1|0;c[v>>2]=Q;if(J){as=Q}else{continue}}Q=c[K>>2]|0;if((Q|0)>-1){at=(c[A>>2]|0)+Q|0}else{at=0}he(i,at,as-Q|0,0);c[K>>2]=c[v>>2];Q=c[o>>2]|0;J=c[Q+28>>2]|0;hc(J);N=J+20|0;R=c[N>>2]|0;T=Q+16|0;V=c[T>>2]|0;S=R>>>0>V>>>0?V:R;do{if((S|0)!=0){R=Q+12|0;V=c[R>>2]|0;au=J+16|0;av=c[au>>2]|0;hu(V|0,av|0,S)|0;c[R>>2]=(c[R>>2]|0)+S;c[au>>2]=(c[au>>2]|0)+S;R=Q+20|0;c[R>>2]=(c[R>>2]|0)+S;c[T>>2]=(c[T>>2]|0)-S;R=c[N>>2]|0;c[N>>2]=R-S;if((R|0)!=(S|0)){break}c[au>>2]=c[J+8>>2]}}while(0);if((c[(c[o>>2]|0)+16>>2]|0)==0){z=1895;break L2464}}c[i+5812>>2]=0;if(m){l=c[K>>2]|0;if((l|0)>-1){aw=(c[A>>2]|0)+l|0}else{aw=0}he(i,aw,(c[v>>2]|0)-l|0,1);c[K>>2]=c[v>>2];l=c[o>>2]|0;w=c[l+28>>2]|0;hc(w);t=w+20|0;I=c[t>>2]|0;r=l+16|0;L=c[r>>2]|0;H=I>>>0>L>>>0?L:I;do{if((H|0)!=0){I=l+12|0;L=c[I>>2]|0;J=w+16|0;S=c[J>>2]|0;hu(L|0,S|0,H)|0;c[I>>2]=(c[I>>2]|0)+H;c[J>>2]=(c[J>>2]|0)+H;I=l+20|0;c[I>>2]=(c[I>>2]|0)+H;c[r>>2]=(c[r>>2]|0)-H;I=c[t>>2]|0;c[t>>2]=I-H;if((I|0)!=(H|0)){break}c[J>>2]=c[w+8>>2]}}while(0);ax=(c[(c[o>>2]|0)+16>>2]|0)==0?2:3;z=1892;break}if((c[u>>2]|0)==0){break}w=c[K>>2]|0;if((w|0)>-1){ay=(c[A>>2]|0)+w|0}else{ay=0}he(i,ay,(c[v>>2]|0)-w|0,0);c[K>>2]=c[v>>2];w=c[o>>2]|0;H=c[w+28>>2]|0;hc(H);t=H+20|0;r=c[t>>2]|0;l=w+16|0;J=c[l>>2]|0;I=r>>>0>J>>>0?J:r;do{if((I|0)!=0){r=w+12|0;J=c[r>>2]|0;S=H+16|0;L=c[S>>2]|0;hu(J|0,L|0,I)|0;c[r>>2]=(c[r>>2]|0)+I;c[S>>2]=(c[S>>2]|0)+I;r=w+20|0;c[r>>2]=(c[r>>2]|0)+I;c[l>>2]=(c[l>>2]|0)-I;r=c[t>>2]|0;c[t>>2]=r-I;if((r|0)!=(I|0)){break}c[S>>2]=c[H+8>>2]}}while(0);if((c[(c[o>>2]|0)+16>>2]|0)==0){z=1895}}else if((q|0)==2){H=i+116|0;I=i+96|0;t=i+108|0;l=i+56|0;w=i+5792|0;v=i+5796|0;K=i+5784|0;A=i+5788|0;u=i+92|0;while(1){if((c[H>>2]|0)==0){gV(i);if((c[H>>2]|0)==0){break}}c[I>>2]=0;S=a[(c[l>>2]|0)+(c[t>>2]|0)|0]|0;b[(c[v>>2]|0)+(c[w>>2]<<1)>>1]=0;r=c[w>>2]|0;c[w>>2]=r+1;a[(c[K>>2]|0)+r|0]=S;r=i+148+((S&255)<<2)|0;b[r>>1]=(b[r>>1]|0)+1&65535;r=(c[w>>2]|0)==((c[A>>2]|0)-1|0);c[H>>2]=(c[H>>2]|0)-1;S=(c[t>>2]|0)+1|0;c[t>>2]=S;if(!r){continue}r=c[u>>2]|0;if((r|0)>-1){az=(c[l>>2]|0)+r|0}else{az=0}he(i,az,S-r|0,0);c[u>>2]=c[t>>2];r=c[o>>2]|0;S=c[r+28>>2]|0;hc(S);L=S+20|0;J=c[L>>2]|0;N=r+16|0;T=c[N>>2]|0;Q=J>>>0>T>>>0?T:J;do{if((Q|0)!=0){J=r+12|0;T=c[J>>2]|0;au=S+16|0;R=c[au>>2]|0;hu(T|0,R|0,Q)|0;c[J>>2]=(c[J>>2]|0)+Q;c[au>>2]=(c[au>>2]|0)+Q;J=r+20|0;c[J>>2]=(c[J>>2]|0)+Q;c[N>>2]=(c[N>>2]|0)-Q;J=c[L>>2]|0;c[L>>2]=J-Q;if((J|0)!=(Q|0)){break}c[au>>2]=c[S+8>>2]}}while(0);if((c[(c[o>>2]|0)+16>>2]|0)==0){z=1895;break L2464}}if((f|0)==0){z=1895;break}c[i+5812>>2]=0;if(m){H=c[u>>2]|0;if((H|0)>-1){aA=(c[l>>2]|0)+H|0}else{aA=0}he(i,aA,(c[t>>2]|0)-H|0,1);c[u>>2]=c[t>>2];H=c[o>>2]|0;A=c[H+28>>2]|0;hc(A);K=A+20|0;v=c[K>>2]|0;I=H+16|0;S=c[I>>2]|0;Q=v>>>0>S>>>0?S:v;do{if((Q|0)!=0){v=H+12|0;S=c[v>>2]|0;L=A+16|0;N=c[L>>2]|0;hu(S|0,N|0,Q)|0;c[v>>2]=(c[v>>2]|0)+Q;c[L>>2]=(c[L>>2]|0)+Q;v=H+20|0;c[v>>2]=(c[v>>2]|0)+Q;c[I>>2]=(c[I>>2]|0)-Q;v=c[K>>2]|0;c[K>>2]=v-Q;if((v|0)!=(Q|0)){break}c[L>>2]=c[A+8>>2]}}while(0);ax=(c[(c[o>>2]|0)+16>>2]|0)==0?2:3;z=1892;break}if((c[w>>2]|0)==0){break}A=c[u>>2]|0;if((A|0)>-1){aB=(c[l>>2]|0)+A|0}else{aB=0}he(i,aB,(c[t>>2]|0)-A|0,0);c[u>>2]=c[t>>2];A=c[o>>2]|0;Q=c[A+28>>2]|0;hc(Q);K=Q+20|0;I=c[K>>2]|0;H=A+16|0;L=c[H>>2]|0;v=I>>>0>L>>>0?L:I;do{if((v|0)!=0){I=A+12|0;L=c[I>>2]|0;N=Q+16|0;S=c[N>>2]|0;hu(L|0,S|0,v)|0;c[I>>2]=(c[I>>2]|0)+v;c[N>>2]=(c[N>>2]|0)+v;I=A+20|0;c[I>>2]=(c[I>>2]|0)+v;c[H>>2]=(c[H>>2]|0)-v;I=c[K>>2]|0;c[K>>2]=I-v;if((I|0)!=(v|0)){break}c[N>>2]=c[Q+8>>2]}}while(0);if((c[(c[o>>2]|0)+16>>2]|0)==0){z=1895}}else{ax=bj[c[22376+((c[i+132>>2]|0)*12|0)>>2]&63](i,f)|0;z=1892}}while(0);if((z|0)==1892){if((ax-2|0)>>>0<2){c[k>>2]=666}if((ax|0)==2|(ax|0)==0){z=1895}else if((ax|0)!=1){break}}if((z|0)==1895){if((c[n>>2]|0)!=0){g=0;return g|0}c[p>>2]=-1;g=0;return g|0}do{if((f|0)==1){hd(i)}else if((f|0)!=5){hb(i,0,0,0);if((f|0)!=3){break}q=i+76|0;P=i+68|0;b[(c[P>>2]|0)+((c[q>>2]|0)-1<<1)>>1]=0;hv(c[P>>2]|0,0,(c[q>>2]<<1)-2|0);if((c[i+116>>2]|0)!=0){break}c[i+108>>2]=0;c[i+92>>2]=0;c[i+5812>>2]=0}}while(0);q=c[h>>2]|0;hc(q);P=q+20|0;O=c[P>>2]|0;Q=c[n>>2]|0;v=O>>>0>Q>>>0?Q:O;if((v|0)==0){aC=Q}else{Q=c[j>>2]|0;O=q+16|0;K=c[O>>2]|0;hu(Q|0,K|0,v)|0;c[j>>2]=(c[j>>2]|0)+v;c[O>>2]=(c[O>>2]|0)+v;K=e+20|0;c[K>>2]=(c[K>>2]|0)+v;c[n>>2]=(c[n>>2]|0)-v;K=c[P>>2]|0;c[P>>2]=K-v;if((K|0)==(v|0)){c[O>>2]=c[q+8>>2]}aC=c[n>>2]|0}if((aC|0)!=0){break}c[p>>2]=-1;g=0;return g|0}}while(0);if(!m){g=0;return g|0}p=i+24|0;k=c[p>>2]|0;if((k|0)<1){g=1;return g|0}o=e+48|0;q=c[o>>2]|0;if((k|0)==2){k=c[x>>2]|0;c[x>>2]=k+1;O=i+8|0;a[(c[O>>2]|0)+k|0]=q&255;k=(c[o>>2]|0)>>>8&255;v=c[x>>2]|0;c[x>>2]=v+1;a[(c[O>>2]|0)+v|0]=k;k=(c[o>>2]|0)>>>16&255;v=c[x>>2]|0;c[x>>2]=v+1;a[(c[O>>2]|0)+v|0]=k;k=(c[o>>2]|0)>>>24&255;v=c[x>>2]|0;c[x>>2]=v+1;a[(c[O>>2]|0)+v|0]=k;k=e+8|0;v=c[k>>2]&255;K=c[x>>2]|0;c[x>>2]=K+1;a[(c[O>>2]|0)+K|0]=v;v=(c[k>>2]|0)>>>8&255;K=c[x>>2]|0;c[x>>2]=K+1;a[(c[O>>2]|0)+K|0]=v;v=(c[k>>2]|0)>>>16&255;K=c[x>>2]|0;c[x>>2]=K+1;a[(c[O>>2]|0)+K|0]=v;v=(c[k>>2]|0)>>>24&255;k=c[x>>2]|0;c[x>>2]=k+1;a[(c[O>>2]|0)+k|0]=v}else{v=c[x>>2]|0;c[x>>2]=v+1;k=i+8|0;a[(c[k>>2]|0)+v|0]=q>>>24&255;v=c[x>>2]|0;c[x>>2]=v+1;a[(c[k>>2]|0)+v|0]=q>>>16&255;q=c[o>>2]|0;o=c[x>>2]|0;c[x>>2]=o+1;a[(c[k>>2]|0)+o|0]=q>>>8&255;o=c[x>>2]|0;c[x>>2]=o+1;a[(c[k>>2]|0)+o|0]=q&255}q=c[h>>2]|0;hc(q);o=q+20|0;k=c[o>>2]|0;v=c[n>>2]|0;O=k>>>0>v>>>0?v:k;do{if((O|0)!=0){k=c[j>>2]|0;v=q+16|0;K=c[v>>2]|0;hu(k|0,K|0,O)|0;c[j>>2]=(c[j>>2]|0)+O;c[v>>2]=(c[v>>2]|0)+O;K=e+20|0;c[K>>2]=(c[K>>2]|0)+O;c[n>>2]=(c[n>>2]|0)-O;K=c[o>>2]|0;c[o>>2]=K-O;if((K|0)!=(O|0)){break}c[v>>2]=c[q+8>>2]}}while(0);q=c[p>>2]|0;if((q|0)>0){c[p>>2]=-q}g=(c[x>>2]|0)==0|0;return g|0}}while(0);c[e+24>>2]=c[80];g=-2;return g|0}function gZ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;d=(c[a+12>>2]|0)-5|0;e=d>>>0<65535?d:65535;d=a+116|0;f=a+108|0;g=a+92|0;h=a+44|0;i=a+56|0;j=a|0;while(1){k=c[d>>2]|0;if(k>>>0<2){gV(a);l=c[d>>2]|0;if((l|b|0)==0){m=0;n=1970;break}if((l|0)==0){n=1953;break}else{o=l}}else{o=k}k=(c[f>>2]|0)+o|0;c[f>>2]=k;c[d>>2]=0;l=c[g>>2]|0;p=l+e|0;if((k|0)!=0&k>>>0<p>>>0){q=k;r=l}else{c[d>>2]=k-p;c[f>>2]=p;if((l|0)>-1){s=(c[i>>2]|0)+l|0}else{s=0}he(a,s,e,0);c[g>>2]=c[f>>2];l=c[j>>2]|0;p=c[l+28>>2]|0;hc(p);k=p+20|0;t=c[k>>2]|0;u=l+16|0;v=c[u>>2]|0;w=t>>>0>v>>>0?v:t;do{if((w|0)!=0){t=l+12|0;v=c[t>>2]|0;x=p+16|0;y=c[x>>2]|0;hu(v|0,y|0,w)|0;c[t>>2]=(c[t>>2]|0)+w;c[x>>2]=(c[x>>2]|0)+w;t=l+20|0;c[t>>2]=(c[t>>2]|0)+w;c[u>>2]=(c[u>>2]|0)-w;t=c[k>>2]|0;c[k>>2]=t-w;if((t|0)!=(w|0)){break}c[x>>2]=c[p+8>>2]}}while(0);if((c[(c[j>>2]|0)+16>>2]|0)==0){m=0;n=1972;break}q=c[f>>2]|0;r=c[g>>2]|0}p=q-r|0;if(p>>>0<((c[h>>2]|0)-262|0)>>>0){continue}if((r|0)>-1){z=(c[i>>2]|0)+r|0}else{z=0}he(a,z,p,0);c[g>>2]=c[f>>2];p=c[j>>2]|0;w=c[p+28>>2]|0;hc(w);k=w+20|0;u=c[k>>2]|0;l=p+16|0;x=c[l>>2]|0;t=u>>>0>x>>>0?x:u;do{if((t|0)!=0){u=p+12|0;x=c[u>>2]|0;y=w+16|0;v=c[y>>2]|0;hu(x|0,v|0,t)|0;c[u>>2]=(c[u>>2]|0)+t;c[y>>2]=(c[y>>2]|0)+t;u=p+20|0;c[u>>2]=(c[u>>2]|0)+t;c[l>>2]=(c[l>>2]|0)-t;u=c[k>>2]|0;c[k>>2]=u-t;if((u|0)!=(t|0)){break}c[y>>2]=c[w+8>>2]}}while(0);if((c[(c[j>>2]|0)+16>>2]|0)==0){m=0;n=1974;break}}if((n|0)==1953){c[a+5812>>2]=0;if((b|0)==4){b=c[g>>2]|0;if((b|0)>-1){A=(c[i>>2]|0)+b|0}else{A=0}he(a,A,(c[f>>2]|0)-b|0,1);c[g>>2]=c[f>>2];b=c[j>>2]|0;A=c[b+28>>2]|0;hc(A);z=A+20|0;r=c[z>>2]|0;h=b+16|0;q=c[h>>2]|0;e=r>>>0>q>>>0?q:r;do{if((e|0)!=0){r=b+12|0;q=c[r>>2]|0;s=A+16|0;d=c[s>>2]|0;hu(q|0,d|0,e)|0;c[r>>2]=(c[r>>2]|0)+e;c[s>>2]=(c[s>>2]|0)+e;r=b+20|0;c[r>>2]=(c[r>>2]|0)+e;c[h>>2]=(c[h>>2]|0)-e;r=c[z>>2]|0;c[z>>2]=r-e;if((r|0)!=(e|0)){break}c[s>>2]=c[A+8>>2]}}while(0);m=(c[(c[j>>2]|0)+16>>2]|0)==0?2:3;return m|0}A=c[f>>2]|0;e=c[g>>2]|0;do{if((A|0)>(e|0)){if((e|0)>-1){B=(c[i>>2]|0)+e|0}else{B=0}he(a,B,A-e|0,0);c[g>>2]=c[f>>2];z=c[j>>2]|0;h=c[z+28>>2]|0;hc(h);b=h+20|0;s=c[b>>2]|0;r=z+16|0;d=c[r>>2]|0;q=s>>>0>d>>>0?d:s;do{if((q|0)!=0){s=z+12|0;d=c[s>>2]|0;o=h+16|0;w=c[o>>2]|0;hu(d|0,w|0,q)|0;c[s>>2]=(c[s>>2]|0)+q;c[o>>2]=(c[o>>2]|0)+q;s=z+20|0;c[s>>2]=(c[s>>2]|0)+q;c[r>>2]=(c[r>>2]|0)-q;s=c[b>>2]|0;c[b>>2]=s-q;if((s|0)!=(q|0)){break}c[o>>2]=c[h+8>>2]}}while(0);if((c[(c[j>>2]|0)+16>>2]|0)==0){m=0}else{break}return m|0}}while(0);m=1;return m|0}else if((n|0)==1970){return m|0}else if((n|0)==1972){return m|0}else if((n|0)==1974){return m|0}return 0}function g_(e,f){e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;g=e+116|0;h=(f|0)==0;i=e+72|0;j=e+88|0;k=e+108|0;l=e+56|0;m=e+84|0;n=e+68|0;o=e+52|0;p=e+64|0;q=e+44|0;r=e+96|0;s=e+112|0;t=e+5792|0;u=e+5796|0;v=e+5784|0;w=e+5788|0;x=e+128|0;y=e+92|0;z=e|0;while(1){if((c[g>>2]|0)>>>0<262){gV(e);A=c[g>>2]|0;if(A>>>0<262&h){B=0;C=2017;break}if((A|0)==0){C=2e3;break}if(A>>>0>2){C=1980}else{C=1983}}else{C=1980}do{if((C|0)==1980){C=0;A=c[k>>2]|0;D=((d[(c[l>>2]|0)+(A+2)|0]|0)^c[i>>2]<<c[j>>2])&c[m>>2];c[i>>2]=D;E=b[(c[n>>2]|0)+(D<<1)>>1]|0;b[(c[p>>2]|0)+((c[o>>2]&A)<<1)>>1]=E;A=E&65535;b[(c[n>>2]|0)+(c[i>>2]<<1)>>1]=c[k>>2]&65535;if(E<<16>>16==0){C=1983;break}if(((c[k>>2]|0)-A|0)>>>0>((c[q>>2]|0)-262|0)>>>0){C=1983;break}E=g0(e,A)|0;c[r>>2]=E;F=E}}while(0);if((C|0)==1983){C=0;F=c[r>>2]|0}do{if(F>>>0>2){E=F+253|0;A=(c[k>>2]|0)-(c[s>>2]|0)&65535;b[(c[u>>2]|0)+(c[t>>2]<<1)>>1]=A;D=c[t>>2]|0;c[t>>2]=D+1;a[(c[v>>2]|0)+D|0]=E&255;D=A-1&65535;A=e+148+((d[42232+(E&255)|0]|0|256)+1<<2)|0;b[A>>1]=(b[A>>1]|0)+1&65535;A=D&65535;if((D&65535)<256){G=A}else{G=(A>>>7)+256|0}A=e+2440+((d[42488+G|0]|0)<<2)|0;b[A>>1]=(b[A>>1]|0)+1&65535;A=(c[t>>2]|0)==((c[w>>2]|0)-1|0)|0;D=c[r>>2]|0;E=(c[g>>2]|0)-D|0;c[g>>2]=E;if(!(D>>>0<=(c[x>>2]|0)>>>0&E>>>0>2)){E=(c[k>>2]|0)+D|0;c[k>>2]=E;c[r>>2]=0;H=c[l>>2]|0;I=d[H+E|0]|0;c[i>>2]=I;c[i>>2]=((d[H+(E+1)|0]|0)^I<<c[j>>2])&c[m>>2];J=A;K=E;break}c[r>>2]=D-1;do{D=c[k>>2]|0;E=D+1|0;c[k>>2]=E;I=((d[(c[l>>2]|0)+(D+3)|0]|0)^c[i>>2]<<c[j>>2])&c[m>>2];c[i>>2]=I;b[(c[p>>2]|0)+((c[o>>2]&E)<<1)>>1]=b[(c[n>>2]|0)+(I<<1)>>1]|0;b[(c[n>>2]|0)+(c[i>>2]<<1)>>1]=c[k>>2]&65535;I=(c[r>>2]|0)-1|0;c[r>>2]=I;}while((I|0)!=0);I=(c[k>>2]|0)+1|0;c[k>>2]=I;J=A;K=I}else{I=a[(c[l>>2]|0)+(c[k>>2]|0)|0]|0;b[(c[u>>2]|0)+(c[t>>2]<<1)>>1]=0;E=c[t>>2]|0;c[t>>2]=E+1;a[(c[v>>2]|0)+E|0]=I;E=e+148+((I&255)<<2)|0;b[E>>1]=(b[E>>1]|0)+1&65535;E=(c[t>>2]|0)==((c[w>>2]|0)-1|0)|0;c[g>>2]=(c[g>>2]|0)-1;I=(c[k>>2]|0)+1|0;c[k>>2]=I;J=E;K=I}}while(0);if((J|0)==0){continue}I=c[y>>2]|0;if((I|0)>-1){L=(c[l>>2]|0)+I|0}else{L=0}he(e,L,K-I|0,0);c[y>>2]=c[k>>2];I=c[z>>2]|0;E=c[I+28>>2]|0;hc(E);D=E+20|0;H=c[D>>2]|0;M=I+16|0;N=c[M>>2]|0;O=H>>>0>N>>>0?N:H;do{if((O|0)!=0){H=I+12|0;N=c[H>>2]|0;P=E+16|0;Q=c[P>>2]|0;hu(N|0,Q|0,O)|0;c[H>>2]=(c[H>>2]|0)+O;c[P>>2]=(c[P>>2]|0)+O;H=I+20|0;c[H>>2]=(c[H>>2]|0)+O;c[M>>2]=(c[M>>2]|0)-O;H=c[D>>2]|0;c[D>>2]=H-O;if((H|0)!=(O|0)){break}c[P>>2]=c[E+8>>2]}}while(0);if((c[(c[z>>2]|0)+16>>2]|0)==0){B=0;C=2020;break}}if((C|0)==2017){return B|0}else if((C|0)==2020){return B|0}else if((C|0)==2e3){C=c[k>>2]|0;c[e+5812>>2]=C>>>0<2?C:2;if((f|0)==4){f=c[y>>2]|0;if((f|0)>-1){R=(c[l>>2]|0)+f|0}else{R=0}he(e,R,C-f|0,1);c[y>>2]=c[k>>2];f=c[z>>2]|0;R=c[f+28>>2]|0;hc(R);K=R+20|0;L=c[K>>2]|0;J=f+16|0;g=c[J>>2]|0;w=L>>>0>g>>>0?g:L;do{if((w|0)!=0){L=f+12|0;g=c[L>>2]|0;v=R+16|0;u=c[v>>2]|0;hu(g|0,u|0,w)|0;c[L>>2]=(c[L>>2]|0)+w;c[v>>2]=(c[v>>2]|0)+w;L=f+20|0;c[L>>2]=(c[L>>2]|0)+w;c[J>>2]=(c[J>>2]|0)-w;L=c[K>>2]|0;c[K>>2]=L-w;if((L|0)!=(w|0)){break}c[v>>2]=c[R+8>>2]}}while(0);B=(c[(c[z>>2]|0)+16>>2]|0)==0?2:3;return B|0}do{if((c[t>>2]|0)!=0){R=c[y>>2]|0;if((R|0)>-1){S=(c[l>>2]|0)+R|0}else{S=0}he(e,S,C-R|0,0);c[y>>2]=c[k>>2];R=c[z>>2]|0;w=c[R+28>>2]|0;hc(w);K=w+20|0;J=c[K>>2]|0;f=R+16|0;v=c[f>>2]|0;L=J>>>0>v>>>0?v:J;do{if((L|0)!=0){J=R+12|0;v=c[J>>2]|0;u=w+16|0;g=c[u>>2]|0;hu(v|0,g|0,L)|0;c[J>>2]=(c[J>>2]|0)+L;c[u>>2]=(c[u>>2]|0)+L;J=R+20|0;c[J>>2]=(c[J>>2]|0)+L;c[f>>2]=(c[f>>2]|0)-L;J=c[K>>2]|0;c[K>>2]=J-L;if((J|0)!=(L|0)){break}c[u>>2]=c[w+8>>2]}}while(0);if((c[(c[z>>2]|0)+16>>2]|0)==0){B=0}else{break}return B|0}}while(0);B=1;return B|0}return 0}function g$(e,f){e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;g=e+116|0;h=(f|0)==0;i=e+72|0;j=e+88|0;k=e+108|0;l=e+56|0;m=e+84|0;n=e+68|0;o=e+52|0;p=e+64|0;q=e+96|0;r=e+120|0;s=e+112|0;t=e+100|0;u=e+5792|0;v=e+5796|0;w=e+5784|0;x=e+5788|0;y=e+104|0;z=e+92|0;A=e|0;B=e+128|0;C=e+44|0;D=e+136|0;L2719:while(1){E=c[g>>2]|0;while(1){do{if(E>>>0<262){gV(e);F=c[g>>2]|0;if(F>>>0<262&h){G=0;H=2079;break L2719}if((F|0)==0){H=2060;break L2719}if(F>>>0>2){H=2028;break}c[r>>2]=c[q>>2];c[t>>2]=c[s>>2];c[q>>2]=2;I=2;H=2036}else{H=2028}}while(0);do{if((H|0)==2028){H=0;F=c[k>>2]|0;J=((d[(c[l>>2]|0)+(F+2)|0]|0)^c[i>>2]<<c[j>>2])&c[m>>2];c[i>>2]=J;K=b[(c[n>>2]|0)+(J<<1)>>1]|0;b[(c[p>>2]|0)+((c[o>>2]&F)<<1)>>1]=K;F=K&65535;b[(c[n>>2]|0)+(c[i>>2]<<1)>>1]=c[k>>2]&65535;J=c[q>>2]|0;c[r>>2]=J;c[t>>2]=c[s>>2];c[q>>2]=2;if(K<<16>>16==0){I=2;H=2036;break}if(J>>>0>=(c[B>>2]|0)>>>0){L=J;M=2;break}if(((c[k>>2]|0)-F|0)>>>0>((c[C>>2]|0)-262|0)>>>0){I=2;H=2036;break}J=g0(e,F)|0;c[q>>2]=J;if(J>>>0>=6){I=J;H=2036;break}if((c[D>>2]|0)!=1){if((J|0)!=3){I=J;H=2036;break}if(((c[k>>2]|0)-(c[s>>2]|0)|0)>>>0<=4096){I=3;H=2036;break}}c[q>>2]=2;I=2;H=2036}}while(0);if((H|0)==2036){H=0;L=c[r>>2]|0;M=I}if(!(L>>>0<3|M>>>0>L>>>0)){break}if((c[y>>2]|0)==0){c[y>>2]=1;c[k>>2]=(c[k>>2]|0)+1;J=(c[g>>2]|0)-1|0;c[g>>2]=J;E=J;continue}J=a[(c[l>>2]|0)+((c[k>>2]|0)-1)|0]|0;b[(c[v>>2]|0)+(c[u>>2]<<1)>>1]=0;F=c[u>>2]|0;c[u>>2]=F+1;a[(c[w>>2]|0)+F|0]=J;F=e+148+((J&255)<<2)|0;b[F>>1]=(b[F>>1]|0)+1&65535;do{if((c[u>>2]|0)==((c[x>>2]|0)-1|0)){F=c[z>>2]|0;if((F|0)>-1){N=(c[l>>2]|0)+F|0}else{N=0}he(e,N,(c[k>>2]|0)-F|0,0);c[z>>2]=c[k>>2];F=c[A>>2]|0;J=c[F+28>>2]|0;hc(J);K=J+20|0;O=c[K>>2]|0;P=F+16|0;Q=c[P>>2]|0;R=O>>>0>Q>>>0?Q:O;if((R|0)==0){break}O=F+12|0;Q=c[O>>2]|0;S=J+16|0;T=c[S>>2]|0;hu(Q|0,T|0,R)|0;c[O>>2]=(c[O>>2]|0)+R;c[S>>2]=(c[S>>2]|0)+R;O=F+20|0;c[O>>2]=(c[O>>2]|0)+R;c[P>>2]=(c[P>>2]|0)-R;P=c[K>>2]|0;c[K>>2]=P-R;if((P|0)!=(R|0)){break}c[S>>2]=c[J+8>>2]}}while(0);c[k>>2]=(c[k>>2]|0)+1;J=(c[g>>2]|0)-1|0;c[g>>2]=J;if((c[(c[A>>2]|0)+16>>2]|0)==0){G=0;H=2081;break L2719}else{E=J}}E=c[k>>2]|0;J=E-3+(c[g>>2]|0)|0;S=L+253|0;R=E+65535-(c[t>>2]|0)&65535;b[(c[v>>2]|0)+(c[u>>2]<<1)>>1]=R;E=c[u>>2]|0;c[u>>2]=E+1;a[(c[w>>2]|0)+E|0]=S&255;E=R-1&65535;R=e+148+((d[42232+(S&255)|0]|0|256)+1<<2)|0;b[R>>1]=(b[R>>1]|0)+1&65535;R=E&65535;if((E&65535)<256){U=R}else{U=(R>>>7)+256|0}R=e+2440+((d[42488+U|0]|0)<<2)|0;b[R>>1]=(b[R>>1]|0)+1&65535;R=c[u>>2]|0;E=(c[x>>2]|0)-1|0;S=c[r>>2]|0;c[g>>2]=1-S+(c[g>>2]|0);P=S-2|0;c[r>>2]=P;S=P;do{P=c[k>>2]|0;K=P+1|0;c[k>>2]=K;if(K>>>0>J>>>0){V=S}else{O=((d[(c[l>>2]|0)+(P+3)|0]|0)^c[i>>2]<<c[j>>2])&c[m>>2];c[i>>2]=O;b[(c[p>>2]|0)+((c[o>>2]&K)<<1)>>1]=b[(c[n>>2]|0)+(O<<1)>>1]|0;b[(c[n>>2]|0)+(c[i>>2]<<1)>>1]=c[k>>2]&65535;V=c[r>>2]|0}S=V-1|0;c[r>>2]=S;}while((S|0)!=0);c[y>>2]=0;c[q>>2]=2;S=(c[k>>2]|0)+1|0;c[k>>2]=S;if((R|0)!=(E|0)){continue}J=c[z>>2]|0;if((J|0)>-1){W=(c[l>>2]|0)+J|0}else{W=0}he(e,W,S-J|0,0);c[z>>2]=c[k>>2];J=c[A>>2]|0;S=c[J+28>>2]|0;hc(S);O=S+20|0;K=c[O>>2]|0;P=J+16|0;F=c[P>>2]|0;T=K>>>0>F>>>0?F:K;do{if((T|0)!=0){K=J+12|0;F=c[K>>2]|0;Q=S+16|0;X=c[Q>>2]|0;hu(F|0,X|0,T)|0;c[K>>2]=(c[K>>2]|0)+T;c[Q>>2]=(c[Q>>2]|0)+T;K=J+20|0;c[K>>2]=(c[K>>2]|0)+T;c[P>>2]=(c[P>>2]|0)-T;K=c[O>>2]|0;c[O>>2]=K-T;if((K|0)!=(T|0)){break}c[Q>>2]=c[S+8>>2]}}while(0);if((c[(c[A>>2]|0)+16>>2]|0)==0){G=0;H=2082;break}}if((H|0)==2060){if((c[y>>2]|0)!=0){W=a[(c[l>>2]|0)+((c[k>>2]|0)-1)|0]|0;b[(c[v>>2]|0)+(c[u>>2]<<1)>>1]=0;v=c[u>>2]|0;c[u>>2]=v+1;a[(c[w>>2]|0)+v|0]=W;v=e+148+((W&255)<<2)|0;b[v>>1]=(b[v>>1]|0)+1&65535;c[y>>2]=0}y=c[k>>2]|0;c[e+5812>>2]=y>>>0<2?y:2;if((f|0)==4){f=c[z>>2]|0;if((f|0)>-1){Y=(c[l>>2]|0)+f|0}else{Y=0}he(e,Y,y-f|0,1);c[z>>2]=c[k>>2];f=c[A>>2]|0;Y=c[f+28>>2]|0;hc(Y);v=Y+20|0;W=c[v>>2]|0;w=f+16|0;q=c[w>>2]|0;r=W>>>0>q>>>0?q:W;do{if((r|0)!=0){W=f+12|0;q=c[W>>2]|0;V=Y+16|0;i=c[V>>2]|0;hu(q|0,i|0,r)|0;c[W>>2]=(c[W>>2]|0)+r;c[V>>2]=(c[V>>2]|0)+r;W=f+20|0;c[W>>2]=(c[W>>2]|0)+r;c[w>>2]=(c[w>>2]|0)-r;W=c[v>>2]|0;c[v>>2]=W-r;if((W|0)!=(r|0)){break}c[V>>2]=c[Y+8>>2]}}while(0);G=(c[(c[A>>2]|0)+16>>2]|0)==0?2:3;return G|0}do{if((c[u>>2]|0)!=0){Y=c[z>>2]|0;if((Y|0)>-1){Z=(c[l>>2]|0)+Y|0}else{Z=0}he(e,Z,y-Y|0,0);c[z>>2]=c[k>>2];Y=c[A>>2]|0;r=c[Y+28>>2]|0;hc(r);v=r+20|0;w=c[v>>2]|0;f=Y+16|0;V=c[f>>2]|0;W=w>>>0>V>>>0?V:w;do{if((W|0)!=0){w=Y+12|0;V=c[w>>2]|0;i=r+16|0;q=c[i>>2]|0;hu(V|0,q|0,W)|0;c[w>>2]=(c[w>>2]|0)+W;c[i>>2]=(c[i>>2]|0)+W;w=Y+20|0;c[w>>2]=(c[w>>2]|0)+W;c[f>>2]=(c[f>>2]|0)-W;w=c[v>>2]|0;c[v>>2]=w-W;if((w|0)!=(W|0)){break}c[i>>2]=c[r+8>>2]}}while(0);if((c[(c[A>>2]|0)+16>>2]|0)==0){G=0}else{break}return G|0}}while(0);G=1;return G|0}else if((H|0)==2079){return G|0}else if((H|0)==2081){return G|0}else if((H|0)==2082){return G|0}return 0}function g0(b,d){b=b|0;d=d|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;f=c[b+124>>2]|0;g=c[b+56>>2]|0;h=c[b+108>>2]|0;i=g+h|0;j=c[b+120>>2]|0;k=c[b+144>>2]|0;l=(c[b+44>>2]|0)-262|0;m=h>>>0>l>>>0?h-l|0:0;l=c[b+64>>2]|0;n=c[b+52>>2]|0;o=g+(h+258)|0;p=c[b+116>>2]|0;q=k>>>0>p>>>0?p:k;k=b+112|0;r=g+(h+1)|0;s=g+(h+2)|0;t=o;u=h+257|0;v=a[g+(j+h)|0]|0;w=a[g+(h-1+j)|0]|0;x=d;d=j>>>0<(c[b+140>>2]|0)>>>0?f:f>>>2;f=j;L2803:while(1){j=g+x|0;do{if((a[g+(x+f)|0]|0)==v<<24>>24){if((a[g+(f-1+x)|0]|0)!=w<<24>>24){y=v;z=w;A=f;break}if((a[j]|0)!=(a[i]|0)){y=v;z=w;A=f;break}if((a[g+(x+1)|0]|0)!=(a[r]|0)){y=v;z=w;A=f;break}b=s;B=g+(x+2)|0;while(1){C=b+1|0;if((a[C]|0)!=(a[B+1|0]|0)){D=C;break}C=b+2|0;if((a[C]|0)!=(a[B+2|0]|0)){D=C;break}C=b+3|0;if((a[C]|0)!=(a[B+3|0]|0)){D=C;break}C=b+4|0;if((a[C]|0)!=(a[B+4|0]|0)){D=C;break}C=b+5|0;if((a[C]|0)!=(a[B+5|0]|0)){D=C;break}C=b+6|0;if((a[C]|0)!=(a[B+6|0]|0)){D=C;break}C=b+7|0;if((a[C]|0)!=(a[B+7|0]|0)){D=C;break}C=b+8|0;E=B+8|0;if((a[C]|0)==(a[E]|0)&C>>>0<o>>>0){b=C;B=E}else{D=C;break}}B=D-t|0;b=B+258|0;if((b|0)<=(f|0)){y=v;z=w;A=f;break}c[k>>2]=x;if((b|0)>=(q|0)){F=b;G=2105;break L2803}y=a[g+(b+h)|0]|0;z=a[g+(u+B)|0]|0;A=b}else{y=v;z=w;A=f}}while(0);j=e[l+((x&n)<<1)>>1]|0;if(j>>>0<=m>>>0){F=A;G=2104;break}b=d-1|0;if((b|0)==0){F=A;G=2106;break}else{v=y;w=z;x=j;d=b;f=A}}if((G|0)==2104){H=F>>>0>p>>>0;I=H?p:F;return I|0}else if((G|0)==2105){H=F>>>0>p>>>0;I=H?p:F;return I|0}else if((G|0)==2106){H=F>>>0>p>>>0;I=H?p:F;return I|0}return 0}function g1(a){a=a|0;var b=0,d=0,e=0,f=0;if((a|0)==0){b=-2;return b|0}d=a+28|0;e=c[d>>2]|0;if((e|0)==0){b=-2;return b|0}f=e;c[f+40>>2]=0;c[f+44>>2]=0;c[f+48>>2]=0;f=c[d>>2]|0;if((f|0)==0){b=-2;return b|0}d=f;c[d+28>>2]=0;c[a+20>>2]=0;c[a+8>>2]=0;c[a+24>>2]=0;e=c[d+8>>2]|0;if((e|0)!=0){c[a+48>>2]=e&1}c[f>>2]=0;c[d+4>>2]=0;c[d+12>>2]=0;c[d+20>>2]=32768;c[d+32>>2]=0;c[d+56>>2]=0;c[d+60>>2]=0;f=d+1328|0;c[d+108>>2]=f;c[d+80>>2]=f;c[d+76>>2]=f;c[d+7104>>2]=1;c[d+7108>>2]=-1;b=0;return b|0}function g2(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;if((a|0)==0){d=-2;return d|0}e=a+28|0;f=c[e>>2]|0;if((f|0)==0){d=-2;return d|0}g=f;if((b|0)<0){h=0;i=-b|0}else{h=(b>>4)+1|0;i=(b|0)<48?b&15:b}if((i|0)!=0&(i-8|0)>>>0>7){d=-2;return d|0}b=g+52|0;f=c[b>>2]|0;j=g+36|0;do{if((f|0)!=0){if((c[j>>2]|0)==(i|0)){break}bc[c[a+36>>2]&3](c[a+40>>2]|0,f);c[b>>2]=0}}while(0);c[g+8>>2]=h;c[j>>2]=i;i=c[e>>2]|0;if((i|0)==0){d=-2;return d|0}j=i;c[j+40>>2]=0;c[j+44>>2]=0;c[j+48>>2]=0;j=c[e>>2]|0;if((j|0)==0){d=-2;return d|0}e=j;c[e+28>>2]=0;c[a+20>>2]=0;c[a+8>>2]=0;c[a+24>>2]=0;i=c[e+8>>2]|0;if((i|0)!=0){c[a+48>>2]=i&1}c[j>>2]=0;c[e+4>>2]=0;c[e+12>>2]=0;c[e+20>>2]=32768;c[e+32>>2]=0;c[e+56>>2]=0;c[e+60>>2]=0;j=e+1328|0;c[e+108>>2]=j;c[e+80>>2]=j;c[e+76>>2]=j;c[e+7104>>2]=1;c[e+7108>>2]=-1;d=0;return d|0}function g3(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if((d|0)==0){f=-6;return f|0}if(!((a[d]|0)==49&(e|0)==56)){f=-6;return f|0}if((b|0)==0){f=-2;return f|0}c[b+24>>2]=0;e=b+32|0;d=c[e>>2]|0;if((d|0)==0){c[e>>2]=18;c[b+40>>2]=0;g=18}else{g=d}d=b+36|0;if((c[d>>2]|0)==0){c[d>>2]=2}e=b+40|0;h=be[g&63](c[e>>2]|0,1,7116)|0;if((h|0)==0){f=-4;return f|0}g=b+28|0;c[g>>2]=h;c[h+52>>2]=0;i=g2(b,15)|0;if((i|0)==0){f=0;return f|0}bc[c[d>>2]&3](c[e>>2]|0,h);c[g>>2]=0;f=i;return f|0}function g4(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0,ca=0,cb=0,cc=0,cd=0,ce=0,cf=0,cg=0,ch=0,ci=0,cj=0,ck=0,cl=0,cm=0,cn=0,co=0,cp=0,cq=0,cr=0,cs=0,ct=0,cu=0,cv=0,cw=0,cx=0,cy=0,cz=0,cA=0,cB=0,cC=0,cD=0,cE=0,cF=0,cG=0,cH=0,cI=0,cJ=0,cK=0,cL=0,cM=0,cN=0,cO=0,cP=0,cQ=0,cR=0,cS=0,cT=0,cU=0,cV=0,cW=0,cX=0,cY=0,cZ=0,c_=0,c$=0,c0=0,c1=0,c2=0,c3=0,c4=0,c5=0,c6=0,c7=0,c8=0,c9=0,da=0,db=0,dc=0,dd=0,de=0,df=0,dg=0,dh=0,di=0,dj=0,dk=0,dl=0,dm=0,dn=0,dp=0,dq=0,dr=0,ds=0,dt=0,du=0,dv=0,dw=0,dx=0,dy=0,dz=0,dA=0,dB=0,dC=0,dD=0,dE=0,dF=0,dG=0,dH=0,dI=0,dJ=0,dK=0,dL=0,dM=0,dN=0,dO=0,dP=0,dQ=0,dR=0,dS=0,dT=0,dU=0,dV=0,dW=0,dX=0,dY=0,dZ=0,d_=0,d$=0,d0=0,d1=0,d2=0,d3=0,d4=0,d5=0,d6=0,d7=0,d8=0,d9=0,ea=0,eb=0,ec=0,ed=0,ee=0,ef=0,eg=0,eh=0,ei=0,ej=0,ek=0,el=0,em=0,en=0,eo=0,ep=0,eq=0,er=0,es=0,et=0,eu=0,ev=0,ew=0,ex=0,ey=0,ez=0,eA=0,eB=0,eC=0,eD=0,eE=0,eF=0,eG=0,eH=0,eI=0,eJ=0,eK=0,eL=0,eM=0,eN=0,eO=0,eP=0,eQ=0,eR=0,eS=0,eT=0,eU=0,eV=0,eW=0,eX=0,eY=0,eZ=0,e_=0,e$=0,e0=0,e1=0,e2=0,e3=0,e4=0,e5=0,e6=0,e7=0,e8=0,e9=0,fa=0,fb=0,fc=0,fd=0,fe=0,ff=0,fg=0,fh=0,fi=0,fj=0,fk=0,fl=0,fm=0,fn=0,fo=0,fp=0,fq=0,fr=0,fs=0,ft=0,fu=0,fv=0,fw=0,fx=0,fy=0,fz=0,fA=0,fB=0,fC=0,fD=0,fE=0,fF=0,fG=0,fH=0;h=i;i=i+8|0;j=h|0;if((f|0)==0){k=-2;i=h;return k|0}l=c[f+28>>2]|0;if((l|0)==0){k=-2;i=h;return k|0}m=f+12|0;n=c[m>>2]|0;if((n|0)==0){k=-2;i=h;return k|0}o=f|0;p=c[o>>2]|0;do{if((p|0)==0){if((c[f+4>>2]|0)==0){break}else{k=-2}i=h;return k|0}}while(0);q=l;r=l;l=c[r>>2]|0;if((l|0)==11){c[r>>2]=12;s=c[m>>2]|0;t=c[o>>2]|0;u=12}else{s=n;t=p;u=l}l=f+16|0;p=c[l>>2]|0;n=f+4|0;v=c[n>>2]|0;w=q+56|0;x=q+60|0;y=q+8|0;z=q+24|0;A=j|0;B=j+1|0;C=q+16|0;D=q+32|0;E=f+24|0;F=q+36|0;G=q+20|0;H=f+48|0;I=q+64|0;J=q+12|0;K=(g-5|0)>>>0<2;L=q+4|0;M=q+76|0;N=q+84|0;O=q+80|0;P=q+88|0;Q=(g|0)==6;R=q+7108|0;S=q+72|0;T=q+7112|0;U=q+68|0;V=q+44|0;W=q+7104|0;X=q+48|0;Y=q+52|0;Z=q+40|0;_=f+20|0;$=q+28|0;aa=q+96|0;ab=q+100|0;ac=q+92|0;ad=q+104|0;ae=q+1328|0;af=q+108|0;ag=q+112|0;ah=q+752|0;ai=q+624|0;aj=j+2|0;ak=j+3|0;j=0;al=p;am=c[x>>2]|0;an=c[w>>2]|0;ao=p;p=v;ap=s;s=t;t=u;L2910:while(1){L2912:do{switch(t|0){case 23:{aq=j;ar=am;as=an;at=p;au=s;av=c[S>>2]|0;aw=2391;break};case 1:{if(am>>>0<16){u=s;ax=p;ay=an;az=am;while(1){if((ax|0)==0){aA=j;aB=al;aC=az;aD=ay;aE=0;aF=u;aG=ao;break L2910}aH=ax-1|0;aI=u+1|0;aJ=(d[u]<<az)+ay|0;aK=az+8|0;if(aK>>>0<16){u=aI;ax=aH;ay=aJ;az=aK}else{aL=aI;aM=aH;aN=aJ;aO=aK;break}}}else{aL=s;aM=p;aN=an;aO=am}c[C>>2]=aN;if((aN&255|0)!=8){c[E>>2]=32056;c[r>>2]=29;aP=j;aQ=al;aR=aO;aS=aN;aT=ao;aU=aM;aV=ap;aW=aL;break L2912}if((aN&57344|0)!=0){c[E>>2]=28216;c[r>>2]=29;aP=j;aQ=al;aR=aO;aS=aN;aT=ao;aU=aM;aV=ap;aW=aL;break L2912}az=c[D>>2]|0;if((az|0)==0){aX=aN}else{c[az>>2]=aN>>>8&1;aX=c[C>>2]|0}if((aX&512|0)!=0){a[A]=aN&255;a[B]=aN>>>8&255;c[z>>2]=hm(c[z>>2]|0,A,2)|0}c[r>>2]=2;aY=aL;aZ=aM;a_=0;a$=0;aw=2202;break};case 8:{a0=am;a1=an;a2=p;a3=s;aw=2264;break};case 4:{a4=am;a6=an;a7=p;a8=s;aw=2217;break};case 9:{if(am>>>0<32){az=s;ay=p;ax=an;u=am;while(1){if((ay|0)==0){aA=j;aB=al;aC=u;aD=ax;aE=0;aF=az;aG=ao;break L2910}aK=ay-1|0;aJ=az+1|0;aH=(d[az]<<u)+ax|0;aI=u+8|0;if(aI>>>0<32){az=aJ;ay=aK;ax=aH;u=aI}else{a9=aJ;ba=aK;bb=aH;break}}}else{a9=s;ba=p;bb=an}u=a5(bb|0)|0;c[z>>2]=u;c[H>>2]=u;c[r>>2]=10;bc=0;bd=0;be=ba;bf=a9;aw=2276;break};case 21:{bg=j;bh=am;bi=an;bj=p;bk=s;bl=c[S>>2]|0;aw=2372;break};case 13:{u=am&7;ax=an>>>(u>>>0);ay=am-u|0;if(ay>>>0<32){u=s;az=p;aH=ax;aK=ay;while(1){if((az|0)==0){aA=j;aB=al;aC=aK;aD=aH;aE=0;aF=u;aG=ao;break L2910}aJ=az-1|0;aI=u+1|0;bm=(d[u]<<aK)+aH|0;bn=aK+8|0;if(bn>>>0<32){u=aI;az=aJ;aH=bm;aK=bn}else{bo=aI;bp=aJ;bq=bm;br=bn;break}}}else{bo=s;bp=p;bq=ax;br=ay}aK=bq&65535;if((aK|0)==(bq>>>16^65535|0)){c[I>>2]=aK;c[r>>2]=14;if(Q){bs=j;bt=0;bu=0;bv=bp;bw=bo;bx=ao;aw=2436;break L2910}else{by=0;bz=0;bA=bp;bB=bo;aw=2298;break L2912}}else{c[E>>2]=24552;c[r>>2]=29;aP=j;aQ=al;aR=br;aS=bq;aT=ao;aU=bp;aV=ap;aW=bo;break L2912}break};case 14:{by=am;bz=an;bA=p;bB=s;aw=2298;break};case 15:{bC=am;bD=an;bE=p;bF=s;aw=2299;break};case 0:{aK=c[y>>2]|0;if((aK|0)==0){c[r>>2]=12;aP=j;aQ=al;aR=am;aS=an;aT=ao;aU=p;aV=ap;aW=s;break L2912}if(am>>>0<16){aH=s;az=p;u=an;bn=am;while(1){if((az|0)==0){aA=j;aB=al;aC=bn;aD=u;aE=0;aF=aH;aG=ao;break L2910}bm=az-1|0;aJ=aH+1|0;aI=(d[aH]<<bn)+u|0;bG=bn+8|0;if(bG>>>0<16){aH=aJ;az=bm;u=aI;bn=bG}else{bH=aJ;bI=bm;bJ=aI;bK=bG;break}}}else{bH=s;bI=p;bJ=an;bK=am}if((aK&2|0)!=0&(bJ|0)==35615){c[z>>2]=hm(0,0,0)|0;a[A]=31;a[B]=-117;c[z>>2]=hm(c[z>>2]|0,A,2)|0;c[r>>2]=1;aP=j;aQ=al;aR=0;aS=0;aT=ao;aU=bI;aV=ap;aW=bH;break L2912}c[C>>2]=0;bn=c[D>>2]|0;if((bn|0)==0){bL=aK}else{c[bn+48>>2]=-1;bL=c[y>>2]|0}do{if((bL&1|0)!=0){if(((((bJ<<8&65280)+(bJ>>>8)|0)>>>0)%31|0|0)!=0){break}if((bJ&15|0)!=8){c[E>>2]=32056;c[r>>2]=29;aP=j;aQ=al;aR=bK;aS=bJ;aT=ao;aU=bI;aV=ap;aW=bH;break L2912}bn=bJ>>>4;u=bK-4|0;az=(bn&15)+8|0;aH=c[F>>2]|0;do{if((aH|0)==0){c[F>>2]=az}else{if(az>>>0<=aH>>>0){break}c[E>>2]=29904;c[r>>2]=29;aP=j;aQ=al;aR=u;aS=bn;aT=ao;aU=bI;aV=ap;aW=bH;break L2912}}while(0);c[G>>2]=1<<az;bn=hl(0,0,0)|0;c[z>>2]=bn;c[H>>2]=bn;c[r>>2]=bJ>>>12&2^11;aP=j;aQ=al;aR=0;aS=0;aT=ao;aU=bI;aV=ap;aW=bH;break L2912}}while(0);c[E>>2]=36360;c[r>>2]=29;aP=j;aQ=al;aR=bK;aS=bJ;aT=ao;aU=bI;aV=ap;aW=bH;break};case 17:{aK=c[ad>>2]|0;if(aK>>>0<(c[ac>>2]|0)>>>0){bM=s;bN=p;bO=an;bP=am;bQ=aK;aw=2309}else{bR=s;bS=p;bT=an;bU=am;bV=aK;aw=2313}break};case 6:{bW=am;bX=an;bY=p;bZ=s;aw=2238;break};case 12:{b_=am;b$=an;b0=p;b1=s;aw=2280;break};case 30:{aw=2452;break L2910;break};case 2:{if(am>>>0<32){aY=s;aZ=p;a_=an;a$=am;aw=2202}else{b2=s;b3=p;b4=an;aw=2204}break};case 24:{b5=j;b6=am;b7=an;b8=p;b9=s;aw=2397;break};case 25:{if((ao|0)==0){bs=j;bt=am;bu=an;bv=p;bw=s;bx=0;aw=2436;break L2910}a[ap]=c[I>>2]&255;c[r>>2]=20;aP=j;aQ=al;aR=am;aS=an;aT=ao-1|0;aU=p;aV=ap+1|0;aW=s;break};case 26:{do{if((c[y>>2]|0)==0){ca=al;cb=am;cc=an;cd=p;ce=s}else{if(am>>>0<32){aK=s;bn=p;u=an;aH=am;while(1){if((bn|0)==0){aA=j;aB=al;aC=aH;aD=u;aE=0;aF=aK;aG=ao;break L2910}ay=bn-1|0;ax=aK+1|0;bG=(d[aK]<<aH)+u|0;aI=aH+8|0;if(aI>>>0<32){aK=ax;bn=ay;u=bG;aH=aI}else{cf=ax;cg=ay;ch=bG;ci=aI;break}}}else{cf=s;cg=p;ch=an;ci=am}aH=al-ao|0;c[_>>2]=(c[_>>2]|0)+aH;c[$>>2]=(c[$>>2]|0)+aH;if((al|0)!=(ao|0)){u=c[z>>2]|0;bn=ap+(-aH|0)|0;if((c[C>>2]|0)==0){cj=hl(u,bn,aH)|0}else{cj=hm(u,bn,aH)|0}c[z>>2]=cj;c[H>>2]=cj}if((c[C>>2]|0)==0){ck=a5(ch|0)|0}else{ck=ch}if((ck|0)==(c[z>>2]|0)){ca=ao;cb=0;cc=0;cd=cg;ce=cf;break}c[E>>2]=36688;c[r>>2]=29;aP=j;aQ=ao;aR=ci;aS=ch;aT=ao;aU=cg;aV=ap;aW=cf;break L2912}}while(0);c[r>>2]=27;cl=ca;cm=cb;cn=cc;co=cd;cp=ce;aw=2428;break};case 27:{cl=al;cm=am;cn=an;co=p;cp=s;aw=2428;break};case 28:{bs=1;bt=am;bu=an;bv=p;bw=s;bx=ao;aw=2436;break L2910;break};case 29:{aA=-3;aB=al;aC=am;aD=an;aE=p;aF=s;aG=ao;break L2910;break};case 3:{if(am>>>0<16){cq=s;cr=p;cs=an;ct=am;aw=2210}else{cu=s;cv=p;cw=an;aw=2212}break};case 5:{cx=am;cy=an;cz=p;cA=s;aw=2228;break};case 16:{if(am>>>0<14){aH=s;bn=p;u=an;aK=am;while(1){if((bn|0)==0){aA=j;aB=al;aC=aK;aD=u;aE=0;aF=aH;aG=ao;break L2910}az=bn-1|0;aI=aH+1|0;bG=(d[aH]<<aK)+u|0;ay=aK+8|0;if(ay>>>0<14){aH=aI;bn=az;u=bG;aK=ay}else{cB=aI;cC=az;cD=bG;cE=ay;break}}}else{cB=s;cC=p;cD=an;cE=am}aK=(cD&31)+257|0;c[aa>>2]=aK;u=(cD>>>5&31)+1|0;c[ab>>2]=u;c[ac>>2]=(cD>>>10&15)+4;bn=cD>>>14;aH=cE-14|0;if(aK>>>0>286|u>>>0>30){c[E>>2]=23536;c[r>>2]=29;aP=j;aQ=al;aR=aH;aS=bn;aT=ao;aU=cC;aV=ap;aW=cB;break L2912}else{c[ad>>2]=0;c[r>>2]=17;bM=cB;bN=cC;bO=bn;bP=aH;bQ=0;aw=2309;break L2912}break};case 19:{cF=j;cG=am;cH=an;cI=p;cJ=s;aw=2352;break};case 20:{cK=j;cL=am;cM=an;cN=p;cO=s;aw=2353;break};case 22:{cP=j;cQ=am;cR=an;cS=p;cT=s;aw=2379;break};case 10:{bc=am;bd=an;be=p;bf=s;aw=2276;break};case 11:{cU=am;cV=an;cW=p;cX=s;aw=2279;break};case 18:{cY=j;cZ=am;c_=an;c$=p;c0=s;c1=c[ad>>2]|0;aw=2318;break};case 7:{c2=am;c3=an;c4=p;c5=s;aw=2251;break};default:{k=-2;aw=2455;break L2910}}}while(0);if((aw|0)==2298){aw=0;c[r>>2]=15;bC=by;bD=bz;bE=bA;bF=bB;aw=2299}else if((aw|0)==2309){while(1){aw=0;if(bP>>>0<3){aH=bM;bn=bN;u=bO;aK=bP;while(1){if((bn|0)==0){aA=j;aB=al;aC=aK;aD=u;aE=0;aF=aH;aG=ao;break L2910}ay=bn-1|0;bG=aH+1|0;az=(d[aH]<<aK)+u|0;aI=aK+8|0;if(aI>>>0<3){aH=bG;bn=ay;u=az;aK=aI}else{c6=bG;c7=ay;c8=az;c9=aI;break}}}else{c6=bM;c7=bN;c8=bO;c9=bP}c[ad>>2]=bQ+1;b[q+112+(e[9256+(bQ<<1)>>1]<<1)>>1]=c8&7;aK=c8>>>3;u=c9-3|0;bn=c[ad>>2]|0;if(bn>>>0<(c[ac>>2]|0)>>>0){bM=c6;bN=c7;bO=aK;bP=u;bQ=bn;aw=2309}else{bR=c6;bS=c7;bT=aK;bU=u;bV=bn;aw=2313;break}}}else if((aw|0)==2428){aw=0;if((c[y>>2]|0)==0){da=cm;db=cn;dc=co;dd=cp;aw=2435;break}if((c[C>>2]|0)==0){da=cm;db=cn;dc=co;dd=cp;aw=2435;break}if(cm>>>0<32){bn=cp;u=co;aK=cn;aH=cm;while(1){if((u|0)==0){aA=j;aB=cl;aC=aH;aD=aK;aE=0;aF=bn;aG=ao;break L2910}aI=u-1|0;az=bn+1|0;ay=(d[bn]<<aH)+aK|0;bG=aH+8|0;if(bG>>>0<32){bn=az;u=aI;aK=ay;aH=bG}else{de=az;df=aI;dg=ay;dh=bG;break}}}else{de=cp;df=co;dg=cn;dh=cm}if((dg|0)==(c[$>>2]|0)){da=0;db=0;dc=df;dd=de;aw=2435;break}c[E>>2]=35976;c[r>>2]=29;aP=j;aQ=cl;aR=dh;aS=dg;aT=ao;aU=df;aV=ap;aW=de}else if((aw|0)==2202){while(1){aw=0;if((aZ|0)==0){aA=j;aB=al;aC=a$;aD=a_;aE=0;aF=aY;aG=ao;break L2910}aH=aZ-1|0;aK=aY+1|0;u=(d[aY]<<a$)+a_|0;bn=a$+8|0;if(bn>>>0<32){aY=aK;aZ=aH;a_=u;a$=bn;aw=2202}else{b2=aK;b3=aH;b4=u;aw=2204;break}}}else if((aw|0)==2276){aw=0;if((c[J>>2]|0)==0){aw=2277;break}u=hl(0,0,0)|0;c[z>>2]=u;c[H>>2]=u;c[r>>2]=11;cU=bc;cV=bd;cW=be;cX=bf;aw=2279}do{if((aw|0)==2299){aw=0;u=c[I>>2]|0;if((u|0)==0){c[r>>2]=11;aP=j;aQ=al;aR=bC;aS=bD;aT=ao;aU=bE;aV=ap;aW=bF;break}aH=u>>>0>bE>>>0?bE:u;u=aH>>>0>ao>>>0?ao:aH;if((u|0)==0){bs=j;bt=bC;bu=bD;bv=bE;bw=bF;bx=ao;aw=2436;break L2910}hu(ap|0,bF|0,u)|0;c[I>>2]=(c[I>>2]|0)-u;aP=j;aQ=al;aR=bC;aS=bD;aT=ao-u|0;aU=bE-u|0;aV=ap+u|0;aW=bF+u|0}else if((aw|0)==2313){aw=0;if(bV>>>0<19){u=bV;do{c[ad>>2]=u+1;b[q+112+(e[9256+(u<<1)>>1]<<1)>>1]=0;u=c[ad>>2]|0;}while(u>>>0<19)}c[af>>2]=ae;c[M>>2]=ae;c[N>>2]=7;u=g8(0,ag,19,af,N,ah)|0;if((u|0)==0){c[ad>>2]=0;c[r>>2]=18;cY=0;cZ=bU;c_=bT;c$=bS;c0=bR;c1=0;aw=2318;break}else{c[E>>2]=22776;c[r>>2]=29;aP=u;aQ=al;aR=bU;aS=bT;aT=ao;aU=bS;aV=ap;aW=bR;break}}else if((aw|0)==2204){aw=0;u=c[D>>2]|0;if((u|0)!=0){c[u+4>>2]=b4}if((c[C>>2]&512|0)!=0){a[A]=b4&255;a[B]=b4>>>8&255;a[aj]=b4>>>16&255;a[ak]=b4>>>24&255;c[z>>2]=hm(c[z>>2]|0,A,4)|0}c[r>>2]=3;cq=b2;cr=b3;cs=0;ct=0;aw=2210}else if((aw|0)==2279){aw=0;if(K){bs=j;bt=cU;bu=cV;bv=cW;bw=cX;bx=ao;aw=2436;break L2910}else{b_=cU;b$=cV;b0=cW;b1=cX;aw=2280}}}while(0);L3055:do{if((aw|0)==2280){aw=0;if((c[L>>2]|0)!=0){u=b_&7;c[r>>2]=26;aP=j;aQ=al;aR=b_-u|0;aS=b$>>>(u>>>0);aT=ao;aU=b0;aV=ap;aW=b1;break}if(b_>>>0<3){u=b1;aH=b0;aK=b$;bn=b_;while(1){if((aH|0)==0){aA=j;aB=al;aC=bn;aD=aK;aE=0;aF=u;aG=ao;break L2910}bG=aH-1|0;ay=u+1|0;aI=(d[u]<<bn)+aK|0;az=bn+8|0;if(az>>>0<3){u=ay;aH=bG;aK=aI;bn=az}else{di=ay;dj=bG;dk=aI;dl=az;break}}}else{di=b1;dj=b0;dk=b$;dl=b_}c[L>>2]=dk&1;bn=dk>>>1&3;if((bn|0)==2){c[r>>2]=16}else if((bn|0)==3){c[E>>2]=25952;c[r>>2]=29}else if((bn|0)==0){c[r>>2]=13}else if((bn|0)==1){c[M>>2]=9296;c[N>>2]=9;c[O>>2]=11344;c[P>>2]=5;c[r>>2]=19;if(Q){aw=2288;break L2910}}aP=j;aQ=al;aR=dl-3|0;aS=dk>>>3;aT=ao;aU=dj;aV=ap;aW=di}else if((aw|0)==2318){aw=0;bn=c[aa>>2]|0;aK=c[ab>>2]|0;do{if(c1>>>0<(aK+bn|0)>>>0){aH=c0;u=c$;az=c_;aI=cZ;bG=c1;ay=bn;ax=aK;L3073:while(1){bm=(1<<c[N>>2])-1|0;aJ=bm&az;dm=c[M>>2]|0;dn=d[dm+(aJ<<2)+1|0]|0;if(dn>>>0>aI>>>0){dp=aH;dq=u;dr=az;ds=aI;while(1){if((dq|0)==0){aA=cY;aB=al;aC=ds;aD=dr;aE=0;aF=dp;aG=ao;break L2910}dt=dq-1|0;du=dp+1|0;dv=(d[dp]<<ds)+dr|0;dw=ds+8|0;dx=bm&dv;dy=d[dm+(dx<<2)+1|0]|0;if(dy>>>0>dw>>>0){dp=du;dq=dt;dr=dv;ds=dw}else{dz=du;dA=dt;dB=dv;dC=dw;dD=dx;dE=dy;break}}}else{dz=aH;dA=u;dB=az;dC=aI;dD=aJ;dE=dn}ds=b[dm+(dD<<2)+2>>1]|0;L3080:do{if((ds&65535)<16){c[ad>>2]=bG+1;b[q+112+(bG<<1)>>1]=ds;dF=dC-dE|0;dG=dB>>>(dE>>>0);dH=dA;dI=dz}else{if((ds<<16>>16|0)==16){dr=dE+2|0;if(dC>>>0<dr>>>0){dq=dz;dp=dA;bm=dB;dy=dC;while(1){if((dp|0)==0){aA=cY;aB=al;aC=dy;aD=bm;aE=0;aF=dq;aG=ao;break L2910}dx=dp-1|0;dw=dq+1|0;dv=(d[dq]<<dy)+bm|0;dt=dy+8|0;if(dt>>>0<dr>>>0){dq=dw;dp=dx;bm=dv;dy=dt}else{dJ=dw;dK=dx;dL=dv;dM=dt;break}}}else{dJ=dz;dK=dA;dL=dB;dM=dC}dN=dL>>>(dE>>>0);dO=dM-dE|0;if((bG|0)==0){aw=2332;break L3073}dP=b[q+112+(bG-1<<1)>>1]|0;dQ=(dN&3)+3|0;dR=dO-2|0;dS=dN>>>2;dT=dK;dU=dJ}else if((ds<<16>>16|0)==17){dy=dE+3|0;if(dC>>>0<dy>>>0){bm=dz;dp=dA;dq=dB;dr=dC;while(1){if((dp|0)==0){aA=cY;aB=al;aC=dr;aD=dq;aE=0;aF=bm;aG=ao;break L2910}dt=dp-1|0;dv=bm+1|0;dx=(d[bm]<<dr)+dq|0;dw=dr+8|0;if(dw>>>0<dy>>>0){bm=dv;dp=dt;dq=dx;dr=dw}else{dV=dv;dW=dt;dX=dx;dY=dw;break}}}else{dV=dz;dW=dA;dX=dB;dY=dC}dr=dX>>>(dE>>>0);dP=0;dQ=(dr&7)+3|0;dR=-3-dE+dY|0;dS=dr>>>3;dT=dW;dU=dV}else{dr=dE+7|0;if(dC>>>0<dr>>>0){dq=dz;dp=dA;bm=dB;dy=dC;while(1){if((dp|0)==0){aA=cY;aB=al;aC=dy;aD=bm;aE=0;aF=dq;aG=ao;break L2910}dw=dp-1|0;dx=dq+1|0;dt=(d[dq]<<dy)+bm|0;dv=dy+8|0;if(dv>>>0<dr>>>0){dq=dx;dp=dw;bm=dt;dy=dv}else{dZ=dx;d_=dw;d$=dt;d0=dv;break}}}else{dZ=dz;d_=dA;d$=dB;d0=dC}dy=d$>>>(dE>>>0);dP=0;dQ=(dy&127)+11|0;dR=-7-dE+d0|0;dS=dy>>>7;dT=d_;dU=dZ}if((bG+dQ|0)>>>0>(ax+ay|0)>>>0){aw=2341;break L3073}else{d1=dQ;d2=bG}while(1){dy=d1-1|0;c[ad>>2]=d2+1;b[q+112+(d2<<1)>>1]=dP;if((dy|0)==0){dF=dR;dG=dS;dH=dT;dI=dU;break L3080}d1=dy;d2=c[ad>>2]|0}}}while(0);ds=c[ad>>2]|0;d3=c[aa>>2]|0;dm=c[ab>>2]|0;if(ds>>>0<(dm+d3|0)>>>0){aH=dI;u=dH;az=dG;aI=dF;bG=ds;ay=d3;ax=dm}else{aw=2344;break}}if((aw|0)==2332){aw=0;c[E>>2]=41568;c[r>>2]=29;aP=cY;aQ=al;aR=dO;aS=dN;aT=ao;aU=dK;aV=ap;aW=dJ;break L3055}else if((aw|0)==2341){aw=0;c[E>>2]=41568;c[r>>2]=29;aP=cY;aQ=al;aR=dR;aS=dS;aT=ao;aU=dT;aV=ap;aW=dU;break L3055}else if((aw|0)==2344){aw=0;if((c[r>>2]|0)==29){aP=cY;aQ=al;aR=dF;aS=dG;aT=ao;aU=dH;aV=ap;aW=dI;break L3055}else{d4=d3;d5=dF;d6=dG;d7=dH;d8=dI;break}}}else{d4=bn;d5=cZ;d6=c_;d7=c$;d8=c0}}while(0);if((b[ai>>1]|0)==0){c[E>>2]=41024;c[r>>2]=29;aP=cY;aQ=al;aR=d5;aS=d6;aT=ao;aU=d7;aV=ap;aW=d8;break}c[af>>2]=ae;c[M>>2]=ae;c[N>>2]=9;bn=g8(1,ag,d4,af,N,ah)|0;if((bn|0)!=0){c[E>>2]=40432;c[r>>2]=29;aP=bn;aQ=al;aR=d5;aS=d6;aT=ao;aU=d7;aV=ap;aW=d8;break}c[O>>2]=c[af>>2];c[P>>2]=6;bn=g8(2,q+112+(c[aa>>2]<<1)|0,c[ab>>2]|0,af,P,ah)|0;if((bn|0)==0){c[r>>2]=19;if(Q){bs=0;bt=d5;bu=d6;bv=d7;bw=d8;bx=ao;aw=2436;break L2910}else{cF=0;cG=d5;cH=d6;cI=d7;cJ=d8;aw=2352;break}}else{c[E>>2]=39832;c[r>>2]=29;aP=bn;aQ=al;aR=d5;aS=d6;aT=ao;aU=d7;aV=ap;aW=d8;break}}else if((aw|0)==2210){while(1){aw=0;if((cr|0)==0){aA=j;aB=al;aC=ct;aD=cs;aE=0;aF=cq;aG=ao;break L2910}bn=cr-1|0;aK=cq+1|0;ax=(d[cq]<<ct)+cs|0;ay=ct+8|0;if(ay>>>0<16){cq=aK;cr=bn;cs=ax;ct=ay;aw=2210}else{cu=aK;cv=bn;cw=ax;aw=2212;break}}}}while(0);if((aw|0)==2212){aw=0;ax=c[D>>2]|0;if((ax|0)!=0){c[ax+8>>2]=cw&255;c[(c[D>>2]|0)+12>>2]=cw>>>8}if((c[C>>2]&512|0)!=0){a[A]=cw&255;a[B]=cw>>>8&255;c[z>>2]=hm(c[z>>2]|0,A,2)|0}c[r>>2]=4;a4=0;a6=0;a7=cv;a8=cu;aw=2217}else if((aw|0)==2352){aw=0;c[r>>2]=20;cK=cF;cL=cG;cM=cH;cN=cI;cO=cJ;aw=2353}do{if((aw|0)==2217){aw=0;ax=c[C>>2]|0;do{if((ax&1024|0)==0){bn=c[D>>2]|0;if((bn|0)==0){d9=a4;ea=a6;eb=a7;ec=a8;break}c[bn+16>>2]=0;d9=a4;ea=a6;eb=a7;ec=a8}else{if(a4>>>0<16){bn=a8;aK=a7;ay=a6;bG=a4;while(1){if((aK|0)==0){aA=j;aB=al;aC=bG;aD=ay;aE=0;aF=bn;aG=ao;break L2910}aI=aK-1|0;az=bn+1|0;u=(d[bn]<<bG)+ay|0;aH=bG+8|0;if(aH>>>0<16){bn=az;aK=aI;ay=u;bG=aH}else{ed=az;ee=aI;ef=u;break}}}else{ed=a8;ee=a7;ef=a6}c[I>>2]=ef;bG=c[D>>2]|0;if((bG|0)==0){eg=ax}else{c[bG+20>>2]=ef;eg=c[C>>2]|0}if((eg&512|0)==0){d9=0;ea=0;eb=ee;ec=ed;break}a[A]=ef&255;a[B]=ef>>>8&255;c[z>>2]=hm(c[z>>2]|0,A,2)|0;d9=0;ea=0;eb=ee;ec=ed}}while(0);c[r>>2]=5;cx=d9;cy=ea;cz=eb;cA=ec;aw=2228}else if((aw|0)==2353){aw=0;if(cN>>>0>5&ao>>>0>257){c[m>>2]=ap;c[l>>2]=ao;c[o>>2]=cO;c[n>>2]=cN;c[w>>2]=cM;c[x>>2]=cL;hn(f,al);ax=c[m>>2]|0;bG=c[l>>2]|0;ay=c[o>>2]|0;aK=c[n>>2]|0;bn=c[w>>2]|0;u=c[x>>2]|0;if((c[r>>2]|0)!=11){aP=cK;aQ=al;aR=u;aS=bn;aT=bG;aU=aK;aV=ax;aW=ay;break}c[R>>2]=-1;aP=cK;aQ=al;aR=u;aS=bn;aT=bG;aU=aK;aV=ax;aW=ay;break}c[R>>2]=0;ay=(1<<c[N>>2])-1|0;ax=ay&cM;aK=c[M>>2]|0;bG=a[aK+(ax<<2)+1|0]|0;bn=bG&255;if(bn>>>0>cL>>>0){u=cO;aI=cN;az=cM;aH=cL;while(1){if((aI|0)==0){aA=cK;aB=al;aC=aH;aD=az;aE=0;aF=u;aG=ao;break L2910}dm=aI-1|0;ds=u+1|0;dn=(d[u]<<aH)+az|0;aJ=aH+8|0;dy=ay&dn;bm=a[aK+(dy<<2)+1|0]|0;dp=bm&255;if(dp>>>0>aJ>>>0){u=ds;aI=dm;az=dn;aH=aJ}else{eh=ds;ei=dm;ej=dn;ek=aJ;el=bm;em=dy;en=dp;break}}}else{eh=cO;ei=cN;ej=cM;ek=cL;el=bG;em=ax;en=bn}aH=a[aK+(em<<2)|0]|0;az=b[aK+(em<<2)+2>>1]|0;aI=aH&255;do{if(aH<<24>>24==0){eo=0;ep=el;eq=az;er=ek;es=ej;et=ei;eu=eh;ev=0}else{if((aI&240|0)!=0){eo=aH;ep=el;eq=az;er=ek;es=ej;et=ei;eu=eh;ev=0;break}u=az&65535;ay=(1<<en+aI)-1|0;dp=((ej&ay)>>>(en>>>0))+u|0;dy=a[aK+(dp<<2)+1|0]|0;if(((dy&255)+en|0)>>>0>ek>>>0){bm=eh;aJ=ei;dn=ej;dm=ek;while(1){if((aJ|0)==0){aA=cK;aB=al;aC=dm;aD=dn;aE=0;aF=bm;aG=ao;break L2910}ds=aJ-1|0;dq=bm+1|0;dr=(d[bm]<<dm)+dn|0;dv=dm+8|0;dt=((dr&ay)>>>(en>>>0))+u|0;dw=a[aK+(dt<<2)+1|0]|0;if(((dw&255)+en|0)>>>0>dv>>>0){bm=dq;aJ=ds;dn=dr;dm=dv}else{ew=dq;ex=ds;ey=dr;ez=dv;eA=dt;eB=dw;break}}}else{ew=eh;ex=ei;ey=ej;ez=ek;eA=dp;eB=dy}dm=b[aK+(eA<<2)+2>>1]|0;dn=a[aK+(eA<<2)|0]|0;c[R>>2]=en;eo=dn;ep=eB;eq=dm;er=ez-en|0;es=ey>>>(en>>>0);et=ex;eu=ew;ev=en}}while(0);aK=ep&255;aI=es>>>(aK>>>0);az=er-aK|0;c[R>>2]=ev+aK;c[I>>2]=eq&65535;aK=eo&255;if(eo<<24>>24==0){c[r>>2]=25;aP=cK;aQ=al;aR=az;aS=aI;aT=ao;aU=et;aV=ap;aW=eu;break}if((aK&32|0)!=0){c[R>>2]=-1;c[r>>2]=11;aP=cK;aQ=al;aR=az;aS=aI;aT=ao;aU=et;aV=ap;aW=eu;break}if((aK&64|0)==0){aH=aK&15;c[S>>2]=aH;c[r>>2]=21;bg=cK;bh=az;bi=aI;bj=et;bk=eu;bl=aH;aw=2372;break}else{c[E>>2]=39056;c[r>>2]=29;aP=cK;aQ=al;aR=az;aS=aI;aT=ao;aU=et;aV=ap;aW=eu;break}}}while(0);if((aw|0)==2228){aw=0;aI=c[C>>2]|0;if((aI&1024|0)==0){eC=cz;eD=cA}else{az=c[I>>2]|0;aH=az>>>0>cz>>>0?cz:az;if((aH|0)==0){eE=cz;eF=cA;eG=az}else{aK=c[D>>2]|0;do{if((aK|0)==0){eH=aI}else{bn=c[aK+16>>2]|0;if((bn|0)==0){eH=aI;break}ax=(c[aK+20>>2]|0)-az|0;bG=bn+ax|0;bn=c[aK+24>>2]|0;dm=(ax+aH|0)>>>0>bn>>>0?bn-ax|0:aH;hu(bG|0,cA|0,dm)|0;eH=c[C>>2]|0}}while(0);if((eH&512|0)!=0){c[z>>2]=hm(c[z>>2]|0,cA,aH)|0}aK=(c[I>>2]|0)-aH|0;c[I>>2]=aK;eE=cz-aH|0;eF=cA+aH|0;eG=aK}if((eG|0)==0){eC=eE;eD=eF}else{bs=j;bt=cx;bu=cy;bv=eE;bw=eF;bx=ao;aw=2436;break}}c[I>>2]=0;c[r>>2]=6;bW=cx;bX=cy;bY=eC;bZ=eD;aw=2238}else if((aw|0)==2372){aw=0;if((bl|0)==0){eI=bh;eJ=bi;eK=bj;eL=bk;eM=c[I>>2]|0}else{if(bh>>>0<bl>>>0){aK=bk;az=bj;aI=bi;dm=bh;while(1){if((az|0)==0){aA=bg;aB=al;aC=dm;aD=aI;aE=0;aF=aK;aG=ao;break L2910}bG=az-1|0;ax=aK+1|0;bn=(d[aK]<<dm)+aI|0;dn=dm+8|0;if(dn>>>0<bl>>>0){aK=ax;az=bG;aI=bn;dm=dn}else{eN=ax;eO=bG;eP=bn;eQ=dn;break}}}else{eN=bk;eO=bj;eP=bi;eQ=bh}dm=(c[I>>2]|0)+((1<<bl)-1&eP)|0;c[I>>2]=dm;c[R>>2]=(c[R>>2]|0)+bl;eI=eQ-bl|0;eJ=eP>>>(bl>>>0);eK=eO;eL=eN;eM=dm}c[T>>2]=eM;c[r>>2]=22;cP=bg;cQ=eI;cR=eJ;cS=eK;cT=eL;aw=2379}do{if((aw|0)==2238){aw=0;do{if((c[C>>2]&2048|0)==0){dm=c[D>>2]|0;if((dm|0)==0){eR=bY;eS=bZ;break}c[dm+28>>2]=0;eR=bY;eS=bZ}else{if((bY|0)==0){bs=j;bt=bW;bu=bX;bv=0;bw=bZ;bx=ao;aw=2436;break L2910}else{eT=0}while(1){eU=eT+1|0;dm=a[bZ+eT|0]|0;aI=c[D>>2]|0;do{if((aI|0)!=0){az=aI+28|0;if((c[az>>2]|0)==0){break}aK=c[I>>2]|0;if(aK>>>0>=(c[aI+32>>2]|0)>>>0){break}c[I>>2]=aK+1;a[(c[az>>2]|0)+aK|0]=dm}}while(0);eV=dm<<24>>24!=0;if(eV&eU>>>0<bY>>>0){eT=eU}else{break}}if((c[C>>2]&512|0)!=0){c[z>>2]=hm(c[z>>2]|0,bZ,eU)|0}dy=bY-eU|0;dp=bZ+eU|0;if(eV){bs=j;bt=bW;bu=bX;bv=dy;bw=dp;bx=ao;aw=2436;break L2910}else{eR=dy;eS=dp}}}while(0);c[I>>2]=0;c[r>>2]=7;c2=bW;c3=bX;c4=eR;c5=eS;aw=2251}else if((aw|0)==2379){aw=0;dp=(1<<c[P>>2])-1|0;dy=dp&cR;aI=c[O>>2]|0;aK=a[aI+(dy<<2)+1|0]|0;az=aK&255;if(az>>>0>cQ>>>0){aH=cT;dn=cS;bn=cR;bG=cQ;while(1){if((dn|0)==0){aA=cP;aB=al;aC=bG;aD=bn;aE=0;aF=aH;aG=ao;break L2910}ax=dn-1|0;aJ=aH+1|0;bm=(d[aH]<<bG)+bn|0;u=bG+8|0;ay=dp&bm;dw=a[aI+(ay<<2)+1|0]|0;dt=dw&255;if(dt>>>0>u>>>0){aH=aJ;dn=ax;bn=bm;bG=u}else{eW=aJ;eX=ax;eY=bm;eZ=u;e_=dw;e$=ay;e0=dt;break}}}else{eW=cT;eX=cS;eY=cR;eZ=cQ;e_=aK;e$=dy;e0=az}bG=a[aI+(e$<<2)|0]|0;bn=b[aI+(e$<<2)+2>>1]|0;dn=bG&255;if((dn&240|0)==0){aH=bn&65535;dp=(1<<e0+dn)-1|0;dn=((eY&dp)>>>(e0>>>0))+aH|0;dt=a[aI+(dn<<2)+1|0]|0;if(((dt&255)+e0|0)>>>0>eZ>>>0){ay=eW;dw=eX;u=eY;bm=eZ;while(1){if((dw|0)==0){aA=cP;aB=al;aC=bm;aD=u;aE=0;aF=ay;aG=ao;break L2910}ax=dw-1|0;aJ=ay+1|0;dv=(d[ay]<<bm)+u|0;dr=bm+8|0;ds=((dv&dp)>>>(e0>>>0))+aH|0;dq=a[aI+(ds<<2)+1|0]|0;if(((dq&255)+e0|0)>>>0>dr>>>0){ay=aJ;dw=ax;u=dv;bm=dr}else{e1=aJ;e2=ax;e3=dv;e4=dr;e5=ds;e6=dq;break}}}else{e1=eW;e2=eX;e3=eY;e4=eZ;e5=dn;e6=dt}bm=b[aI+(e5<<2)+2>>1]|0;u=a[aI+(e5<<2)|0]|0;dw=(c[R>>2]|0)+e0|0;c[R>>2]=dw;e7=u;e8=e6;e9=bm;fa=e4-e0|0;fb=e3>>>(e0>>>0);fc=e2;fd=e1;fe=dw}else{e7=bG;e8=e_;e9=bn;fa=eZ;fb=eY;fc=eX;fd=eW;fe=c[R>>2]|0}dw=e8&255;bm=fb>>>(dw>>>0);u=fa-dw|0;c[R>>2]=fe+dw;dw=e7&255;if((dw&64|0)==0){c[U>>2]=e9&65535;ay=dw&15;c[S>>2]=ay;c[r>>2]=23;aq=cP;ar=u;as=bm;at=fc;au=fd;av=ay;aw=2391;break}else{c[E>>2]=38256;c[r>>2]=29;aP=cP;aQ=al;aR=u;aS=bm;aT=ao;aU=fc;aV=ap;aW=fd;break}}}while(0);if((aw|0)==2391){aw=0;if((av|0)==0){ff=ar;fg=as;fh=at;fi=au}else{if(ar>>>0<av>>>0){bm=au;u=at;ay=as;dw=ar;while(1){if((u|0)==0){aA=aq;aB=al;aC=dw;aD=ay;aE=0;aF=bm;aG=ao;break L2910}aH=u-1|0;dp=bm+1|0;az=(d[bm]<<dw)+ay|0;dy=dw+8|0;if(dy>>>0<av>>>0){bm=dp;u=aH;ay=az;dw=dy}else{fj=dp;fk=aH;fl=az;fm=dy;break}}}else{fj=au;fk=at;fl=as;fm=ar}c[U>>2]=(c[U>>2]|0)+((1<<av)-1&fl);c[R>>2]=(c[R>>2]|0)+av;ff=fm-av|0;fg=fl>>>(av>>>0);fh=fk;fi=fj}c[r>>2]=24;b5=aq;b6=ff;b7=fg;b8=fh;b9=fi;aw=2397}else if((aw|0)==2251){aw=0;do{if((c[C>>2]&4096|0)==0){dw=c[D>>2]|0;if((dw|0)==0){fn=c4;fo=c5;break}c[dw+36>>2]=0;fn=c4;fo=c5}else{if((c4|0)==0){bs=j;bt=c2;bu=c3;bv=0;bw=c5;bx=ao;aw=2436;break L2910}else{fp=0}while(1){fq=fp+1|0;dw=a[c5+fp|0]|0;ay=c[D>>2]|0;do{if((ay|0)!=0){u=ay+36|0;if((c[u>>2]|0)==0){break}bm=c[I>>2]|0;if(bm>>>0>=(c[ay+40>>2]|0)>>>0){break}c[I>>2]=bm+1;a[(c[u>>2]|0)+bm|0]=dw}}while(0);fr=dw<<24>>24!=0;if(fr&fq>>>0<c4>>>0){fp=fq}else{break}}if((c[C>>2]&512|0)!=0){c[z>>2]=hm(c[z>>2]|0,c5,fq)|0}bn=c4-fq|0;bG=c5+fq|0;if(fr){bs=j;bt=c2;bu=c3;bv=bn;bw=bG;bx=ao;aw=2436;break L2910}else{fn=bn;fo=bG}}}while(0);c[r>>2]=8;a0=c2;a1=c3;a2=fn;a3=fo;aw=2264}L3266:do{if((aw|0)==2264){aw=0;bG=c[C>>2]|0;do{if((bG&512|0)==0){fs=a0;ft=a1;fu=a2;fv=a3}else{if(a0>>>0<16){bn=a3;aI=a2;dt=a1;dn=a0;while(1){if((aI|0)==0){aA=j;aB=al;aC=dn;aD=dt;aE=0;aF=bn;aG=ao;break L2910}ay=aI-1|0;bm=bn+1|0;u=(d[bn]<<dn)+dt|0;dy=dn+8|0;if(dy>>>0<16){bn=bm;aI=ay;dt=u;dn=dy}else{fw=bm;fx=ay;fy=u;fz=dy;break}}}else{fw=a3;fx=a2;fy=a1;fz=a0}if((fy|0)==(c[z>>2]&65535|0)){fs=0;ft=0;fu=fx;fv=fw;break}c[E>>2]=27096;c[r>>2]=29;aP=j;aQ=al;aR=fz;aS=fy;aT=ao;aU=fx;aV=ap;aW=fw;break L3266}}while(0);dn=c[D>>2]|0;if((dn|0)!=0){c[dn+44>>2]=bG>>>9&1;c[(c[D>>2]|0)+48>>2]=1}dn=hm(0,0,0)|0;c[z>>2]=dn;c[H>>2]=dn;c[r>>2]=11;aP=j;aQ=al;aR=fs;aS=ft;aT=ao;aU=fu;aV=ap;aW=fv}else if((aw|0)==2397){aw=0;if((ao|0)==0){bs=b5;bt=b6;bu=b7;bv=b8;bw=b9;bx=0;aw=2436;break L2910}dn=al-ao|0;dt=c[U>>2]|0;if(dt>>>0>dn>>>0){aI=dt-dn|0;do{if(aI>>>0>(c[V>>2]|0)>>>0){if((c[W>>2]|0)==0){break}c[E>>2]=37552;c[r>>2]=29;aP=b5;aQ=al;aR=b6;aS=b7;aT=ao;aU=b8;aV=ap;aW=b9;break L3266}}while(0);bG=c[X>>2]|0;if(aI>>>0>bG>>>0){dn=aI-bG|0;fA=(c[Y>>2]|0)+((c[Z>>2]|0)-dn)|0;fB=dn}else{fA=(c[Y>>2]|0)+(bG-aI)|0;fB=aI}bG=c[I>>2]|0;fC=fA;fD=fB>>>0>bG>>>0?bG:fB;fE=bG}else{bG=c[I>>2]|0;fC=ap+(-dt|0)|0;fD=bG;fE=bG}bG=fD>>>0>ao>>>0?ao:fD;c[I>>2]=fE-bG;dn=~ao;bn=~fD;dw=dn>>>0>bn>>>0?dn:bn;bn=fC;dn=bG;dy=ap;while(1){a[dy]=a[bn]|0;u=dn-1|0;if((u|0)==0){break}else{bn=bn+1|0;dn=u;dy=dy+1|0}}dy=ao-bG|0;dn=ap+~dw|0;if((c[I>>2]|0)!=0){aP=b5;aQ=al;aR=b6;aS=b7;aT=dy;aU=b8;aV=dn;aW=b9;break}c[r>>2]=20;aP=b5;aQ=al;aR=b6;aS=b7;aT=dy;aU=b8;aV=dn;aW=b9}}while(0);j=aP;al=aQ;am=aR;an=aS;ao=aT;p=aU;ap=aV;s=aW;t=c[r>>2]|0}if((aw|0)==2288){aA=j;aB=al;aC=dl-3|0;aD=dk>>>3;aE=dj;aF=di;aG=ao}else if((aw|0)==2452){k=-4;i=h;return k|0}else if((aw|0)==2435){c[r>>2]=28;aA=1;aB=cl;aC=da;aD=db;aE=dc;aF=dd;aG=ao}else if((aw|0)==2436){aA=bs;aB=al;aC=bt;aD=bu;aE=bv;aF=bw;aG=bx}else if((aw|0)==2277){c[m>>2]=ap;c[l>>2]=ao;c[o>>2]=bf;c[n>>2]=be;c[w>>2]=bd;c[x>>2]=bc;k=2;i=h;return k|0}else if((aw|0)==2455){i=h;return k|0}c[m>>2]=ap;c[l>>2]=aG;c[o>>2]=aF;c[n>>2]=aE;c[w>>2]=aD;c[x>>2]=aC;aC=c[l>>2]|0;do{if((c[Z>>2]|0)==0){if((aB|0)==(aC|0)){fF=aB;break}aD=c[r>>2]|0;if(aD>>>0>=29){fF=aC;break}if(aD>>>0>25&(g|0)==4){fF=aC}else{aw=2441}}else{aw=2441}}while(0);do{if((aw|0)==2441){if((g5(f,c[m>>2]|0,aB-aC|0)|0)==0){fF=c[l>>2]|0;break}c[r>>2]=30;k=-4;i=h;return k|0}}while(0);l=c[n>>2]|0;n=aB-fF|0;aC=f+8|0;c[aC>>2]=v-l+(c[aC>>2]|0);c[_>>2]=(c[_>>2]|0)+n;c[$>>2]=(c[$>>2]|0)+n;$=(aB|0)==(fF|0);if(!((c[y>>2]|0)==0|$)){y=c[z>>2]|0;fF=(c[m>>2]|0)+(-n|0)|0;if((c[C>>2]|0)==0){fG=hl(y,fF,n)|0}else{fG=hm(y,fF,n)|0}c[z>>2]=fG;c[H>>2]=fG}fG=c[r>>2]|0;if((fG|0)==19){fH=256}else{fH=(fG|0)==14?256:0}c[f+44>>2]=((c[L>>2]|0)!=0?64:0)+(c[x>>2]|0)+((fG|0)==11?128:0)+fH;k=((v|0)==(l|0)&$|(g|0)==4)&(aA|0)==0?-5:aA;i=h;return k|0}function g5(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=c[a+28>>2]|0;f=e+52|0;g=c[f>>2]|0;do{if((g|0)==0){h=be[c[a+32>>2]&63](c[a+40>>2]|0,1<<c[e+36>>2],1)|0;c[f>>2]=h;if((h|0)==0){i=1}else{j=h;break}return i|0}else{j=g}}while(0);g=e+40|0;a=c[g>>2]|0;if((a|0)==0){h=1<<c[e+36>>2];c[g>>2]=h;c[e+48>>2]=0;c[e+44>>2]=0;k=h}else{k=a}if(k>>>0<=d>>>0){a=b+(-k|0)|0;hu(j|0,a|0,k)|0;c[e+48>>2]=0;c[e+44>>2]=c[g>>2];i=0;return i|0}a=e+48|0;h=c[a>>2]|0;l=k-h|0;k=l>>>0>d>>>0?d:l;l=j+h|0;h=b+(-d|0)|0;hu(l|0,h|0,k)|0;h=d-k|0;if((k|0)!=(d|0)){k=c[f>>2]|0;f=b+(-h|0)|0;hu(k|0,f|0,h)|0;c[a>>2]=h;c[e+44>>2]=c[g>>2];i=0;return i|0}h=(c[a>>2]|0)+d|0;c[a>>2]=h;f=c[g>>2]|0;if((h|0)==(f|0)){c[a>>2]=0}a=e+44|0;e=c[a>>2]|0;if(e>>>0>=f>>>0){i=0;return i|0}c[a>>2]=e+d;i=0;return i|0}function g6(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;if((a|0)==0){b=-2;return b|0}d=a+28|0;e=c[d>>2]|0;if((e|0)==0){b=-2;return b|0}f=a+36|0;g=c[f>>2]|0;if((g|0)==0){b=-2;return b|0}h=c[e+52>>2]|0;i=a+40|0;if((h|0)==0){j=g;k=e}else{bc[g&3](c[i>>2]|0,h);j=c[f>>2]|0;k=c[d>>2]|0}bc[j&3](c[i>>2]|0,k);c[d>>2]=0;b=0;return b|0}function g7(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+8|0;e=d|0;if((b|0)==0){f=-2;i=d;return f|0}g=b+28|0;h=c[g>>2]|0;if((h|0)==0){f=-2;i=d;return f|0}j=h;k=b+4|0;l=c[k>>2]|0;do{if((l|0)==0){if((c[j+60>>2]|0)>>>0<8){f=-5}else{break}i=d;return f|0}}while(0);m=h;if((c[m>>2]|0)==31){n=l;o=c[j+104>>2]|0}else{c[m>>2]=31;l=j+60|0;h=c[l>>2]|0;p=j+56|0;q=c[p>>2]<<(h&7);c[p>>2]=q;r=h&-8;c[l>>2]=r;do{if(r>>>0>7){h=0;s=q;t=r;while(1){u=h+1|0;a[e+h|0]=s&255;v=s>>>8;w=t-8|0;if(w>>>0>7){h=u;s=v;t=w}else{break}}c[p>>2]=v;c[l>>2]=w;t=j+104|0;c[t>>2]=0;if((u|0)==0){x=0;y=t;break}else{z=0;A=0}while(1){s=a[e+A|0]|0;if((s&255|0)==((z>>>0<2?0:255)|0)){B=z+1|0}else{B=s<<24>>24==0?4-z|0:0}s=A+1|0;if(s>>>0<u>>>0&B>>>0<4){z=B;A=s}else{x=B;y=t;break}}}else{t=j+104|0;c[t>>2]=0;x=0;y=t}}while(0);c[y>>2]=x;n=c[k>>2]|0;o=x}x=j+104|0;j=b|0;y=c[j>>2]|0;if((n|0)!=0&o>>>0<4){B=o;A=0;while(1){z=a[y+A|0]|0;if((z&255|0)==((B>>>0<2?0:255)|0)){C=B+1|0}else{C=z<<24>>24==0?4-B|0:0}z=A+1|0;if(z>>>0<n>>>0&C>>>0<4){B=C;A=z}else{D=C;E=z;break}}}else{D=o;E=0}c[x>>2]=D;c[k>>2]=(c[k>>2]|0)-E;c[j>>2]=(c[j>>2]|0)+E;j=b+8|0;k=(c[j>>2]|0)+E|0;c[j>>2]=k;if((c[x>>2]|0)!=4){f=-3;i=d;return f|0}x=b+20|0;E=c[x>>2]|0;D=c[g>>2]|0;do{if((D|0)!=0){o=D;c[o+40>>2]=0;c[o+44>>2]=0;c[o+48>>2]=0;o=c[g>>2]|0;if((o|0)==0){break}C=o;c[C+28>>2]=0;c[x>>2]=0;c[j>>2]=0;c[b+24>>2]=0;A=c[C+8>>2]|0;if((A|0)!=0){c[b+48>>2]=A&1}c[o>>2]=0;c[C+4>>2]=0;c[C+12>>2]=0;c[C+20>>2]=32768;c[C+32>>2]=0;c[C+56>>2]=0;c[C+60>>2]=0;o=C+1328|0;c[C+108>>2]=o;c[C+80>>2]=o;c[C+76>>2]=o;c[C+7104>>2]=1;c[C+7108>>2]=-1}}while(0);c[j>>2]=k;c[x>>2]=E;c[m>>2]=11;f=0;i=d;return f|0}function g8(d,f,g,h,j,k){d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;l=i;i=i+32|0;m=l|0;n=i;i=i+32|0;hv(m|0,0,32);o=(g|0)==0;if(!o){p=0;do{q=m+(e[f+(p<<1)>>1]<<1)|0;b[q>>1]=(b[q>>1]|0)+1&65535;p=p+1|0;}while(p>>>0<g>>>0)}p=c[j>>2]|0;q=15;while(1){if((q|0)==0){r=2531;break}if((b[m+(q<<1)>>1]|0)==0){q=q-1|0}else{break}}if((r|0)==2531){s=c[h>>2]|0;c[h>>2]=s+4;a[s|0]=64;a[s+1|0]=1;b[s+2>>1]=0;s=c[h>>2]|0;c[h>>2]=s+4;a[s|0]=64;a[s+1|0]=1;b[s+2>>1]=0;c[j>>2]=1;t=0;i=l;return t|0}s=p>>>0>q>>>0?q:p;p=1;while(1){if(p>>>0>=q>>>0){break}if((b[m+(p<<1)>>1]|0)==0){p=p+1|0}else{break}}u=s>>>0<p>>>0?p:s;s=1;v=1;while(1){if(v>>>0>=16){break}w=(s<<1)-(e[m+(v<<1)>>1]|0)|0;if((w|0)<0){t=-1;r=2579;break}else{s=w;v=v+1|0}}if((r|0)==2579){i=l;return t|0}do{if((s|0)>0){if((d|0)!=0&(q|0)==1){break}else{t=-1}i=l;return t|0}}while(0);b[n+2>>1]=0;s=b[m+2>>1]|0;b[n+4>>1]=s;v=(b[m+4>>1]|0)+s&65535;b[n+6>>1]=v;s=(b[m+6>>1]|0)+v&65535;b[n+8>>1]=s;v=(b[m+8>>1]|0)+s&65535;b[n+10>>1]=v;s=(b[m+10>>1]|0)+v&65535;b[n+12>>1]=s;v=(b[m+12>>1]|0)+s&65535;b[n+14>>1]=v;s=(b[m+14>>1]|0)+v&65535;b[n+16>>1]=s;v=(b[m+16>>1]|0)+s&65535;b[n+18>>1]=v;s=(b[m+18>>1]|0)+v&65535;b[n+20>>1]=s;v=(b[m+20>>1]|0)+s&65535;b[n+22>>1]=v;s=(b[m+22>>1]|0)+v&65535;b[n+24>>1]=s;v=(b[m+24>>1]|0)+s&65535;b[n+26>>1]=v;s=(b[m+26>>1]|0)+v&65535;b[n+28>>1]=s;b[n+30>>1]=(b[m+28>>1]|0)+s&65535;if(!o){o=0;do{s=b[f+(o<<1)>>1]|0;if(s<<16>>16!=0){v=n+((s&65535)<<1)|0;s=b[v>>1]|0;b[v>>1]=s+1&65535;b[k+((s&65535)<<1)>>1]=o&65535}o=o+1|0;}while(o>>>0<g>>>0)}do{if((d|0)==0){x=0;y=1<<u;z=19;A=k;B=k;C=0}else if((d|0)==1){g=1<<u;if(g>>>0>852){t=1}else{x=1;y=g;z=256;A=8486;B=8550;C=0;break}i=l;return t|0}else{g=1<<u;o=(d|0)==2;if(o&g>>>0>592){t=1}else{x=0;y=g;z=-1;A=9128;B=9192;C=o;break}i=l;return t|0}}while(0);d=y-1|0;o=u&255;g=c[h>>2]|0;n=-1;s=0;v=y;y=0;w=u;D=0;E=p;L3454:while(1){p=1<<w;F=s;G=D;H=E;while(1){I=H-y|0;J=I&255;K=b[k+(G<<1)>>1]|0;L=K&65535;do{if((L|0)<(z|0)){M=0;N=K}else{if((L|0)<=(z|0)){M=96;N=0;break}M=b[A+(L<<1)>>1]&255;N=b[B+(L<<1)>>1]|0}}while(0);L=1<<I;K=F>>>(y>>>0);O=p;while(1){P=O-L|0;Q=P+K|0;a[g+(Q<<2)|0]=M;a[g+(Q<<2)+1|0]=J;b[g+(Q<<2)+2>>1]=N;if((O|0)==(L|0)){break}else{O=P}}O=1<<H-1;while(1){if((O&F|0)==0){break}else{O=O>>>1}}if((O|0)==0){R=0}else{R=(O-1&F)+O|0}S=G+1|0;L=m+(H<<1)|0;K=(b[L>>1]|0)-1&65535;b[L>>1]=K;if(K<<16>>16==0){if((H|0)==(q|0)){break L3454}T=e[f+(e[k+(S<<1)>>1]<<1)>>1]|0}else{T=H}if(T>>>0<=u>>>0){F=R;G=S;H=T;continue}U=R&d;if((U|0)==(n|0)){F=R;G=S;H=T}else{break}}H=(y|0)==0?u:y;G=g+(p<<2)|0;F=T-H|0;L3477:do{if(T>>>0<q>>>0){K=F;L=1<<F;I=T;while(1){P=L-(e[m+(I<<1)>>1]|0)|0;if((P|0)<1){V=K;break L3477}Q=K+1|0;W=Q+H|0;if(W>>>0<q>>>0){K=Q;L=P<<1;I=W}else{V=Q;break}}}else{V=F}}while(0);F=(1<<V)+v|0;if(x&F>>>0>852|C&F>>>0>592){t=1;r=2576;break}a[(c[h>>2]|0)+(U<<2)|0]=V&255;a[(c[h>>2]|0)+(U<<2)+1|0]=o;p=c[h>>2]|0;b[p+(U<<2)+2>>1]=(G-p|0)>>>2&65535;g=G;n=U;s=R;v=F;y=H;w=V;D=S;E=T}if((r|0)==2576){i=l;return t|0}if((R|0)!=0){a[g+(R<<2)|0]=64;a[g+(R<<2)+1|0]=J;b[g+(R<<2)+2>>1]=0}c[h>>2]=(c[h>>2]|0)+(v<<2);c[j>>2]=u;t=0;i=l;return t|0}function g9(a){a=a|0;c[a+2840>>2]=a+148;c[a+2848>>2]=8352;c[a+2852>>2]=a+2440;c[a+2860>>2]=8496;c[a+2864>>2]=a+2684;c[a+2872>>2]=8520;b[a+5816>>1]=0;c[a+5820>>2]=0;ha(a);return}function ha(a){a=a|0;var d=0;d=0;do{b[a+148+(d<<2)>>1]=0;d=d+1|0;}while((d|0)<286);b[a+2440>>1]=0;b[a+2444>>1]=0;b[a+2448>>1]=0;b[a+2452>>1]=0;b[a+2456>>1]=0;b[a+2460>>1]=0;b[a+2464>>1]=0;b[a+2468>>1]=0;b[a+2472>>1]=0;b[a+2476>>1]=0;b[a+2480>>1]=0;b[a+2484>>1]=0;b[a+2488>>1]=0;b[a+2492>>1]=0;b[a+2496>>1]=0;b[a+2500>>1]=0;b[a+2504>>1]=0;b[a+2508>>1]=0;b[a+2512>>1]=0;b[a+2516>>1]=0;b[a+2520>>1]=0;b[a+2524>>1]=0;b[a+2528>>1]=0;b[a+2532>>1]=0;b[a+2536>>1]=0;b[a+2540>>1]=0;b[a+2544>>1]=0;b[a+2548>>1]=0;b[a+2552>>1]=0;b[a+2556>>1]=0;b[a+2684>>1]=0;b[a+2688>>1]=0;b[a+2692>>1]=0;b[a+2696>>1]=0;b[a+2700>>1]=0;b[a+2704>>1]=0;b[a+2708>>1]=0;b[a+2712>>1]=0;b[a+2716>>1]=0;b[a+2720>>1]=0;b[a+2724>>1]=0;b[a+2728>>1]=0;b[a+2732>>1]=0;b[a+2736>>1]=0;b[a+2740>>1]=0;b[a+2744>>1]=0;b[a+2748>>1]=0;b[a+2752>>1]=0;b[a+2756>>1]=0;b[a+1172>>1]=1;c[a+5804>>2]=0;c[a+5800>>2]=0;c[a+5808>>2]=0;c[a+5792>>2]=0;return}function hb(d,f,g,h){d=d|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;i=d+5820|0;j=c[i>>2]|0;k=h&65535;h=d+5816|0;l=e[h>>1]|0|k<<j;b[h>>1]=l&65535;if((j|0)>13){m=d+20|0;n=c[m>>2]|0;c[m>>2]=n+1;o=d+8|0;a[(c[o>>2]|0)+n|0]=l&255;n=(e[h>>1]|0)>>>8&255;p=c[m>>2]|0;c[m>>2]=p+1;a[(c[o>>2]|0)+p|0]=n;n=c[i>>2]|0;p=k>>>((16-n|0)>>>0);b[h>>1]=p&65535;q=n-13|0;r=p&255}else{q=j+3|0;r=l&255}c[i>>2]=q;do{if((q|0)>8){l=d+20|0;j=c[l>>2]|0;c[l>>2]=j+1;p=d+8|0;a[(c[p>>2]|0)+j|0]=r;j=(e[h>>1]|0)>>>8&255;n=c[l>>2]|0;c[l>>2]=n+1;a[(c[p>>2]|0)+n|0]=j;s=l;t=p}else{p=d+20|0;if((q|0)>0){l=c[p>>2]|0;c[p>>2]=l+1;j=d+8|0;a[(c[j>>2]|0)+l|0]=r;s=p;t=j;break}else{s=p;t=d+8|0;break}}}while(0);b[h>>1]=0;c[i>>2]=0;i=c[s>>2]|0;c[s>>2]=i+1;a[(c[t>>2]|0)+i|0]=g&255;i=c[s>>2]|0;c[s>>2]=i+1;a[(c[t>>2]|0)+i|0]=g>>>8&255;i=g&65535^65535;h=c[s>>2]|0;c[s>>2]=h+1;a[(c[t>>2]|0)+h|0]=i&255;h=c[s>>2]|0;c[s>>2]=h+1;a[(c[t>>2]|0)+h|0]=i>>>8&255;if((g|0)==0){return}else{u=g;v=f}while(1){f=u-1|0;g=a[v]|0;i=c[s>>2]|0;c[s>>2]=i+1;a[(c[t>>2]|0)+i|0]=g;if((f|0)==0){break}else{u=f;v=v+1|0}}return}function hc(d){d=d|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;f=d+5820|0;g=c[f>>2]|0;if((g|0)==16){h=d+5816|0;i=b[h>>1]&255;j=d+20|0;k=c[j>>2]|0;c[j>>2]=k+1;l=d+8|0;a[(c[l>>2]|0)+k|0]=i;i=(e[h>>1]|0)>>>8&255;k=c[j>>2]|0;c[j>>2]=k+1;a[(c[l>>2]|0)+k|0]=i;b[h>>1]=0;c[f>>2]=0;return}if((g|0)<=7){return}g=d+5816|0;h=b[g>>1]&255;i=d+20|0;k=c[i>>2]|0;c[i>>2]=k+1;a[(c[d+8>>2]|0)+k|0]=h;b[g>>1]=(e[g>>1]|0)>>>8;c[f>>2]=(c[f>>2]|0)-8;return}function hd(d){d=d|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=d+5820|0;g=c[f>>2]|0;h=d+5816|0;i=e[h>>1]|0|2<<g;b[h>>1]=i&65535;if((g|0)>13){j=d+20|0;k=c[j>>2]|0;c[j>>2]=k+1;l=d+8|0;a[(c[l>>2]|0)+k|0]=i&255;k=(e[h>>1]|0)>>>8&255;m=c[j>>2]|0;c[j>>2]=m+1;a[(c[l>>2]|0)+m|0]=k;k=c[f>>2]|0;m=2>>>((16-k|0)>>>0);b[h>>1]=m&65535;n=k-13|0;o=m&255}else{n=g+3|0;o=i&255}c[f>>2]=n;if((n|0)>9){i=d+20|0;g=c[i>>2]|0;c[i>>2]=g+1;m=d+8|0;a[(c[m>>2]|0)+g|0]=o;g=(e[h>>1]|0)>>>8&255;k=c[i>>2]|0;c[i>>2]=k+1;a[(c[m>>2]|0)+k|0]=g;b[h>>1]=0;p=(c[f>>2]|0)-9|0;q=0}else{p=n+7|0;q=o}c[f>>2]=p;if((p|0)==16){o=d+20|0;n=c[o>>2]|0;c[o>>2]=n+1;g=d+8|0;a[(c[g>>2]|0)+n|0]=q;n=(e[h>>1]|0)>>>8&255;k=c[o>>2]|0;c[o>>2]=k+1;a[(c[g>>2]|0)+k|0]=n;b[h>>1]=0;c[f>>2]=0;return}if((p|0)<=7){return}p=d+20|0;n=c[p>>2]|0;c[p>>2]=n+1;a[(c[d+8>>2]|0)+n|0]=q;b[h>>1]=(e[h>>1]|0)>>>8;c[f>>2]=(c[f>>2]|0)-8;return}function he(f,g,h,i){f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;if((c[f+132>>2]|0)>0){j=(c[f>>2]|0)+44|0;if((c[j>>2]|0)==2){k=-201342849;l=0;while(1){if((k&1|0)!=0){if((b[f+148+(l<<2)>>1]|0)!=0){m=0;break}}n=l+1|0;if((n|0)<32){k=k>>>1;l=n}else{o=2624;break}}L3548:do{if((o|0)==2624){if((b[f+184>>1]|0)!=0){m=1;break}if((b[f+188>>1]|0)!=0){m=1;break}if((b[f+200>>1]|0)==0){p=32}else{m=1;break}while(1){if((p|0)>=256){m=0;break L3548}if((b[f+148+(p<<2)>>1]|0)==0){p=p+1|0}else{m=1;break}}}}while(0);c[j>>2]=m}hf(f,f+2840|0);hf(f,f+2852|0);hi(f,f+148|0,c[f+2844>>2]|0);hi(f,f+2440|0,c[f+2856>>2]|0);hf(f,f+2864|0);m=18;while(1){if((m|0)<=2){break}if((b[f+2684+(d[22488+m|0]<<2)+2>>1]|0)==0){m=m-1|0}else{break}}j=f+5800|0;p=(m*3|0)+17+(c[j>>2]|0)|0;c[j>>2]=p;j=(p+10|0)>>>3;p=((c[f+5804>>2]|0)+10|0)>>>3;q=p>>>0>j>>>0?j:p;r=p;s=m}else{m=h+5|0;q=m;r=m;s=0}do{if((h+4|0)>>>0>q>>>0|(g|0)==0){m=f+5820|0;p=c[m>>2]|0;j=(p|0)>13;if((c[f+136>>2]|0)==4|(r|0)==(q|0)){o=i+2&65535;l=f+5816|0;k=e[l>>1]|o<<p;b[l>>1]=k&65535;if(j){n=f+20|0;t=c[n>>2]|0;c[n>>2]=t+1;u=f+8|0;a[(c[u>>2]|0)+t|0]=k&255;k=(e[l>>1]|0)>>>8&255;t=c[n>>2]|0;c[n>>2]=t+1;a[(c[u>>2]|0)+t|0]=k;k=c[m>>2]|0;b[l>>1]=o>>>((16-k|0)>>>0)&65535;v=k-13|0}else{v=p+3|0}c[m>>2]=v;hg(f,7200,8376);break}k=i+4&65535;o=f+5816|0;l=e[o>>1]|k<<p;t=l&65535;b[o>>1]=t;if(j){j=f+20|0;u=c[j>>2]|0;c[j>>2]=u+1;n=f+8|0;a[(c[n>>2]|0)+u|0]=l&255;l=(e[o>>1]|0)>>>8&255;u=c[j>>2]|0;c[j>>2]=u+1;a[(c[n>>2]|0)+u|0]=l;l=c[m>>2]|0;u=k>>>((16-l|0)>>>0)&65535;b[o>>1]=u;w=l-13|0;x=u}else{w=p+3|0;x=t}c[m>>2]=w;t=c[f+2844>>2]|0;p=c[f+2856>>2]|0;u=s+1|0;l=t+65280&65535;k=x&65535|l<<w;n=k&65535;b[o>>1]=n;if((w|0)>11){j=f+20|0;y=c[j>>2]|0;c[j>>2]=y+1;z=f+8|0;a[(c[z>>2]|0)+y|0]=k&255;k=(e[o>>1]|0)>>>8&255;y=c[j>>2]|0;c[j>>2]=y+1;a[(c[z>>2]|0)+y|0]=k;k=c[m>>2]|0;y=l>>>((16-k|0)>>>0)&65535;b[o>>1]=y;A=k-11|0;B=y}else{A=w+5|0;B=n}c[m>>2]=A;n=p&65535;y=n<<A|B&65535;k=y&65535;b[o>>1]=k;if((A|0)>11){l=f+20|0;z=c[l>>2]|0;c[l>>2]=z+1;j=f+8|0;a[(c[j>>2]|0)+z|0]=y&255;y=(e[o>>1]|0)>>>8&255;z=c[l>>2]|0;c[l>>2]=z+1;a[(c[j>>2]|0)+z|0]=y;y=c[m>>2]|0;z=n>>>((16-y|0)>>>0)&65535;b[o>>1]=z;C=y-11|0;D=z}else{C=A+5|0;D=k}c[m>>2]=C;k=s+65533&65535;z=k<<C|D&65535;y=z&65535;b[o>>1]=y;if((C|0)>12){n=f+20|0;j=c[n>>2]|0;c[n>>2]=j+1;l=f+8|0;a[(c[l>>2]|0)+j|0]=z&255;z=(e[o>>1]|0)>>>8&255;j=c[n>>2]|0;c[n>>2]=j+1;a[(c[l>>2]|0)+j|0]=z;z=c[m>>2]|0;j=k>>>((16-z|0)>>>0)&65535;b[o>>1]=j;E=z-12|0;F=j}else{E=C+4|0;F=y}c[m>>2]=E;if((u|0)>0){y=f+20|0;j=f+8|0;z=0;k=E;l=F;while(1){n=e[f+2684+(d[22488+z|0]<<2)+2>>1]|0;G=n<<k|l&65535;H=G&65535;b[o>>1]=H;if((k|0)>13){I=c[y>>2]|0;c[y>>2]=I+1;a[(c[j>>2]|0)+I|0]=G&255;G=(e[o>>1]|0)>>>8&255;I=c[y>>2]|0;c[y>>2]=I+1;a[(c[j>>2]|0)+I|0]=G;G=c[m>>2]|0;I=n>>>((16-G|0)>>>0)&65535;b[o>>1]=I;J=G-13|0;K=I}else{J=k+3|0;K=H}c[m>>2]=J;H=z+1|0;if((H|0)<(u|0)){z=H;k=J;l=K}else{break}}}l=f+148|0;hh(f,l,t);k=f+2440|0;hh(f,k,p);hg(f,l,k)}else{hb(f,g,h,i)}}while(0);ha(f);if((i|0)==0){return}i=f+5820|0;h=c[i>>2]|0;do{if((h|0)>8){g=f+5816|0;K=b[g>>1]&255;J=f+20|0;F=c[J>>2]|0;c[J>>2]=F+1;E=f+8|0;a[(c[E>>2]|0)+F|0]=K;K=(e[g>>1]|0)>>>8&255;F=c[J>>2]|0;c[J>>2]=F+1;a[(c[E>>2]|0)+F|0]=K;L=g}else{g=f+5816|0;if((h|0)<=0){L=g;break}K=b[g>>1]&255;F=f+20|0;E=c[F>>2]|0;c[F>>2]=E+1;a[(c[f+8>>2]|0)+E|0]=K;L=g}}while(0);b[L>>1]=0;c[i>>2]=0;return}function hf(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;h=i;i=i+32|0;j=h|0;k=g|0;l=c[k>>2]|0;m=g+8|0;n=c[m>>2]|0;o=c[n>>2]|0;p=c[n+12>>2]|0;n=f+5200|0;c[n>>2]=0;q=f+5204|0;c[q>>2]=573;if((p|0)>0){r=0;s=-1;while(1){if((b[l+(r<<2)>>1]|0)==0){b[l+(r<<2)+2>>1]=0;t=s}else{u=(c[n>>2]|0)+1|0;c[n>>2]=u;c[f+2908+(u<<2)>>2]=r;a[f+5208+r|0]=0;t=r}u=r+1|0;if((u|0)<(p|0)){r=u;s=t}else{break}}s=c[n>>2]|0;if((s|0)<2){v=s;w=t;x=2672}else{y=t}}else{v=0;w=-1;x=2672}if((x|0)==2672){x=f+5800|0;t=f+5804|0;if((o|0)==0){s=w;r=v;while(1){u=(s|0)<2;z=s+1|0;A=u?z:s;B=u?z:0;z=r+1|0;c[n>>2]=z;c[f+2908+(z<<2)>>2]=B;b[l+(B<<2)>>1]=1;a[f+5208+B|0]=0;c[x>>2]=(c[x>>2]|0)-1;B=c[n>>2]|0;if((B|0)<2){s=A;r=B}else{y=A;break}}}else{r=w;w=v;while(1){v=(r|0)<2;s=r+1|0;A=v?s:r;B=v?s:0;s=w+1|0;c[n>>2]=s;c[f+2908+(s<<2)>>2]=B;b[l+(B<<2)>>1]=1;a[f+5208+B|0]=0;c[x>>2]=(c[x>>2]|0)-1;c[t>>2]=(c[t>>2]|0)-(e[o+(B<<2)+2>>1]|0);B=c[n>>2]|0;if((B|0)<2){r=A;w=B}else{y=A;break}}}}w=g+4|0;c[w>>2]=y;g=c[n>>2]|0;if((g|0)>1){r=(g|0)/2|0;o=g;while(1){t=c[f+2908+(r<<2)>>2]|0;x=f+5208+t|0;A=r<<1;L3629:do{if((A|0)>(o|0)){C=r}else{B=l+(t<<2)|0;s=r;v=A;z=o;while(1){do{if((v|0)<(z|0)){u=v|1;D=c[f+2908+(u<<2)>>2]|0;E=b[l+(D<<2)>>1]|0;F=c[f+2908+(v<<2)>>2]|0;G=b[l+(F<<2)>>1]|0;if((E&65535)>=(G&65535)){if(E<<16>>16!=G<<16>>16){H=v;break}if((d[f+5208+D|0]|0)>(d[f+5208+F|0]|0)){H=v;break}}H=u}else{H=v}}while(0);u=b[B>>1]|0;F=c[f+2908+(H<<2)>>2]|0;D=b[l+(F<<2)>>1]|0;if((u&65535)<(D&65535)){C=s;break L3629}if(u<<16>>16==D<<16>>16){if((d[x]|0)<=(d[f+5208+F|0]|0)){C=s;break L3629}}c[f+2908+(s<<2)>>2]=F;F=H<<1;D=c[n>>2]|0;if((F|0)>(D|0)){C=H;break}else{s=H;v=F;z=D}}}}while(0);c[f+2908+(C<<2)>>2]=t;x=r-1|0;A=c[n>>2]|0;if((x|0)>0){r=x;o=A}else{I=A;break}}}else{I=g}g=f+2912|0;o=p;p=I;while(1){I=c[g>>2]|0;r=p-1|0;c[n>>2]=r;C=c[f+2908+(p<<2)>>2]|0;c[g>>2]=C;H=f+5208+C|0;L3648:do{if((r|0)<2){J=1}else{A=l+(C<<2)|0;x=1;z=2;v=r;while(1){do{if((z|0)<(v|0)){s=z|1;B=c[f+2908+(s<<2)>>2]|0;D=b[l+(B<<2)>>1]|0;F=c[f+2908+(z<<2)>>2]|0;u=b[l+(F<<2)>>1]|0;if((D&65535)>=(u&65535)){if(D<<16>>16!=u<<16>>16){K=z;break}if((d[f+5208+B|0]|0)>(d[f+5208+F|0]|0)){K=z;break}}K=s}else{K=z}}while(0);s=b[A>>1]|0;F=c[f+2908+(K<<2)>>2]|0;B=b[l+(F<<2)>>1]|0;if((s&65535)<(B&65535)){J=x;break L3648}if(s<<16>>16==B<<16>>16){if((d[H]|0)<=(d[f+5208+F|0]|0)){J=x;break L3648}}c[f+2908+(x<<2)>>2]=F;F=K<<1;B=c[n>>2]|0;if((F|0)>(B|0)){J=K;break}else{x=K;z=F;v=B}}}}while(0);c[f+2908+(J<<2)>>2]=C;H=c[g>>2]|0;r=(c[q>>2]|0)-1|0;c[q>>2]=r;c[f+2908+(r<<2)>>2]=I;r=(c[q>>2]|0)-1|0;c[q>>2]=r;c[f+2908+(r<<2)>>2]=H;r=l+(o<<2)|0;b[r>>1]=(b[l+(H<<2)>>1]|0)+(b[l+(I<<2)>>1]|0)&65535;t=a[f+5208+I|0]|0;v=a[f+5208+H|0]|0;z=f+5208+o|0;a[z]=((t&255)<(v&255)?v:t)+1&255;t=o&65535;b[l+(H<<2)+2>>1]=t;b[l+(I<<2)+2>>1]=t;t=o+1|0;c[g>>2]=o;H=c[n>>2]|0;L3664:do{if((H|0)<2){L=1}else{v=1;x=2;A=H;while(1){do{if((x|0)<(A|0)){B=x|1;F=c[f+2908+(B<<2)>>2]|0;s=b[l+(F<<2)>>1]|0;u=c[f+2908+(x<<2)>>2]|0;D=b[l+(u<<2)>>1]|0;if((s&65535)>=(D&65535)){if(s<<16>>16!=D<<16>>16){M=x;break}if((d[f+5208+F|0]|0)>(d[f+5208+u|0]|0)){M=x;break}}M=B}else{M=x}}while(0);B=b[r>>1]|0;u=c[f+2908+(M<<2)>>2]|0;F=b[l+(u<<2)>>1]|0;if((B&65535)<(F&65535)){L=v;break L3664}if(B<<16>>16==F<<16>>16){if((d[z]|0)<=(d[f+5208+u|0]|0)){L=v;break L3664}}c[f+2908+(v<<2)>>2]=u;u=M<<1;F=c[n>>2]|0;if((u|0)>(F|0)){L=M;break}else{v=M;x=u;A=F}}}}while(0);c[f+2908+(L<<2)>>2]=o;z=c[n>>2]|0;if((z|0)>1){o=t;p=z}else{break}}p=c[g>>2]|0;g=(c[q>>2]|0)-1|0;c[q>>2]=g;c[f+2908+(g<<2)>>2]=p;p=c[k>>2]|0;k=c[w>>2]|0;w=c[m>>2]|0;m=c[w>>2]|0;g=c[w+4>>2]|0;o=c[w+8>>2]|0;n=c[w+16>>2]|0;w=f+2876|0;hv(w|0,0,32);b[p+(c[f+2908+(c[q>>2]<<2)>>2]<<2)+2>>1]=0;L=(c[q>>2]|0)+1|0;L3680:do{if((L|0)<573){q=f+5800|0;M=f+5804|0;if((m|0)==0){J=0;K=L;while(1){z=c[f+2908+(K<<2)>>2]|0;r=p+(z<<2)+2|0;H=(e[p+(e[r>>1]<<2)+2>>1]|0)+1|0;I=(H|0)>(n|0);C=I?n:H;H=(I&1)+J|0;b[r>>1]=C&65535;if((z|0)<=(k|0)){r=f+2876+(C<<1)|0;b[r>>1]=(b[r>>1]|0)+1&65535;if((z|0)<(o|0)){N=0}else{N=c[g+(z-o<<2)>>2]|0}r=aa(e[p+(z<<2)>>1]|0,N+C|0)|0;c[q>>2]=r+(c[q>>2]|0)}r=K+1|0;if((r|0)<573){J=H;K=r}else{O=H;break}}}else{K=0;J=L;while(1){t=c[f+2908+(J<<2)>>2]|0;H=p+(t<<2)+2|0;r=(e[p+(e[H>>1]<<2)+2>>1]|0)+1|0;C=(r|0)>(n|0);z=C?n:r;r=(C&1)+K|0;b[H>>1]=z&65535;if((t|0)<=(k|0)){H=f+2876+(z<<1)|0;b[H>>1]=(b[H>>1]|0)+1&65535;if((t|0)<(o|0)){P=0}else{P=c[g+(t-o<<2)>>2]|0}H=e[p+(t<<2)>>1]|0;C=aa(H,P+z|0)|0;c[q>>2]=C+(c[q>>2]|0);C=aa((e[m+(t<<2)+2>>1]|0)+P|0,H)|0;c[M>>2]=C+(c[M>>2]|0)}C=J+1|0;if((C|0)<573){K=r;J=C}else{O=r;break}}}if((O|0)==0){break}J=f+2876+(n<<1)|0;K=O;do{M=n;while(1){r=M-1|0;Q=f+2876+(r<<1)|0;R=b[Q>>1]|0;if(R<<16>>16==0){M=r}else{break}}b[Q>>1]=R-1&65535;r=f+2876+(M<<1)|0;b[r>>1]=(b[r>>1]|0)+2&65535;S=(b[J>>1]|0)-1&65535;b[J>>1]=S;K=K-2|0;}while((K|0)>0);if((n|0)==0){break}else{T=n;U=573;V=S}while(1){K=T&65535;if(V<<16>>16==0){W=U}else{J=V&65535;r=U;while(1){C=r;do{C=C-1|0;X=c[f+2908+(C<<2)>>2]|0;}while((X|0)>(k|0));H=p+(X<<2)+2|0;t=e[H>>1]|0;if((t|0)!=(T|0)){z=aa(e[p+(X<<2)>>1]|0,T-t|0)|0;c[q>>2]=z+(c[q>>2]|0);b[H>>1]=K}H=J-1|0;if((H|0)==0){W=C;break}else{J=H;r=C}}}r=T-1|0;if((r|0)==0){break L3680}T=r;U=W;V=b[f+2876+(r<<1)>>1]|0}}}while(0);V=b[w>>1]<<1;b[j+2>>1]=V;w=((b[f+2878>>1]|0)+V&65535)<<1;b[j+4>>1]=w;V=(w+(b[f+2880>>1]|0)&65535)<<1;b[j+6>>1]=V;w=(V+(b[f+2882>>1]|0)&65535)<<1;b[j+8>>1]=w;V=(w+(b[f+2884>>1]|0)&65535)<<1;b[j+10>>1]=V;w=(V+(b[f+2886>>1]|0)&65535)<<1;b[j+12>>1]=w;V=(w+(b[f+2888>>1]|0)&65535)<<1;b[j+14>>1]=V;w=(V+(b[f+2890>>1]|0)&65535)<<1;b[j+16>>1]=w;V=(w+(b[f+2892>>1]|0)&65535)<<1;b[j+18>>1]=V;w=(V+(b[f+2894>>1]|0)&65535)<<1;b[j+20>>1]=w;V=(w+(b[f+2896>>1]|0)&65535)<<1;b[j+22>>1]=V;w=(V+(b[f+2898>>1]|0)&65535)<<1;b[j+24>>1]=w;V=(w+(b[f+2900>>1]|0)&65535)<<1;b[j+26>>1]=V;w=(V+(b[f+2902>>1]|0)&65535)<<1;b[j+28>>1]=w;b[j+30>>1]=(w+(b[f+2904>>1]|0)&65535)<<1;if((y|0)<0){i=h;return}else{Y=0}do{f=b[l+(Y<<2)+2>>1]|0;w=f&65535;if(f<<16>>16!=0){f=j+(w<<1)|0;V=b[f>>1]|0;b[f>>1]=V+1&65535;f=0;W=w;w=V&65535;while(1){Z=f|w&1;V=W-1|0;if((V|0)>0){f=Z<<1;W=V;w=w>>>1}else{break}}b[l+(Y<<2)>>1]=Z&65535}Y=Y+1|0;}while((Y|0)<=(y|0));i=h;return}function hg(f,g,h){f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;i=f+5792|0;if((c[i>>2]|0)==0){j=c[f+5820>>2]|0;k=b[f+5816>>1]|0}else{l=f+5796|0;m=f+5784|0;n=f+5820|0;o=f+5816|0;p=f+20|0;q=f+8|0;r=0;while(1){s=b[(c[l>>2]|0)+(r<<1)>>1]|0;t=s&65535;u=r+1|0;v=d[(c[m>>2]|0)+r|0]|0;do{if(s<<16>>16==0){w=e[g+(v<<2)+2>>1]|0;x=c[n>>2]|0;y=e[g+(v<<2)>>1]|0;z=e[o>>1]|0|y<<x;A=z&65535;b[o>>1]=A;if((x|0)>(16-w|0)){B=c[p>>2]|0;c[p>>2]=B+1;a[(c[q>>2]|0)+B|0]=z&255;z=(e[o>>1]|0)>>>8&255;B=c[p>>2]|0;c[p>>2]=B+1;a[(c[q>>2]|0)+B|0]=z;z=c[n>>2]|0;B=y>>>((16-z|0)>>>0)&65535;b[o>>1]=B;y=w-16+z|0;c[n>>2]=y;C=y;D=B;break}else{B=x+w|0;c[n>>2]=B;C=B;D=A;break}}else{A=d[42232+v|0]|0;B=(A|256)+1|0;w=e[g+(B<<2)+2>>1]|0;x=c[n>>2]|0;y=e[g+(B<<2)>>1]|0;B=e[o>>1]|0|y<<x;z=B&65535;b[o>>1]=z;if((x|0)>(16-w|0)){E=c[p>>2]|0;c[p>>2]=E+1;a[(c[q>>2]|0)+E|0]=B&255;B=(e[o>>1]|0)>>>8&255;E=c[p>>2]|0;c[p>>2]=E+1;a[(c[q>>2]|0)+E|0]=B;B=c[n>>2]|0;E=y>>>((16-B|0)>>>0)&65535;b[o>>1]=E;F=w-16+B|0;G=E}else{F=x+w|0;G=z}c[n>>2]=F;z=c[11736+(A<<2)>>2]|0;do{if((A-8|0)>>>0<20){w=v-(c[22512+(A<<2)>>2]|0)&65535;x=w<<F|G&65535;E=x&65535;b[o>>1]=E;if((F|0)>(16-z|0)){B=c[p>>2]|0;c[p>>2]=B+1;a[(c[q>>2]|0)+B|0]=x&255;x=(e[o>>1]|0)>>>8&255;B=c[p>>2]|0;c[p>>2]=B+1;a[(c[q>>2]|0)+B|0]=x;x=c[n>>2]|0;B=w>>>((16-x|0)>>>0)&65535;b[o>>1]=B;w=z-16+x|0;c[n>>2]=w;H=w;I=B;break}else{B=F+z|0;c[n>>2]=B;H=B;I=E;break}}else{H=F;I=G}}while(0);z=t-1|0;if(z>>>0<256){J=z}else{J=(z>>>7)+256|0}A=d[42488+J|0]|0;E=e[h+(A<<2)+2>>1]|0;B=e[h+(A<<2)>>1]|0;w=I&65535|B<<H;x=w&65535;b[o>>1]=x;if((H|0)>(16-E|0)){y=c[p>>2]|0;c[p>>2]=y+1;a[(c[q>>2]|0)+y|0]=w&255;w=(e[o>>1]|0)>>>8&255;y=c[p>>2]|0;c[p>>2]=y+1;a[(c[q>>2]|0)+y|0]=w;w=c[n>>2]|0;y=B>>>((16-w|0)>>>0)&65535;b[o>>1]=y;K=E-16+w|0;L=y}else{K=H+E|0;L=x}c[n>>2]=K;x=c[11856+(A<<2)>>2]|0;if((A-4|0)>>>0>=26){C=K;D=L;break}E=z-(c[22632+(A<<2)>>2]|0)&65535;A=E<<K|L&65535;z=A&65535;b[o>>1]=z;if((K|0)>(16-x|0)){y=c[p>>2]|0;c[p>>2]=y+1;a[(c[q>>2]|0)+y|0]=A&255;A=(e[o>>1]|0)>>>8&255;y=c[p>>2]|0;c[p>>2]=y+1;a[(c[q>>2]|0)+y|0]=A;A=c[n>>2]|0;y=E>>>((16-A|0)>>>0)&65535;b[o>>1]=y;E=x-16+A|0;c[n>>2]=E;C=E;D=y;break}else{y=K+x|0;c[n>>2]=y;C=y;D=z;break}}}while(0);if(u>>>0<(c[i>>2]|0)>>>0){r=u}else{j=C;k=D;break}}}D=e[g+1026>>1]|0;C=f+5820|0;r=e[g+1024>>1]|0;g=f+5816|0;i=k&65535|r<<j;b[g>>1]=i&65535;if((j|0)>(16-D|0)){k=f+20|0;n=c[k>>2]|0;c[k>>2]=n+1;K=f+8|0;a[(c[K>>2]|0)+n|0]=i&255;i=(e[g>>1]|0)>>>8&255;n=c[k>>2]|0;c[k>>2]=n+1;a[(c[K>>2]|0)+n|0]=i;i=c[C>>2]|0;b[g>>1]=r>>>((16-i|0)>>>0)&65535;M=D-16+i|0;c[C>>2]=M;return}else{M=j+D|0;c[C>>2]=M;return}}function hh(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;h=b[f+2>>1]|0;i=h<<16>>16==0;j=d+2754|0;k=d+5820|0;l=d+2752|0;m=d+5816|0;n=d+20|0;o=d+8|0;p=d+2758|0;q=d+2756|0;r=d+2750|0;s=d+2748|0;t=0;u=-1;v=h&65535;h=i?138:7;w=i?3:4;L3774:while(1){i=t;x=0;while(1){if((i|0)>(g|0)){break L3774}y=i+1|0;z=b[f+(y<<2)+2>>1]|0;A=z&65535;B=x+1|0;C=(v|0)==(A|0);if((B|0)<(h|0)&C){i=y;x=B}else{break}}do{if((B|0)<(w|0)){i=d+2684+(v<<2)+2|0;D=d+2684+(v<<2)|0;E=B;F=c[k>>2]|0;G=b[m>>1]|0;while(1){H=e[i>>1]|0;I=e[D>>1]|0;J=G&65535|I<<F;K=J&65535;b[m>>1]=K;if((F|0)>(16-H|0)){L=c[n>>2]|0;c[n>>2]=L+1;a[(c[o>>2]|0)+L|0]=J&255;J=(e[m>>1]|0)>>>8&255;L=c[n>>2]|0;c[n>>2]=L+1;a[(c[o>>2]|0)+L|0]=J;J=c[k>>2]|0;L=I>>>((16-J|0)>>>0)&65535;b[m>>1]=L;M=H-16+J|0;N=L}else{M=F+H|0;N=K}c[k>>2]=M;K=E-1|0;if((K|0)==0){break}else{E=K;F=M;G=N}}}else{if((v|0)!=0){if((v|0)==(u|0)){O=B;P=c[k>>2]|0;Q=b[m>>1]|0}else{G=e[d+2684+(v<<2)+2>>1]|0;F=c[k>>2]|0;E=e[d+2684+(v<<2)>>1]|0;D=e[m>>1]|0|E<<F;i=D&65535;b[m>>1]=i;if((F|0)>(16-G|0)){K=c[n>>2]|0;c[n>>2]=K+1;a[(c[o>>2]|0)+K|0]=D&255;D=(e[m>>1]|0)>>>8&255;K=c[n>>2]|0;c[n>>2]=K+1;a[(c[o>>2]|0)+K|0]=D;D=c[k>>2]|0;K=E>>>((16-D|0)>>>0)&65535;b[m>>1]=K;R=G-16+D|0;S=K}else{R=F+G|0;S=i}c[k>>2]=R;O=x;P=R;Q=S}i=e[r>>1]|0;G=e[s>>1]|0;F=Q&65535|G<<P;K=F&65535;b[m>>1]=K;if((P|0)>(16-i|0)){D=c[n>>2]|0;c[n>>2]=D+1;a[(c[o>>2]|0)+D|0]=F&255;F=(e[m>>1]|0)>>>8&255;D=c[n>>2]|0;c[n>>2]=D+1;a[(c[o>>2]|0)+D|0]=F;F=c[k>>2]|0;D=G>>>((16-F|0)>>>0)&65535;b[m>>1]=D;T=i-16+F|0;U=D}else{T=P+i|0;U=K}c[k>>2]=T;K=O+65533&65535;i=U&65535|K<<T;b[m>>1]=i&65535;if((T|0)>14){D=c[n>>2]|0;c[n>>2]=D+1;a[(c[o>>2]|0)+D|0]=i&255;i=(e[m>>1]|0)>>>8&255;D=c[n>>2]|0;c[n>>2]=D+1;a[(c[o>>2]|0)+D|0]=i;i=c[k>>2]|0;b[m>>1]=K>>>((16-i|0)>>>0)&65535;c[k>>2]=i-14;break}else{c[k>>2]=T+2;break}}if((B|0)<11){i=e[j>>1]|0;K=c[k>>2]|0;D=e[l>>1]|0;F=e[m>>1]|0|D<<K;G=F&65535;b[m>>1]=G;if((K|0)>(16-i|0)){E=c[n>>2]|0;c[n>>2]=E+1;a[(c[o>>2]|0)+E|0]=F&255;F=(e[m>>1]|0)>>>8&255;E=c[n>>2]|0;c[n>>2]=E+1;a[(c[o>>2]|0)+E|0]=F;F=c[k>>2]|0;E=D>>>((16-F|0)>>>0)&65535;b[m>>1]=E;V=i-16+F|0;W=E}else{V=K+i|0;W=G}c[k>>2]=V;G=x+65534&65535;i=W&65535|G<<V;b[m>>1]=i&65535;if((V|0)>13){K=c[n>>2]|0;c[n>>2]=K+1;a[(c[o>>2]|0)+K|0]=i&255;i=(e[m>>1]|0)>>>8&255;K=c[n>>2]|0;c[n>>2]=K+1;a[(c[o>>2]|0)+K|0]=i;i=c[k>>2]|0;b[m>>1]=G>>>((16-i|0)>>>0)&65535;c[k>>2]=i-13;break}else{c[k>>2]=V+3;break}}else{i=e[p>>1]|0;G=c[k>>2]|0;K=e[q>>1]|0;E=e[m>>1]|0|K<<G;F=E&65535;b[m>>1]=F;if((G|0)>(16-i|0)){D=c[n>>2]|0;c[n>>2]=D+1;a[(c[o>>2]|0)+D|0]=E&255;E=(e[m>>1]|0)>>>8&255;D=c[n>>2]|0;c[n>>2]=D+1;a[(c[o>>2]|0)+D|0]=E;E=c[k>>2]|0;D=K>>>((16-E|0)>>>0)&65535;b[m>>1]=D;X=i-16+E|0;Y=D}else{X=G+i|0;Y=F}c[k>>2]=X;F=x+65526&65535;i=Y&65535|F<<X;b[m>>1]=i&65535;if((X|0)>9){G=c[n>>2]|0;c[n>>2]=G+1;a[(c[o>>2]|0)+G|0]=i&255;i=(e[m>>1]|0)>>>8&255;G=c[n>>2]|0;c[n>>2]=G+1;a[(c[o>>2]|0)+G|0]=i;i=c[k>>2]|0;b[m>>1]=F>>>((16-i|0)>>>0)&65535;c[k>>2]=i-9;break}else{c[k>>2]=X+7;break}}}}while(0);if(z<<16>>16==0){t=y;u=v;v=A;h=138;w=3;continue}t=y;u=v;v=A;h=C?6:7;w=C?3:4}return}function hi(a,c,d){a=a|0;c=c|0;d=d|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=b[c+2>>1]|0;g=f<<16>>16==0;b[c+(d+1<<2)+2>>1]=-1;h=a+2752|0;i=a+2756|0;j=a+2748|0;k=g?3:4;l=g?138:7;g=f&65535;f=0;m=-1;L3828:while(1){n=0;o=f;do{if((o|0)>(d|0)){break L3828}o=o+1|0;p=b[c+(o<<2)+2>>1]|0;q=p&65535;n=n+1|0;r=(g|0)==(q|0);}while((n|0)<(l|0)&r);do{if((n|0)<(k|0)){s=a+2684+(g<<2)|0;b[s>>1]=(e[s>>1]|0)+n&65535}else{if((g|0)==0){if((n|0)<11){b[h>>1]=(b[h>>1]|0)+1&65535;break}else{b[i>>1]=(b[i>>1]|0)+1&65535;break}}else{if((g|0)!=(m|0)){s=a+2684+(g<<2)|0;b[s>>1]=(b[s>>1]|0)+1&65535}b[j>>1]=(b[j>>1]|0)+1&65535;break}}}while(0);if(p<<16>>16==0){k=3;l=138;m=g;g=q;f=o;continue}k=r?3:4;l=r?6:7;m=g;g=q;f=o}return}function hj(a,b,c){a=a|0;b=b|0;c=c|0;return ho(aa(c,b)|0)|0}function hk(a,b){a=a|0;b=b|0;hp(b);return}function hl(a,b,c){a=a|0;b=b|0;c=c|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=a>>>16;f=a&65535;if((c|0)==1){a=(d[b]|0)+f|0;g=a>>>0>65520?a-65521|0:a;a=g+e|0;h=(a>>>0>65520?a+15|0:a)<<16|g;return h|0}if((b|0)==0){h=1;return h|0}if(c>>>0<16){if((c|0)==0){i=f;j=e}else{g=f;a=b;k=c;l=e;while(1){m=k-1|0;n=(d[a]|0)+g|0;o=n+l|0;if((m|0)==0){i=n;j=o;break}else{g=n;a=a+1|0;k=m;l=o}}}h=((j>>>0)%65521|0)<<16|(i>>>0>65520?i-65521|0:i);return h|0}do{if(c>>>0>5551){i=f;j=b;l=c;k=e;do{l=l-5552|0;a=347;g=k;o=j;m=i;while(1){n=(d[o]|0)+m|0;p=n+(d[o+1|0]|0)|0;q=p+(d[o+2|0]|0)|0;r=q+(d[o+3|0]|0)|0;s=r+(d[o+4|0]|0)|0;t=s+(d[o+5|0]|0)|0;u=t+(d[o+6|0]|0)|0;v=u+(d[o+7|0]|0)|0;w=v+(d[o+8|0]|0)|0;x=w+(d[o+9|0]|0)|0;y=x+(d[o+10|0]|0)|0;z=y+(d[o+11|0]|0)|0;A=z+(d[o+12|0]|0)|0;B=A+(d[o+13|0]|0)|0;C=B+(d[o+14|0]|0)|0;D=C+(d[o+15|0]|0)|0;E=n+g+p+q+r+s+t+u+v+w+x+y+z+A+B+C+D|0;C=a-1|0;if((C|0)==0){break}else{a=C;g=E;o=o+16|0;m=D}}j=j+5552|0;i=(D>>>0)%65521|0;k=(E>>>0)%65521|0;}while(l>>>0>5551);if((l|0)==0){F=k;G=i;break}if(l>>>0>15){H=i;I=j;J=l;K=k;L=2853}else{M=i;N=j;O=l;P=k;L=2854}}else{H=f;I=b;J=c;K=e;L=2853}}while(0);if((L|0)==2853){while(1){L=0;Q=J-16|0;e=(d[I]|0)+H|0;c=e+(d[I+1|0]|0)|0;b=c+(d[I+2|0]|0)|0;f=b+(d[I+3|0]|0)|0;E=f+(d[I+4|0]|0)|0;D=E+(d[I+5|0]|0)|0;m=D+(d[I+6|0]|0)|0;o=m+(d[I+7|0]|0)|0;g=o+(d[I+8|0]|0)|0;a=g+(d[I+9|0]|0)|0;C=a+(d[I+10|0]|0)|0;B=C+(d[I+11|0]|0)|0;A=B+(d[I+12|0]|0)|0;z=A+(d[I+13|0]|0)|0;y=z+(d[I+14|0]|0)|0;R=y+(d[I+15|0]|0)|0;S=e+K+c+b+f+E+D+m+o+g+a+C+B+A+z+y+R|0;T=I+16|0;if(Q>>>0>15){H=R;I=T;J=Q;K=S;L=2853}else{break}}if((Q|0)==0){U=R;V=S;L=2855}else{M=R;N=T;O=Q;P=S;L=2854}}if((L|0)==2854){while(1){L=0;S=O-1|0;Q=(d[N]|0)+M|0;T=Q+P|0;if((S|0)==0){U=Q;V=T;L=2855;break}else{M=Q;N=N+1|0;O=S;P=T;L=2854}}}if((L|0)==2855){F=(V>>>0)%65521|0;G=(U>>>0)%65521|0}h=F<<16|G;return h|0}function hm(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((b|0)==0){f=0;return f|0}g=~a;L3890:do{if((e|0)==0){h=g}else{a=b;i=e;j=g;while(1){if((a&3|0)==0){break}k=c[14176+(((d[a]|0)^j&255)<<2)>>2]^j>>>8;l=i-1|0;if((l|0)==0){h=k;break L3890}else{a=a+1|0;i=l;j=k}}k=a;if(i>>>0>31){l=i;m=j;n=k;while(1){o=c[n>>2]^m;p=c[16224+((o>>>8&255)<<2)>>2]^c[17248+((o&255)<<2)>>2]^c[15200+((o>>>16&255)<<2)>>2]^c[14176+(o>>>24<<2)>>2]^c[n+4>>2];o=c[16224+((p>>>8&255)<<2)>>2]^c[17248+((p&255)<<2)>>2]^c[15200+((p>>>16&255)<<2)>>2]^c[14176+(p>>>24<<2)>>2]^c[n+8>>2];p=c[16224+((o>>>8&255)<<2)>>2]^c[17248+((o&255)<<2)>>2]^c[15200+((o>>>16&255)<<2)>>2]^c[14176+(o>>>24<<2)>>2]^c[n+12>>2];o=c[16224+((p>>>8&255)<<2)>>2]^c[17248+((p&255)<<2)>>2]^c[15200+((p>>>16&255)<<2)>>2]^c[14176+(p>>>24<<2)>>2]^c[n+16>>2];p=c[16224+((o>>>8&255)<<2)>>2]^c[17248+((o&255)<<2)>>2]^c[15200+((o>>>16&255)<<2)>>2]^c[14176+(o>>>24<<2)>>2]^c[n+20>>2];o=c[16224+((p>>>8&255)<<2)>>2]^c[17248+((p&255)<<2)>>2]^c[15200+((p>>>16&255)<<2)>>2]^c[14176+(p>>>24<<2)>>2]^c[n+24>>2];p=n+32|0;q=c[16224+((o>>>8&255)<<2)>>2]^c[17248+((o&255)<<2)>>2]^c[15200+((o>>>16&255)<<2)>>2]^c[14176+(o>>>24<<2)>>2]^c[n+28>>2];o=c[16224+((q>>>8&255)<<2)>>2]^c[17248+((q&255)<<2)>>2]^c[15200+((q>>>16&255)<<2)>>2]^c[14176+(q>>>24<<2)>>2];q=l-32|0;if(q>>>0>31){l=q;m=o;n=p}else{r=q;s=o;t=p;break}}}else{r=i;s=j;t=k}if(r>>>0>3){n=r;m=s;l=t;while(1){a=l+4|0;p=c[l>>2]^m;o=c[16224+((p>>>8&255)<<2)>>2]^c[17248+((p&255)<<2)>>2]^c[15200+((p>>>16&255)<<2)>>2]^c[14176+(p>>>24<<2)>>2];p=n-4|0;if(p>>>0>3){n=p;m=o;l=a}else{u=p;v=o;w=a;break}}}else{u=r;v=s;w=t}if((u|0)==0){h=v;break}l=v;m=u;n=w;while(1){k=c[14176+(((d[n]|0)^l&255)<<2)>>2]^l>>>8;j=m-1|0;if((j|0)==0){h=k;break}else{l=k;m=j;n=n+1|0}}}}while(0);f=~h;return f|0}function hn(e,f){e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0;g=c[e+28>>2]|0;h=g;i=e|0;j=c[i>>2]|0;k=e+4|0;l=j+((c[k>>2]|0)-6)|0;m=e+12|0;n=c[m>>2]|0;o=e+16|0;p=c[o>>2]|0;q=n+(p-258)|0;r=c[h+44>>2]|0;s=c[h+48>>2]|0;t=c[h+52>>2]|0;u=h+56|0;v=h+60|0;w=c[h+76>>2]|0;x=c[h+80>>2]|0;y=(1<<c[h+84>>2])-1|0;z=(1<<c[h+88>>2])-1|0;A=n+(p+~f)|0;f=h+7104|0;p=t-1|0;B=(s|0)==0;C=(c[h+40>>2]|0)-1|0;h=C+s|0;D=s-1|0;E=A-1|0;F=A-s|0;G=j-1|0;j=n-1|0;n=c[u>>2]|0;H=c[v>>2]|0;L3909:while(1){if(H>>>0<15){I=G+2|0;J=I;K=((d[G+1|0]|0)<<H)+n+((d[I]|0)<<H+8)|0;L=H+16|0}else{J=G;K=n;L=H}I=K&y;M=a[w+(I<<2)|0]|0;N=b[w+(I<<2)+2>>1]|0;O=d[w+(I<<2)+1|0]|0;I=K>>>(O>>>0);P=L-O|0;do{if(M<<24>>24==0){Q=N&255;R=I;S=P;T=2882}else{O=N;U=I;V=P;W=M;while(1){X=W&255;if((X&16|0)!=0){break}if((X&64|0)!=0){T=2930;break L3909}Y=(U&(1<<X)-1)+(O&65535)|0;Z=a[w+(Y<<2)|0]|0;_=b[w+(Y<<2)+2>>1]|0;$=d[w+(Y<<2)+1|0]|0;aa=U>>>($>>>0);ab=V-$|0;if(Z<<24>>24==0){T=2881;break}else{O=_;U=aa;V=ab;W=Z}}if((T|0)==2881){T=0;Q=_&255;R=aa;S=ab;T=2882;break}W=O&65535;Z=X&15;if((Z|0)==0){ac=W;ad=J;ae=U;af=V}else{if(V>>>0<Z>>>0){$=J+1|0;ag=$;ah=((d[$]|0)<<V)+U|0;ai=V+8|0}else{ag=J;ah=U;ai=V}ac=(ah&(1<<Z)-1)+W|0;ad=ag;ae=ah>>>(Z>>>0);af=ai-Z|0}if(af>>>0<15){Z=ad+2|0;aj=Z;ak=((d[ad+1|0]|0)<<af)+ae+((d[Z]|0)<<af+8)|0;al=af+16|0}else{aj=ad;ak=ae;al=af}Z=ak&z;W=b[x+(Z<<2)+2>>1]|0;$=d[x+(Z<<2)+1|0]|0;Y=ak>>>($>>>0);am=al-$|0;$=d[x+(Z<<2)|0]|0;if(($&16|0)==0){Z=W;an=Y;ao=am;ap=$;while(1){if((ap&64|0)!=0){T=2927;break L3909}aq=(an&(1<<ap)-1)+(Z&65535)|0;ar=b[x+(aq<<2)+2>>1]|0;as=d[x+(aq<<2)+1|0]|0;at=an>>>(as>>>0);au=ao-as|0;as=d[x+(aq<<2)|0]|0;if((as&16|0)==0){Z=ar;an=at;ao=au;ap=as}else{av=ar;aw=at;ax=au;ay=as;break}}}else{av=W;aw=Y;ax=am;ay=$}ap=av&65535;Z=ay&15;do{if(ax>>>0<Z>>>0){O=aj+1|0;as=((d[O]|0)<<ax)+aw|0;au=ax+8|0;if(au>>>0>=Z>>>0){az=O;aA=as;aB=au;break}O=aj+2|0;az=O;aA=((d[O]|0)<<au)+as|0;aB=ax+16|0}else{az=aj;aA=aw;aB=ax}}while(0);$=(aA&(1<<Z)-1)+ap|0;aC=aA>>>(Z>>>0);aD=aB-Z|0;am=j;Y=am-A|0;if($>>>0<=Y>>>0){W=j+(-$|0)|0;as=ac;au=j;while(1){a[au+1|0]=a[W+1|0]|0;a[au+2|0]=a[W+2|0]|0;O=W+3|0;aE=au+3|0;a[aE]=a[O]|0;aF=as-3|0;if(aF>>>0>2){W=O;as=aF;au=aE}else{break}}if((aF|0)==0){aG=az;aH=aE;aI=aC;aJ=aD;break}as=au+4|0;a[as]=a[W+4|0]|0;if(aF>>>0<=1){aG=az;aH=as;aI=aC;aJ=aD;break}as=au+5|0;a[as]=a[W+5|0]|0;aG=az;aH=as;aI=aC;aJ=aD;break}as=$-Y|0;if(as>>>0>r>>>0){if((c[f>>2]|0)!=0){T=2897;break L3909}}do{if(B){Z=t+(C-as)|0;if(as>>>0>=ac>>>0){aK=Z;aL=ac;aM=j;break}ap=ac-as|0;O=$-am|0;at=Z;Z=as;ar=j;do{at=at+1|0;ar=ar+1|0;a[ar]=a[at]|0;Z=Z-1|0;}while((Z|0)!=0);aK=j+(E+O+(1-$))|0;aL=ap;aM=j+(A+O)|0}else{if(s>>>0>=as>>>0){Z=t+(D-as)|0;if(as>>>0>=ac>>>0){aK=Z;aL=ac;aM=j;break}at=ac-as|0;ar=$-am|0;aq=Z;Z=as;aN=j;do{aq=aq+1|0;aN=aN+1|0;a[aN]=a[aq]|0;Z=Z-1|0;}while((Z|0)!=0);aK=j+(E+ar+(1-$))|0;aL=at;aM=j+(A+ar)|0;break}Z=t+(h-as)|0;aq=as-s|0;if(aq>>>0>=ac>>>0){aK=Z;aL=ac;aM=j;break}aN=ac-aq|0;O=$-am|0;ap=Z;Z=aq;aq=j;do{ap=ap+1|0;aq=aq+1|0;a[aq]=a[ap]|0;Z=Z-1|0;}while((Z|0)!=0);Z=j+(F+O)|0;if(s>>>0>=aN>>>0){aK=p;aL=aN;aM=Z;break}ap=aN-s|0;aq=p;ar=s;at=Z;do{aq=aq+1|0;at=at+1|0;a[at]=a[aq]|0;ar=ar-1|0;}while((ar|0)!=0);aK=j+(E+O+(1-$))|0;aL=ap;aM=j+(A+O)|0}}while(0);if(aL>>>0>2){$=aM;am=aL;as=aK;while(1){a[$+1|0]=a[as+1|0]|0;a[$+2|0]=a[as+2|0]|0;Y=as+3|0;W=$+3|0;a[W]=a[Y]|0;au=am-3|0;if(au>>>0>2){$=W;am=au;as=Y}else{aO=W;aP=au;aQ=Y;break}}}else{aO=aM;aP=aL;aQ=aK}if((aP|0)==0){aG=az;aH=aO;aI=aC;aJ=aD;break}as=aO+1|0;a[as]=a[aQ+1|0]|0;if(aP>>>0<=1){aG=az;aH=as;aI=aC;aJ=aD;break}as=aO+2|0;a[as]=a[aQ+2|0]|0;aG=az;aH=as;aI=aC;aJ=aD}}while(0);if((T|0)==2882){T=0;M=j+1|0;a[M]=Q;aG=J;aH=M;aI=R;aJ=S}if(aG>>>0<l>>>0&aH>>>0<q>>>0){G=aG;j=aH;n=aI;H=aJ}else{aR=aG;aS=aH;aT=aI;aU=aJ;break}}do{if((T|0)==2930){if((X&32|0)==0){c[e+24>>2]=31872;c[g>>2]=29;aR=J;aS=j;aT=U;aU=V;break}else{c[g>>2]=11;aR=J;aS=j;aT=U;aU=V;break}}else if((T|0)==2897){c[e+24>>2]=23408;c[g>>2]=29;aR=az;aS=j;aT=aC;aU=aD}else if((T|0)==2927){c[e+24>>2]=35880;c[g>>2]=29;aR=aj;aS=j;aT=an;aU=ao}}while(0);ao=aU>>>3;an=aR+(-ao|0)|0;j=aU-(ao<<3)|0;aU=(1<<j)-1&aT;c[i>>2]=aR+(1-ao);c[m>>2]=aS+1;if(an>>>0<l>>>0){aV=l-an|0}else{aV=l-an|0}c[k>>2]=aV+5;if(aS>>>0<q>>>0){aW=q-aS|0;aX=aW+257|0;c[o>>2]=aX;c[u>>2]=aU;c[v>>2]=j;return}else{aW=q-aS|0;aX=aW+257|0;c[o>>2]=aX;c[u>>2]=aU;c[v>>2]=j;return}}function ho(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0;do{if(a>>>0<245){if(a>>>0<11){b=16}else{b=a+11&-8}d=b>>>3;e=c[37078]|0;f=e>>>(d>>>0);if((f&3|0)!=0){g=(f&1^1)+d|0;h=g<<1;i=148352+(h<<2)|0;j=148352+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do{if((i|0)==(l|0)){c[37078]=e&~(1<<g)}else{if(l>>>0<(c[37082]|0)>>>0){aw();return 0}m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else{aw();return 0}}}while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}if(b>>>0<=(c[37080]|0)>>>0){o=b;break}if((f|0)!=0){j=2<<d;l=f<<d&(j|-j);j=(l&-l)-1|0;l=j>>>12&16;i=j>>>(l>>>0);j=i>>>5&8;m=i>>>(j>>>0);i=m>>>2&4;p=m>>>(i>>>0);m=p>>>1&2;q=p>>>(m>>>0);p=q>>>1&1;r=(j|l|i|m|p)+(q>>>(p>>>0))|0;p=r<<1;q=148352+(p<<2)|0;m=148352+(p+2<<2)|0;p=c[m>>2]|0;i=p+8|0;l=c[i>>2]|0;do{if((q|0)==(l|0)){c[37078]=e&~(1<<r)}else{if(l>>>0<(c[37082]|0)>>>0){aw();return 0}j=l+12|0;if((c[j>>2]|0)==(p|0)){c[j>>2]=q;c[m>>2]=l;break}else{aw();return 0}}}while(0);l=r<<3;m=l-b|0;c[p+4>>2]=b|3;q=p;e=q+b|0;c[q+(b|4)>>2]=m|1;c[q+l>>2]=m;l=c[37080]|0;if((l|0)!=0){q=c[37083]|0;d=l>>>3;l=d<<1;f=148352+(l<<2)|0;k=c[37078]|0;h=1<<d;do{if((k&h|0)==0){c[37078]=k|h;s=f;t=148352+(l+2<<2)|0}else{d=148352+(l+2<<2)|0;g=c[d>>2]|0;if(g>>>0>=(c[37082]|0)>>>0){s=g;t=d;break}aw();return 0}}while(0);c[t>>2]=q;c[s+12>>2]=q;c[q+8>>2]=s;c[q+12>>2]=f}c[37080]=m;c[37083]=e;n=i;return n|0}l=c[37079]|0;if((l|0)==0){o=b;break}h=(l&-l)-1|0;l=h>>>12&16;k=h>>>(l>>>0);h=k>>>5&8;p=k>>>(h>>>0);k=p>>>2&4;r=p>>>(k>>>0);p=r>>>1&2;d=r>>>(p>>>0);r=d>>>1&1;g=c[148616+((h|l|k|p|r)+(d>>>(r>>>0))<<2)>>2]|0;r=g;d=g;p=(c[g+4>>2]&-8)-b|0;while(1){g=c[r+16>>2]|0;if((g|0)==0){k=c[r+20>>2]|0;if((k|0)==0){break}else{u=k}}else{u=g}g=(c[u+4>>2]&-8)-b|0;k=g>>>0<p>>>0;r=u;d=k?u:d;p=k?g:p}r=d;i=c[37082]|0;if(r>>>0<i>>>0){aw();return 0}e=r+b|0;m=e;if(r>>>0>=e>>>0){aw();return 0}e=c[d+24>>2]|0;f=c[d+12>>2]|0;do{if((f|0)==(d|0)){q=d+20|0;g=c[q>>2]|0;if((g|0)==0){k=d+16|0;l=c[k>>2]|0;if((l|0)==0){v=0;break}else{w=l;x=k}}else{w=g;x=q}while(1){q=w+20|0;g=c[q>>2]|0;if((g|0)!=0){w=g;x=q;continue}q=w+16|0;g=c[q>>2]|0;if((g|0)==0){break}else{w=g;x=q}}if(x>>>0<i>>>0){aw();return 0}else{c[x>>2]=0;v=w;break}}else{q=c[d+8>>2]|0;if(q>>>0<i>>>0){aw();return 0}g=q+12|0;if((c[g>>2]|0)!=(d|0)){aw();return 0}k=f+8|0;if((c[k>>2]|0)==(d|0)){c[g>>2]=f;c[k>>2]=q;v=f;break}else{aw();return 0}}}while(0);L4078:do{if((e|0)!=0){f=d+28|0;i=148616+(c[f>>2]<<2)|0;do{if((d|0)==(c[i>>2]|0)){c[i>>2]=v;if((v|0)!=0){break}c[37079]=c[37079]&~(1<<c[f>>2]);break L4078}else{if(e>>>0<(c[37082]|0)>>>0){aw();return 0}q=e+16|0;if((c[q>>2]|0)==(d|0)){c[q>>2]=v}else{c[e+20>>2]=v}if((v|0)==0){break L4078}}}while(0);if(v>>>0<(c[37082]|0)>>>0){aw();return 0}c[v+24>>2]=e;f=c[d+16>>2]|0;do{if((f|0)!=0){if(f>>>0<(c[37082]|0)>>>0){aw();return 0}else{c[v+16>>2]=f;c[f+24>>2]=v;break}}}while(0);f=c[d+20>>2]|0;if((f|0)==0){break}if(f>>>0<(c[37082]|0)>>>0){aw();return 0}else{c[v+20>>2]=f;c[f+24>>2]=v;break}}}while(0);if(p>>>0<16){e=p+b|0;c[d+4>>2]=e|3;f=r+(e+4)|0;c[f>>2]=c[f>>2]|1}else{c[d+4>>2]=b|3;c[r+(b|4)>>2]=p|1;c[r+(p+b)>>2]=p;f=c[37080]|0;if((f|0)!=0){e=c[37083]|0;i=f>>>3;f=i<<1;q=148352+(f<<2)|0;k=c[37078]|0;g=1<<i;do{if((k&g|0)==0){c[37078]=k|g;y=q;z=148352+(f+2<<2)|0}else{i=148352+(f+2<<2)|0;l=c[i>>2]|0;if(l>>>0>=(c[37082]|0)>>>0){y=l;z=i;break}aw();return 0}}while(0);c[z>>2]=e;c[y+12>>2]=e;c[e+8>>2]=y;c[e+12>>2]=q}c[37080]=p;c[37083]=m}f=d+8|0;if((f|0)==0){o=b;break}else{n=f}return n|0}else{if(a>>>0>4294967231){o=-1;break}f=a+11|0;g=f&-8;k=c[37079]|0;if((k|0)==0){o=g;break}r=-g|0;i=f>>>8;do{if((i|0)==0){A=0}else{if(g>>>0>16777215){A=31;break}f=(i+1048320|0)>>>16&8;l=i<<f;h=(l+520192|0)>>>16&4;j=l<<h;l=(j+245760|0)>>>16&2;B=14-(h|f|l)+(j<<l>>>15)|0;A=g>>>((B+7|0)>>>0)&1|B<<1}}while(0);i=c[148616+(A<<2)>>2]|0;L4126:do{if((i|0)==0){C=0;D=r;E=0}else{if((A|0)==31){F=0}else{F=25-(A>>>1)|0}d=0;m=r;p=i;q=g<<F;e=0;while(1){B=c[p+4>>2]&-8;l=B-g|0;if(l>>>0<m>>>0){if((B|0)==(g|0)){C=p;D=l;E=p;break L4126}else{G=p;H=l}}else{G=d;H=m}l=c[p+20>>2]|0;B=c[p+16+(q>>>31<<2)>>2]|0;j=(l|0)==0|(l|0)==(B|0)?e:l;if((B|0)==0){C=G;D=H;E=j;break}else{d=G;m=H;p=B;q=q<<1;e=j}}}}while(0);if((E|0)==0&(C|0)==0){i=2<<A;r=k&(i|-i);if((r|0)==0){o=g;break}i=(r&-r)-1|0;r=i>>>12&16;e=i>>>(r>>>0);i=e>>>5&8;q=e>>>(i>>>0);e=q>>>2&4;p=q>>>(e>>>0);q=p>>>1&2;m=p>>>(q>>>0);p=m>>>1&1;I=c[148616+((i|r|e|q|p)+(m>>>(p>>>0))<<2)>>2]|0}else{I=E}if((I|0)==0){J=D;K=C}else{p=I;m=D;q=C;while(1){e=(c[p+4>>2]&-8)-g|0;r=e>>>0<m>>>0;i=r?e:m;e=r?p:q;r=c[p+16>>2]|0;if((r|0)!=0){p=r;m=i;q=e;continue}r=c[p+20>>2]|0;if((r|0)==0){J=i;K=e;break}else{p=r;m=i;q=e}}}if((K|0)==0){o=g;break}if(J>>>0>=((c[37080]|0)-g|0)>>>0){o=g;break}q=K;m=c[37082]|0;if(q>>>0<m>>>0){aw();return 0}p=q+g|0;k=p;if(q>>>0>=p>>>0){aw();return 0}e=c[K+24>>2]|0;i=c[K+12>>2]|0;do{if((i|0)==(K|0)){r=K+20|0;d=c[r>>2]|0;if((d|0)==0){j=K+16|0;B=c[j>>2]|0;if((B|0)==0){L=0;break}else{M=B;N=j}}else{M=d;N=r}while(1){r=M+20|0;d=c[r>>2]|0;if((d|0)!=0){M=d;N=r;continue}r=M+16|0;d=c[r>>2]|0;if((d|0)==0){break}else{M=d;N=r}}if(N>>>0<m>>>0){aw();return 0}else{c[N>>2]=0;L=M;break}}else{r=c[K+8>>2]|0;if(r>>>0<m>>>0){aw();return 0}d=r+12|0;if((c[d>>2]|0)!=(K|0)){aw();return 0}j=i+8|0;if((c[j>>2]|0)==(K|0)){c[d>>2]=i;c[j>>2]=r;L=i;break}else{aw();return 0}}}while(0);L4176:do{if((e|0)!=0){i=K+28|0;m=148616+(c[i>>2]<<2)|0;do{if((K|0)==(c[m>>2]|0)){c[m>>2]=L;if((L|0)!=0){break}c[37079]=c[37079]&~(1<<c[i>>2]);break L4176}else{if(e>>>0<(c[37082]|0)>>>0){aw();return 0}r=e+16|0;if((c[r>>2]|0)==(K|0)){c[r>>2]=L}else{c[e+20>>2]=L}if((L|0)==0){break L4176}}}while(0);if(L>>>0<(c[37082]|0)>>>0){aw();return 0}c[L+24>>2]=e;i=c[K+16>>2]|0;do{if((i|0)!=0){if(i>>>0<(c[37082]|0)>>>0){aw();return 0}else{c[L+16>>2]=i;c[i+24>>2]=L;break}}}while(0);i=c[K+20>>2]|0;if((i|0)==0){break}if(i>>>0<(c[37082]|0)>>>0){aw();return 0}else{c[L+20>>2]=i;c[i+24>>2]=L;break}}}while(0);do{if(J>>>0<16){e=J+g|0;c[K+4>>2]=e|3;i=q+(e+4)|0;c[i>>2]=c[i>>2]|1}else{c[K+4>>2]=g|3;c[q+(g|4)>>2]=J|1;c[q+(J+g)>>2]=J;i=J>>>3;if(J>>>0<256){e=i<<1;m=148352+(e<<2)|0;r=c[37078]|0;j=1<<i;do{if((r&j|0)==0){c[37078]=r|j;O=m;P=148352+(e+2<<2)|0}else{i=148352+(e+2<<2)|0;d=c[i>>2]|0;if(d>>>0>=(c[37082]|0)>>>0){O=d;P=i;break}aw();return 0}}while(0);c[P>>2]=k;c[O+12>>2]=k;c[q+(g+8)>>2]=O;c[q+(g+12)>>2]=m;break}e=p;j=J>>>8;do{if((j|0)==0){Q=0}else{if(J>>>0>16777215){Q=31;break}r=(j+1048320|0)>>>16&8;i=j<<r;d=(i+520192|0)>>>16&4;B=i<<d;i=(B+245760|0)>>>16&2;l=14-(d|r|i)+(B<<i>>>15)|0;Q=J>>>((l+7|0)>>>0)&1|l<<1}}while(0);j=148616+(Q<<2)|0;c[q+(g+28)>>2]=Q;c[q+(g+20)>>2]=0;c[q+(g+16)>>2]=0;m=c[37079]|0;l=1<<Q;if((m&l|0)==0){c[37079]=m|l;c[j>>2]=e;c[q+(g+24)>>2]=j;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}if((Q|0)==31){R=0}else{R=25-(Q>>>1)|0}l=J<<R;m=c[j>>2]|0;while(1){if((c[m+4>>2]&-8|0)==(J|0)){break}S=m+16+(l>>>31<<2)|0;j=c[S>>2]|0;if((j|0)==0){T=3093;break}else{l=l<<1;m=j}}if((T|0)==3093){if(S>>>0<(c[37082]|0)>>>0){aw();return 0}else{c[S>>2]=e;c[q+(g+24)>>2]=m;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}}l=m+8|0;j=c[l>>2]|0;i=c[37082]|0;if(m>>>0<i>>>0){aw();return 0}if(j>>>0<i>>>0){aw();return 0}else{c[j+12>>2]=e;c[l>>2]=e;c[q+(g+8)>>2]=j;c[q+(g+12)>>2]=m;c[q+(g+24)>>2]=0;break}}}while(0);q=K+8|0;if((q|0)==0){o=g;break}else{n=q}return n|0}}while(0);K=c[37080]|0;if(o>>>0<=K>>>0){S=K-o|0;J=c[37083]|0;if(S>>>0>15){R=J;c[37083]=R+o;c[37080]=S;c[R+(o+4)>>2]=S|1;c[R+K>>2]=S;c[J+4>>2]=o|3}else{c[37080]=0;c[37083]=0;c[J+4>>2]=K|3;S=J+(K+4)|0;c[S>>2]=c[S>>2]|1}n=J+8|0;return n|0}J=c[37081]|0;if(o>>>0<J>>>0){S=J-o|0;c[37081]=S;J=c[37084]|0;K=J;c[37084]=K+o;c[K+(o+4)>>2]=S|1;c[J+4>>2]=o|3;n=J+8|0;return n|0}do{if((c[37064]|0)==0){J=aP(30)|0;if((J-1&J|0)==0){c[37066]=J;c[37065]=J;c[37067]=-1;c[37068]=-1;c[37069]=0;c[37189]=0;c[37064]=(aT(0)|0)&-16^1431655768;break}else{aw();return 0}}}while(0);J=o+48|0;S=c[37066]|0;K=o+47|0;R=S+K|0;Q=-S|0;S=R&Q;if(S>>>0<=o>>>0){n=0;return n|0}O=c[37188]|0;do{if((O|0)!=0){P=c[37186]|0;L=P+S|0;if(L>>>0<=P>>>0|L>>>0>O>>>0){n=0}else{break}return n|0}}while(0);L4268:do{if((c[37189]&4|0)==0){O=c[37084]|0;L4270:do{if((O|0)==0){T=3123}else{L=O;P=148760;while(1){U=P|0;M=c[U>>2]|0;if(M>>>0<=L>>>0){V=P+4|0;if((M+(c[V>>2]|0)|0)>>>0>L>>>0){break}}M=c[P+8>>2]|0;if((M|0)==0){T=3123;break L4270}else{P=M}}if((P|0)==0){T=3123;break}L=R-(c[37081]|0)&Q;if(L>>>0>=2147483647){W=0;break}m=a$(L|0)|0;e=(m|0)==((c[U>>2]|0)+(c[V>>2]|0)|0);X=e?m:-1;Y=e?L:0;Z=m;_=L;T=3132}}while(0);do{if((T|0)==3123){O=a$(0)|0;if((O|0)==-1){W=0;break}g=O;L=c[37065]|0;m=L-1|0;if((m&g|0)==0){$=S}else{$=S-g+(m+g&-L)|0}L=c[37186]|0;g=L+$|0;if(!($>>>0>o>>>0&$>>>0<2147483647)){W=0;break}m=c[37188]|0;if((m|0)!=0){if(g>>>0<=L>>>0|g>>>0>m>>>0){W=0;break}}m=a$($|0)|0;g=(m|0)==(O|0);X=g?O:-1;Y=g?$:0;Z=m;_=$;T=3132}}while(0);L4290:do{if((T|0)==3132){m=-_|0;if((X|0)!=-1){aa=Y;ab=X;T=3143;break L4268}do{if((Z|0)!=-1&_>>>0<2147483647&_>>>0<J>>>0){g=c[37066]|0;O=K-_+g&-g;if(O>>>0>=2147483647){ac=_;break}if((a$(O|0)|0)==-1){a$(m|0)|0;W=Y;break L4290}else{ac=O+_|0;break}}else{ac=_}}while(0);if((Z|0)==-1){W=Y}else{aa=ac;ab=Z;T=3143;break L4268}}}while(0);c[37189]=c[37189]|4;ad=W;T=3140}else{ad=0;T=3140}}while(0);do{if((T|0)==3140){if(S>>>0>=2147483647){break}W=a$(S|0)|0;Z=a$(0)|0;if(!((Z|0)!=-1&(W|0)!=-1&W>>>0<Z>>>0)){break}ac=Z-W|0;Z=ac>>>0>(o+40|0)>>>0;Y=Z?W:-1;if((Y|0)!=-1){aa=Z?ac:ad;ab=Y;T=3143}}}while(0);do{if((T|0)==3143){ad=(c[37186]|0)+aa|0;c[37186]=ad;if(ad>>>0>(c[37187]|0)>>>0){c[37187]=ad}ad=c[37084]|0;L4310:do{if((ad|0)==0){S=c[37082]|0;if((S|0)==0|ab>>>0<S>>>0){c[37082]=ab}c[37190]=ab;c[37191]=aa;c[37193]=0;c[37087]=c[37064];c[37086]=-1;S=0;do{Y=S<<1;ac=148352+(Y<<2)|0;c[148352+(Y+3<<2)>>2]=ac;c[148352+(Y+2<<2)>>2]=ac;S=S+1|0;}while(S>>>0<32);S=ab+8|0;if((S&7|0)==0){ae=0}else{ae=-S&7}S=aa-40-ae|0;c[37084]=ab+ae;c[37081]=S;c[ab+(ae+4)>>2]=S|1;c[ab+(aa-36)>>2]=40;c[37085]=c[37068]}else{S=148760;while(1){af=c[S>>2]|0;ag=S+4|0;ah=c[ag>>2]|0;if((ab|0)==(af+ah|0)){T=3155;break}ac=c[S+8>>2]|0;if((ac|0)==0){break}else{S=ac}}do{if((T|0)==3155){if((c[S+12>>2]&8|0)!=0){break}ac=ad;if(!(ac>>>0>=af>>>0&ac>>>0<ab>>>0)){break}c[ag>>2]=ah+aa;ac=c[37084]|0;Y=(c[37081]|0)+aa|0;Z=ac;W=ac+8|0;if((W&7|0)==0){ai=0}else{ai=-W&7}W=Y-ai|0;c[37084]=Z+ai;c[37081]=W;c[Z+(ai+4)>>2]=W|1;c[Z+(Y+4)>>2]=40;c[37085]=c[37068];break L4310}}while(0);if(ab>>>0<(c[37082]|0)>>>0){c[37082]=ab}S=ab+aa|0;Y=148760;while(1){aj=Y|0;if((c[aj>>2]|0)==(S|0)){T=3165;break}Z=c[Y+8>>2]|0;if((Z|0)==0){break}else{Y=Z}}do{if((T|0)==3165){if((c[Y+12>>2]&8|0)!=0){break}c[aj>>2]=ab;S=Y+4|0;c[S>>2]=(c[S>>2]|0)+aa;S=ab+8|0;if((S&7|0)==0){ak=0}else{ak=-S&7}S=ab+(aa+8)|0;if((S&7|0)==0){al=0}else{al=-S&7}S=ab+(al+aa)|0;Z=S;W=ak+o|0;ac=ab+W|0;_=ac;K=S-(ab+ak)-o|0;c[ab+(ak+4)>>2]=o|3;do{if((Z|0)==(c[37084]|0)){J=(c[37081]|0)+K|0;c[37081]=J;c[37084]=_;c[ab+(W+4)>>2]=J|1}else{if((Z|0)==(c[37083]|0)){J=(c[37080]|0)+K|0;c[37080]=J;c[37083]=_;c[ab+(W+4)>>2]=J|1;c[ab+(J+W)>>2]=J;break}J=aa+4|0;X=c[ab+(J+al)>>2]|0;if((X&3|0)==1){$=X&-8;V=X>>>3;L4355:do{if(X>>>0<256){U=c[ab+((al|8)+aa)>>2]|0;Q=c[ab+(aa+12+al)>>2]|0;R=148352+(V<<1<<2)|0;do{if((U|0)!=(R|0)){if(U>>>0<(c[37082]|0)>>>0){aw();return 0}if((c[U+12>>2]|0)==(Z|0)){break}aw();return 0}}while(0);if((Q|0)==(U|0)){c[37078]=c[37078]&~(1<<V);break}do{if((Q|0)==(R|0)){am=Q+8|0}else{if(Q>>>0<(c[37082]|0)>>>0){aw();return 0}m=Q+8|0;if((c[m>>2]|0)==(Z|0)){am=m;break}aw();return 0}}while(0);c[U+12>>2]=Q;c[am>>2]=U}else{R=S;m=c[ab+((al|24)+aa)>>2]|0;P=c[ab+(aa+12+al)>>2]|0;do{if((P|0)==(R|0)){O=al|16;g=ab+(J+O)|0;L=c[g>>2]|0;if((L|0)==0){e=ab+(O+aa)|0;O=c[e>>2]|0;if((O|0)==0){an=0;break}else{ao=O;ap=e}}else{ao=L;ap=g}while(1){g=ao+20|0;L=c[g>>2]|0;if((L|0)!=0){ao=L;ap=g;continue}g=ao+16|0;L=c[g>>2]|0;if((L|0)==0){break}else{ao=L;ap=g}}if(ap>>>0<(c[37082]|0)>>>0){aw();return 0}else{c[ap>>2]=0;an=ao;break}}else{g=c[ab+((al|8)+aa)>>2]|0;if(g>>>0<(c[37082]|0)>>>0){aw();return 0}L=g+12|0;if((c[L>>2]|0)!=(R|0)){aw();return 0}e=P+8|0;if((c[e>>2]|0)==(R|0)){c[L>>2]=P;c[e>>2]=g;an=P;break}else{aw();return 0}}}while(0);if((m|0)==0){break}P=ab+(aa+28+al)|0;U=148616+(c[P>>2]<<2)|0;do{if((R|0)==(c[U>>2]|0)){c[U>>2]=an;if((an|0)!=0){break}c[37079]=c[37079]&~(1<<c[P>>2]);break L4355}else{if(m>>>0<(c[37082]|0)>>>0){aw();return 0}Q=m+16|0;if((c[Q>>2]|0)==(R|0)){c[Q>>2]=an}else{c[m+20>>2]=an}if((an|0)==0){break L4355}}}while(0);if(an>>>0<(c[37082]|0)>>>0){aw();return 0}c[an+24>>2]=m;R=al|16;P=c[ab+(R+aa)>>2]|0;do{if((P|0)!=0){if(P>>>0<(c[37082]|0)>>>0){aw();return 0}else{c[an+16>>2]=P;c[P+24>>2]=an;break}}}while(0);P=c[ab+(J+R)>>2]|0;if((P|0)==0){break}if(P>>>0<(c[37082]|0)>>>0){aw();return 0}else{c[an+20>>2]=P;c[P+24>>2]=an;break}}}while(0);aq=ab+(($|al)+aa)|0;ar=$+K|0}else{aq=Z;ar=K}J=aq+4|0;c[J>>2]=c[J>>2]&-2;c[ab+(W+4)>>2]=ar|1;c[ab+(ar+W)>>2]=ar;J=ar>>>3;if(ar>>>0<256){V=J<<1;X=148352+(V<<2)|0;P=c[37078]|0;m=1<<J;do{if((P&m|0)==0){c[37078]=P|m;as=X;at=148352+(V+2<<2)|0}else{J=148352+(V+2<<2)|0;U=c[J>>2]|0;if(U>>>0>=(c[37082]|0)>>>0){as=U;at=J;break}aw();return 0}}while(0);c[at>>2]=_;c[as+12>>2]=_;c[ab+(W+8)>>2]=as;c[ab+(W+12)>>2]=X;break}V=ac;m=ar>>>8;do{if((m|0)==0){au=0}else{if(ar>>>0>16777215){au=31;break}P=(m+1048320|0)>>>16&8;$=m<<P;J=($+520192|0)>>>16&4;U=$<<J;$=(U+245760|0)>>>16&2;Q=14-(J|P|$)+(U<<$>>>15)|0;au=ar>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=148616+(au<<2)|0;c[ab+(W+28)>>2]=au;c[ab+(W+20)>>2]=0;c[ab+(W+16)>>2]=0;X=c[37079]|0;Q=1<<au;if((X&Q|0)==0){c[37079]=X|Q;c[m>>2]=V;c[ab+(W+24)>>2]=m;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}if((au|0)==31){av=0}else{av=25-(au>>>1)|0}Q=ar<<av;X=c[m>>2]|0;while(1){if((c[X+4>>2]&-8|0)==(ar|0)){break}ax=X+16+(Q>>>31<<2)|0;m=c[ax>>2]|0;if((m|0)==0){T=3238;break}else{Q=Q<<1;X=m}}if((T|0)==3238){if(ax>>>0<(c[37082]|0)>>>0){aw();return 0}else{c[ax>>2]=V;c[ab+(W+24)>>2]=X;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}}Q=X+8|0;m=c[Q>>2]|0;$=c[37082]|0;if(X>>>0<$>>>0){aw();return 0}if(m>>>0<$>>>0){aw();return 0}else{c[m+12>>2]=V;c[Q>>2]=V;c[ab+(W+8)>>2]=m;c[ab+(W+12)>>2]=X;c[ab+(W+24)>>2]=0;break}}}while(0);n=ab+(ak|8)|0;return n|0}}while(0);Y=ad;W=148760;while(1){ay=c[W>>2]|0;if(ay>>>0<=Y>>>0){az=c[W+4>>2]|0;aA=ay+az|0;if(aA>>>0>Y>>>0){break}}W=c[W+8>>2]|0}W=ay+(az-39)|0;if((W&7|0)==0){aB=0}else{aB=-W&7}W=ay+(az-47+aB)|0;ac=W>>>0<(ad+16|0)>>>0?Y:W;W=ac+8|0;_=ab+8|0;if((_&7|0)==0){aC=0}else{aC=-_&7}_=aa-40-aC|0;c[37084]=ab+aC;c[37081]=_;c[ab+(aC+4)>>2]=_|1;c[ab+(aa-36)>>2]=40;c[37085]=c[37068];c[ac+4>>2]=27;c[W>>2]=c[37190];c[W+4>>2]=c[37191];c[W+8>>2]=c[37192];c[W+12>>2]=c[37193];c[37190]=ab;c[37191]=aa;c[37193]=0;c[37192]=W;W=ac+28|0;c[W>>2]=7;if((ac+32|0)>>>0<aA>>>0){_=W;while(1){W=_+4|0;c[W>>2]=7;if((_+8|0)>>>0<aA>>>0){_=W}else{break}}}if((ac|0)==(Y|0)){break}_=ac-ad|0;W=Y+(_+4)|0;c[W>>2]=c[W>>2]&-2;c[ad+4>>2]=_|1;c[Y+_>>2]=_;W=_>>>3;if(_>>>0<256){K=W<<1;Z=148352+(K<<2)|0;S=c[37078]|0;m=1<<W;do{if((S&m|0)==0){c[37078]=S|m;aD=Z;aE=148352+(K+2<<2)|0}else{W=148352+(K+2<<2)|0;Q=c[W>>2]|0;if(Q>>>0>=(c[37082]|0)>>>0){aD=Q;aE=W;break}aw();return 0}}while(0);c[aE>>2]=ad;c[aD+12>>2]=ad;c[ad+8>>2]=aD;c[ad+12>>2]=Z;break}K=ad;m=_>>>8;do{if((m|0)==0){aF=0}else{if(_>>>0>16777215){aF=31;break}S=(m+1048320|0)>>>16&8;Y=m<<S;ac=(Y+520192|0)>>>16&4;W=Y<<ac;Y=(W+245760|0)>>>16&2;Q=14-(ac|S|Y)+(W<<Y>>>15)|0;aF=_>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=148616+(aF<<2)|0;c[ad+28>>2]=aF;c[ad+20>>2]=0;c[ad+16>>2]=0;Z=c[37079]|0;Q=1<<aF;if((Z&Q|0)==0){c[37079]=Z|Q;c[m>>2]=K;c[ad+24>>2]=m;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}if((aF|0)==31){aG=0}else{aG=25-(aF>>>1)|0}Q=_<<aG;Z=c[m>>2]|0;while(1){if((c[Z+4>>2]&-8|0)==(_|0)){break}aH=Z+16+(Q>>>31<<2)|0;m=c[aH>>2]|0;if((m|0)==0){T=3273;break}else{Q=Q<<1;Z=m}}if((T|0)==3273){if(aH>>>0<(c[37082]|0)>>>0){aw();return 0}else{c[aH>>2]=K;c[ad+24>>2]=Z;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}}Q=Z+8|0;_=c[Q>>2]|0;m=c[37082]|0;if(Z>>>0<m>>>0){aw();return 0}if(_>>>0<m>>>0){aw();return 0}else{c[_+12>>2]=K;c[Q>>2]=K;c[ad+8>>2]=_;c[ad+12>>2]=Z;c[ad+24>>2]=0;break}}}while(0);ad=c[37081]|0;if(ad>>>0<=o>>>0){break}_=ad-o|0;c[37081]=_;ad=c[37084]|0;Q=ad;c[37084]=Q+o;c[Q+(o+4)>>2]=_|1;c[ad+4>>2]=o|3;n=ad+8|0;return n|0}}while(0);c[(a2()|0)>>2]=12;n=0;return n|0}function hp(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;if((a|0)==0){return}b=a-8|0;d=b;e=c[37082]|0;if(b>>>0<e>>>0){aw()}f=c[a-4>>2]|0;g=f&3;if((g|0)==1){aw()}h=f&-8;i=a+(h-8)|0;j=i;L4527:do{if((f&1|0)==0){k=c[b>>2]|0;if((g|0)==0){return}l=-8-k|0;m=a+l|0;n=m;o=k+h|0;if(m>>>0<e>>>0){aw()}if((n|0)==(c[37083]|0)){p=a+(h-4)|0;if((c[p>>2]&3|0)!=3){q=n;r=o;break}c[37080]=o;c[p>>2]=c[p>>2]&-2;c[a+(l+4)>>2]=o|1;c[i>>2]=o;return}p=k>>>3;if(k>>>0<256){k=c[a+(l+8)>>2]|0;s=c[a+(l+12)>>2]|0;t=148352+(p<<1<<2)|0;do{if((k|0)!=(t|0)){if(k>>>0<e>>>0){aw()}if((c[k+12>>2]|0)==(n|0)){break}aw()}}while(0);if((s|0)==(k|0)){c[37078]=c[37078]&~(1<<p);q=n;r=o;break}do{if((s|0)==(t|0)){u=s+8|0}else{if(s>>>0<e>>>0){aw()}v=s+8|0;if((c[v>>2]|0)==(n|0)){u=v;break}aw()}}while(0);c[k+12>>2]=s;c[u>>2]=k;q=n;r=o;break}t=m;p=c[a+(l+24)>>2]|0;v=c[a+(l+12)>>2]|0;do{if((v|0)==(t|0)){w=a+(l+20)|0;x=c[w>>2]|0;if((x|0)==0){y=a+(l+16)|0;z=c[y>>2]|0;if((z|0)==0){A=0;break}else{B=z;C=y}}else{B=x;C=w}while(1){w=B+20|0;x=c[w>>2]|0;if((x|0)!=0){B=x;C=w;continue}w=B+16|0;x=c[w>>2]|0;if((x|0)==0){break}else{B=x;C=w}}if(C>>>0<e>>>0){aw()}else{c[C>>2]=0;A=B;break}}else{w=c[a+(l+8)>>2]|0;if(w>>>0<e>>>0){aw()}x=w+12|0;if((c[x>>2]|0)!=(t|0)){aw()}y=v+8|0;if((c[y>>2]|0)==(t|0)){c[x>>2]=v;c[y>>2]=w;A=v;break}else{aw()}}}while(0);if((p|0)==0){q=n;r=o;break}v=a+(l+28)|0;m=148616+(c[v>>2]<<2)|0;do{if((t|0)==(c[m>>2]|0)){c[m>>2]=A;if((A|0)!=0){break}c[37079]=c[37079]&~(1<<c[v>>2]);q=n;r=o;break L4527}else{if(p>>>0<(c[37082]|0)>>>0){aw()}k=p+16|0;if((c[k>>2]|0)==(t|0)){c[k>>2]=A}else{c[p+20>>2]=A}if((A|0)==0){q=n;r=o;break L4527}}}while(0);if(A>>>0<(c[37082]|0)>>>0){aw()}c[A+24>>2]=p;t=c[a+(l+16)>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[37082]|0)>>>0){aw()}else{c[A+16>>2]=t;c[t+24>>2]=A;break}}}while(0);t=c[a+(l+20)>>2]|0;if((t|0)==0){q=n;r=o;break}if(t>>>0<(c[37082]|0)>>>0){aw()}else{c[A+20>>2]=t;c[t+24>>2]=A;q=n;r=o;break}}else{q=d;r=h}}while(0);d=q;if(d>>>0>=i>>>0){aw()}A=a+(h-4)|0;e=c[A>>2]|0;if((e&1|0)==0){aw()}do{if((e&2|0)==0){if((j|0)==(c[37084]|0)){B=(c[37081]|0)+r|0;c[37081]=B;c[37084]=q;c[q+4>>2]=B|1;if((q|0)!=(c[37083]|0)){return}c[37083]=0;c[37080]=0;return}if((j|0)==(c[37083]|0)){B=(c[37080]|0)+r|0;c[37080]=B;c[37083]=q;c[q+4>>2]=B|1;c[d+B>>2]=B;return}B=(e&-8)+r|0;C=e>>>3;L4630:do{if(e>>>0<256){u=c[a+h>>2]|0;g=c[a+(h|4)>>2]|0;b=148352+(C<<1<<2)|0;do{if((u|0)!=(b|0)){if(u>>>0<(c[37082]|0)>>>0){aw()}if((c[u+12>>2]|0)==(j|0)){break}aw()}}while(0);if((g|0)==(u|0)){c[37078]=c[37078]&~(1<<C);break}do{if((g|0)==(b|0)){D=g+8|0}else{if(g>>>0<(c[37082]|0)>>>0){aw()}f=g+8|0;if((c[f>>2]|0)==(j|0)){D=f;break}aw()}}while(0);c[u+12>>2]=g;c[D>>2]=u}else{b=i;f=c[a+(h+16)>>2]|0;t=c[a+(h|4)>>2]|0;do{if((t|0)==(b|0)){p=a+(h+12)|0;v=c[p>>2]|0;if((v|0)==0){m=a+(h+8)|0;k=c[m>>2]|0;if((k|0)==0){E=0;break}else{F=k;G=m}}else{F=v;G=p}while(1){p=F+20|0;v=c[p>>2]|0;if((v|0)!=0){F=v;G=p;continue}p=F+16|0;v=c[p>>2]|0;if((v|0)==0){break}else{F=v;G=p}}if(G>>>0<(c[37082]|0)>>>0){aw()}else{c[G>>2]=0;E=F;break}}else{p=c[a+h>>2]|0;if(p>>>0<(c[37082]|0)>>>0){aw()}v=p+12|0;if((c[v>>2]|0)!=(b|0)){aw()}m=t+8|0;if((c[m>>2]|0)==(b|0)){c[v>>2]=t;c[m>>2]=p;E=t;break}else{aw()}}}while(0);if((f|0)==0){break}t=a+(h+20)|0;u=148616+(c[t>>2]<<2)|0;do{if((b|0)==(c[u>>2]|0)){c[u>>2]=E;if((E|0)!=0){break}c[37079]=c[37079]&~(1<<c[t>>2]);break L4630}else{if(f>>>0<(c[37082]|0)>>>0){aw()}g=f+16|0;if((c[g>>2]|0)==(b|0)){c[g>>2]=E}else{c[f+20>>2]=E}if((E|0)==0){break L4630}}}while(0);if(E>>>0<(c[37082]|0)>>>0){aw()}c[E+24>>2]=f;b=c[a+(h+8)>>2]|0;do{if((b|0)!=0){if(b>>>0<(c[37082]|0)>>>0){aw()}else{c[E+16>>2]=b;c[b+24>>2]=E;break}}}while(0);b=c[a+(h+12)>>2]|0;if((b|0)==0){break}if(b>>>0<(c[37082]|0)>>>0){aw()}else{c[E+20>>2]=b;c[b+24>>2]=E;break}}}while(0);c[q+4>>2]=B|1;c[d+B>>2]=B;if((q|0)!=(c[37083]|0)){H=B;break}c[37080]=B;return}else{c[A>>2]=e&-2;c[q+4>>2]=r|1;c[d+r>>2]=r;H=r}}while(0);r=H>>>3;if(H>>>0<256){d=r<<1;e=148352+(d<<2)|0;A=c[37078]|0;E=1<<r;do{if((A&E|0)==0){c[37078]=A|E;I=e;J=148352+(d+2<<2)|0}else{r=148352+(d+2<<2)|0;h=c[r>>2]|0;if(h>>>0>=(c[37082]|0)>>>0){I=h;J=r;break}aw()}}while(0);c[J>>2]=q;c[I+12>>2]=q;c[q+8>>2]=I;c[q+12>>2]=e;return}e=q;I=H>>>8;do{if((I|0)==0){K=0}else{if(H>>>0>16777215){K=31;break}J=(I+1048320|0)>>>16&8;d=I<<J;E=(d+520192|0)>>>16&4;A=d<<E;d=(A+245760|0)>>>16&2;r=14-(E|J|d)+(A<<d>>>15)|0;K=H>>>((r+7|0)>>>0)&1|r<<1}}while(0);I=148616+(K<<2)|0;c[q+28>>2]=K;c[q+20>>2]=0;c[q+16>>2]=0;r=c[37079]|0;d=1<<K;do{if((r&d|0)==0){c[37079]=r|d;c[I>>2]=e;c[q+24>>2]=I;c[q+12>>2]=q;c[q+8>>2]=q}else{if((K|0)==31){L=0}else{L=25-(K>>>1)|0}A=H<<L;J=c[I>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(H|0)){break}M=J+16+(A>>>31<<2)|0;E=c[M>>2]|0;if((E|0)==0){N=3450;break}else{A=A<<1;J=E}}if((N|0)==3450){if(M>>>0<(c[37082]|0)>>>0){aw()}else{c[M>>2]=e;c[q+24>>2]=J;c[q+12>>2]=q;c[q+8>>2]=q;break}}A=J+8|0;B=c[A>>2]|0;E=c[37082]|0;if(J>>>0<E>>>0){aw()}if(B>>>0<E>>>0){aw()}else{c[B+12>>2]=e;c[A>>2]=e;c[q+8>>2]=B;c[q+12>>2]=J;c[q+24>>2]=0;break}}}while(0);q=(c[37086]|0)-1|0;c[37086]=q;if((q|0)==0){O=148768}else{return}while(1){q=c[O>>2]|0;if((q|0)==0){break}else{O=q+8|0}}c[37086]=-1;return}function hq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if((a|0)==0){d=ho(b)|0;return d|0}if(b>>>0>4294967231){c[(a2()|0)>>2]=12;d=0;return d|0}if(b>>>0<11){e=16}else{e=b+11&-8}f=hr(a-8|0,e)|0;if((f|0)!=0){d=f+8|0;return d|0}f=ho(b)|0;if((f|0)==0){d=0;return d|0}e=c[a-4>>2]|0;g=(e&-8)-((e&3|0)==0?8:4)|0;e=g>>>0<b>>>0?g:b;hu(f|0,a|0,e)|0;hp(a);d=f;return d|0}function hr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a;h=g+f|0;i=h;j=c[37082]|0;if(g>>>0<j>>>0){aw();return 0}k=e&3;if(!((k|0)!=1&g>>>0<h>>>0)){aw();return 0}l=g+(f|4)|0;m=c[l>>2]|0;if((m&1|0)==0){aw();return 0}if((k|0)==0){if(b>>>0<256){n=0;return n|0}do{if(f>>>0>=(b+4|0)>>>0){if((f-b|0)>>>0>c[37066]<<1>>>0){break}else{n=a}return n|0}}while(0);n=0;return n|0}if(f>>>0>=b>>>0){k=f-b|0;if(k>>>0<=15){n=a;return n|0}c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|3;c[l>>2]=c[l>>2]|1;hs(g+b|0,k);n=a;return n|0}if((i|0)==(c[37084]|0)){k=(c[37081]|0)+f|0;if(k>>>0<=b>>>0){n=0;return n|0}l=k-b|0;c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=l|1;c[37084]=g+b;c[37081]=l;n=a;return n|0}if((i|0)==(c[37083]|0)){l=(c[37080]|0)+f|0;if(l>>>0<b>>>0){n=0;return n|0}k=l-b|0;if(k>>>0>15){c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|1;c[g+l>>2]=k;o=g+(l+4)|0;c[o>>2]=c[o>>2]&-2;p=g+b|0;q=k}else{c[d>>2]=e&1|l|2;e=g+(l+4)|0;c[e>>2]=c[e>>2]|1;p=0;q=0}c[37080]=q;c[37083]=p;n=a;return n|0}if((m&2|0)!=0){n=0;return n|0}p=(m&-8)+f|0;if(p>>>0<b>>>0){n=0;return n|0}q=p-b|0;e=m>>>3;L4816:do{if(m>>>0<256){l=c[g+(f+8)>>2]|0;k=c[g+(f+12)>>2]|0;o=148352+(e<<1<<2)|0;do{if((l|0)!=(o|0)){if(l>>>0<j>>>0){aw();return 0}if((c[l+12>>2]|0)==(i|0)){break}aw();return 0}}while(0);if((k|0)==(l|0)){c[37078]=c[37078]&~(1<<e);break}do{if((k|0)==(o|0)){r=k+8|0}else{if(k>>>0<j>>>0){aw();return 0}s=k+8|0;if((c[s>>2]|0)==(i|0)){r=s;break}aw();return 0}}while(0);c[l+12>>2]=k;c[r>>2]=l}else{o=h;s=c[g+(f+24)>>2]|0;t=c[g+(f+12)>>2]|0;do{if((t|0)==(o|0)){u=g+(f+20)|0;v=c[u>>2]|0;if((v|0)==0){w=g+(f+16)|0;x=c[w>>2]|0;if((x|0)==0){y=0;break}else{z=x;A=w}}else{z=v;A=u}while(1){u=z+20|0;v=c[u>>2]|0;if((v|0)!=0){z=v;A=u;continue}u=z+16|0;v=c[u>>2]|0;if((v|0)==0){break}else{z=v;A=u}}if(A>>>0<j>>>0){aw();return 0}else{c[A>>2]=0;y=z;break}}else{u=c[g+(f+8)>>2]|0;if(u>>>0<j>>>0){aw();return 0}v=u+12|0;if((c[v>>2]|0)!=(o|0)){aw();return 0}w=t+8|0;if((c[w>>2]|0)==(o|0)){c[v>>2]=t;c[w>>2]=u;y=t;break}else{aw();return 0}}}while(0);if((s|0)==0){break}t=g+(f+28)|0;l=148616+(c[t>>2]<<2)|0;do{if((o|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[37079]=c[37079]&~(1<<c[t>>2]);break L4816}else{if(s>>>0<(c[37082]|0)>>>0){aw();return 0}k=s+16|0;if((c[k>>2]|0)==(o|0)){c[k>>2]=y}else{c[s+20>>2]=y}if((y|0)==0){break L4816}}}while(0);if(y>>>0<(c[37082]|0)>>>0){aw();return 0}c[y+24>>2]=s;o=c[g+(f+16)>>2]|0;do{if((o|0)!=0){if(o>>>0<(c[37082]|0)>>>0){aw();return 0}else{c[y+16>>2]=o;c[o+24>>2]=y;break}}}while(0);o=c[g+(f+20)>>2]|0;if((o|0)==0){break}if(o>>>0<(c[37082]|0)>>>0){aw();return 0}else{c[y+20>>2]=o;c[o+24>>2]=y;break}}}while(0);if(q>>>0<16){c[d>>2]=p|c[d>>2]&1|2;y=g+(p|4)|0;c[y>>2]=c[y>>2]|1;n=a;return n|0}else{c[d>>2]=c[d>>2]&1|b|2;c[g+(b+4)>>2]=q|3;d=g+(p|4)|0;c[d>>2]=c[d>>2]|1;hs(g+b|0,q);n=a;return n|0}return 0}function hs(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=a;e=d+b|0;f=e;g=c[a+4>>2]|0;L4892:do{if((g&1|0)==0){h=c[a>>2]|0;if((g&3|0)==0){return}i=d+(-h|0)|0;j=i;k=h+b|0;l=c[37082]|0;if(i>>>0<l>>>0){aw()}if((j|0)==(c[37083]|0)){m=d+(b+4)|0;if((c[m>>2]&3|0)!=3){n=j;o=k;break}c[37080]=k;c[m>>2]=c[m>>2]&-2;c[d+(4-h)>>2]=k|1;c[e>>2]=k;return}m=h>>>3;if(h>>>0<256){p=c[d+(8-h)>>2]|0;q=c[d+(12-h)>>2]|0;r=148352+(m<<1<<2)|0;do{if((p|0)!=(r|0)){if(p>>>0<l>>>0){aw()}if((c[p+12>>2]|0)==(j|0)){break}aw()}}while(0);if((q|0)==(p|0)){c[37078]=c[37078]&~(1<<m);n=j;o=k;break}do{if((q|0)==(r|0)){s=q+8|0}else{if(q>>>0<l>>>0){aw()}t=q+8|0;if((c[t>>2]|0)==(j|0)){s=t;break}aw()}}while(0);c[p+12>>2]=q;c[s>>2]=p;n=j;o=k;break}r=i;m=c[d+(24-h)>>2]|0;t=c[d+(12-h)>>2]|0;do{if((t|0)==(r|0)){u=16-h|0;v=d+(u+4)|0;w=c[v>>2]|0;if((w|0)==0){x=d+u|0;u=c[x>>2]|0;if((u|0)==0){y=0;break}else{z=u;A=x}}else{z=w;A=v}while(1){v=z+20|0;w=c[v>>2]|0;if((w|0)!=0){z=w;A=v;continue}v=z+16|0;w=c[v>>2]|0;if((w|0)==0){break}else{z=w;A=v}}if(A>>>0<l>>>0){aw()}else{c[A>>2]=0;y=z;break}}else{v=c[d+(8-h)>>2]|0;if(v>>>0<l>>>0){aw()}w=v+12|0;if((c[w>>2]|0)!=(r|0)){aw()}x=t+8|0;if((c[x>>2]|0)==(r|0)){c[w>>2]=t;c[x>>2]=v;y=t;break}else{aw()}}}while(0);if((m|0)==0){n=j;o=k;break}t=d+(28-h)|0;l=148616+(c[t>>2]<<2)|0;do{if((r|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[37079]=c[37079]&~(1<<c[t>>2]);n=j;o=k;break L4892}else{if(m>>>0<(c[37082]|0)>>>0){aw()}i=m+16|0;if((c[i>>2]|0)==(r|0)){c[i>>2]=y}else{c[m+20>>2]=y}if((y|0)==0){n=j;o=k;break L4892}}}while(0);if(y>>>0<(c[37082]|0)>>>0){aw()}c[y+24>>2]=m;r=16-h|0;t=c[d+r>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[37082]|0)>>>0){aw()}else{c[y+16>>2]=t;c[t+24>>2]=y;break}}}while(0);t=c[d+(r+4)>>2]|0;if((t|0)==0){n=j;o=k;break}if(t>>>0<(c[37082]|0)>>>0){aw()}else{c[y+20>>2]=t;c[t+24>>2]=y;n=j;o=k;break}}else{n=a;o=b}}while(0);a=c[37082]|0;if(e>>>0<a>>>0){aw()}y=d+(b+4)|0;z=c[y>>2]|0;do{if((z&2|0)==0){if((f|0)==(c[37084]|0)){A=(c[37081]|0)+o|0;c[37081]=A;c[37084]=n;c[n+4>>2]=A|1;if((n|0)!=(c[37083]|0)){return}c[37083]=0;c[37080]=0;return}if((f|0)==(c[37083]|0)){A=(c[37080]|0)+o|0;c[37080]=A;c[37083]=n;c[n+4>>2]=A|1;c[n+A>>2]=A;return}A=(z&-8)+o|0;s=z>>>3;L4992:do{if(z>>>0<256){g=c[d+(b+8)>>2]|0;t=c[d+(b+12)>>2]|0;h=148352+(s<<1<<2)|0;do{if((g|0)!=(h|0)){if(g>>>0<a>>>0){aw()}if((c[g+12>>2]|0)==(f|0)){break}aw()}}while(0);if((t|0)==(g|0)){c[37078]=c[37078]&~(1<<s);break}do{if((t|0)==(h|0)){B=t+8|0}else{if(t>>>0<a>>>0){aw()}m=t+8|0;if((c[m>>2]|0)==(f|0)){B=m;break}aw()}}while(0);c[g+12>>2]=t;c[B>>2]=g}else{h=e;m=c[d+(b+24)>>2]|0;l=c[d+(b+12)>>2]|0;do{if((l|0)==(h|0)){i=d+(b+20)|0;p=c[i>>2]|0;if((p|0)==0){q=d+(b+16)|0;v=c[q>>2]|0;if((v|0)==0){C=0;break}else{D=v;E=q}}else{D=p;E=i}while(1){i=D+20|0;p=c[i>>2]|0;if((p|0)!=0){D=p;E=i;continue}i=D+16|0;p=c[i>>2]|0;if((p|0)==0){break}else{D=p;E=i}}if(E>>>0<a>>>0){aw()}else{c[E>>2]=0;C=D;break}}else{i=c[d+(b+8)>>2]|0;if(i>>>0<a>>>0){aw()}p=i+12|0;if((c[p>>2]|0)!=(h|0)){aw()}q=l+8|0;if((c[q>>2]|0)==(h|0)){c[p>>2]=l;c[q>>2]=i;C=l;break}else{aw()}}}while(0);if((m|0)==0){break}l=d+(b+28)|0;g=148616+(c[l>>2]<<2)|0;do{if((h|0)==(c[g>>2]|0)){c[g>>2]=C;if((C|0)!=0){break}c[37079]=c[37079]&~(1<<c[l>>2]);break L4992}else{if(m>>>0<(c[37082]|0)>>>0){aw()}t=m+16|0;if((c[t>>2]|0)==(h|0)){c[t>>2]=C}else{c[m+20>>2]=C}if((C|0)==0){break L4992}}}while(0);if(C>>>0<(c[37082]|0)>>>0){aw()}c[C+24>>2]=m;h=c[d+(b+16)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[37082]|0)>>>0){aw()}else{c[C+16>>2]=h;c[h+24>>2]=C;break}}}while(0);h=c[d+(b+20)>>2]|0;if((h|0)==0){break}if(h>>>0<(c[37082]|0)>>>0){aw()}else{c[C+20>>2]=h;c[h+24>>2]=C;break}}}while(0);c[n+4>>2]=A|1;c[n+A>>2]=A;if((n|0)!=(c[37083]|0)){F=A;break}c[37080]=A;return}else{c[y>>2]=z&-2;c[n+4>>2]=o|1;c[n+o>>2]=o;F=o}}while(0);o=F>>>3;if(F>>>0<256){z=o<<1;y=148352+(z<<2)|0;C=c[37078]|0;b=1<<o;do{if((C&b|0)==0){c[37078]=C|b;G=y;H=148352+(z+2<<2)|0}else{o=148352+(z+2<<2)|0;d=c[o>>2]|0;if(d>>>0>=(c[37082]|0)>>>0){G=d;H=o;break}aw()}}while(0);c[H>>2]=n;c[G+12>>2]=n;c[n+8>>2]=G;c[n+12>>2]=y;return}y=n;G=F>>>8;do{if((G|0)==0){I=0}else{if(F>>>0>16777215){I=31;break}H=(G+1048320|0)>>>16&8;z=G<<H;b=(z+520192|0)>>>16&4;C=z<<b;z=(C+245760|0)>>>16&2;o=14-(b|H|z)+(C<<z>>>15)|0;I=F>>>((o+7|0)>>>0)&1|o<<1}}while(0);G=148616+(I<<2)|0;c[n+28>>2]=I;c[n+20>>2]=0;c[n+16>>2]=0;o=c[37079]|0;z=1<<I;if((o&z|0)==0){c[37079]=o|z;c[G>>2]=y;c[n+24>>2]=G;c[n+12>>2]=n;c[n+8>>2]=n;return}if((I|0)==31){J=0}else{J=25-(I>>>1)|0}I=F<<J;J=c[G>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(F|0)){break}K=J+16+(I>>>31<<2)|0;G=c[K>>2]|0;if((G|0)==0){L=3730;break}else{I=I<<1;J=G}}if((L|0)==3730){if(K>>>0<(c[37082]|0)>>>0){aw()}c[K>>2]=y;c[n+24>>2]=J;c[n+12>>2]=n;c[n+8>>2]=n;return}K=J+8|0;L=c[K>>2]|0;I=c[37082]|0;if(J>>>0<I>>>0){aw()}if(L>>>0<I>>>0){aw()}c[L+12>>2]=y;c[K>>2]=y;c[n+8>>2]=L;c[n+12>>2]=J;c[n+24>>2]=0;return}function ht(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function hu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function hv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b+e|0;if((e|0)>=20){d=d&255;e=b&3;g=d|d<<8|d<<16|d<<24;h=f&~3;if(e){e=b+4-e|0;while((b|0)<(e|0)){a[b]=d;b=b+1|0}}while((b|0)<(h|0)){c[b>>2]=g;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}}function hw(b,c){b=b|0;c=c|0;var d=0;do{a[b+d|0]=a[c+d|0];d=d+1|0}while(a[c+(d-1)|0]|0);return b|0}function hx(a,b,c){a=a|0;b=b|0;c=c|0;var e=0,f=0,g=0;while((e|0)<(c|0)){f=d[a+e|0]|0;g=d[b+e|0]|0;if((f|0)!=(g|0))return((f|0)>(g|0)?1:-1)|0;e=e+1|0}return 0}function hy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(E=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function hz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(E=e,a-c>>>0|0)|0}function hA(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){E=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}E=a<<c-32;return 0}function hB(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){E=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}E=0;return b>>>c-32|0}function hC(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){E=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}E=(b|0)<0?-1:0;return b>>c-32|0}function hD(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function hE(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function hF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=aa(d,c)|0;f=a>>>16;a=(e>>>16)+(aa(d,f)|0)|0;d=b>>>16;b=aa(d,c)|0;return(E=(a>>>16)+(aa(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function hG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=hz(e^a,f^b,e,f)|0;b=E;a=g^e;e=h^f;f=hz((hL(i,b,hz(g^c,h^d,g,h)|0,E,0)|0)^a,E^e,a,e)|0;return(E=E,f)|0}function hH(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=hz(h^a,j^b,h,j)|0;b=E;a=hz(k^d,l^e,k,l)|0;hL(m,b,a,E,g)|0;a=hz(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=E;i=f;return(E=j,a)|0}function hI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=hF(e,a)|0;f=E;return(E=(aa(b,a)|0)+(aa(d,e)|0)+f|f&0,c|0|0)|0}function hJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=hL(a,b,c,d,0)|0;return(E=E,e)|0}function hK(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;hL(a,b,d,e,g)|0;i=f;return(E=c[g+4>>2]|0,c[g>>2]|0)|0}function hL(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(E=n,o)|0}else{if(!m){n=0;o=0;return(E=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(E=n,o)|0}}m=(l|0)==0;do{if((j|0)==0){if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(E=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(E=n,o)|0}p=l-1|0;if((p&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=p&i|b&0}n=0;o=i>>>((hE(l|0)|0)>>>0);return(E=n,o)|0}p=(hD(l|0)|0)-(hD(i|0)|0)|0;if(p>>>0<=30){q=p+1|0;r=31-p|0;s=q;t=i<<r|g>>>(q>>>0);u=i>>>(q>>>0);v=0;w=g<<r;break}if((f|0)==0){n=0;o=0;return(E=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(E=n,o)|0}else{if(!m){r=(hD(l|0)|0)-(hD(i|0)|0)|0;if(r>>>0<=31){q=r+1|0;p=31-r|0;x=r-31>>31;s=q;t=g>>>(q>>>0)&x|i<<p;u=i>>>(q>>>0)&x;v=0;w=g<<p;break}if((f|0)==0){n=0;o=0;return(E=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(E=n,o)|0}p=j-1|0;if((p&j|0)!=0){x=(hD(j|0)|0)+33-(hD(i|0)|0)|0;q=64-x|0;r=32-x|0;y=r>>31;z=x-32|0;A=z>>31;s=x;t=r-1>>31&i>>>(z>>>0)|(i<<r|g>>>(x>>>0))&A;u=A&i>>>(x>>>0);v=g<<q&y;w=(i<<q|g>>>(z>>>0))&y|g<<r&x-33>>31;break}if((f|0)!=0){c[f>>2]=p&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(E=n,o)|0}else{p=hE(j|0)|0;n=i>>>(p>>>0)|0;o=i<<32-p|g>>>(p>>>0)|0;return(E=n,o)|0}}}while(0);if((s|0)==0){B=w;C=v;D=u;F=t;G=0;H=0}else{g=d|0|0;d=k|e&0;e=hy(g,d,-1,-1)|0;k=E;i=w;w=v;v=u;u=t;t=s;s=0;while(1){I=w>>>31|i<<1;J=s|w<<1;j=u<<1|i>>>31|0;a=u>>>31|v<<1|0;hz(e,k,j,a)|0;b=E;h=b>>31|((b|0)<0?-1:0)<<1;K=h&1;L=hz(j,a,h&g,(((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1)&d)|0;M=E;b=t-1|0;if((b|0)==0){break}else{i=I;w=J;v=M;u=L;t=b;s=K}}B=I;C=J;D=M;F=L;G=0;H=K}K=C;C=0;if((f|0)!=0){c[f>>2]=F;c[f+4>>2]=D}n=(K|0)>>>31|(B|C)<<1|(C<<1|K>>>31)&0|G;o=(K<<1|0>>>31)&-2|H;return(E=n,o)|0}function hM(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return ba[a&127](b|0,c|0,d|0,e|0)|0}function hN(a,b){a=a|0;b=b|0;bb[a&31](b|0)}function hO(a,b,c){a=a|0;b=b|0;c=c|0;bc[a&3](b|0,c|0)}function hP(a,b,c,d,e,f,g,h,i,j,k,l,m){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;bd[a&31](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0,l|0,m|0)}function hQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return be[a&63](b|0,c|0,d|0)|0}function hR(a,b){a=a|0;b=b|0;return bf[a&63](b|0)|0}function hS(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;bg[a&127](b|0,c|0,d|0)}function hT(a){a=a|0;bh[a&1]()}function hU(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;bi[a&63](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function hV(a,b,c){a=a|0;b=b|0;c=c|0;return bj[a&63](b|0,c|0)|0}function hW(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;bk[a&7](b|0,c|0,d|0,e|0)}function hX(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ab(0);return 0}function hY(a){a=a|0;ab(1)}function hZ(a,b){a=a|0;b=b|0;ab(2)}function h_(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;ab(3)}function h$(a,b,c){a=a|0;b=b|0;c=c|0;ab(4);return 0}function h0(a){a=a|0;ab(5);return 0}function h1(a,b,c){a=a|0;b=b|0;c=c|0;ab(6)}function h2(){ab(7)}function h3(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ab(8)}function h4(a,b){a=a|0;b=b|0;ab(9);return 0}function h5(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ab(10)}
// EMSCRIPTEN_END_FUNCS
var ba=[hX,hX,eD,hX,fj,hX,fW,hX,ej,hX,fv,hX,f1,hX,gE,hX,gs,hX,f_,hX,fi,hX,fz,hX,fQ,hX,fm,hX,eO,hX,eE,hX,fY,hX,gy,hX,gb,hX,cn,hX,dN,hX,ed,hX,gP,hX,co,hX,eK,hX,eh,hX,fU,hX,cz,hX,f2,hX,gL,hX,e6,hX,gx,hX,e2,hX,fB,hX,gr,hX,ef,hX,cy,hX,fJ,hX,fF,hX,ee,hX,eL,hX,fs,hX,fl,hX,ei,hX,f7,hX,e$,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX,hX];var bb=[hY,hY,gc,hY,gd,hY,e3,hY,fn,hY,e4,hY,gQ,hY,fV,hY,fo,hY,eo,hY,hY,hY,hY,hY,hY,hY,hY,hY,hY,hY,hY,hY];var bc=[hZ,hZ,hk,hZ];var bd=[h_,h_,cu,h_,cp,h_,cs,h_,cv,h_,cr,h_,cq,h_,ct,h_,cx,h_,h_,h_,h_,h_,h_,h_,h_,h_,h_,h_,h_,h_,h_,h_];var be=[h$,h$,c1,h$,fq,h$,dL,h$,fp,h$,gh,h$,gf,h$,ge,h$,bM,h$,hj,h$,gi,h$,eV,h$,gH,h$,dM,h$,eW,h$,gG,h$,bN,h$,dQ,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$,h$];var bf=[h0,h0,eC,h0,fR,h0,fO,h0,fk,h0,eY,h0,eZ,h0,fT,h0,gD,h0,e1,h0,f4,h0,gk,h0,gI,h0,fg,h0,f8,h0,gl,h0,f0,h0,eA,h0,eM,h0,f5,h0,dP,h0,fh,h0,en,h0,gJ,h0,eg,h0,fN,h0,dO,h0,ga,h0,gO,h0,gM,h0,h0,h0,h0,h0];var bg=[h1,h1,d_,h1,gt,h1,gA,h1,dg,h1,gu,h1,dh,h1,di,h1,gB,h1,fI,h1,go,h1,fu,h1,ft,h1,fC,h1,ff,h1,gp,h1,gj,h1,dZ,h1,gw,h1,dK,h1,fw,h1,gv,h1,gq,h1,fD,h1,fH,h1,df,h1,fL,h1,fG,h1,fA,h1,fE,h1,eX,h1,fK,h1,fx,h1,de,h1,gz,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1,h1];var bh=[h2,h2];var bi=[h3,h3,cT,h3,cN,h3,cB,h3,cK,h3,cF,h3,cZ,h3,cH,h3,cD,h3,cA,h3,cR,h3,cC,h3,cJ,h3,cY,h3,cW,h3,cP,h3,cI,h3,cE,h3,cL,h3,cQ,h3,cX,h3,cU,h3,cO,h3,cV,h3,c_,h3,cS,h3,cM,h3,h3,h3,h3,h3,h3,h3,h3,h3,h3,h3];var bj=[h4,h4,g_,h4,gN,h4,dq,h4,el,h4,fZ,h4,f$,h4,ez,h4,e_,h4,eN,h4,fS,h4,gC,h4,ek,h4,f6,h4,g$,h4,fP,h4,f3,h4,eH,h4,eJ,h4,fM,h4,eF,h4,gF,h4,fX,h4,e0,h4,eP,h4,f9,h4,gZ,h4,fe,h4,eB,h4,gK,h4,bU,h4,h4,h4];var bk=[h5,h5,eG,h5,c2,h5,dR,h5];return{_memset:hv,_TIFFReadRGBAImageOriented:cl,_GetField:bC,__TIFFmalloc:dT,_free:hp,_memcpy:hu,_TIFFOpen:dS,_TIFFReadRGBAImage:cm,_TIFFSetDirectory:bP,_TIFFClose:bE,_strlen:ht,_memcmp:hx,_malloc:ho,_TIFFReadDirectory:bZ,__TIFFfree:dU,_TIFFCurrentDirectory:c5,_realloc:hq,_TIFFGetField:bH,_strcpy:hw,runPostSets:bB,stackAlloc:bl,stackSave:bm,stackRestore:bn,setThrew:bo,setTempRet0:br,setTempRet1:bs,setTempRet2:bt,setTempRet3:bu,setTempRet4:bv,setTempRet5:bw,setTempRet6:bx,setTempRet7:by,setTempRet8:bz,setTempRet9:bA,dynCall_iiiii:hM,dynCall_vi:hN,dynCall_vii:hO,dynCall_viiiiiiiiiiii:hP,dynCall_iiii:hQ,dynCall_ii:hR,dynCall_viii:hS,dynCall_v:hT,dynCall_viiiiiiiii:hU,dynCall_iii:hV,dynCall_viiii:hW}})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_iiiii": invoke_iiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_viiiiiiiiiiii": invoke_viiiiiiiiiiii, "invoke_iiii": invoke_iiii, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_iii": invoke_iii, "invoke_viiii": invoke_viiii, "_strncmp": _strncmp, "_llvm_va_end": _llvm_va_end, "_rand": _rand, "_snprintf": _snprintf, "_lseek": _lseek, "_abort": _abort, "_fprintf": _fprintf, "_sqrt": _sqrt, "_pread": _pread, "_close": _close, "_fflush": _fflush, "__reallyNegative": __reallyNegative, "___assert_fail": ___assert_fail, "_open": _open, "_floor": _floor, "___setErrNo": ___setErrNo, "_fwrite": _fwrite, "_qsort": _qsort, "_send": _send, "_write": _write, "_sprintf": _sprintf, "_llvm_lifetime_end": _llvm_lifetime_end, "_munmap": _munmap, "_fstat": _fstat, "_sysconf": _sysconf, "_stat": _stat, "_read": _read, "_llvm_uadd_with_overflow_i32": _llvm_uadd_with_overflow_i32, "_time": _time, "__formatString": __formatString, "_atan2": _atan2, "_vfprintf": _vfprintf, "_recv": _recv, "_log": _log, "_pwrite": _pwrite, "_llvm_pow_f64": _llvm_pow_f64, "_sbrk": _sbrk, "_fabs": _fabs, "_strerror_r": _strerror_r, "___errno_location": ___errno_location, "_strerror": _strerror, "_llvm_lifetime_start": _llvm_lifetime_start, "_llvm_bswap_i32": _llvm_bswap_i32, "_bsearch": _bsearch, "_exp": _exp, "_mmap": _mmap, "_strcmp": _strcmp, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "_stderr": _stderr }, buffer);
var _memset = Module["_memset"] = asm["_memset"];
var _TIFFReadRGBAImageOriented = Module["_TIFFReadRGBAImageOriented"] = asm["_TIFFReadRGBAImageOriented"];
var _GetField = Module["_GetField"] = asm["_GetField"];
var __TIFFmalloc = Module["__TIFFmalloc"] = asm["__TIFFmalloc"];
var _free = Module["_free"] = asm["_free"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _TIFFOpen = Module["_TIFFOpen"] = asm["_TIFFOpen"];
var _TIFFReadRGBAImage = Module["_TIFFReadRGBAImage"] = asm["_TIFFReadRGBAImage"];
var _TIFFSetDirectory = Module["_TIFFSetDirectory"] = asm["_TIFFSetDirectory"];
var _TIFFClose = Module["_TIFFClose"] = asm["_TIFFClose"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _memcmp = Module["_memcmp"] = asm["_memcmp"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _TIFFReadDirectory = Module["_TIFFReadDirectory"] = asm["_TIFFReadDirectory"];
var __TIFFfree = Module["__TIFFfree"] = asm["__TIFFfree"];
var _TIFFCurrentDirectory = Module["_TIFFCurrentDirectory"] = asm["_TIFFCurrentDirectory"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _TIFFGetField = Module["_TIFFGetField"] = asm["_TIFFGetField"];
var _strcpy = Module["_strcpy"] = asm["_strcpy"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_viiiiiiiiiiii = Module["dynCall_viiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };
// TODO: strip out parts of this we do not need
//======= begin closure i64 code =======
// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */
var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };
  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.
    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };
  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.
  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};
  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }
    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };
  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };
  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };
  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };
  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.
  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;
  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);
  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);
  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);
  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);
  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };
  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };
  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (this.isZero()) {
      return '0';
    }
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }
    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);
      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };
  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };
  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };
  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };
  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };
  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };
  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };
  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };
  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }
    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }
    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };
  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };
  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };
  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }
    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);
      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }
      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }
      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };
  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };
  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };
  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };
  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };
  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };
  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };
  //======= begin jsbn =======
  var navigator = { appName: 'Modern Browser' }; // polyfill a little
  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/
  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */
  // Basic JavaScript BN library - subset useful for RSA encryption.
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);
  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }
  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;
  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }
  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }
  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }
  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }
  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }
  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }
  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }
  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }
  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }
  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }
  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }
  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }
  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }
  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }
  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }
  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }
  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }
  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }
  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }
  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }
  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }
  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }
  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;
  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }
  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }
  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);
  // jsbn2 stuff
  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }
  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }
  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }
  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }
  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }
  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }
  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;
  //======= end jsbn =======
  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();
//======= end closure i64 code =======
// === Auto-generated postamble setup entry stuff ===
if (memoryInitializer) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    applyData(Module['readBinary'](memoryInitializer));
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      applyData(data);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}
Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');
  args = args || [];
  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }
  ensureInitRuntime();
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);
  initialStackTop = STACKTOP;
  try {
    var ret = Module['_main'](argc, argv, 0);
    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}
function run(args) {
  args = args || Module['arguments'];
  if (preloadStartTime === null) preloadStartTime = Date.now();
  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }
  preRun();
  if (runDependencies > 0) {
    // a preRun added a dependency, run will be called later
    return;
  }
  function doRun() {
    ensureInitRuntime();
    preMain();
    Module['calledRun'] = true;
    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }
    postRun();
  }
  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;
function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  // exit the runtime
  exitRuntime();
  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371
  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;
function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }
  ABORT = true;
  EXITSTATUS = 1;
  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;
// {{PRE_RUN_ADDITIONS}}
if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}
// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}
run();
// {{POST_RUN_ADDITIONS}}
// {{MODULE_ADDITIONS}}
  return Module;
};

var TiffTag = {
    SUBFILETYPE: 254,
    OSUBFILETYPE: 255,
    IMAGEWIDTH: 256,
    IMAGELENGTH: 257,
    BITSPERSAMPLE: 258,
    COMPRESSION: 259,
    PHOTOMETRIC: 262,
    THRESHHOLDING: 263,
    CELLWIDTH: 264,
    CELLLENGTH: 265,
    FILLORDER: 266,
    DOCUMENTNAME: 269,
    IMAGEDESCRIPTION: 270,
    MAKE: 271,
    MODEL: 272,
    STRIPOFFSETS: 273,
    ORIENTATION: 274,
    SAMPLESPERPIXEL: 277,
    ROWSPERSTRIP: 278,
    STRIPBYTECOUNTS: 279,
    MINSAMPLEVALUE: 280,
    MAXSAMPLEVALUE: 281,
    XRESOLUTION: 282,
    YRESOLUTION: 283,
    PLANARCONFIG: 284,
    PAGENAME: 285,
    XPOSITION: 286,
    YPOSITION: 287,
    FREEOFFSETS: 288,
    FREEBYTECOUNTS: 289,
    GRAYRESPONSEUNIT: 290,
    GRAYRESPONSECURVE: 291,
    RESOLUTIONUNIT: 296,
    PAGENUMBER: 297,
    COLORRESPONSEUNIT: 300,
    TRANSFERFUNCTION: 301,
    SOFTWARE: 305,
    DATETIME: 306,
    ARTIST: 315,
    HOSTCOMPUTER: 316,
    PREDICTOR: 317,
    WHITEPOINT: 318,
    PRIMARYCHROMATICITIES: 319,
    COLORMAP: 320,
    HALFTONEHINTS: 321,
    TILEWIDTH: 322,
    TILELENGTH: 323,
    TILEOFFSETS: 324,
    TILEBYTECOUNTS: 325,
    BADFAXLINES: 326,
    CLEANFAXDATA: 327,
    CONSECUTIVEBADFAXLINES: 328,
    SUBIFD: 330,
    INKSET: 332,
    INKNAMES: 333,
    NUMBEROFINKS: 334,
    DOTRANGE: 336,
    TARGETPRINTER: 337,
    EXTRASAMPLES: 338,
    SAMPLEFORMAT: 339,
    SMINSAMPLEVALUE: 340,
    SMAXSAMPLEVALUE: 341,
    CLIPPATH: 343,
    XCLIPPATHUNITS: 344,
    YCLIPPATHUNITS: 345,
    INDEXED: 346,
    JPEGTABLES: 347,
    OPIPROXY: 351,
    GLOBALPARAMETERSIFD: 400,
    PROFILETYPE: 401,
    FAXPROFILE: 402,
    CODINGMETHODS: 403,
    VERSIONYEAR: 404,
    MODENUMBER: 405,
    DECODE: 433,
    IMAGEBASECOLOR: 434,
    JPEGPROC: 512,
    JPEGIFOFFSET: 513,
    JPEGIFBYTECOUNT: 514,
    JPEGRESTARTINTERVAL: 515,
    JPEGLOSSLESSPREDICTORS: 517,
    JPEGPOINTTRANSFORM: 518,
    JPEGQTABLES: 519,
    JPEGDCTABLES: 520,
    JPEGACTABLES: 521,
    YCBCRCOEFFICIENTS: 529,
    YCBCRSUBSAMPLING: 530,
    YCBCRPOSITIONING: 531,
    REFERENCEBLACKWHITE: 532,
    STRIPROWCOUNTS: 559,
    XMLPACKET: 700,
    OPIIMAGEID: 32781,
    REFPTS: 32953,
    REGIONTACKPOINT: 32954,
    REGIONWARPCORNERS: 32955,
    REGIONAFFINE: 32956,
    MATTEING: 32995,
    DATATYPE: 32996,
    IMAGEDEPTH: 32997,
    TILEDEPTH: 32998,
    PIXAR_IMAGEFULLWIDTH: 33300,
    PIXAR_IMAGEFULLLENGTH: 33301,
    PIXAR_TEXTUREFORMAT: 33302,
    PIXAR_WRAPMODES: 33303,
    PIXAR_FOVCOT: 33304,
    PIXAR_MATRIX_WORLDTOSCREEN: 33305,
    PIXAR_MATRIX_WORLDTOCAMERA: 33306,
    WRITERSERIALNUMBER: 33405,
    COPYRIGHT: 33432,
    RICHTIFFIPTC: 33723,
    FRAMECOUNT: 34232,
    PHOTOSHOP: 34377,
    EXIFIFD: 34665,
    ICCPROFILE: 34675,
    IMAGELAYER: 34732,
    JBIGOPTIONS: 34750,
    GPSIFD: 34853,
    FAXRECVPARAMS: 34908,
    FAXSUBADDRESS: 34909,
    FAXRECVTIME: 34910,
    FAXDCS: 34911,
    STONITS: 37439,
    FEDEX_EDR: 34929,
    INTEROPERABILITYIFD: 40965,
    DNGVERSION: 50706,
    DNGBACKWARDVERSION: 50707,
    UNIQUECAMERAMODEL: 50708,
    LOCALIZEDCAMERAMODEL: 50709,
    CFAPLANECOLOR: 50710,
    CFALAYOUT: 50711,
    LINEARIZATIONTABLE: 50712,
    BLACKLEVELREPEATDIM: 50713,
    BLACKLEVEL: 50714,
    BLACKLEVELDELTAH: 50715,
    BLACKLEVELDELTAV: 50716,
    WHITELEVEL: 50717,
    DEFAULTSCALE: 50718,
    DEFAULTCROPORIGIN: 50719,
    DEFAULTCROPSIZE: 50720,
    ANALOGBALANCE: 50727,
    ASSHOTNEUTRAL: 50728,
    ASSHOTWHITEXY: 50729,
    BASELINEEXPOSURE: 50730,
    BASELINENOISE: 50731,
    BASELINESHARPNESS: 50732,
    BAYERGREENSPLIT: 50733,
    LINEARRESPONSELIMIT: 50734,
    CAMERASERIALNUMBER: 50735,
    LENSINFO: 50736,
    CHROMABLURRADIUS: 50737,
    ANTIALIASSTRENGTH: 50738,
    SHADOWSCALE: 50739,
    DNGPRIVATEDATA: 50740,
    MAKERNOTESAFETY: 50741,
    BESTQUALITYSCALE: 50780,
    RAWDATAUNIQUEID: 50781,
    ORIGINALRAWFILENAME: 50827,
    ORIGINALRAWFILEDATA: 50828,
    ACTIVEAREA: 50829,
    MASKEDAREAS: 50830,
    ASSHOTICCPROFILE: 50831,
    ASSHOTPREPROFILEMATRIX: 50832,
    CURRENTICCPROFILE: 50833,
    CURRENTPREPROFILEMATRIX: 50834,
    DCSHUESHIFTVALUES: 65535,
    FAXMODE: 65536,
    JPEGQUALITY: 65537,
    JPEGCOLORMODE: 65538,
    JPEGTABLESMODE: 65539,
    FAXFILLFUNC: 65540,
    PIXARLOGDATAFMT: 65549,
    DCSIMAGERTYPE: 65550,
    DCSINTERPMODE: 65551,
    DCSBALANCEARRAY: 65552,
    DCSCORRECTMATRIX: 65553,
    DCSGAMMA: 65554,
    DCSTOESHOULDERPTS: 65555,
    DCSCALIBRATIONFD: 65556,
    ZIPQUALITY: 65557,
    PIXARLOGQUALITY: 65558,
    DCSCLIPRECTANGLE: 65559,
    SGILOGDATAFMT: 65560,
    SGILOGENCODE: 65561,
    LZMAPRESET: 65562,
    PERSAMPLE: 65563
};
var Tiff = (function () {
    function Tiff(params) {
        if (Tiff.Module === null) {
            Tiff.initialize({});
        }
        this._filename = Tiff.createFileSystemObjectFromBuffer(params.buffer);
        this._tiffPtr = Tiff.Module.ccall('TIFFOpen', 'number', [
            'string',
            'string'
        ], [this._filename, 'r']);
        if (this._tiffPtr === 0) {
            throw new Tiff.Exception('The function TIFFOpen returns NULL');
        }
    }
    Tiff.initialize = function (options) {
        if (Tiff.Module !== null) {
            return;
        }
        Tiff.Module = loadModule(options);
    };

    Tiff.prototype.width = function () {
        return this.getField(Tiff.Tag.IMAGEWIDTH);
    };

    Tiff.prototype.height = function () {
        return this.getField(Tiff.Tag.IMAGELENGTH);
    };

    Tiff.prototype.currentDirectory = function () {
        return Tiff.Module.ccall('TIFFCurrentDirectory', 'number', ['number'], [this._tiffPtr]);
    };

    Tiff.prototype.countDirectory = function () {
        var count = 0;
        var current = this.currentDirectory();
        while (true) {
            count += 1;
            var status = Tiff.Module.ccall('TIFFReadDirectory', 'number', ['number'], [this._tiffPtr]);
            if (status === 0) {
                break;
            }
        }
        this.setDirectory(current);
        return count;
    };

    Tiff.prototype.setDirectory = function (index) {
        return Tiff.Module.ccall('TIFFSetDirectory', 'number', ['number', 'number'], [this._tiffPtr, index]);
    };

    Tiff.prototype.getField = function (tag) {
        var value = Tiff.Module.ccall('GetField', 'number', ['number', 'number'], [
            this._tiffPtr,
            tag
        ]);
        return value;
    };

    Tiff.prototype.readRGBAImage = function () {
        var width = this.width();
        var height = this.height();
        var raster = Tiff.Module.ccall('_TIFFmalloc', 'number', ['number'], [width * height * 4]);
        var result = Tiff.Module.ccall('TIFFReadRGBAImageOriented', 'number', [
            'number',
            'number',
            'number',
            'number',
            'number',
            'number'
        ], [
            this._tiffPtr,
            width,
            height,
            raster,
            1,
            0
        ]);

        if (result === 0) {
            throw new Tiff.Exception('The function TIFFReadRGBAImageOriented returns NULL');
        }

        // copy the subarray, not create new sub-view
        var data = (Tiff.Module.HEAPU8.buffer).slice(raster, raster + width * height * 4);
        Tiff.Module.ccall('free', 'number', ['number'], [raster]);
        return data;
    };

    Tiff.prototype.toCanvas = function () {
        var width = this.width();
        var height = this.height();
        var raster = Tiff.Module.ccall('_TIFFmalloc', 'number', ['number'], [width * height * 4]);
        var result = Tiff.Module.ccall('TIFFReadRGBAImageOriented', 'number', [
            'number',
            'number',
            'number',
            'number',
            'number',
            'number'
        ], [
            this._tiffPtr,
            width,
            height,
            raster,
            1,
            0
        ]);

        if (result === 0) {
            throw new Tiff.Exception('The function TIFFReadRGBAImageOriented returns NULL');
        }
        var image = Tiff.Module.HEAPU8.subarray(raster, raster + width * height * 4);

        var canvas = document.createElement('canvas');
        var context = canvas.getContext('2d');
        canvas.width = width;
        canvas.height = height;
        var imageData = context.createImageData(width, height);
        (imageData).data.set(image);
        context.putImageData(imageData, 0, 0);
        Tiff.Module.ccall('free', 'number', ['number'], [raster]);
        return canvas;
    };

    Tiff.prototype.toDataURL = function () {
        return this.toCanvas().toDataURL();
    };

    Tiff.prototype.close = function () {
        Tiff.Module.ccall('TIFFClose', 'number', ['number'], [this._tiffPtr]);
    };

    Tiff.createUniqueFileName = function () {
        Tiff.uniqueIdForFileName += 1;
        return String(Tiff.uniqueIdForFileName) + '.tiff';
    };

    Tiff.createFileSystemObjectFromBuffer = function (buffer) {
        var filename = Tiff.createUniqueFileName();
        Tiff.Module.FS.createDataFile('/', filename, new Uint8Array(buffer), true, false);
        return filename;
    };
    Tiff.uniqueIdForFileName = 0;
    Tiff.Module = null;
    return Tiff;
})();

var Tiff;
(function (Tiff) {
    var Exception = (function () {
        function Exception(message) {
            this.message = message;
            this.name = 'Tiff.Exception';
        }
        return Exception;
    })();
    Tiff.Exception = Exception;

    Tiff.Tag = TiffTag;
})(Tiff || (Tiff = {}));

// for closure compiler
Tiff.prototype['width'] = Tiff.prototype.width;
Tiff.prototype['height'] = Tiff.prototype.height;
Tiff.prototype['currentDirectory'] = Tiff.prototype.currentDirectory;
Tiff.prototype['countDirectory'] = Tiff.prototype.countDirectory;
Tiff.prototype['setDirectory'] = Tiff.prototype.setDirectory;
Tiff.prototype['getField'] = Tiff.prototype.getField;
Tiff.prototype['readRGBAImage'] = Tiff.prototype.readRGBAImage;
Tiff.prototype['close'] = Tiff.prototype.close;
Tiff['Exception'] = Tiff.Exception;
Tiff['initialize'] = Tiff.initialize;

if (typeof process === 'object' && typeof require === 'function') {
    module['exports'] = Tiff;
} else if (typeof define === "function" && define.amd) {
    define('tiff', [], function () {
        return Tiff;
    });
} else if (typeof window === 'object') {
    window['Tiff'] = Tiff;
} else if (typeof importScripts === 'function') {
    self['Tiff'] = Tiff;
}
